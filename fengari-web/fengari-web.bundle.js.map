{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/fengari/src/fengari.js","webpack:///./node_modules/fengari/src/defs.js","webpack:///./node_modules/fengari/src/lua.js","webpack:///./node_modules/fengari/src/luaconf.js","webpack:///./node_modules/fengari/src/llimits.js","webpack:///./node_modules/fengari/src/fengaricore.js","webpack:///./node_modules/fengari/src/lobject.js","webpack:///./node_modules/fengari/src/lauxlib.js","webpack:///./node_modules/fengari/src/ldo.js","webpack:///./node_modules/fengari/src/ltable.js","webpack:///./node_modules/fengari/src/lstring.js","webpack:///./node_modules/fengari/src/ldebug.js","webpack:///./node_modules/fengari/src/lstate.js","webpack:///./node_modules/fengari/src/lfunc.js","webpack:///./node_modules/fengari/src/ltm.js","webpack:///./node_modules/fengari/src/lvm.js","webpack:///./node_modules/fengari/src/lopcodes.js","webpack:///./node_modules/fengari/src/lualib.js","webpack:///./node_modules/fengari/src/lapi.js","webpack:///./node_modules/fengari/src/lzio.js","webpack:///./node_modules/fengari/src/llex.js","webpack:///./node_modules/fengari-interop/src/js.js","webpack:///./node_modules/fengari/src/ljstype.js","webpack:///./node_modules/fengari/src/lparser.js","webpack:///./node_modules/fengari/src/lbaselib.js","webpack:///./node_modules/fengari/src/lcorolib.js","webpack:///./node_modules/fengari/src/ltablib.js","webpack:///./node_modules/fengari/src/loslib.js","webpack:///./node_modules/fengari/src/lstrlib.js","webpack:///./node_modules/fengari/src/lutf8lib.js","webpack:///./node_modules/fengari/src/lmathlib.js","webpack:///./node_modules/fengari/src/ldblib.js","webpack:///./node_modules/fengari/src/loadlib.js","webpack:///./node_modules/fengari/src/fengarilib.js","webpack:///./src/fengari-web.js","webpack:///./node_modules/fengari/src/lcode.js","webpack:///./node_modules/fengari/src/lundump.js","webpack:///./node_modules/fengari/src/ldump.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./node_modules/fengari/src/linit.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","core","FENGARI_AUTHORS","FENGARI_COPYRIGHT","FENGARI_RELEASE","FENGARI_VERSION","FENGARI_VERSION_MAJOR","FENGARI_VERSION_MINOR","FENGARI_VERSION_NUM","FENGARI_VERSION_RELEASE","luastring_eq","luastring_indexOf","luastring_of","to_jsstring","to_luastring","to_uristring","luaconf","lua","lauxlib","lualib","luastring_from","Uint8Array","from","a","len","length","v","indexOf","array_indexOf","Error","of","arguments","is_luastring","unicode_error_message","uri_allowed","split","reduce","charCodeAt","to_luastring_cache","str","cache","TypeError","cached","outU8Array","Array","outIdx","u","b","to","replacement_char","Math","min","u0","String","fromCharCode","RangeError","u1","u2","s1","s2","u3","toString","from_userstring","LUA_SIGNATURE","LUA_VERSION_MAJOR","LUA_VERSION_MINOR","LUA_VERSION_NUM","LUA_VERSION_RELEASE","LUA_VERSION","LUA_RELEASE","LUA_COPYRIGHT","LUA_AUTHORS","constant_types","LUA_TNONE","LUA_TNIL","LUA_TBOOLEAN","LUA_TLIGHTUSERDATA","LUA_TNUMBER","LUA_TSTRING","LUA_TTABLE","LUA_TFUNCTION","LUA_TUSERDATA","LUA_TTHREAD","LUA_NUMTAGS","LUA_TSHRSTR","LUA_TLNGSTR","LUA_TNUMFLT","LUA_TNUMINT","LUA_TLCL","LUA_TLCF","LUA_TCCL","LUAI_MAXSTACK","LUA_REGISTRYINDEX","LUA_HOOKCALL","LUA_HOOKCOUNT","LUA_HOOKLINE","LUA_HOOKRET","LUA_HOOKTAILCALL","LUA_MASKCALL","LUA_MASKCOUNT","LUA_MASKLINE","LUA_MASKRET","LUA_MINSTACK","LUA_MULTRET","LUA_OPADD","LUA_OPBAND","LUA_OPBNOT","LUA_OPBOR","LUA_OPBXOR","LUA_OPDIV","LUA_OPEQ","LUA_OPIDIV","LUA_OPLE","LUA_OPLT","LUA_OPMOD","LUA_OPMUL","LUA_OPPOW","LUA_OPSHL","LUA_OPSHR","LUA_OPSUB","LUA_OPUNM","LUA_RIDX_GLOBALS","LUA_RIDX_LAST","LUA_RIDX_MAINTHREAD","lua_Debug","this","event","NaN","namewhat","what","source","currentline","linedefined","lastlinedefined","nups","nparams","isvararg","istailcall","short_src","i_ci","lua_upvalueindex","thread_status","LUA_OK","LUA_YIELD","LUA_ERRRUN","LUA_ERRSYNTAX","LUA_ERRMEM","LUA_ERRGCMM","LUA_ERRERR","defs","lapi","ldebug","ldo","lstate","lua_absindex","lua_arith","lua_atpanic","lua_atnativeerror","lua_call","lua_callk","lua_checkstack","lua_close","lua_compare","lua_concat","lua_copy","lua_createtable","lua_dump","lua_error","lua_gc","lua_getallocf","lua_getextraspace","lua_getfield","lua_getglobal","lua_gethook","lua_gethookcount","lua_gethookmask","lua_geti","lua_getinfo","lua_getlocal","lua_getmetatable","lua_getstack","lua_gettable","lua_gettop","lua_getupvalue","lua_getuservalue","lua_insert","lua_isboolean","lua_iscfunction","lua_isfunction","lua_isinteger","lua_islightuserdata","lua_isnil","lua_isnone","lua_isnoneornil","lua_isnumber","lua_isproxy","lua_isstring","lua_istable","lua_isthread","lua_isuserdata","lua_isyieldable","lua_len","lua_load","lua_newstate","lua_newtable","lua_newthread","lua_newuserdata","lua_next","lua_pcall","lua_pcallk","lua_pop","lua_pushboolean","lua_pushcclosure","lua_pushcfunction","lua_pushfstring","lua_pushglobaltable","lua_pushinteger","lua_pushjsclosure","lua_pushjsfunction","lua_pushlightuserdata","lua_pushliteral","lua_pushlstring","lua_pushnil","lua_pushnumber","lua_pushstring","lua_pushthread","lua_pushvalue","lua_pushvfstring","lua_rawequal","lua_rawget","lua_rawgeti","lua_rawgetp","lua_rawlen","lua_rawset","lua_rawseti","lua_rawsetp","lua_register","lua_remove","lua_replace","lua_resume","lua_rotate","lua_setallof","lua_setfield","lua_setglobal","lua_sethook","lua_seti","lua_setlocal","lua_setmetatable","lua_settable","lua_settop","lua_setupvalue","lua_setuservalue","lua_status","lua_stringtonumber","lua_toboolean","lua_todataview","lua_tointeger","lua_tointegerx","lua_tojsstring","lua_tolstring","lua_tonumber","lua_tonumberx","lua_topointer","lua_toproxy","lua_tostring","lua_tothread","lua_touserdata","lua_type","lua_typename","lua_upvalueid","lua_upvaluejoin","lua_version","lua_xmove","lua_yield","lua_yieldk","lua_tocfunction","conf","LUA_PATH_SEP","LUA_PATH_MARK","LUA_EXEC_DIR","LUA_VDIR","LUA_DIRSEP","LUA_LDIR","LUA_JSDIR","LUA_PATH_DEFAULT","LUA_JSPATH_DEFAULT","LUA_COMPAT_FLOATSTRING","LUA_IDSIZE","LUAL_BUFFERSIZE","ldexp","mantissa","exponent","steps","ceil","abs","result","pow","floor","LUA_INTEGER_FMT","LUA_INTEGER_FRMLEN","LUA_MAXINTEGER","LUA_MININTEGER","LUA_NUMBER_FMT","LUA_NUMBER_FRMLEN","frexp","data","DataView","ArrayBuffer","setFloat64","bits","getUint32","lua_getlocaledecpoint","lua_integer2str","lua_number2str","Number","toPrecision","lua_numbertointeger","luai_apicheck","e","lua_assert","api_check","msg","LUAI_MAXCCALLS","LUA_MINBUFFER","luai_nummod","L","MAX_INT","MIN_INT","lisdigit","lisprint","lisspace","lisxdigit","luaS_bless","luaS_new","ltable","lvm","ltm","LUA_TPROTO","LUA_TDEADKEY","TValue","type","ttnov","checktype","checktag","ttisnil","ttisboolean","x","tv","ttisstring","tsvalue","getstr","tsslen","svalue","setsvalue2s","newidx","ts","stack","setsvalue","luaO_nilobject","freeze","LClosure","id","l_G","id_counter","nupvalues","upvals","CClosure","f","upvalue","Udata","size","metatable","uservalue","RETS","PRE","POS","luaO_hexavalue","luaO_utf8esc","buff","UTF8BUFFSZ","mfb","l_str2dloc","neg","sigdig","nosigdig","hasdot","neg1","exp1","lua_strx2number","exec","flt","parseFloat","isNaN","lua_str2number","SIGILS","modes","MAXBY10","MAXLASTD","luaO_tostring","obj","ttisinteger","test","pushstr","luaD_inctop","top","luaO_pushvfstring","fmt","argp","subarray","luaO_pushfstring","setivalue","setfltvalue","lua_State","Table","JSON","stringify","ids","set","luaG_runerror","luaD_checkstack","luaV_concat","intarith","op","v1","v2","luaV_imul","luaV_mod","luaV_div","luaV_shiftl","numarith","LocVar","varname","startpc","endpc","luaO_arith","p1","p2","p3","res","i1","i2","tointeger","n1","n2","tonumber","luaT_trybinTM","TMS","TM_ADD","luaO_chunkid","bufflen","out","nli","out_i","luaO_int2fb","luaO_str2num","s2i","empty","l_str2int","pmode","l_str2d","pushobj2s","pushsvalue2s","setobjs2s","oldidx","setfrom","setobj2s","oldtv","LUA_ERRFILE","LUA_LOADED_TABLE","LUA_PRELOAD_TABLE","LUA_FILEHANDLE","__name","__tostring","luaL_Buffer","findfield","objidx","level","pushglobalfuncname","ar","pushfuncname","panic","luaL_argerror","arg","extramsg","luaL_error","typeerror","tname","typearg","luaL_getmetafield","luaL_typename","luaL_where","luaL_fileresult","stat","fname","message","errno","luaL_getmetatable","luaL_testudata","ud","tag_error","tag","luaL_checklstring","luaL_checkstring","luaL_optlstring","def","luaL_optstring","luaL_checknumber","luaL_checkinteger","interror","luaL_prepbuffsize","B","sz","newend","newsize","max","newbuff","luaL_buffinit","luaL_addlstring","luaL_addsize","luaL_addstring","luaL_pushresult","luaL_opt","getS","string","luaL_loadbufferx","luaL_loadbuffer","luaL_loadstring","tt","luaL_callmeta","p_I","p_f","find_subarray","arr","subarr","from_index","sl","loop","j","luaL_getsubtable","idx","luaL_setfuncs","nup","luaL_checkstack","lib","space","errfile","fnameindex","error","serr","filename","getc","utf8_bom","skipcomment","lf","skipBOM","skipped","luaL_loadfilex","LoadF","pos","err","getF","bytes","path","xhr","XMLHttpRequest","open","window","responseType","send","status","statusText","response","com","readstatus","luaL_loadfile","luaL_checkversion_","ver","LUA_NOREF","LUA_REFNIL","luaL_addchar","luaL_addvalue","luaL_argcheck","cond","luaL_buffinitsize","luaL_checkany","luaL_checkoption","lst","luaL_checktype","luaL_checkudata","luaL_checkversion","luaL_dofile","luaL_dostring","luaL_execresult","signal","luaL_gsub","wild","luaL_len","luaL_newlib","luaL_newlibtable","luaL_newmetatable","luaL_newstate","luaL_optinteger","luaL_optnumber","luaL_prepbuffer","luaL_pushresultsize","luaL_ref","ref","luaL_requiref","modname","openf","glb","luaL_setmetatable","luaL_tolstring","kind","luaL_traceback","L1","last","li","le","lastlevel","LEVELS1","luaL_unref","lua_writestringerror","console","lfunc","lobject","lopcodes","lparser","luaS_newliteral","lundump","MBuffer","adjust_top","newtop","seterrorobj","errcode","oldtop","current_top","ERRORSTACKSIZE","luaD_reallocstack","stack_last","EXTRA_STACK","luaD_growstack","luaD_throw","needed","luaD_shrinkstack","inuse","lim","ci","previous","stackinuse","goodsize","luaE_freeCI","luaD_precall","off","nresults","func","luaE_extendCI","funcOff","callstatus","hookmask","luaD_hook","api_checknelems","luaD_poscall","base","fsize","maxstacksize","is_vararg","adjust_varargs","numparams","l_base","l_code","code","l_savedpc","CIST_LUA","callhook","tryfuncTM","firstResult","nres","wanted","oldpc","next","moveresults","setnilvalue","line","hook","allowhook","ci_top","CIST_HOOKED","opcode","OpCodesI","OP_TAILCALL","CIST_TAIL","actual","nfixargs","fixed","tm","luaT_gettmbyobj","TM_CALL","ttisfunction","luaG_typeerror","luaD_call","nResults","nCcalls","stackerror","luaV_execute","errorJmp","g","mainthread","luaD_rawrunprotected","oldnCcalls","lj","atnativeerror","luaD_callnoyield","errfunc","e2","finishCcall","c_k","nny","CIST_YPCALL","c_old_errfunc","c_ctx","unroll","base_ci","luaV_finishOp","recover","findpcall","extra","luaF_close","CIST_OAH","resume_error","narg","resume","firstArg","ctx","k","luaD_pcall","old_top","ef","old_ci","old_allowhooks","old_nny","old_errfunc","SParser","z","dyd","Dyndata","checkmode","f_parser","cl","zgetc","luaU_undump","luaY_parser","upvalues","luaF_initupvals","luaD_protectedparser","nargs","oldnny","luaS_hashlongstr","TString","lightuserdata_hashes","WeakMap","get_lightuserdata_hash","hash","table_hash","strong","Map","dead_strong","dead_weak","flags","add","clear","prev","entry","mark_dead","setdeadvalue","delete","getgeneric","luaH_getint","invalidateTMcache","luaH_get","ttisfloat","luaH_getn","luaH_getstr","luaH_setfrom","kv","luaH_setint","luaH_new","luaH_next","table","keyI","keyO","ttisdeadkey","realstring","luaS_hash","luaS_eqlngstr","llex","currentpc","lineinfo","swapextra","temp","upvalname","uv","findlocal","findvararg","luaF_getlocalname","funcinfo","getfuncname","funcname","CIST_FIN","funcnamefromcode","kname","pc","ISK","kvalue","INDEXK","getobjname","filterpc","jmptarget","lastpc","reg","setreg","OCi","A","OP_LOADNIL","OP_TFORCALL","OP_CALL","OP_JMP","dest","sBx","testAMode","findsetreg","OP_MOVE","OP_GETTABUP","OP_GETTABLE","C","vn","LUA_ENV","OP_GETUPVAL","OP_LOADK","OP_LOADKX","Bx","Ax","OP_SELF","TM_INDEX","OP_SETTABUP","OP_SETTABLE","TM_NEWINDEX","OP_ADD","OP_SUB","TM_SUB","OP_MUL","TM_MUL","OP_MOD","TM_MOD","OP_POW","TM_POW","OP_DIV","TM_DIV","OP_IDIV","TM_IDIV","OP_BAND","TM_BAND","OP_BOR","TM_BOR","OP_BXOR","TM_BXOR","OP_SHL","TM_SHL","OP_SHR","TM_SHR","OP_UNM","TM_UNM","OP_BNOT","TM_BNOT","OP_LEN","TM_LEN","OP_CONCAT","TM_CONCAT","OP_EQ","TM_EQ","OP_LT","TM_LT","OP_LE","TM_LE","tmname","varinfo","getupvalname","stkid","isinstack","luaT_objtypename","luaG_addinfo","src","luaG_errormsg","luaG_concaterror","cvt2str","luaG_opinterror","luaG_ordererror","t1","t2","luaG_tointerror","luaG_traceexec","mask","counthook","hookcount","basehookcount","CIST_HOOKYIELD","npc","newline","ttisclosure","auxgetinfo","api_incr_top","collectvalidlines","ttisLclosure","local","count","BASIC_STACK_SIZE","CallInfo","global_State","l_registry","version","TM_N","mt","stack_init","freestack","f_luaopen","registry","sethvalue","init_registry","luaT_init","CIST_FRESH","CIST_LEQ","close_state","luaE_freethread","MAXUPVAL","Proto","locvars","luaF_findupval","old","local_number","luaF_newLclosure","luaT_typenames_","map","ttypename","TM_GC","TM_MODE","luaT_callTM","hasres","luaT_callbinTM","luaT_gettm","events","ename","fasttm","et","luaT_callorderTM","l_isfalse","ttistable","ttisfulluserdata","LFIELDS_PER_FLUSH","OP_CLOSURE","OP_EXTRAARG","OP_FORLOOP","OP_FORPREP","OP_LOADBOOL","OP_NEWTABLE","OP_NOT","OP_RETURN","OP_SETLIST","OP_SETUPVAL","OP_TEST","OP_TESTSET","OP_TFORLOOP","OP_VARARG","RA","RB","RKB","RKC","dojump","donextjump","luaV_lessthan","ttisnumber","LTnum","l_strcmp","luaV_lessequal","LEnum","luaV_equalobj","ttype","forlimit","step","stopnow","ilimit","luaV_tointeger","cvt2num","vslen","ls","rs","luaV_objlen","ra","rb","h","imul","aLo","bLo","y","getcached","encup","instack","pushclosure","ncl","setclLvalue","tostring","isemptystr","copy2buff","tl","total","luaV_gettable","slot","settable","val","newframe","konst","setbvalue","upval","rc","numberop1","numberop2","op1","op2","numberop","rbIdx","nci","oci","nfunc","nfuncOff","ofuncOff","aux","limit","chgivalue","chgfltvalue","forlim","init","plimit","pstep","initv","nlimit","nstep","ninit","cb","inst","luaV_rawequalobj","luaP_opmodes","MASK1","MASK0","setarg","fullins","SETARG_Bx","ins","BITRK","CREATE_ABC","CREATE_ABx","bc","CREATE_Ax","GET_OPCODE","GETARG_A","GETARG_B","GETARG_C","GETARG_Bx","GETARG_Ax","GETARG_sBx","MAXARG_A","MAXARG_Ax","MAXARG_B","MAXARG_Bx","MAXARG_C","MAXARG_sBx","MAXINDEXRK","NO_REG","OpArgK","OpArgN","OpArgR","OpArgU","OpCodes","POS_A","POS_Ax","POS_B","POS_Bx","POS_C","POS_OP","RKASK","SETARG_A","SETARG_Ax","SETARG_B","SETARG_C","SETARG_sBx","SET_OPCODE","SIZE_A","SIZE_Ax","SIZE_B","SIZE_Bx","SIZE_C","SIZE_OP","getBMode","getCMode","getOpMode","iABC","iABx","iAsBx","iAx","testTMode","LUA_VERSUFFIX","luaopen_base","LUA_COLIBNAME","luaopen_coroutine","LUA_TABLIBNAME","luaopen_table","LUA_OSLIBNAME","luaopen_os","LUA_STRLIBNAME","luaopen_string","LUA_UTF8LIBNAME","luaopen_utf8","LUA_BITLIBNAME","LUA_MATHLIBNAME","luaopen_math","LUA_DBLIBNAME","luaopen_debug","LUA_LOADLIBNAME","luaopen_package","LUA_FENGARILIBNAME","luaopen_fengari","linit","luaL_openlibs","luaU_dump","ZIO","fengari_argcheck","fengari_argcheckinteger","isvalid","index2addr","ttislcf","index2addr_","reverse","fromtv","pIdx","fromidx","toidx","fn","setclCvalue","auxsetstr","auxgetstr","narray","nrec","aux_upvalue","fi","seen","f_call","default_chunkname","checkresults","na","nr","getupvalref","fidx","panicf","errorf","index1","index2","o1","o2","writer","strip","warn","objindex","funcindex","up","ttisCclosure","G","ttislightuserdata","reader","chunkname","gt","luaS_newudata","lua_setallocf","u8","buffer","byteOffset","byteLength","jsstring","proxy","create_proxy","ttisthread","fidx1","fidx2","ref1","ref2","up2","luaZ_fill","EOZ","luaZ_buffer","luaZ_buffremove","luaZ_read","b_offset","luaZ_resetbuffer","luaZ_resizebuffer","lislalnum","lislalpha","RESERVED","FIRST_RESERVED","luaX_tokens","SemInfo","Token","token","seminfo","save","lexerror","luaX_token2str","currIsNewline","current","save_and_next","TVtrue","luaX_newstring","tpair","inclinenumber","linenumber","check_next1","check_next2","read_numeral","expo","first","txtToken","skip_sep","read_long_string","sep","skip","esccheck","gethexa","readhexaesc","utf8esc","readutf8desc","readdecesc","read_string","del","will","token_to_index","forEach","kidx","LexState","lastline","lookahead","fs","envn","isreserved","w","luaX_lookahead","luaX_next","luaX_setinput","firstchar","luaX_syntaxerror","global_env","WorkerGlobalScope","self","eval","apply","construct","Reflect_deleteProperty","Reflect","deleteProperty","fApply","Function","target","thisArgument","argumentsList","args","push","concat","isobject","js_tname","testjs","checkjs","pushjs","getmainthread","mainL","states","objects_seen","tojs","wrap","jscall","invoke","thisarg","n_results","gettable","prop","has","iter_next","iter","state","done","js_proxy","iterator","jsiterator","toPrimitive","hint","jslib","get_iterator","getiter","Proxy","L_symbol","p_symbol","proxy_handlers","arg_length","desc","raw_function","make_arrow_function","raw_arrow_function","createproxy","valid_types","valid_types_as_luastring","fengariProxy","jsmt","for","index","keys","isArray","FENGARI_INTEROP_VERSION","FENGARI_INTEROP_VERSION_MAJOR","FENGARI_INTEROP_VERSION_NUM","FENGARI_INTEROP_RELEASE","luaopen_js","luai_ctype_","BinOpr","OPR_ADD","OPR_AND","OPR_BAND","OPR_BOR","OPR_BXOR","OPR_CONCAT","OPR_DIV","OPR_EQ","OPR_GE","OPR_GT","OPR_IDIV","OPR_LE","OPR_LT","OPR_MOD","OPR_MUL","OPR_NE","OPR_NOBINOPR","OPR_OR","OPR_POW","OPR_SHL","OPR_SHR","OPR_SUB","UnOpr","OPR_BNOT","OPR_LEN","OPR_MINUS","OPR_NOT","OPR_NOUNOPR","NO_JUMP","getinstruction","luaK_checkstack","luaK_codeABC","luaK_codeABx","luaK_codeAsBx","luaK_codek","luaK_concat","luaK_dischargevars","luaK_exp2RK","luaK_exp2anyreg","luaK_exp2anyregup","luaK_exp2nextreg","luaK_exp2val","luaK_fixline","luaK_getlabel","luaK_goiffalse","luaK_goiftrue","luaK_indexed","luaK_infix","luaK_intK","luaK_jump","luaK_jumpto","luaK_nil","luaK_patchclose","luaK_patchlist","luaK_patchtohere","luaK_posfix","luaK_prefix","luaK_reserveregs","luaK_ret","luaK_self","luaK_setlist","luaK_setmultret","luaK_setoneret","luaK_setreturns","luaK_storevar","luaK_stringK","R","hasmultret","expkind","VCALL","VVARARG","eqstr","BlockCnt","firstlabel","firstgoto","nactvar","isloop","VVOID","VNIL","VTRUE","VFALSE","VK","VKFLT","VKINT","VNONRELOC","VLOCAL","VUPVAL","VINDEXED","VJMP","VRELOCABLE","expdesc","ival","nval","info","ind","vt","FuncState","bl","lasttarget","jpc","nk","np","firstlocal","nlocvars","freereg","Vardesc","Labeldesc","Labellist","semerror","error_expected","checklimit","where","errorlimit","testnext","check","checknext","check_condition","check_match","who","str_checkname","TK_NAME","init_exp","codestring","checkname","new_localvar","registerlocalvar","actvar","new_localvarliteral","getlocvar","adjustlocalvars","nvars","newupvalue","singlevaraux","vr","searchvar","markupval","searchupvalue","singlevar","adjust_assign","nexps","enterlevel","leavelevel","closegoto","label","gl","vname","findlabel","lb","newlabelentry","findgotos","enterblock","open_func","leaveblock","breaklabel","tolevel","removevars","movegotosout","undefgoto","close_func","block_follow","withuntil","TK_ELSE","TK_ELSEIF","TK_END","TK_EOS","TK_UNTIL","statlist","TK_RETURN","statement","fieldsel","yindex","expr","ConsControl","nh","tostore","recfield","cc","rkkey","closelistfield","listfield","field","constructor","lastlistfield","body","ismethod","new_fs","clp","addprototype","TK_DOTS","parlist","TK_FUNCTION","codeclosure","explist","funcargs","TK_STRING","suffixedexp","primaryexp","priority","left","right","subexpr","uop","TK_NOT","getunopr","TK_FLT","TK_INT","TK_NIL","TK_TRUE","TK_FALSE","simpleexp","TK_IDIV","TK_SHL","TK_SHR","TK_CONCAT","TK_NE","TK_EQ","TK_LE","TK_GE","TK_AND","TK_OR","getbinopr","nextop","block","LHS_assign","assignment","lh","nv","conflict","check_conflict","gotostat","TK_GOTO","labelstat","ll","checkrepeated","TK_DBCOLON","skipnoopstat","forbody","isnum","endfor","TK_DO","prep","forstat","fornum","TK_IN","indexname","forlist","TK_FOR","test_then_block","escapelist","jf","TK_THEN","TK_BREAK","funcstat","TK_IF","ifstat","TK_WHILE","whileinit","condexit","whilestat","TK_REPEAT","repeat_init","bl1","bl2","repeatstat","TK_LOCAL","localfunc","localstat","nret","retstat","exprstat","lexstate","funcstate","mainfunc","vkisinreg","lua_writestring","lua_writeline","TextDecoder","decoder","decode","stream","log","copy","opts","luaB_next","ipairsaux","luaB_error","finishpcall","load_aux","envidx","generic_reader","dofilecont","d1","d2","base_funcs","env","method","iszero","pairsmeta","parseInt","b_str2int","getco","co","auxresume","luaB_auxwrap","luaB_cocreate","NL","co_funcs","checkfield","checktab","aux_getn","addfield","set2","sort_comp","partition","lo","choosePivot","rnd","r4","auxsort","random","tab_funcs","lsep","MAX_SAFE_INTEGER","LUA_STRFTIMEOPTIONS","setfield","setallfields","time","utc","getUTCSeconds","getSeconds","getUTCMinutes","getMinutes","getUTCHours","getHours","getUTCDate","getDate","getUTCMonth","getMonth","getUTCFullYear","getFullYear","getUTCDay","getDay","Date","L_MAXDATEFIELD","getfield","delta","locale","days","shortDays","months","shortMonths","AM","PM","am","pm","formats","D","F","T","X","week_number","date","start_of_week","weekday","yday","push_pad_2","pad","strftime","checkoption","tzString","match","day","getTimezoneOffset","conv","option","oplen","l_checktime","syslib","stm","performance","now","sprintf","L_ESC","strlen","posrelat","SIZELENMOD","lua_number2strx","is","Infinity","zero","fe","num2straux","FLAGS","isalpha","isdigit","iscntrl","isgraph","islower","isupper","isalnum","ispunct","isspace","isxdigit","addliteral","repeat","addquoted","point","ppoint","checkdp","scanformat","strfrmt","form","addlenmod","lenmod","lm","spec","Header","islittle","maxalign","digit","getnum","df","getnumlimit","getoption","opt","getdetails","totalsize","ntoalign","align","packint","unpackint","issigned","unpacknum","dv","setUint8","getFloat32","getFloat64","SPECIALS","MatchState","src_init","src_end","p_end","matchdepth","capture","classend","ms","match_class","matchbracketclass","ec","sig","singlematch","ep","matchbalance","cont","max_expand","min_expand","start_capture","end_capture","capture_to_close","match_capture","check_capture","ai","bi","array_cmp","gotodefault","gotoinit","push_onecapture","push_captures","nlevels","prepstate","lp","reprepstate","str_find_aux","find","nospecials","anchor","GMatchState","lastmatch","gmatch_aux","gm","add_value","tr","news","add_s","strlib","posi","pose","srcl","max_s","details","setFloat32","totallen","pi","start","end","ld","createmetatable","iscont","u_posrelat","limits","utf8_decode","p_U","pushutfchar","iter_aux","dec","funcs","posj","UTF8PATT","rand_state","l_rand","pushnumint","mathlib","acos","asin","atan2","cos","PI","exp","log2","log10","imax","imin","ip","low","sin","sqrt","tan","checkstack","getthread","thread","settabss","settabsi","settabsb","treatstackoption","auxupvalue","checkupval","argf","argnup","HOOKKEY","hooknames","hookf","dblib","smask","unmakemask","options","nvar","hooktable","makemask","getinput","input","prompt","debug","fengari","JSLIBS","LUA_CSUBSEP","LUA_LSUBSEP","LUA_POF","LUA_OFSEP","AUXMARK","lsys_load","seeglb","readable","lookforfunc","sym","checkjslib","addtojslib","lsys_sym","setpath","fieldname","envname","dft","nver","undefined","noenv","plib","pushnexttemplate","searchpath","dirsep","findfile","pname","checkload","searcher_Lua","loadfunc","openfunc","mark","searcher_C","searcher_Croot","searcher_preload","findloader_cont","ll_require_cont","ll_require_cont2","pk_funcs","ll_funcs","findloader","createjslibstable","searchers","createsearcherstable","load","ok","SyntaxError","document","HTMLDocument","crossorigin_to_credentials","crossorigin","msghandler","ErrorEvent","bubbles","cancelable","lineno","run_lua_script","location","syntaxerror","configurable","currentScript","dispatchEvent","process_xhr_response","Event","run_lua_script_tag","readyState","async","fetch","credentials","redirect","integrity","then","resp","arrayBuffer","catch","reason","onreadystatechange","innerHTML","contentTypeRegexp","luaVersionRegex","try_tag","tagName","contentTypeMatch","mimetype","hasAttribute","getAttribute","MutationObserver","records","observer","record","addedNodes","observe","childList","subtree","selector","querySelectorAll","hasjumps","tonumeral","make_tvalue","ek","pfrom","pl","getjump","offset","fixjump","jmp","l1","l2","list","condjump","getjumpcontroloffset","getjumpcontrol","patchtestreg","node","removevalues","patchlistaux","vtarget","dtarget","luaK_code","dischargejpc","codeextraarg","newstack","freeexp","freeexps","e1","r1","r2","addk","luaK_numberK","boolK","code_loadbool","jump","discharge2reg","discharge2anyreg","need_value","exp2reg","final","p_t","fj","vk","nilK","negatecondition","jumponcond","ie","constfolding","validop","codebinexpval","rk2","rk1","opr","codecomp","codeunexpval","codenot","ereg","nelems","ex","LUAC_DATA","BytecodeParser","Z","intSize","size_tSize","instructionSize","integerSize","numberSize","arraybuffer","getInt32","LoadInteger","LoadByte","LoadSize_t","read","LoadInt","LoadNumber","LoadString","LoadFunction","psource","LoadCode","LoadConstants","LoadUpvalues","LoadProtos","LoadDebug","checkliteral","checksize","why","byte","S","checkHeader","LUAC_VERSION","DumpState","write","DumpBlock","DumpByte","DumpInt","ab","setInt32","DumpInteger","DumpNumber","DumpString","DumpFunction","DumpCode","DumpConstants","DumpUpvalues","DumpProtos","DumpDebug","DumpHeader","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sign","sprintf_format","sprintf_parse","vsprintf","argv","parse_tree","ph","pad_character","pad_length","is_positive","cursor","tree_length","output","param_no","width","precision","toExponential","toFixed","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","sprintf_cache","_fmt","arg_names","field_list","replacement_field","field_match","loadedlibs"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I;;;;;;;ECxErD,MAAMC,EAAO,EAAQ,GAErBjC,EAAOD,QAAQmC,gBAA0BD,EAAKC,gBAC9ClC,EAAOD,QAAQoC,kBAA0BF,EAAKE,kBAC9CnC,EAAOD,QAAQqC,gBAA0BH,EAAKG,gBAC9CpC,EAAOD,QAAQsC,gBAA0BJ,EAAKI,gBAC9CrC,EAAOD,QAAQuC,sBAA0BL,EAAKK,sBAC9CtC,EAAOD,QAAQwC,sBAA0BN,EAAKM,sBAC9CvC,EAAOD,QAAQyC,oBAA0BP,EAAKO,oBAC9CxC,EAAOD,QAAQ0C,wBAA0BR,EAAKQ,wBAE9CzC,EAAOD,QAAQ2C,aAAoBT,EAAKS,aACxC1C,EAAOD,QAAQ4C,kBAAoBV,EAAKU,kBACxC3C,EAAOD,QAAQ6C,aAAoBX,EAAKW,aACxC5C,EAAOD,QAAQ8C,YAAoBZ,EAAKY,YACxC7C,EAAOD,QAAQ+C,aAAoBb,EAAKa,aACxC9C,EAAOD,QAAQgD,aAAoBd,EAAKc,aAExC,MAAMC,EAAU,EAAQ,GAClBC,EAAU,EAAQ,GAClBC,EAAU,EAAQ,GAClBC,EAAU,EAAQ,IAExBnD,EAAOD,QAAQiD,QAAUA,EACzBhD,EAAOD,QAAQkD,IAAUA,EACzBjD,EAAOD,QAAQmD,QAAUA,EACzBlD,EAAOD,QAAQoD,OAAUA,G,6BC9BzB,IAAIC,EAaAT,EAcAC,EAbJ,GAZIQ,EAD2B,mBAApBC,WAAWC,KACDD,WAAWC,KAAK7B,KAAK4B,YAErB,SAASE,GACtB,IAAItD,EAAI,EACJuD,EAAMD,EAAEE,OACR1C,EAAI,IAAIsC,WAAWG,GACvB,KAAOA,EAAMvD,GAAGc,EAAEd,GAAKsD,EAAEtD,KACzB,OAAOc,GAK2B,mBAA9B,IAAIsC,YAAoB,QAChCV,EAAoB,SAASX,EAAG0B,EAAGzD,GAC/B,OAAO+B,EAAE2B,QAAQD,EAAGzD,QAErB,CAEH,IAAI2D,EAAgB,GAAGD,QACvB,GAAiD,IAA7CC,EAAcxD,KAAK,IAAIiD,WAAW,GAAI,GAAU,MAAMQ,MAAM,oBAChElB,EAAoB,SAASX,EAAG0B,EAAGzD,GAC/B,OAAO2D,EAAcxD,KAAK4B,EAAG0B,EAAGzD,IAMpC2C,EADyB,mBAAlBS,WAAWS,GACHT,WAAWS,GAAGrC,KAAK4B,YAEnB,WACX,OAAOD,EAAeW,YAI9B,MAAMC,EAAe,SAAShC,GAC1B,OAAOA,aAAaqB,YAelBY,EAAwB,mDAkGxBC,EAAc,sFAAwFC,MAAM,IAAIC,QAAO,SAASF,EAAa5D,GAE/I,OADA4D,EAAY5D,EAAE+D,WAAW,KAAM,EACxBH,IACR,IAiBGI,EAAqB,GAErBxB,EAAe,SAASyB,EAAKC,GAC/B,GAAmB,iBAARD,EAAkB,MAAM,IAAIE,UAAU,4CAEjD,GAAID,EAAO,CACP,IAAIE,EAASJ,EAAmBC,GAChC,GAAIP,EAAaU,GAAS,OAAOA,EAGrC,IAAIlB,EAAMe,EAAId,OACVkB,EAAaC,MAAMpB,GACnBqB,EAAS,EACb,IAAK,IAAI5E,EAAI,EAAGA,EAAIuD,IAAOvD,EAAG,CAC1B,IAAI6E,EAAIP,EAAIF,WAAWpE,GACvB,GAAI6E,GAAK,IACLH,EAAWE,KAAYC,OACpB,GAAIA,GAAK,KACZH,EAAWE,KAAY,IAAQC,GAAK,EACpCH,EAAWE,KAAY,IAAY,GAAJC,MAC5B,CAEH,GAAIA,GAAK,OAAUA,GAAK,OAAW7E,EAAE,EAAKuD,EAAK,CAE3C,IAAIE,EAAIa,EAAIF,WAAWpE,EAAE,GACrByD,GAAK,OAAUA,GAAK,QAEpBzD,IACA6E,EAAmB,MAAdA,EAAI,OAAkBpB,EAAI,MAGnCoB,GAAK,OACLH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAE/BH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,GAAM,GAC3CH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAQ3C,OAJAH,EAAavB,EAAeuB,GAExBH,IAAOF,EAAmBC,GAAOI,GAE9BA,GAcX3E,EAAOD,QAAQqD,eAAoBA,EACnCpD,EAAOD,QAAQ4C,kBAAoBA,EACnC3C,EAAOD,QAAQ6C,aAAoBA,EACnC5C,EAAOD,QAAQiE,aAAoBA,EACnChE,EAAOD,QAAQ2C,aAlMM,SAASa,EAAGwB,GAC7B,GAAIxB,IAAMwB,EAAG,CACT,IAAIvB,EAAMD,EAAEE,OACZ,GAAID,IAAQuB,EAAEtB,OAAQ,OAAO,EAE7B,IAAK,IAAIxD,EAAE,EAAGA,EAAEuD,EAAKvD,IACjB,GAAIsD,EAAEtD,KAAO8E,EAAE9E,GAAI,OAAO,EAElC,OAAO,GA2LXD,EAAOD,QAAQ8C,YAvLK,SAAS3B,EAAOoC,EAAM0B,EAAIC,GAC1C,IAAKjB,EAAa9C,GAAQ,MAAM,IAAIuD,UAAU,oCAG1CO,OADO,IAAPA,EACK9D,EAAMuC,OAENyB,KAAKC,IAAIjE,EAAMuC,OAAQuB,GAGhC,IAAIT,EAAM,GACV,IAAK,IAAItE,OAAY,IAAPqD,EAAcA,EAAK,EAAIrD,EAAI+E,GAAK,CAC1C,IAAII,EAAKlE,EAAMjB,KACf,GAAImF,EAAK,IAELb,GAAOc,OAAOC,aAAaF,QACxB,GAAIA,EAAK,KAAQA,EAAK,IAAM,CAC/B,IAAKH,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,SACJ,GAAIa,GAAM,IAAM,CAEnB,GAAInF,GAAK+E,EAAI,CACT,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKtE,EAAMjB,KACf,GAAkB,MAAV,IAAHuF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJA,GAAOc,OAAOC,eAAoB,GAALF,IAAc,IAAW,GAALI,SAC9C,GAAIJ,GAAM,IAAM,CAEnB,GAAInF,EAAE,GAAK+E,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKtE,EAAMjB,KACf,GAAkB,MAAV,IAAHuF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIkB,EAAKvE,EAAMjB,KACf,GAAkB,MAAV,IAAHwF,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIO,IAAW,GAALM,IAAc,MAAa,GAALI,IAAc,IAAW,GAALC,GACpD,GAAIX,GAAK,MACLP,GAAOc,OAAOC,aAAaR,OACxB,CACHA,GAAK,MACL,IAAIY,EAAiB,OAAXZ,GAAK,IACXa,EAAMb,EAAI,KAAS,MACvBP,GAAOc,OAAOC,aAAaI,EAAIC,QAEhC,CAEH,GAAI1F,EAAE,GAAK+E,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKtE,EAAMjB,KACf,GAAkB,MAAV,IAAHuF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIkB,EAAKvE,EAAMjB,KACf,GAAkB,MAAV,IAAHwF,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIqB,EAAK1E,EAAMjB,KACf,GAAkB,MAAV,IAAH2F,GAAmB,CACpB,IAAKX,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAGJ,IAAIO,IAAW,EAALM,IAAc,MAAa,GAALI,IAAc,MAAa,GAALC,IAAc,IAAW,GAALG,GAC1Ed,GAAK,MACL,IAAIY,EAAiB,OAAXZ,GAAK,IACXa,EAAMb,EAAI,KAAS,MACvBP,GAAOc,OAAOC,aAAaI,EAAIC,IAGvC,OAAOpB,GA2FXvE,EAAOD,QAAQgD,aAjFM,SAASQ,GAC1B,IAAKS,EAAaT,GAAI,MAAM,IAAIkB,UAAU,qCAC1C,IAAIzC,EAAI,GACR,IAAK,IAAI/B,EAAE,EAAGA,EAAEsD,EAAEE,OAAQxD,IAAK,CAC3B,IAAIyD,EAAIH,EAAEtD,GACNiE,EAAYR,GACZ1B,GAAKqD,OAAOC,aAAa5B,GAEzB1B,GAAK,KAAO0B,EAAE,GAAK,IAAI,IAAMA,EAAEmC,SAAS,IAGhD,OAAO7D,GAuEXhC,EAAOD,QAAQ+C,aAAoBA,EACnC9C,EAAOD,QAAQ+F,gBAnBS,SAASvB,GAC7B,IAAKP,EAAaO,GAAM,CACpB,GAAmB,iBAARA,EAGP,MAAM,IAAIE,UAAU,kDAFpBF,EAAMzB,EAAayB,GAK3B,OAAOA,GAeX,MAAMwB,EAAgBjD,EAAa,QAYnC9C,EAAOD,QAAQgG,cAAsBA,EACrC/F,EAAOD,QAAQiG,kBAXa,IAY5BhG,EAAOD,QAAQkG,kBAXa,IAY5BjG,EAAOD,QAAQmG,gBAXa,IAY5BlG,EAAOD,QAAQoG,oBAXa,IAY5BnG,EAAOD,QAAQqG,YAVa,UAW5BpG,EAAOD,QAAQsG,YAVaD,YAW5BpG,EAAOD,QAAQuG,cAVaD,sDAW5BrG,EAAOD,QAAQwG,YAVa,kDAa5B,MAUMC,EAAiB,CACnBC,WAAqB,EACrBC,SAAoB,EACpBC,aAAoB,EACpBC,mBAAoB,EACpBC,YAAoB,EACpBC,YAAoB,EACpBC,WAAoB,EACpBC,cAAoB,EACpBC,cAAoB,EACpBC,YAAoB,EACpBC,YAAoB,GAGxBX,EAAeY,YAA2C,EAA7BZ,EAAeM,YAC5CN,EAAea,YAA2C,GAA7Bb,EAAeM,YAE5CN,EAAec,YAA2C,EAA7Bd,EAAeK,YAC5CL,EAAee,YAA2C,GAA7Bf,EAAeK,YAE5CL,EAAegB,SAA0C,EAA/BhB,EAAeQ,cACzCR,EAAeiB,SAA0C,GAA/BjB,EAAeQ,cACzCR,EAAekB,SAA0C,GAA/BlB,EAAeQ,cAMzC,MAqBM,cAAEW,GAAkB,EAAQ,GAC5BC,GAAqBD,EAAgB,IAiD3C3H,EAAOD,QAAQ8H,aAfU,EAgBzB7H,EAAOD,QAAQ+H,cAbU,EAczB9H,EAAOD,QAAQgI,aAfU,EAgBzB/H,EAAOD,QAAQiI,YAjBU,EAkBzBhI,EAAOD,QAAQkI,iBAfU,EAgBzBjI,EAAOD,QAAQmI,aAVO,EAWtBlI,EAAOD,QAAQoI,cARO,EAStBnI,EAAOD,QAAQqI,aAVO,EAWtBpI,EAAOD,QAAQsI,YAZO,EAatBrI,EAAOD,QAAQuI,aA7DM,GA8DrBtI,EAAOD,QAAQwI,aAA2B,EAC1CvI,EAAOD,QAAQyI,UAlFI,EAmFnBxI,EAAOD,QAAQ0I,WA5EI,EA6EnBzI,EAAOD,QAAQ2I,WAvEI,GAwEnB1I,EAAOD,QAAQ4I,UA7EI,EA8EnB3I,EAAOD,QAAQ6I,WA7EI,EA8EnB5I,EAAOD,QAAQ8I,UAlFI,EAmFnB7I,EAAOD,QAAQ+I,SAzEE,EA0EjB9I,EAAOD,QAAQgJ,WAnFI,EAoFnB/I,EAAOD,QAAQiJ,SAzEE,EA0EjBhJ,EAAOD,QAAQkJ,SA3EE,EA4EjBjJ,EAAOD,QAAQmJ,UAzFI,EA0FnBlJ,EAAOD,QAAQoJ,UA3FI,EA4FnBnJ,EAAOD,QAAQqJ,UA1FI,EA2FnBpJ,EAAOD,QAAQsJ,UArFI,GAsFnBrJ,EAAOD,QAAQuJ,UArFI,GAsFnBtJ,EAAOD,QAAQwJ,UAhGI,EAiGnBvJ,EAAOD,QAAQyJ,UAtFI,GAuFnBxJ,EAAOD,QAAQ6H,kBAA0BA,EACzC5H,EAAOD,QAAQ0J,iBAtEa,EAuE5BzJ,EAAOD,QAAQ2J,cAvEa,EAwE5B1J,EAAOD,QAAQ4J,oBAzEa,EA0E5B3J,EAAOD,QAAQyG,eAA0BA,EACzCxG,EAAOD,QAAQ6J,UAvEf,MACI,cACIC,KAAKC,MAAQC,IACbF,KAAKrJ,KAAO,KACZqJ,KAAKG,SAAW,KAChBH,KAAKI,KAAO,KACZJ,KAAKK,OAAS,KACdL,KAAKM,YAAcJ,IACnBF,KAAKO,YAAcL,IACnBF,KAAKQ,gBAAkBN,IACvBF,KAAKS,KAAOP,IACZF,KAAKU,QAAUR,IACfF,KAAKW,SAAWT,IAChBF,KAAKY,WAAaV,IAClBF,KAAKa,UAAY,KAEjBb,KAAKc,KAAO,OAwDpB3K,EAAOD,QAAQ6K,iBAjFU,SAAS3K,GAC9B,OAAO2H,EAAoB3H,GAiF/BD,EAAOD,QAAQ8K,cAhJO,CAClBC,OAAe,EACfC,UAAe,EACfC,WAAe,EACfC,cAAe,EACfC,WAAe,EACfC,YAAe,EACfC,WAAe,I,6BCrRnB,MAAMC,EAAS,EAAQ,GACjBC,EAAS,EAAQ,IACjBC,EAAS,EAAQ,IACjBC,EAAS,EAAQ,GACjBC,EAAS,EAAQ,IAEvBzL,EAAOD,QAAQwG,YAA0B8E,EAAK9E,YAC9CvG,EAAOD,QAAQuG,cAA0B+E,EAAK/E,cAC9CtG,EAAOD,QAAQqL,WAA0BC,EAAKR,cAAcO,WAC5DpL,EAAOD,QAAQoL,YAA0BE,EAAKR,cAAcM,YAC5DnL,EAAOD,QAAQmL,WAA0BG,EAAKR,cAAcK,WAC5DlL,EAAOD,QAAQiL,WAA0BK,EAAKR,cAAcG,WAC5DhL,EAAOD,QAAQkL,cAA0BI,EAAKR,cAAcI,cAC5DjL,EAAOD,QAAQ8H,aAA0BwD,EAAKxD,aAC9C7H,EAAOD,QAAQ+H,cAA0BuD,EAAKvD,cAC9C9H,EAAOD,QAAQgI,aAA0BsD,EAAKtD,aAC9C/H,EAAOD,QAAQiI,YAA0BqD,EAAKrD,YAC9ChI,EAAOD,QAAQkI,iBAA0BoD,EAAKpD,iBAC9CjI,EAAOD,QAAQmI,aAA0BmD,EAAKnD,aAC9ClI,EAAOD,QAAQoI,cAA0BkD,EAAKlD,cAC9CnI,EAAOD,QAAQqI,aAA0BiD,EAAKjD,aAC9CpI,EAAOD,QAAQsI,YAA0BgD,EAAKhD,YAC9CrI,EAAOD,QAAQuI,aAA0B+C,EAAK/C,aAC9CtI,EAAOD,QAAQwI,YAA0B8C,EAAK9C,YAC9CvI,EAAOD,QAAQoH,YAA0BkE,EAAK7E,eAAeW,YAC7DnH,EAAOD,QAAQ+K,OAA0BO,EAAKR,cAAcC,OAC5D9K,EAAOD,QAAQyI,UAA0B6C,EAAK7C,UAC9CxI,EAAOD,QAAQ0I,WAA0B4C,EAAK5C,WAC9CzI,EAAOD,QAAQ2I,WAA0B2C,EAAK3C,WAC9C1I,EAAOD,QAAQ4I,UAA0B0C,EAAK1C,UAC9C3I,EAAOD,QAAQ6I,WAA0ByC,EAAKzC,WAC9C5I,EAAOD,QAAQ8I,UAA0BwC,EAAKxC,UAC9C7I,EAAOD,QAAQ+I,SAA0BuC,EAAKvC,SAC9C9I,EAAOD,QAAQgJ,WAA0BsC,EAAKtC,WAC9C/I,EAAOD,QAAQiJ,SAA0BqC,EAAKrC,SAC9ChJ,EAAOD,QAAQkJ,SAA0BoC,EAAKpC,SAC9CjJ,EAAOD,QAAQmJ,UAA0BmC,EAAKnC,UAC9ClJ,EAAOD,QAAQoJ,UAA0BkC,EAAKlC,UAC9CnJ,EAAOD,QAAQqJ,UAA0BiC,EAAKjC,UAC9CpJ,EAAOD,QAAQsJ,UAA0BgC,EAAKhC,UAC9CrJ,EAAOD,QAAQuJ,UAA0B+B,EAAK/B,UAC9CtJ,EAAOD,QAAQwJ,UAA0B8B,EAAK9B,UAC9CvJ,EAAOD,QAAQyJ,UAA0B6B,EAAK7B,UAC9CxJ,EAAOD,QAAQ6H,kBAA0ByD,EAAKzD,kBAC9C5H,EAAOD,QAAQsG,YAA0BgF,EAAKhF,YAC9CrG,EAAOD,QAAQ0J,iBAA0B4B,EAAK5B,iBAC9CzJ,EAAOD,QAAQ2J,cAA0B2B,EAAK3B,cAC9C1J,EAAOD,QAAQ4J,oBAA0B0B,EAAK1B,oBAC9C3J,EAAOD,QAAQgG,cAA0BsF,EAAKtF,cAC9C/F,EAAOD,QAAQ0G,UAA0B4E,EAAK7E,eAAeC,UAC7DzG,EAAOD,QAAQ2G,SAA0B2E,EAAK7E,eAAeE,SAC7D1G,EAAOD,QAAQ4G,aAA0B0E,EAAK7E,eAAeG,aAC7D3G,EAAOD,QAAQ6G,mBAA0ByE,EAAK7E,eAAeI,mBAC7D5G,EAAOD,QAAQ8G,YAA0BwE,EAAK7E,eAAeK,YAC7D7G,EAAOD,QAAQ+G,YAA0BuE,EAAK7E,eAAeM,YAC7D9G,EAAOD,QAAQgH,WAA0BsE,EAAK7E,eAAeO,WAC7D/G,EAAOD,QAAQiH,cAA0BqE,EAAK7E,eAAeQ,cAC7DhH,EAAOD,QAAQkH,cAA0BoE,EAAK7E,eAAeS,cAC7DjH,EAAOD,QAAQmH,YAA0BmE,EAAK7E,eAAeU,YAC7DlH,EAAOD,QAAQqG,YAA0BiF,EAAKjF,YAC9CpG,EAAOD,QAAQiG,kBAA0BqF,EAAKrF,kBAC9ChG,EAAOD,QAAQkG,kBAA0BoF,EAAKpF,kBAC9CjG,EAAOD,QAAQmG,gBAA0BmF,EAAKnF,gBAC9ClG,EAAOD,QAAQoG,oBAA0BkF,EAAKlF,oBAC9CnG,EAAOD,QAAQgL,UAA0BM,EAAKR,cAAcE,UAC5D/K,EAAOD,QAAQ6J,UAA0ByB,EAAKzB,UAC9C5J,EAAOD,QAAQ6K,iBAA0BS,EAAKT,iBAC9C5K,EAAOD,QAAQ2L,aAA0BJ,EAAKI,aAC9C1L,EAAOD,QAAQ4L,UAA0BL,EAAKK,UAC9C3L,EAAOD,QAAQ6L,YAA0BN,EAAKM,YAC9C5L,EAAOD,QAAQ8L,kBAA0BP,EAAKO,kBAC9C7L,EAAOD,QAAQ+L,SAA0BR,EAAKQ,SAC9C9L,EAAOD,QAAQgM,UAA0BT,EAAKS,UAC9C/L,EAAOD,QAAQiM,eAA0BV,EAAKU,eAC9ChM,EAAOD,QAAQkM,UAA0BR,EAAOQ,UAChDjM,EAAOD,QAAQmM,YAA0BZ,EAAKY,YAC9ClM,EAAOD,QAAQoM,WAA0Bb,EAAKa,WAC9CnM,EAAOD,QAAQqM,SAA0Bd,EAAKc,SAC9CpM,EAAOD,QAAQsM,gBAA0Bf,EAAKe,gBAC9CrM,EAAOD,QAAQuM,SAA0BhB,EAAKgB,SAC9CtM,EAAOD,QAAQwM,UAA0BjB,EAAKiB,UAC9CvM,EAAOD,QAAQyM,OAA0BlB,EAAKkB,OAC9CxM,EAAOD,QAAQ0M,cAA0BnB,EAAKmB,cAC9CzM,EAAOD,QAAQ2M,kBAA0BpB,EAAKoB,kBAC9C1M,EAAOD,QAAQ4M,aAA0BrB,EAAKqB,aAC9C3M,EAAOD,QAAQ6M,cAA0BtB,EAAKsB,cAC9C5M,EAAOD,QAAQ8M,YAA0BtB,EAAOsB,YAChD7M,EAAOD,QAAQ+M,iBAA0BvB,EAAOuB,iBAChD9M,EAAOD,QAAQgN,gBAA0BxB,EAAOwB,gBAChD/M,EAAOD,QAAQiN,SAA0B1B,EAAK0B,SAC9ChN,EAAOD,QAAQkN,YAA0B1B,EAAO0B,YAChDjN,EAAOD,QAAQmN,aAA0B3B,EAAO2B,aAChDlN,EAAOD,QAAQoN,iBAA0B7B,EAAK6B,iBAC9CnN,EAAOD,QAAQqN,aAA0B7B,EAAO6B,aAChDpN,EAAOD,QAAQsN,aAA0B/B,EAAK+B,aAC9CrN,EAAOD,QAAQuN,WAA0BhC,EAAKgC,WAC9CtN,EAAOD,QAAQwN,eAA0BjC,EAAKiC,eAC9CvN,EAAOD,QAAQyN,iBAA0BlC,EAAKkC,iBAC9CxN,EAAOD,QAAQ0N,WAA0BnC,EAAKmC,WAC9CzN,EAAOD,QAAQ2N,cAA0BpC,EAAKoC,cAC9C1N,EAAOD,QAAQ4N,gBAA0BrC,EAAKqC,gBAC9C3N,EAAOD,QAAQ6N,eAA0BtC,EAAKsC,eAC9C5N,EAAOD,QAAQ8N,cAA0BvC,EAAKuC,cAC9C7N,EAAOD,QAAQ+N,oBAA0BxC,EAAKwC,oBAC9C9N,EAAOD,QAAQgO,UAA0BzC,EAAKyC,UAC9C/N,EAAOD,QAAQiO,WAA0B1C,EAAK0C,WAC9ChO,EAAOD,QAAQkO,gBAA0B3C,EAAK2C,gBAC9CjO,EAAOD,QAAQmO,aAA0B5C,EAAK4C,aAC9ClO,EAAOD,QAAQoO,YAA0B7C,EAAK6C,YAC9CnO,EAAOD,QAAQqO,aAA0B9C,EAAK8C,aAC9CpO,EAAOD,QAAQsO,YAA0B/C,EAAK+C,YAC9CrO,EAAOD,QAAQuO,aAA0BhD,EAAKgD,aAC9CtO,EAAOD,QAAQwO,eAA0BjD,EAAKiD,eAC9CvO,EAAOD,QAAQyO,gBAA0BhD,EAAIgD,gBAC7CxO,EAAOD,QAAQ0O,QAA0BnD,EAAKmD,QAC9CzO,EAAOD,QAAQ2O,SAA0BpD,EAAKoD,SAC9C1O,EAAOD,QAAQ4O,aAA0BlD,EAAOkD,aAChD3O,EAAOD,QAAQ6O,aAA0BtD,EAAKsD,aAC9C5O,EAAOD,QAAQ8O,cAA0BpD,EAAOoD,cAChD7O,EAAOD,QAAQ+O,gBAA0BxD,EAAKwD,gBAC9C9O,EAAOD,QAAQgP,SAA0BzD,EAAKyD,SAC9C/O,EAAOD,QAAQiP,UAA0B1D,EAAK0D,UAC9ChP,EAAOD,QAAQkP,WAA0B3D,EAAK2D,WAC9CjP,EAAOD,QAAQmP,QAA0B5D,EAAK4D,QAC9ClP,EAAOD,QAAQoP,gBAA0B7D,EAAK6D,gBAC9CnP,EAAOD,QAAQqP,iBAA0B9D,EAAK8D,iBAC9CpP,EAAOD,QAAQsP,kBAA0B/D,EAAK+D,kBAC9CrP,EAAOD,QAAQuP,gBAA0BhE,EAAKgE,gBAC9CtP,EAAOD,QAAQwP,oBAA0BjE,EAAKiE,oBAC9CvP,EAAOD,QAAQyP,gBAA0BlE,EAAKkE,gBAC9CxP,EAAOD,QAAQ0P,kBAA0BnE,EAAKmE,kBAC9CzP,EAAOD,QAAQ2P,mBAA0BpE,EAAKoE,mBAC9C1P,EAAOD,QAAQ4P,sBAA0BrE,EAAKqE,sBAC9C3P,EAAOD,QAAQ6P,gBAA0BtE,EAAKsE,gBAC9C5P,EAAOD,QAAQ8P,gBAA0BvE,EAAKuE,gBAC9C7P,EAAOD,QAAQ+P,YAA0BxE,EAAKwE,YAC9C9P,EAAOD,QAAQgQ,eAA0BzE,EAAKyE,eAC9C/P,EAAOD,QAAQiQ,eAA0B1E,EAAK0E,eAC9ChQ,EAAOD,QAAQkQ,eAA0B3E,EAAK2E,eAC9CjQ,EAAOD,QAAQmQ,cAA0B5E,EAAK4E,cAC9ClQ,EAAOD,QAAQoQ,iBAA0B7E,EAAK6E,iBAC9CnQ,EAAOD,QAAQqQ,aAA0B9E,EAAK8E,aAC9CpQ,EAAOD,QAAQsQ,WAA0B/E,EAAK+E,WAC9CrQ,EAAOD,QAAQuQ,YAA0BhF,EAAKgF,YAC9CtQ,EAAOD,QAAQwQ,YAA0BjF,EAAKiF,YAC9CvQ,EAAOD,QAAQyQ,WAA0BlF,EAAKkF,WAC9CxQ,EAAOD,QAAQ0Q,WAA0BnF,EAAKmF,WAC9CzQ,EAAOD,QAAQ2Q,YAA0BpF,EAAKoF,YAC9C1Q,EAAOD,QAAQ4Q,YAA0BrF,EAAKqF,YAC9C3Q,EAAOD,QAAQ6Q,aAA0BtF,EAAKsF,aAC9C5Q,EAAOD,QAAQ8Q,WAA0BvF,EAAKuF,WAC9C7Q,EAAOD,QAAQ+Q,YAA0BxF,EAAKwF,YAC9C9Q,EAAOD,QAAQgR,WAA0BvF,EAAIuF,WAC7C/Q,EAAOD,QAAQiR,WAA0B1F,EAAK0F,WAC9ChR,EAAOD,QAAQkR,aAA0BzF,EAAIyF,aAC7CjR,EAAOD,QAAQmR,aAA0B5F,EAAK4F,aAC9ClR,EAAOD,QAAQoR,cAA0B7F,EAAK6F,cAC9CnR,EAAOD,QAAQqR,YAA0B7F,EAAO6F,YAChDpR,EAAOD,QAAQsR,SAA0B/F,EAAK+F,SAC9CrR,EAAOD,QAAQuR,aAA0B/F,EAAO+F,aAChDtR,EAAOD,QAAQwR,iBAA0BjG,EAAKiG,iBAC9CvR,EAAOD,QAAQyR,aAA0BlG,EAAKkG,aAC9CxR,EAAOD,QAAQ0R,WAA0BnG,EAAKmG,WAC9CzR,EAAOD,QAAQ2R,eAA0BpG,EAAKoG,eAC9C1R,EAAOD,QAAQ4R,iBAA0BrG,EAAKqG,iBAC9C3R,EAAOD,QAAQ6R,WAA0BtG,EAAKsG,WAC9C5R,EAAOD,QAAQ8R,mBAA0BvG,EAAKuG,mBAC9C7R,EAAOD,QAAQ+R,cAA0BxG,EAAKwG,cAC9C9R,EAAOD,QAAQgS,eAA0BzG,EAAKyG,eAC9C/R,EAAOD,QAAQiS,cAA0B1G,EAAK0G,cAC9ChS,EAAOD,QAAQkS,eAA0B3G,EAAK2G,eAC9CjS,EAAOD,QAAQmS,eAA0B5G,EAAK4G,eAC9ClS,EAAOD,QAAQoS,cAA0B7G,EAAK6G,cAC9CnS,EAAOD,QAAQqS,aAA0B9G,EAAK8G,aAC9CpS,EAAOD,QAAQsS,cAA0B/G,EAAK+G,cAC9CrS,EAAOD,QAAQuS,cAA0BhH,EAAKgH,cAC9CtS,EAAOD,QAAQwS,YAA0BjH,EAAKiH,YAC9CvS,EAAOD,QAAQyS,aAA0BlH,EAAKkH,aAC9CxS,EAAOD,QAAQ0S,aAA0BnH,EAAKmH,aAC9CzS,EAAOD,QAAQ2S,eAA0BpH,EAAKoH,eAC9C1S,EAAOD,QAAQ4S,SAA0BrH,EAAKqH,SAC9C3S,EAAOD,QAAQ6S,aAA0BtH,EAAKsH,aAC9C5S,EAAOD,QAAQ8S,cAA0BvH,EAAKuH,cAC9C7S,EAAOD,QAAQ+S,gBAA0BxH,EAAKwH,gBAC9C9S,EAAOD,QAAQgT,YAA0BzH,EAAKyH,YAC9C/S,EAAOD,QAAQiT,UAA0B1H,EAAK0H,UAC9ChT,EAAOD,QAAQkT,UAA0BzH,EAAIyH,UAC7CjT,EAAOD,QAAQmT,WAA0B1H,EAAI0H,WAC7ClT,EAAOD,QAAQoT,gBAA0B7H,EAAK6H,iB,6BC5L9C,MAAMC,EAAwE,IAExE,kBACFpN,EAAiB,kBACjBC,EAAiB,aACjBnD,GACA,EAAQ,GAUZ9C,EAAOD,QAAQsT,aADO,IAItBrT,EAAOD,QAAQuT,cADO,IAItBtT,EAAOD,QAAQwT,aADO,IAYtB,MAAMC,EAAWxN,EAAoB,IAAMC,EAC3CjG,EAAOD,QAAQyT,SAAWA,EAEU,CAChC,MAAMC,EAAa,IACnBzT,EAAOD,QAAQ0T,WAAaA,EAE5B,MAAMC,EAAW,SAAWF,EAAW,IACvCxT,EAAOD,QAAQ2T,SAAWA,EAE1B,MAAMC,EAAYD,EAClB1T,EAAOD,QAAQ4T,UAAYA,EAE3B,MAAMC,EAAmB9Q,EACrB4Q,EAAW,SAAWA,EAAtBA,mCAIJ1T,EAAOD,QAAQ6T,iBAAmBA,EAElC,MAAMC,EAAqB/Q,EACvB6Q,EAAY,QAAUA,EAAY,qBAEtC3T,EAAOD,QAAQ8T,mBAAqBA,EAsExC,MAAMC,EAAyBV,EAAKU,yBAA0B,EAWxDnM,EAAgByL,EAAKzL,eAAiB,IAOtCoM,EAAaX,EAAKW,YAAc,GAmChCC,EAAkBZ,EAAKY,iBAAmB,KAiB1CC,EAAQ,SAASC,EAAUC,GAG7B,IAFA,IAAIC,EAAQlP,KAAKC,IAAI,EAAGD,KAAKmP,KAAKnP,KAAKoP,IAAIH,GAAY,OACnDI,EAASL,EACJjU,EAAI,EAAGA,EAAImU,EAAOnU,IACvBsU,GAAUrP,KAAKsP,IAAI,EAAGtP,KAAKuP,OAAON,EAAWlU,GAAKmU,IACtD,OAAOG,GAGXvU,EAAOD,QAAQ4H,cAAyBA,EACxC3H,EAAOD,QAAQ+T,uBAAyBA,EACxC9T,EAAOD,QAAQgU,WAAyBA,EACxC/T,EAAOD,QAAQ2U,gBA9CS,KA+CxB1U,EAAOD,QAAQ4U,mBAlDY,GAmD3B3U,EAAOD,QAAQ6U,eAjFQ,WAkFvB5U,EAAOD,QAAQ8U,gBAjFQ,WAkFvB7U,EAAOD,QAAQ+U,eAjDS,QAkDxB9U,EAAOD,QAAQgV,kBArDW,GAsD1B/U,EAAOD,QAAQiU,gBAAyBA,EACxChU,EAAOD,QAAQiV,MAhCD,SAAS9T,GACnB,GAAc,IAAVA,EAAa,MAAO,CAACA,EAAO,GAChC,IAAI+T,EAAO,IAAIC,SAAS,IAAIC,YAAY,IACxCF,EAAKG,WAAW,EAAGlU,GACnB,IAAImU,EAAQJ,EAAKK,UAAU,KAAO,GAAM,KAC3B,IAATD,IACAJ,EAAKG,WAAW,EAAGlU,EAAQgE,KAAKsP,IAAI,EAAG,KACvCa,GAASJ,EAAKK,UAAU,KAAO,GAAM,MAAS,IAElD,IAAInB,EAAWkB,EAAO,KAEtB,MAAO,CADQpB,EAAM/S,GAAQiT,GACXA,IAsBtBnU,EAAOD,QAAQkU,MAAyBA,EACxCjU,EAAOD,QAAQwV,sBApDe,WAK1B,OAAO,IAgDXvV,EAAOD,QAAQyV,gBAvES,SAAS9T,GAC7B,OAAO2D,OAAO3D,IAuElB1B,EAAOD,QAAQ0V,eApEQ,SAAS/T,GAC5B,OAAO2D,OAAOqQ,OAAOhU,EAAEiU,YAAY,OAoEvC3V,EAAOD,QAAQ6V,oBAjEa,SAASlU,GACjC,OAAOA,IA1BY,YA0BWA,EAAI,YAAkBA,GAiExD1B,EAAOD,QAAQ8V,cAhDO,SAAS3V,EAAG4V,GAC9B,IAAKA,EAAG,MAAMjS,MAAMiS,K,6BC7KxB,MAAM,cAAED,GAAkB,EAAQ,GAE5BE,EAAa,SAASzV,GACxB,IAAKA,EAAG,MAAMuD,MAAM,qBAExB7D,EAAOD,QAAQgW,WAAaA,EAE5B/V,EAAOD,QAAQ8V,cAAgBA,GAAiB,SAAS3V,EAAG4V,GAAK,OAAOC,EAAWD,IAKnF9V,EAAOD,QAAQiW,UAHG,SAAS9V,EAAG4V,EAAGG,GAC7B,OAAOJ,EAAc3V,EAAG4V,GAAKG,IAKjCjW,EAAOD,QAAQmW,eADQ,IAKvBlW,EAAOD,QAAQoW,cADO,GAStBnW,EAAOD,QAAQqW,YANK,SAASC,EAAG9S,EAAGwB,GAC/B,IAAI1E,EAAIkD,EAAIwB,EAGZ,OAFK1E,EAAE0E,EAAK,IACR1E,GAAK0E,GACF1E,GAMXL,EAAOD,QAAQuW,QADC,WAGhBtW,EAAOD,QAAQwW,SADE,Y,gBC1BjB,MAAMlL,EAAO,EAAQ,GASflJ,EAA0BC,iFAAoFiJ,EAAK/E,cAEzHtG,EAAOD,QAAQmC,gBAHiB,8BAIhClC,EAAOD,QAAQoC,kBAA0BA,EACzCnC,EAAOD,QAAQqC,gBANiBC,gBAOhCrC,EAAOD,QAAQsC,gBARiB,cAShCrC,EAAOD,QAAQuC,sBAbiB,IAchCtC,EAAOD,QAAQwC,sBAbiB,IAchCvC,EAAOD,QAAQyC,oBAbiB,EAchCxC,EAAOD,QAAQ0C,wBAbiB,IAchCzC,EAAOD,QAAQiE,aAA0BqH,EAAKrH,aAC9ChE,EAAOD,QAAQ2C,aAA0B2I,EAAK3I,aAC9C1C,EAAOD,QAAQqD,eAA0BiI,EAAKjI,eAC9CpD,EAAOD,QAAQ4C,kBAA0B0I,EAAK1I,kBAC9C3C,EAAOD,QAAQ6C,aAA0ByI,EAAKzI,aAC9C5C,EAAOD,QAAQ8C,YAA0BwI,EAAKxI,YAC9C7C,EAAOD,QAAQ+C,aAA0BuI,EAAKvI,aAC9C9C,EAAOD,QAAQgD,aAA0BsI,EAAKtI,aAC9C/C,EAAOD,QAAQ+F,gBAA0BuF,EAAKvF,iB,6BCjC9C,MAAM,UACF0C,EAAS,WACTC,EAAU,WACVC,EAAU,UACVC,EAAS,WACTC,EAAU,UACVC,EAAS,WACTE,EAAU,UACVG,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EACAhD,gBAAgB,YACZW,EAAW,aACXR,EAAY,SACZe,EAAQ,cACRV,EAAa,SACbS,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRG,EAAW,YACXS,EAAW,YACXC,EAAW,YACXH,EAAW,YACXN,EAAW,WACXC,EAAU,YACVG,EAAW,cACXD,GACH,gBACDnB,EAAe,kBACfnD,EAAiB,aACjBC,EAAY,YACZC,EAAW,aACXC,GACA,EAAQ,IACN,SACF0T,EAAQ,SACRC,EAAQ,SACRC,EAAQ,UACRC,GACA,EAAQ,IACNpL,EAAU,EAAQ,IAClBC,EAAU,EAAQ,GAClBC,EAAU,EAAQ,KAClB,WACFmL,EAAU,SACVC,GACA,EAAQ,IACNC,EAAU,EAAQ,IAClB,uBACFhD,EAAsB,MACtBG,EAAK,gBACLuB,EAAe,eACfC,GACA,EAAQ,GACNsB,EAAU,EAAQ,KAClB,QACFT,GAAO,YACPF,GAAW,WACXL,IACA,EAAQ,GACNiB,GAAU,EAAQ,IAElBC,GAAa9P,EACb+P,GAAe/P,EAAY,EAEjC,MAAMgQ,GAEF,YAAYC,EAAMlW,GACd2I,KAAKuN,KAAOA,EACZvN,KAAK3I,MAAQA,EAIjB,QACI,OAAmB,GAAZ2I,KAAKuN,KAIhB,QACI,OAAmB,GAAZvN,KAAKuN,KAGhB,SAASjW,GACL,OAAO0I,KAAKuN,OAASjW,EAGzB,UAAUA,GACN,OAAO0I,KAAKwN,UAAYlW,EAG5B,aACI,OAAO0I,KAAKyN,UAAUzQ,GAG1B,YACI,OAAOgD,KAAK0N,SAASjQ,GAGzB,cACI,OAAOuC,KAAK0N,SAAShQ,GAGzB,UACI,OAAOsC,KAAK0N,SAAS7Q,GAGzB,cACI,OAAOmD,KAAK0N,SAAS5Q,GAGzB,oBACI,OAAOkD,KAAK0N,SAAS3Q,GAGzB,aACI,OAAOiD,KAAKyN,UAAUxQ,GAG1B,gBACI,OAAO+C,KAAK0N,SAASnQ,GAGzB,gBACI,OAAOyC,KAAK0N,SAASlQ,GAGzB,YACI,OAAOwC,KAAK0N,SAASxQ,GAGzB,eACI,OAAO8C,KAAKyN,UAAUtQ,GAG1B,cACI,OAAoB,GAAZ6C,KAAKuN,QAAiBpQ,EAGlC,eACI,OAAO6C,KAAK0N,SAAS7P,GAGzB,eACI,OAAOmC,KAAK0N,SAAS/P,GAGzB,UACI,OAAOqC,KAAK0N,SAAS9P,GAGzB,mBACI,OAAOoC,KAAK0N,SAAStQ,GAGzB,aACI,OAAO4C,KAAK0N,SAASrQ,GAGzB,cACI,OAAO2C,KAAK0N,SAASL,IAGzB,YACI,OAAOrN,KAAK2N,WAAc3N,KAAK4N,gBAAgC,IAAf5N,KAAK3I,MAGzD,YAAYwW,GACR7N,KAAKuN,KAAO9P,EACZuC,KAAK3I,MAAQwW,EAGjB,YAAYA,GACR3B,GAAWlM,KAAKuN,MAAQ9P,GACxBuC,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAO7P,EACZsC,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN3B,GAAWlM,KAAKuN,MAAQ7P,GACxBsC,KAAK3I,MAAQwW,EAGjB,cACI7N,KAAKuN,KAAO1Q,EACZmD,KAAK3I,MAAQ,KAGjB,UAAUwW,GACN7N,KAAKuN,KAAO3P,EACZoC,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAOxQ,EACZiD,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAOzQ,EACZkD,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAO/P,EACZwC,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAOnQ,EACZ4C,KAAK3I,MAAQwW,EAGjB,WAAWA,GACP7N,KAAKuN,KAAOlQ,EACZ2C,KAAK3I,MAAQwW,EAGjB,YAAYA,GACR7N,KAAKuN,KAAO5P,EACZqC,KAAK3I,MAAQwW,EAGjB,YAAYA,GACR7N,KAAKuN,KAAO1P,EACZmC,KAAK3I,MAAQwW,EAGjB,UAAUA,GACN7N,KAAKuN,KAAOrQ,EACZ8C,KAAK3I,MAAQwW,EAGjB,eACI7N,KAAKuN,KAAOF,GACZrN,KAAK3I,MAAQ,KAGjB,QAAQyW,GACJ9N,KAAKuN,KAAOO,EAAGP,KACfvN,KAAK3I,MAAQyW,EAAGzW,MAGpB,UAEI,OADA6U,GAAWlM,KAAK+N,cACT/N,KAAK3I,MAGhB,SACI,OAAO2I,KAAKgO,UAAUC,SAG1B,QACI,OAAOjO,KAAKgO,UAAUE,SAG1B,SAASzU,EAAM0B,GACX,OAAOnC,EAAYgH,KAAKmO,SAAU1U,EAAM0B,GAAI,IAIpD,MAcMiT,GAAc,SAAS5B,EAAG6B,EAAQC,GACpC9B,EAAE+B,MAAMF,GAAQG,UAAUF,IAGxBG,GAAiB,IAAInB,GAAOzQ,EAAU,MAC5C/F,OAAO4X,OAAOD,IACdtY,EAAOD,QAAQuY,eAAiBA,GAEhC,MAAME,GAEF,YAAYnC,EAAG3U,GACXmI,KAAK4O,GAAKpC,EAAEqC,IAAIC,aAEhB9O,KAAK9H,EAAI,KACT8H,KAAK+O,UAAYlX,EACjBmI,KAAKgP,OAAS,IAAIjU,MAAMlD,IAKhC,MAAMoX,GAEF,YAAYzC,EAAG0C,EAAGrX,GAMd,IALAmI,KAAK4O,GAAKpC,EAAEqC,IAAIC,aAEhB9O,KAAKkP,EAAIA,EACTlP,KAAK+O,UAAYlX,EACjBmI,KAAKmP,QAAU,IAAIpU,MAAMlD,GAClBA,KACHmI,KAAKmP,QAAQtX,GAAK,IAAIyV,GAAOzQ,EAAU,OAMnD,MAAMuS,GAEF,YAAY5C,EAAG6C,GACXrP,KAAK4O,GAAKpC,EAAEqC,IAAIC,aAEhB9O,KAAKsP,UAAY,KACjBtP,KAAKuP,UAAY,IAAIjC,GAAOzQ,EAAU,MACtCmD,KAAKrG,IAAM0V,EACXrP,KAAKoL,KAAOtU,OAAOY,OAAO,OAiBlC,MAAM8X,GAAOvW,EAAa,OACpBwW,GAAOxW,EAAa,aACpByW,GAAOzW,EAAa,MA+CpB0W,GAAiB,SAASlZ,GAC5B,OAAIkW,EAASlW,GAAWA,EAAI,IACX,IAAJA,GAAY,IAKvBmZ,GAAe,SAASC,EAAMhC,GAChC,IAAIhW,EAAI,EAER,GADAqU,GAAW2B,GAAK,SACZA,EAAI,IACJgC,EAAKC,GAAkBjC,MACtB,CACD,IAAIkC,EAAM,GACV,GACIF,EAVO,EAUYhY,KAAQ,IAAY,GAAJgW,EACnCA,IAAM,EACNkC,IAAQ,QACHlC,EAAIkC,GACbF,EAdW,EAcOhY,IAAOkY,GAAO,EAAKlC,EAEzC,OAAOhW,GA4ELmY,GAAa,SAAS7X,EAAGZ,GAC3B,IAAImT,EAAkB,MAATnT,EAlEO,SAASY,GAC7B,IAKI8X,EALA7Z,EAAI,EACJc,EAAI,EACJgZ,EAAS,EACTC,EAAW,EACXlE,EAAI,EAEJmE,GAAS,EACb,KAAOvD,EAAS1U,EAAE/B,KAAKA,IAGvB,KAFK6Z,EAAgB,KAAT9X,EAAE/B,KACI,KAAT+B,EAAE/B,KAD0CA,IAEtC,KAAT+B,EAAE/B,IAAmD,MAAX+B,EAAE/B,EAAE,IAAmD,KAAX+B,EAAE/B,EAAE,GAC5F,OAAO,KACX,IAAKA,GAAK,GAAKA,IACX,GAAa,KAAT+B,EAAE/B,GAAuE,CACzE,GAAIga,EAAQ,MACPA,GAAS,MACX,KAAItD,EAAU3U,EAAE/B,IAOhB,MANY,IAAX8Z,GAAyB,KAAT/X,EAAE/B,GAClB+Z,MACOD,GA1BL,GA2BFhZ,EAAS,GAAJA,EAAUyY,GAAexX,EAAE/B,IAC/B6V,IACDmE,GAAQnE,IAIpB,GAAIkE,EAAWD,IAAW,EACtB,OAAO,KAEX,GADAjE,GAAK,EACQ,MAAT9T,EAAE/B,IAAiD,KAAT+B,EAAE/B,GAAqC,CACjF,IACIia,EADAC,EAAO,EAKX,GAHAla,MACKia,EAAiB,KAATlY,EAAE/B,KACG,KAAT+B,EAAE/B,KAD2CA,KAEjDuW,EAASxU,EAAE/B,IACZ,OAAO,KACX,KAAOuW,EAASxU,EAAE/B,KACdka,EAAc,GAAPA,EAAYnY,EAAE/B,KAAO,GAC5Bia,IAAMC,GAAQA,GAClBrE,GAAKqE,EAGT,OADIL,IAAK/Y,GAAKA,GACP,CACHW,EAAGuS,EAAMlT,EAAG+U,GACZ7V,EAAGA,GAoBqBma,CAAgBpY,GAhBzB,SAASA,GAC5B,IACIA,EAAIa,EAAYb,GAClB,MAAO8T,GACL,OAAO,KAIX,IAAI/U,EAAI,uEAAuEsZ,KAAKrY,GACpF,IAAKjB,EACD,OAAO,KACX,IAAIuZ,EAAMC,WAAWxZ,EAAE,IACvB,OAAQyZ,MAAMF,GAAoC,KAA7B,CAAE5Y,EAAG4Y,EAAKra,EAAGc,EAAE,GAAG0C,QAIUgX,CAAezY,GAChE,GAAe,OAAXuS,EAAiB,OAAO,KAC5B,KAAOmC,EAAS1U,EAAEuS,EAAOtU,KAAKsU,EAAOtU,IACrC,OAAQsU,EAAOtU,IAAM+B,EAAEyB,QAA0B,IAAhBzB,EAAEuS,EAAOtU,GAAYsU,EAAS,MAG7DmG,GAAS,CACX,GACA,IACA,GACA,IACA,IAEEC,GAAQ,CACV,GAAO,IACP,IAAO,IACP,GAAO,IACP,IAAO,IACP,GAAO,KAsBLC,GAAW1V,KAAKuP,MAAM6B,GAAU,IAChCuE,GAAWvE,GAAU,GAmDrBwE,GAAgB,SAASzE,EAAG0E,GAC9B,IAAIrB,EACJ,GAAIqB,EAAIC,cACJtB,EAAO5W,EAAa0S,EAAgBuF,EAAI7Z,YACvC,CACD,IAAIqD,EAAMkR,EAAesF,EAAI7Z,QACxB4S,GAA0B,mBAAmBmH,KAAK1W,KACnDA,GAAO,MAEXmV,EAAO5W,EAAayB,GAExBwW,EAAI1C,UAAUzB,EAAWP,EAAGqD,KAG1BwB,GAAU,SAAS7E,EAAG9R,GACxBiH,EAAI2P,YAAY9E,GAChB4B,GAAY5B,EAAGA,EAAE+E,IAAI,EAAGvE,EAASR,EAAG9R,KAGlC8W,GAAoB,SAAShF,EAAGiF,EAAKC,GACvC,IAGIzF,EAHApU,EAAI,EACJzB,EAAI,EACJsD,EAAI,EAER,KACIuS,EAAInT,EAAkB2Y,EAAK,GAA8Brb,IAC/C,GAAN6V,GAFC,CAIL,OADAoF,GAAQ7E,EAAGiF,EAAIE,SAASvb,EAAG6V,IACpBwF,EAAIxF,EAAE,IACT,KAAK,IAA+B,CAChC,IAAI9T,EAAIuZ,EAAKhY,KACb,GAAU,OAANvB,EAAYA,EAAIc,EAAa,UAAU,OACtC,CACDd,EAAI8D,EAAgB9D,GAEpB,IAAI/B,EAAI0C,EAAkBX,EAAG,IAClB,IAAP/B,IACA+B,EAAIA,EAAEwZ,SAAS,EAAGvb,IAE1Bib,GAAQ7E,EAAGrU,GACX,MAEJ,KAAK,GAA8B,CAC/B,IAAI0X,EAAO6B,EAAKhY,KACZkT,EAASiD,GACTwB,GAAQ7E,EAAGzT,EAAa8W,IAExB+B,GAAiBpF,EAAGvT,EAAa,UAAU,GAAO4W,GACtD,MAEJ,KAAK,IACL,KAAK,GACDlO,EAAI2P,YAAY9E,GAChBA,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAGM,UAAUH,EAAKhY,MAChCuX,GAAczE,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAI,IAC/B,MACJ,KAAK,IACD5P,EAAI2P,YAAY9E,GAChBA,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAGO,YAAYJ,EAAKhY,MAClCuX,GAAczE,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAI,IAC/B,MACJ,KAAK,IAA+B,CAChC,IAAI1X,EAAI6X,EAAKhY,KACb,GAAIG,aAAa+H,EAAOmQ,WACpBlY,aAAaoT,EAAO+E,OACpBnY,aAAauV,IACbvV,aAAa8U,IACb9U,aAAaoV,GACboC,GAAQ7E,EAAGvT,EAAa,KAAKY,EAAE+U,GAAG5S,SAAS,WAE3C,cAAcnC,GACV,IAAK,YACDwX,GAAQ7E,EAAGvT,EAAa,cACxB,MACJ,IAAK,SACDoY,GAAQ7E,EAAGvT,EAAa,UAAUY,EAAE,MACpC,MACJ,IAAK,SACDwX,GAAQ7E,EAAGvT,EAAa,UAAUgZ,KAAKC,UAAUrY,GAAG,MACpD,MACJ,IAAK,UACDwX,GAAQ7E,EAAGvT,EAAaY,EAAE,gBAAgB,mBAC1C,MACJ,IAAK,SACD,GAAU,OAANA,EAAY,CACZwX,GAAQ7E,EAAGvT,EAAa,SACxB,MAGR,IAAK,WAAY,CACb,IAAI2V,EAAKpC,EAAEqC,IAAIsD,IAAIlb,IAAI4C,GAClB+U,IACDA,EAAKpC,EAAEqC,IAAIC,aACXtC,EAAEqC,IAAIsD,IAAIC,IAAIvY,EAAG+U,IAErByC,GAAQ7E,EAAGvT,EAAa,KAAK2V,EAAG5S,SAAS,MACzC,MAEJ,QAEIqV,GAAQ7E,EAAGvT,EAAa,aAGpC,MAEJ,KAAK,GAA8B,CAC/B,IAAI4W,EAAO,IAAIrW,WAnSZ,GAoSCnD,EAAIuZ,GAAaC,EAAM6B,EAAKhY,MAChC2X,GAAQ7E,EAAGqD,EAAK8B,SArSb,EAqSmCtb,IACtC,MAEJ,KAAK,GACDgb,GAAQ7E,EAAGvT,EAAa,KAAK,IAC7B,MACJ,QACIyI,EAAO2Q,cAAc7F,EAAGvT,EAAa,8CAA+CwY,EAAIxF,EAAI,IAEpGpU,GAAK,EACLzB,EAAI6V,EAAI,EAKZ,OAHAtK,EAAI2Q,gBAAgB9F,EAAG,GACvB6E,GAAQ7E,EAAGiF,EAAIE,SAASvb,IACpByB,EAAI,GAAGqV,EAAIqF,YAAY/F,EAAG3U,EAAE,GACzB2U,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAGpD,UAGtByD,GAAmB,SAASpF,EAAGiF,KAAQC,GACzC,OAAOF,GAAkBhF,EAAGiF,EAAKC,IAuB/Bc,GAAW,SAAShG,EAAGiG,EAAIC,EAAIC,GACjC,OAAQF,GACJ,KAAK9T,EAAY,OAAQ+T,EAAKC,EAAI,EAClC,KAAKjT,EAAY,OAAQgT,EAAKC,EAAI,EAClC,KAAKrT,EAAY,OAAO4N,EAAI0F,UAAUF,EAAIC,GAC1C,KAAKtT,EAAY,OAAO6N,EAAI2F,SAASrG,EAAGkG,EAAIC,GAC5C,KAAKzT,EAAY,OAAOgO,EAAI4F,SAAStG,EAAGkG,EAAIC,GAC5C,KAAK/T,EAAY,OAAQ8T,EAAKC,EAC9B,KAAK7T,EAAY,OAAQ4T,EAAKC,EAC9B,KAAK5T,EAAY,OAAQ2T,EAAKC,EAC9B,KAAKnT,EAAY,OAAO0N,EAAI6F,YAAYL,EAAIC,GAC5C,KAAKlT,EAAY,OAAOyN,EAAI6F,YAAYL,GAAKC,GAC7C,KAAKhT,EAAY,OAAQ,EAAI+S,EAAI,EACjC,KAAK7T,EAAY,OAAQ,EAAK6T,EAC9B,QAASxG,GAAW,KAKtB8G,GAAW,SAASxG,EAAGiG,EAAIC,EAAIC,GACjC,OAAQF,GACJ,KAAK9T,EAAY,OAAO+T,EAAKC,EAC7B,KAAKjT,EAAY,OAAOgT,EAAKC,EAC7B,KAAKrT,EAAY,OAAOoT,EAAKC,EAC7B,KAAK3T,EAAY,OAAO0T,EAAKC,EAC7B,KAAKpT,EAAY,OAAOlE,KAAKsP,IAAI+H,EAAIC,GACrC,KAAKzT,EAAY,OAAO7D,KAAKuP,MAAM8H,EAAKC,GACxC,KAAKhT,EAAY,OAAQ+S,EACzB,KAAKrT,EAAY,OAAOkN,GAAYC,EAAGkG,EAAIC,GAC3C,QAASzG,GAAW,KA6C5B/V,EAAOD,QAAQ+Y,SAAoBA,GACnC9Y,EAAOD,QAAQyY,SAAoBA,GACnCxY,EAAOD,QAAQmX,aAAoBA,GACnClX,EAAOD,QAAQkX,WAAoBA,GACnCjX,EAAOD,QAAQ+c,OA3df,MACI,cACIjT,KAAKkT,QAAU,KACflT,KAAKmT,QAAUjT,IACfF,KAAKoT,MAAQlT,MAwdrB/J,EAAOD,QAAQoX,OAAoBA,GACnCnX,EAAOD,QAAQkZ,MAAoBA,GACnCjZ,EAAOD,QAAQ4Z,WAhaI,EAianB3Z,EAAOD,QAAQmd,WAjDI,SAAS7G,EAAGiG,EAAIa,EAAIC,EAAIC,GACvC,IAAIC,EAAqB,iBAAPD,EAAmBhH,EAAE+B,MAAMiF,GAAMA,EAEnD,OAAQf,GACJ,KAAK7T,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EACrB,KAAKZ,EAAY,CACb,IAAI6U,EAAIC,EACR,IAAiC,KAA5BD,EAAKxG,EAAI0G,UAAUN,MAA+C,KAA5BK,EAAKzG,EAAI0G,UAAUL,IAE1D,YADAE,EAAI5B,UAAUW,GAAShG,EAAGiG,EAAIiB,EAAIC,IAGjC,MAET,KAAK3U,EAAW,KAAKO,EAAW,CAC5B,IAAIsU,EAAIC,EACR,IAAgC,KAA3BD,EAAK3G,EAAI6G,SAAST,MAA8C,KAA3BQ,EAAK5G,EAAI6G,SAASR,IAExD,YADAE,EAAI3B,YAAYkB,GAASxG,EAAGiG,EAAIoB,EAAIC,IAGnC,MAET,QAAS,CACL,IAAID,EAAIC,EACR,GAAIR,EAAGnC,eAAiBoC,EAAGpC,cAEvB,YADAsC,EAAI5B,UAAUW,GAAShG,EAAGiG,EAAIa,EAAGjc,MAAOkc,EAAGlc,QAG1C,IAAgC,KAA3Bwc,EAAK3G,EAAI6G,SAAST,MAA8C,KAA3BQ,EAAK5G,EAAI6G,SAASR,IAE7D,YADAE,EAAI3B,YAAYkB,GAASxG,EAAGiG,EAAIoB,EAAIC,IAGnC,OAIb5H,GAAiB,OAANM,GACXW,GAAI6G,cAAcxH,EAAG8G,EAAIC,EAAIC,EAAKf,EAAK9T,EAAawO,GAAI8G,IAAIC,SAahE/d,EAAOD,QAAQie,aApdM,SAAS9T,EAAQ+T,GAClC,IACIC,EADAhe,EAAIgK,EAAOzG,OAEf,GAAkB,KAAdyG,EAAO,GACHhK,EAAI+d,GACJC,EAAM,IAAI7a,WAAWnD,EAAE,GACvBge,EAAIjC,IAAI/R,EAAOsR,SAAS,MAExB0C,EAAM,IAAI7a,WAAW4a,GACrBC,EAAIjC,IAAI/R,EAAOsR,SAAS,EAAGyC,EAAQ,UAEpC,GAAkB,KAAd/T,EAAO,GACVhK,GAAK+d,GACLC,EAAM,IAAI7a,WAAWnD,EAAE,GACvBge,EAAIjC,IAAI/R,EAAOsR,SAAS,MAExB0C,EAAM,IAAI7a,WAAW4a,GACrBC,EAAIjC,IAAI5C,IACR4E,GAAW5E,GAAK5V,OAChBya,EAAIjC,IAAI/R,EAAOsR,SAAStb,EAAI+d,GAAU5E,GAAK5V,aAE5C,CACHya,EAAM,IAAI7a,WAAW4a,GACrB,IAAIE,EAAMxb,EAAkBuH,EAAQ,IACpCgU,EAAIjC,IAAI3C,IACR,IAAI8E,EAAQ9E,GAAI7V,OAEZvD,GADJ+d,GAAW3E,GAAI7V,OAAS4V,GAAK5V,OAAS8V,GAAI9V,UACd,IAAT0a,GACfD,EAAIjC,IAAI/R,EAAQkU,GAChBA,GAASlU,EAAOzG,UAEH,IAAT0a,IAAYje,EAAIie,GAChBje,EAAI+d,IAAS/d,EAAI+d,GACrBC,EAAIjC,IAAI/R,EAAOsR,SAAS,EAAGtb,GAAIke,GAC/BA,GAASle,EACTge,EAAIjC,IAAI5C,GAAM+E,GACdA,GAAS/E,GAAK5V,QAElBya,EAAIjC,IAAI1C,GAAK6E,GACbA,GAAS7E,GAAI9V,OACbya,EAAMA,EAAI1C,SAAS,EAAG4C,GAE1B,OAAOF,GA2aXle,EAAOD,QAAQyZ,eAAoBA,GACnCxZ,EAAOD,QAAQse,YAnGK,SAAS3G,GACzB,IAAI5B,EAAI,EACR,GAAI4B,EAAI,EAAG,OAAOA,EAClB,KAAOA,GAAK,KACRA,EAAKA,EAAI,IAAQ,EACjB5B,GAAK,EAET,KAAO4B,GAAK,IACRA,EAAKA,EAAI,GAAM,EACf5B,IAEJ,OAASA,EAAE,GAAM,EAAM4B,EAAI,GAyF/B1X,EAAOD,QAAQ0b,iBAAoBA,GACnCzb,EAAOD,QAAQsb,kBAAoBA,GACnCrb,EAAOD,QAAQue,aA7PM,SAAStc,EAAGtB,GAC7B,IAAI6d,EAnCU,SAASvc,GACvB,IAGI8X,EAHA7Z,EAAI,EACJsD,EAAI,EACJib,GAAQ,EAGZ,KAAO9H,EAAS1U,EAAE/B,KAAKA,IAGvB,KAFK6Z,EAAgB,KAAT9X,EAAE/B,KACI,KAAT+B,EAAE/B,KAD0CA,IAExC,KAAT+B,EAAE/B,IAAmD,MAAX+B,EAAE/B,EAAE,IAAmD,KAAX+B,EAAE/B,EAAE,GAO1F,KAAOA,EAAI+B,EAAEyB,QAAU+S,EAASxU,EAAE/B,IAAKA,IAAK,CACxC,IAAIM,EAAIyB,EAAE/B,GAAK,GACf,GAAIsD,GAAKqX,KAAYrX,EAAIqX,IAAWra,EAAIsa,GAAWf,GAC/C,OAAO,KACXvW,EAAS,GAAJA,EAAShD,EAAG,EACjBie,GAAQ,OAVZ,IADAve,GAAK,EACEA,EAAI+B,EAAEyB,QAAUkT,EAAU3U,EAAE/B,IAAKA,IACpCsD,EAAS,GAAJA,EAASiW,GAAexX,EAAE/B,IAAK,EACpCue,GAAQ,EAWhB,KAAOve,EAAI+B,EAAEyB,QAAUiT,EAAS1U,EAAE/B,KAAKA,IACvC,OAAIue,GAAUve,IAAM+B,EAAEyB,QAAmB,IAATzB,EAAE/B,GAAkB,KAEzC,CACHyB,EAAkB,GAAdoY,GAAOvW,EAAIA,GACftD,EAAGA,GAMDwe,CAAUzc,GACpB,OAAY,OAARuc,GACA7d,EAAEgb,UAAU6C,EAAI7c,GACT6c,EAAIte,EAAE,IAEbse,EA/DQ,SAASvc,GACrB,IAAI9B,EAAI8B,EAAEyB,OACNib,EAAQ,EACZ,IAAK,IAAIze,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAIyD,EAAI1B,EAAE/B,GACV,IAA2B,IAAvBya,GAAO/W,QAAQD,GAAW,CAC1Bgb,EAAQhb,EACR,OAGR,IAAItC,EAAOuZ,GAAM+D,GACjB,MAAa,MAATtd,EACO,KACDyY,GAAW7X,EAAGZ,GAkDdud,CAAQ3c,GACF,OAARuc,GACA7d,EAAEib,YAAY4C,EAAI7c,GACX6c,EAAIte,EAAE,GAEN,IAmPnBD,EAAOD,QAAQ+a,cAAoBA,GACnC9a,EAAOD,QAAQ0Z,aAAoBA,GACnCzZ,EAAOD,QAAQ8c,SAAoBA,GACnC7c,EAAOD,QAAQ6e,UA3iBG,SAASvI,EAAGsB,GAC1BtB,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAIjE,GAAOQ,EAAGP,KAAMO,EAAGzW,QA2iB9ClB,EAAOD,QAAQ8e,aAziBM,SAASxI,EAAG8B,GAC7B9B,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAIjE,GAAO9P,EAAa8Q,IAyiB/CnY,EAAOD,QAAQ+e,UAtiBG,SAASzI,EAAG6B,EAAQ6G,GAClC1I,EAAE+B,MAAMF,GAAQ8G,QAAQ3I,EAAE+B,MAAM2G,KAsiBpC/e,EAAOD,QAAQkf,SAniBE,SAAS5I,EAAG6B,EAAQgH,GACjC7I,EAAE+B,MAAMF,GAAQ8G,QAAQE,IAmiB5Blf,EAAOD,QAAQkY,YAAoBA,I,6BC7zBnC,MAAM,gBACFjE,GACA,EAAQ,IACN,WACF5I,EAAU,YACV7C,EAAW,kBACXX,EAAiB,cACjB7B,EAAa,aACbY,EAAY,mBACZC,EAAkB,SAClBF,EAAQ,UACRD,EAAS,YACTI,EAAW,YACXC,EAAW,WACXC,EAAU,gBACVb,EAAe,UACf0D,EAAS,aACT8B,EAAY,YACZE,EAAW,SACXE,EAAQ,eACRE,EAAc,WACdG,EAAU,SACVC,EAAQ,gBACRC,EAAe,UACfE,EAAS,aACTI,EAAY,YACZM,EAAW,iBACXE,EAAgB,aAChBC,EAAY,WACZE,EAAU,WACVG,EAAU,cACVI,EAAa,UACbE,EAAS,aACTG,EAAY,aACZE,EAAY,YACZC,EAAW,QACXI,EAAO,SACPC,EAAQ,aACRC,EAAY,aACZC,EAAY,SACZG,EAAQ,UACRC,EAAS,QACTE,EAAO,gBACPC,EAAe,iBACfC,EAAgB,kBAChBC,EAAiB,gBACjBC,EAAe,gBACfE,EAAe,gBACfI,EAAe,gBACfC,EAAe,YACfC,EAAW,eACXE,EAAc,cACdE,EAAa,iBACbC,EAAgB,aAChBC,GAAY,WACZC,GAAU,YACVC,GAAW,WACXE,GAAU,YACVE,GAAW,WACXG,GAAU,aACVK,GAAY,cACZC,GAAa,iBACbI,GAAgB,WAChBE,GAAU,cACVK,GAAa,cACbE,GAAa,eACbC,GAAc,eACdC,GAAc,cACdC,GAAa,aACbC,GAAY,cACZC,GAAa,cACbC,GAAa,aACbE,GAAY,eACZE,GAAc,SACdC,GAAQ,aACRC,GAAY,YACZG,IACA,EAAQ,IACN,gBACFjN,GAAe,aACfpD,GAAY,aACZI,GAAY,aACZC,IACA,EAAQ,GAGNoc,GAAc/T,EAAW,EAGzBgU,GAAmBtc,GAAa,WAGhCuc,GAAoBvc,GAAa,YAEjCwc,GAAiBxc,GAAa,SAI9Byc,GAASzc,GAAa,UACtB0c,GAAa1c,GAAa,cAE1B0b,GAAQ,IAAInb,WAAW,GAE7B,MAAMoc,GACF,cACI5V,KAAKwM,EAAI,KACTxM,KAAK9E,EAAIyZ,GACT3U,KAAKnI,EAAI,GAIjB,MAOMge,GAAY,SAASrJ,EAAGsJ,EAAQC,GAClC,GAAc,IAAVA,IAAgBvR,EAAYgI,GAAI,GAChC,OAAO,EAIX,IAFAvG,EAAYuG,GAELtH,EAASsH,GAAI,IAAI,CACpB,GAAI1D,GAAS0D,GAAI,KAAOvP,EAAa,CACjC,GAAIsJ,GAAaiG,EAAGsJ,GAAS,GAEzB,OADAzQ,EAAQmH,EAAG,GACJ,EACJ,GAAIqJ,GAAUrJ,EAAGsJ,EAAQC,EAAQ,GAKpC,OAJA/O,GAAWwF,GAAI,GACfzG,EAAgByG,EAAG,KACnB5I,EAAW4I,GAAI,GACflK,EAAWkK,EAAG,GACP,EAGfnH,EAAQmH,EAAG,GAGf,OAAO,GAMLwJ,GAAqB,SAASxJ,EAAGyJ,GACnC,IAAI1E,EAAM9N,EAAW+I,GAGrB,GAFApJ,EAAYoJ,EAAGvT,GAAa,KAAMgd,GAClCnT,EAAa0J,EAAGzO,EAAmBwX,IAC/BM,GAAUrJ,EAAG+E,EAAM,EAAG,GAAI,CAC1B,IAAI5a,EAAOgS,GAAa6D,GAAI,GAU5B,OATgB,KAAZ7V,EAAK,IACO,KAAZA,EAAK,IACO,KAAZA,EAAK,KAELwP,EAAeqG,EAAG7V,EAAKgb,SAAS,IAChC3K,GAAWwF,GAAI,IAEnBjK,EAASiK,GAAI,EAAG+E,EAAM,GACtBlM,EAAQmH,EAAG,GACJ,EAGP,OADA5E,GAAW4E,EAAG+E,GACP,GAIT2E,GAAe,SAAS1J,EAAGyJ,GACzBD,GAAmBxJ,EAAGyJ,IACtBxQ,EAAgB+G,EAAGvT,GAAa,iBAAkB0P,GAAa6D,GAAI,IACnExF,GAAWwF,GAAI,IAEa,IAAvByJ,EAAG9V,SAASvG,OACjB6L,EAAgB+G,EAAGvT,GAAa,WAAYgd,EAAG9V,SAAU8V,EAAGtf,MACvDsf,EAAG7V,MAAuB,MAAf6V,EAAG7V,KAAK,GACxB2F,EAAgByG,EAAG,cACdyJ,EAAG7V,MAAuB,KAAf6V,EAAG7V,KAAK,GACxBqF,EAAgB+G,EAAGvT,GAAa,oBAAqBgd,EAAGpV,UAAWoV,EAAG1V,aAEtEwF,EAAgByG,EAAG,MA8CrB2J,GAAQ,SAAS3J,GACnB,IAAIJ,EAAM,gDAAkD/D,GAAemE,GAAI,GAAK,IACpF,MAAM,IAAIxS,MAAMoS,IAGdgK,GAAgB,SAAS5J,EAAG6J,EAAKC,GACnC,IAAIL,EAAK,IAAIlW,EAEb,OAAKwD,EAAaiJ,EAAG,EAAGyJ,IAGxB7S,EAAYoJ,EAAGvT,GAAa,KAAMgd,GAE9Bpd,GAAaod,EAAG9V,SAAUlH,GAAa,YAE3B,MADZod,EAEWE,GAAW/J,EAAGvT,GAAa,iCAAkCgd,EAAGtf,KAAM2f,IAGrE,OAAZL,EAAGtf,OACHsf,EAAGtf,KAAOqf,GAAmBxJ,EAAGyJ,GAAMtN,GAAa6D,GAAI,GAAKvT,GAAa,MAEtEsd,GAAW/J,EAAGvT,GAAa,iCAAkCod,EAAKJ,EAAGtf,KAAM2f,KAbvEC,GAAW/J,EAAGvT,GAAa,yBAA0Bod,EAAKC,IAgBnEE,GAAY,SAAShK,EAAG6J,EAAKI,GAC/B,IAAIC,EAEAA,EADAC,GAAkBnK,EAAG6J,EAAKX,MAAYzY,EAC5B0L,GAAa6D,GAAI,GACtB1D,GAAS0D,EAAG6J,KAAStZ,EAChB9D,GAAa,kBAAkB,GAE/B2d,GAAcpK,EAAG6J,GAE/B,IAAIjK,EAAM3G,EAAgB+G,EAAGvT,GAAa,uBAAwBwd,EAAOC,GACzE,OAAON,GAAc5J,EAAG6J,EAAKjK,IAG3ByK,GAAa,SAASrK,EAAGuJ,GAC3B,IAAIE,EAAK,IAAIlW,EACTwD,EAAaiJ,EAAGuJ,EAAOE,KACvB7S,EAAYoJ,EAAGvT,GAAa,MAAM,GAAOgd,GACrCA,EAAG3V,YAAc,GACjBmF,EAAgB+G,EAAGvT,GAAa,WAAYgd,EAAGpV,UAAWoV,EAAG3V,aAIrE6F,EAAeqG,EAAGvT,GAAa,MAG7Bsd,GAAa,SAAS/J,EAAGiF,KAAQC,GAInC,OAHAmF,GAAWrK,EAAG,GACdlG,EAAiBkG,EAAGiF,EAAKC,GACzBpP,EAAWkK,EAAG,GACP9J,EAAU8J,IAIfsK,GAAkB,SAAStK,EAAGuK,EAAMC,EAAO/K,GAC7C,GAAI8K,EAEA,OADAzR,EAAgBkH,EAAG,GACZ,EACJ,CAEH,IAAIyK,EAASC,EAab,OAdAjR,EAAYuG,GAERP,GACAgL,EAAUhL,EAAEgL,QACZC,GAASjL,EAAEiL,QAEXD,EAAU,UACVC,EAAQ,GAERF,EACAvR,EAAgB+G,EAAGvT,GAAa,UAAW+d,EAAO/d,GAAage,IAE/D9Q,EAAeqG,EAAGvT,GAAage,IACnCtR,EAAgB6G,EAAG0K,GACZ,IA4BTC,GAAoB,SAAS3K,EAAG3U,GAClC,OAAOiL,EAAa0J,EAAGzO,EAAmBlG,IAqBxCuf,GAAiB,SAAS5K,EAAG6K,EAAIZ,GACnC,IAAIve,EAAI2Q,GAAe2D,EAAG6K,GAC1B,OAAU,OAANnf,GACIoL,EAAiBkJ,EAAG6K,IACpBF,GAAkB3K,EAAGiK,GAChBlQ,GAAaiG,GAAI,GAAI,KACtBtU,EAAI,MACRmN,EAAQmH,EAAG,GACJtU,GAGR,MAiBLof,GAAY,SAAS9K,EAAG6J,EAAKkB,GAC/Bf,GAAUhK,EAAG6J,EAAKtN,GAAayD,EAAG+K,KAUhCX,GAAgB,SAASpK,EAAGpW,GAC9B,OAAO2S,GAAayD,EAAG1D,GAAS0D,EAAGpW,KAiBjCohB,GAAoB,SAAShL,EAAG6J,GAClC,IAAIle,EAAImQ,GAAckE,EAAG6J,GAEzB,OADIle,SAA+Bmf,GAAU9K,EAAG6J,EAAKpZ,GAC9C9E,GAGLsf,GAAmBD,GAEnBE,GAAkB,SAASlL,EAAG6J,EAAKsB,GACrC,OAAI7O,GAAS0D,EAAG6J,IAAQ,EACL,OAARsB,EAAe,KAAO1b,GAAgB0b,GACnCH,GAAkBhL,EAAG6J,IAGjCuB,GAAiBF,GASjBG,GAAmB,SAASrL,EAAG6J,GACjC,IAAI3f,EAAI8R,GAAcgE,EAAG6J,GAGzB,OAFU,IAAN3f,GACA4gB,GAAU9K,EAAG6J,EAAKrZ,GACftG,GAOLohB,GAAoB,SAAStL,EAAG6J,GAClC,IAAI3f,EAAI0R,GAAeoE,EAAG6J,GAG1B,OAFU,IAAN3f,GApBS,SAAS8V,EAAG6J,GACrBhS,EAAamI,EAAG6J,GAChBD,GAAc5J,EAAG6J,EAAKpd,GAAa,wCAAwC,IAE3Eqe,GAAU9K,EAAG6J,EAAKrZ,GAiBlB+a,CAASvL,EAAG6J,GACT3f,GAOLshB,GAAoB,SAASC,EAAGC,GAClC,IAAIC,EAASF,EAAEpgB,EAAIqgB,EACnB,GAAID,EAAE/c,EAAEtB,OAASue,EAAQ,CACrB,IAAIC,EAAU/c,KAAKgd,IAAiB,EAAbJ,EAAE/c,EAAEtB,OAAYue,GACnCG,EAAU,IAAI9e,WAAW4e,GAC7BE,EAAQlG,IAAI6F,EAAE/c,GACd+c,EAAE/c,EAAIod,EAEV,OAAOL,EAAE/c,EAAEyW,SAASsG,EAAEpgB,EAAGsgB,IAGvBI,GAAgB,SAAS/L,EAAGyL,GAC9BA,EAAEzL,EAAIA,EACNyL,EAAE/c,EAAIyZ,IAYJ6D,GAAkB,SAASP,EAAG9f,EAAG9B,GACnC,GAAIA,EAAI,EAAG,CACP8B,EAAI8D,GAAgB9D,GACZ6f,GAAkBC,EAAG5hB,GAC3B+b,IAAIja,EAAEwZ,SAAS,EAAGtb,IACpBoiB,GAAaR,EAAG5hB,KAIlBqiB,GAAiB,SAAST,EAAG9f,GAC/BA,EAAI8D,GAAgB9D,GACpBqgB,GAAgBP,EAAG9f,EAAGA,EAAEyB,SAGtB+e,GAAkB,SAASV,GAC7BjS,EAAgBiS,EAAEzL,EAAGyL,EAAE/c,EAAG+c,EAAEpgB,GAE5BogB,EAAEpgB,EAAI,EACNogB,EAAE/c,EAAIyZ,IAQJ8D,GAAe,SAASR,EAAG9f,GAC7B8f,EAAEpgB,GAAKM,GAeLygB,GAAW,SAASpM,EAAG0C,EAAGrX,EAAGnB,GAC/B,OAAOoS,GAAS0D,EAAG3U,IAAM,EAAInB,EAAIwY,EAAE1C,EAAG3U,IAGpCghB,GAAO,SAASrM,EAAG6K,GACrB,IAAIlf,EAAIkf,EAAGyB,OAEX,OADAzB,EAAGyB,OAAS,KACL3gB,GAGL4gB,GAAmB,SAASvM,EAAGqD,EAAMR,EAAM1Y,EAAMY,GACnD,OAAOsN,EAAS2H,EAAGqM,GAAM,CAACC,OAAQjJ,GAAOlZ,EAAMY,IAG7CyhB,GAAkB,SAASxM,EAAGrU,EAAG+f,EAAIrgB,GACvC,OAAOkhB,GAAiBvM,EAAGrU,EAAG+f,EAAIrgB,EAAG,OAGnCohB,GAAkB,SAASzM,EAAGrU,GAChC,OAAO6gB,GAAgBxM,EAAGrU,EAAGA,EAAEyB,OAAQzB,IAOrCwe,GAAoB,SAASnK,EAAG0E,EAAKjR,GACvC,GAAKqD,EAAiBkJ,EAAG0E,GAEpB,CACD/K,EAAeqG,EAAGvM,GAClB,IAAIiZ,EAAK1S,GAAWgG,GAAI,GAKxB,OAJI0M,IAAOrc,EACPwI,EAAQmH,EAAG,GAEXxF,GAAWwF,GAAI,GACZ0M,EARP,OAAOrc,GAYTsc,GAAgB,SAAS3M,EAAG0E,EAAKjR,GAEnC,OADAiR,EAAMrP,EAAa2K,EAAG0E,GAClByF,GAAkBnK,EAAG0E,EAAKjR,KAAWpD,IAGzCwJ,EAAcmG,EAAG0E,GACjBjP,EAASuK,EAAG,EAAG,IAER,IAYL4M,GAAMngB,GAAa,MACnBogB,GAAMpgB,GAAa,MA8DnBqgB,GAAgB,SAASC,EAAKC,EAAQC,GACxC,IAAIrjB,EAAIqjB,IAAe,EACnBC,EAAKF,EAAO5f,OACZvD,EAAIkjB,EAAI3f,OAAS,EAAI8f,EAEzBC,EAAM,KAAOvjB,EAAIC,EAAGD,IAAK,CACrB,IAAK,IAAIwjB,EAAI,EAAGA,EAAIF,EAAIE,IACpB,GAAIL,EAAInjB,EAAEwjB,KAAOJ,EAAOI,GACpB,SAASD,EACjB,OAAOvjB,EAEX,OAAQ,GAqBNyjB,GAAmB,SAASrN,EAAGsN,EAAK9C,GACtC,OAAIlU,EAAa0J,EAAGsN,EAAK9C,KAAW9Z,IAGhCmI,EAAQmH,EAAG,GACXsN,EAAMjY,EAAa2K,EAAGsN,GACtB/U,EAAayH,GACbnG,EAAcmG,GAAI,GAClBnF,GAAamF,EAAGsN,EAAK9C,IACd,IAST+C,GAAgB,SAASvN,EAAGnW,EAAG2jB,GACjCC,GAAgBzN,EAAGwN,EAAK/gB,GAAa,qBAAqB,IAC1D,IAAK,IAAIihB,KAAO7jB,EAAG,CACf,IAAK,IAAID,EAAI,EAAGA,EAAI4jB,EAAK5jB,IACrBiQ,EAAcmG,GAAIwN,GACtBzU,EAAiBiH,EAAGnW,EAAE6jB,GAAMF,GAC5B3S,GAAamF,IAAKwN,EAAM,GAAI/gB,GAAaihB,IAE7C7U,EAAQmH,EAAGwN,IAUTC,GAAkB,SAASzN,EAAG2N,EAAO/N,GAClCjK,EAAeqK,EAAG2N,KACf/N,EACAmK,GAAW/J,EAAGvT,GAAa,uBAAwBmT,GAEnDmK,GAAW/J,EAAGvT,GAAa,kBAAkB,MAiDnDmhB,GAAU,SAAS5N,EAAGpM,EAAMia,EAAYC,GAC1C,IAAIC,EAAOD,EAAMrD,QACbuD,EAAW7R,GAAa6D,EAAG6N,GAAY1I,SAAS,GAGpD,OAFAlM,EAAgB+G,EAAGvT,GAAa,oBAAqBA,GAAamH,GAAOoa,EAAUvhB,GAAashB,IAChGvT,GAAWwF,EAAG6N,GACP/E,IAGX,IAAImF,GAEJ,MAAMC,GAAW,CAAC,IAAM,IAAM,KAsBxBC,GAAc,SAASC,GACzB,IAAInkB,EAtBQ,SAASmkB,GAErB,IAAInkB,EADJmkB,EAAG/iB,EAAI,EAEP,IAAIK,EAAI,EACR,EAAG,CAEC,GADAzB,EAAIgkB,GAAKG,GACC,OAANnkB,GAAcA,IAAMikB,GAASxiB,GAAI,OAAOzB,EAC5CyB,IACA0iB,EAAG/K,KAAK+K,EAAG/iB,KAAOpB,QACbyB,EAAIwiB,GAAS9gB,QAEtB,OADAghB,EAAG/iB,EAAI,EACA4iB,GAAKG,GAWJC,CAAQD,GAChB,GAAU,KAANnkB,EAAkC,CAClC,GACIA,EAAIgkB,GAAKG,SACJnkB,GAAW,KAANA,GAEd,MAAO,CACHqkB,SAAS,EACTrkB,EAAGgkB,GAAKG,IAGZ,MAAO,CACHE,SAAS,EACTrkB,EAAGA,IAKf,IAAIskB,GAEgC,CAChC,MAAMC,EACF,cACIhb,KAAKnI,EAAIqI,IACTF,KAAKkP,EAAI,KACTlP,KAAK6P,KAAO,IAAIrW,WAAW,MAC3BwG,KAAKib,IAAM,EACXjb,KAAKkb,SAAM,GAInB,MAAMC,EAAO,SAAS3O,EAAG6K,GACrB,IAAIuD,EAAKvD,EAET,GAAa,OAATuD,EAAG1L,GAAc0L,EAAG/iB,EAAI,EAAG,CAC3B,IAAIujB,EAAQR,EAAG/iB,EAGf,OAFA+iB,EAAG/iB,EAAI,EACP+iB,EAAG1L,EAAI0L,EAAG1L,EAAEyC,SAASiJ,EAAGK,KACjBL,EAAG/K,KAAK8B,SAAS,EAAGyJ,GAG/B,IAAIlM,EAAI0L,EAAG1L,EAEX,OADA0L,EAAG1L,EAAI,KACAA,GAGXuL,GAAO,SAASG,GACZ,OAAOA,EAAGK,IAAML,EAAG1L,EAAEtV,OAASghB,EAAG1L,EAAE0L,EAAGK,OAAS,MAGnDF,GAAiB,SAASvO,EAAGgO,EAAUjjB,GACnC,IAAIqjB,EAAK,IAAII,EACTX,EAAa5W,EAAW+I,GAAK,EACjC,GAAiB,OAAbgO,EACA,MAAM,IAAIxgB,MAAM,mCACb,CACHyL,EAAgB+G,EAAGvT,GAAa,OAAQuhB,GACxC,IAAIa,EAAOniB,GAAashB,GACpBc,EAAM,IAAIC,eAUd,GATAD,EAAIE,KAAK,MAAOH,GAAM,GAKA,oBAAXI,SACPH,EAAII,aAAe,eAEvBJ,EAAIK,SACAL,EAAIM,QAAU,KAAON,EAAIM,QAAU,KAQnC,OADAhB,EAAGM,IAAMI,EAAIM,OACNxB,GAAQ5N,EAAG,OAAQ6N,EAAY,CAAEpD,QAAS,GAAGqE,EAAIM,WAAWN,EAAIO,eAP3C,iBAAjBP,EAAIQ,SACXlB,EAAG1L,EAAIjW,GAAaqiB,EAAIQ,UAExBlB,EAAG1L,EAAI,IAAI1V,WAAW8hB,EAAIQ,UAOtC,IAAIC,EAAMpB,GAAYC,GAElBmB,EAAItlB,IAAMyF,EAAc,IAAMse,GAEvBuB,EAAIjB,UACXF,EAAG/K,KAAK+K,EAAG/iB,KAAO,IAER,OAAVkkB,EAAItlB,IACJmkB,EAAG/K,KAAK+K,EAAG/iB,KAAOkkB,EAAItlB,GAC1B,IAAImlB,EAAS/W,EAAS2H,EAAG2O,EAAMP,EAAIjS,GAAa6D,GAAI,GAAIjV,GACpDykB,EAAapB,EAAGM,IACpB,OAAIc,GACApU,GAAW4E,EAAG6N,GACPD,GAAQ5N,EAAG,OAAQ6N,EAAY2B,KAE1ChV,GAAWwF,EAAG6N,GACPuB,IAmFf,MAAMK,GAAgB,SAASzP,EAAGgO,GAC9B,OAAOO,GAAevO,EAAGgO,EAAU,OAyBjC0B,GAAqB,SAAS1P,EAAG2P,EAAKjE,GACxC,IAAIre,EAAIqP,GAAYsD,GA74BD,IA84Bf0L,GACA3B,GAAW/J,EAAGvT,GAAa,qDAC3BY,GAAKqP,GAAY,MACjBqN,GAAW/J,EAAGvT,GAAa,8BACtBY,IAAMsiB,GACX5F,GAAW/J,EAAGvT,GAAa,yDAA0DkjB,EAAKtiB,IAQlG1D,EAAOD,QAAQof,YAAuBA,GACtCnf,EAAOD,QAAQuf,eAAuBA,GACtCtf,EAAOD,QAAQqf,iBAAuBA,GACtCpf,EAAOD,QAAQkmB,WAlSK,EAmSpBjmB,EAAOD,QAAQsf,kBAAuBA,GACtCrf,EAAOD,QAAQmmB,YAnSI,EAoSnBlmB,EAAOD,QAAQ0f,YAAuBA,GACtCzf,EAAOD,QAAQomB,aA7gBM,SAASrE,EAAGxhB,GAC7BuhB,GAAkBC,EAAG,GACrBA,EAAE/c,EAAE+c,EAAEpgB,KAAOpB,GA4gBjBN,EAAOD,QAAQsiB,gBAAuBA,GACtCriB,EAAOD,QAAQuiB,aAAuBA,GACtCtiB,EAAOD,QAAQwiB,eAAuBA,GACtCviB,EAAOD,QAAQqmB,cAngBO,SAAStE,GAC3B,IAAIzL,EAAIyL,EAAEzL,EACNrU,EAAIwQ,GAAa6D,GAAI,GACzBgM,GAAgBP,EAAG9f,EAAGA,EAAEyB,QACxByL,EAAQmH,EAAG,IAggBfrW,EAAOD,QAAQsmB,cA3nBO,SAAShQ,EAAGiQ,EAAMpG,EAAKC,GACpCmG,GAAMrG,GAAc5J,EAAG6J,EAAKC,IA2nBrCngB,EAAOD,QAAQkgB,cAAuBA,GACtCjgB,EAAOD,QAAQqiB,cAAuBA,GACtCpiB,EAAOD,QAAQwmB,kBAnjBW,SAASlQ,EAAGyL,EAAGC,GAErC,OADAK,GAAc/L,EAAGyL,GACVD,GAAkBC,EAAGC,IAkjBhC/hB,EAAOD,QAAQijB,cAAuBA,GACtChjB,EAAOD,QAAQymB,cA5nBO,SAASnQ,EAAG6J,GAC1BvN,GAAS0D,EAAG6J,KAASzZ,GACrBwZ,GAAc5J,EAAG6J,EAAKpd,GAAa,kBAAkB,KA2nB7D9C,EAAOD,QAAQ4hB,kBAAuBA,GACtC3hB,EAAOD,QAAQshB,kBAAuBA,GACtCrhB,EAAOD,QAAQ2hB,iBAAuBA,GACtC1hB,EAAOD,QAAQ0mB,iBA3pBU,SAASpQ,EAAG6J,EAAKsB,EAAKkF,GAC3C,IAAIlmB,EAAe,OAARghB,EAAeC,GAAepL,EAAG6J,EAAKsB,GAAOF,GAAiBjL,EAAG6J,GAC5E,IAAK,IAAIjgB,EAAI,EAAGymB,EAAIzmB,GAAIA,IACpB,GAAIyC,GAAagkB,EAAIzmB,GAAIO,GACrB,OAAOP,EACf,OAAOggB,GAAc5J,EAAG6J,EAAK5Q,EAAgB+G,EAAGvT,GAAa,uBAAwBtC,KAupBzFR,EAAOD,QAAQ+jB,gBAAuBA,GACtC9jB,EAAOD,QAAQuhB,iBAAuBA,GACtCthB,EAAOD,QAAQ4mB,eA9nBQ,SAAStQ,EAAG6J,EAAK/e,GAChCwR,GAAS0D,EAAG6J,KAAS/e,GACrBggB,GAAU9K,EAAG6J,EAAK/e,IA6nB1BnB,EAAOD,QAAQ6mB,gBArqBS,SAASvQ,EAAG6K,EAAIZ,GACpC,IAAIve,EAAIkf,GAAe5K,EAAG6K,EAAIZ,GAE9B,OADU,OAANve,GAAYse,GAAUhK,EAAG6K,EAAIZ,GAC1Bve,GAmqBX/B,EAAOD,QAAQ8mB,kBA9BW,SAASxQ,GAC/B0P,GAAmB1P,EAAGnQ,EAx5BH,KAs7BvBlG,EAAOD,QAAQgmB,mBAAuBA,GACtC/lB,EAAOD,QAAQ+mB,YAjEK,SAASzQ,EAAGgO,GAC5B,OAAQyB,GAAczP,EAAGgO,IAAarV,EAAUqH,EAAG,EAAG9N,EAAa,IAiEvEvI,EAAOD,QAAQgnB,cAxfO,SAAS1Q,EAAGrU,GAC9B,OAAQ8gB,GAAgBzM,EAAGrU,IAAMgN,EAAUqH,EAAG,EAAG9N,EAAa,IAwflEvI,EAAOD,QAAQqgB,WAAuBA,GACtCpgB,EAAOD,QAAQinB,gBAtuBS,SAAS3Q,EAAGP,GAChC,IAAI7L,EAAM2W,EACV,GAAU,OAAN9K,EAIA,OAHA3G,EAAgBkH,EAAG,GACnBzG,EAAgByG,EAAG,QACnB7G,EAAgB6G,EAAG,GACZ,EACJ,GAAIP,EAAE2P,OACTxb,EAAO,OACP2W,EAAO9K,EAAE2P,WACN,KAAI3P,EAAEmR,OAKT,OAAOtG,GAAgBtK,EAAG,EAAG,KAAMP,GAJnC7L,EAAO,SACP2W,EAAO9K,EAAEmR,OAQb,OAHAnX,EAAYuG,GACZzG,EAAgByG,EAAGpM,GACnBuF,EAAgB6G,EAAGuK,GACZ,GAmtBX5gB,EAAOD,QAAQ4gB,gBAAuBA,GACtC3gB,EAAOD,QAAQygB,kBAAuBA,GACtCxgB,EAAOD,QAAQihB,kBAAuBA,GACtChhB,EAAOD,QAAQ2jB,iBAAuBA,GACtC1jB,EAAOD,QAAQmnB,UA5YG,SAAS7Q,EAAGrU,EAAGD,EAAGhB,GAChC,IAAIomB,EACApiB,EAAI,IAAI0a,GAEZ,IADA2C,GAAc/L,EAAGtR,IACToiB,EAAOhE,GAAcnhB,EAAGD,KAAO,GACnCsgB,GAAgBtd,EAAG/C,EAAGmlB,GACtB5E,GAAexd,EAAGhE,GAClBiB,EAAIA,EAAEwZ,SAAS2L,EAAOplB,EAAE0B,QAI5B,OAFA8e,GAAexd,EAAG/C,GAClBwgB,GAAgBzd,GACTyN,GAAa6D,GAAI,IAkY5BrW,EAAOD,QAAQqnB,SAneE,SAAS/Q,EAAGsN,GACzBlV,EAAQ4H,EAAGsN,GACX,IAAIzjB,EAAI+R,GAAeoE,GAAI,GAI3B,OAHU,IAANnW,GACAkgB,GAAW/J,EAAGvT,GAAa,mCAAmC,IAClEoM,EAAQmH,EAAG,GACJnW,GA8dXF,EAAOD,QAAQ8iB,gBAAuBA,GACtC7iB,EAAOD,QAAQ6iB,iBAAuBA,GACtC5iB,EAAOD,QAAQ+lB,cAAuBA,GACtC9lB,EAAOD,QAAQ6kB,eAAuBA,GACtC5kB,EAAOD,QAAQ+iB,gBAAuBA,GACtC9iB,EAAOD,QAAQsnB,YAhVK,SAAShR,EAAGnW,GAC5BmM,EAAgBgK,GAChBuN,GAAcvN,EAAGnW,EAAG,IA+UxBF,EAAOD,QAAQunB,iBArVU,SAASjR,GAC9BhK,EAAgBgK,IAqVpBrW,EAAOD,QAAQwnB,kBAztBW,SAASlR,EAAGiK,GAClC,OAAIU,GAAkB3K,EAAGiK,KAAW5Z,EACzB,GACXwI,EAAQmH,EAAG,GACXhK,EAAgBgK,EAAG,EAAG,GACtBrG,EAAeqG,EAAGiK,GAClBpP,GAAamF,GAAI,EAAGkJ,IACpBrP,EAAcmG,GAAI,GAClBnF,GAAamF,EAAGzO,EAAmB0Y,GAC5B,IAitBXtgB,EAAOD,QAAQynB,cAxqBO,WAClB,IAAInR,EAAI1H,IAER,OADI0H,GAAGzK,EAAYyK,EAAG2J,IACf3J,GAsqBXrW,EAAOD,QAAQ0iB,SAAuBA,GACtCziB,EAAOD,QAAQ0nB,gBAxmBS,SAASpR,EAAG6J,EAAKsB,GACrC,OAAOiB,GAASpM,EAAGsL,GAAmBzB,EAAKsB,IAwmB/CxhB,EAAOD,QAAQwhB,gBAAuBA,GACtCvhB,EAAOD,QAAQ2nB,eArnBQ,SAASrR,EAAG6J,EAAKsB,GACpC,OAAOiB,GAASpM,EAAGqL,GAAkBxB,EAAKsB,IAqnB9CxhB,EAAOD,QAAQ0hB,eAAuBA,GACtCzhB,EAAOD,QAAQ4nB,gBAnlBS,SAAS7F,GAC7B,OAAOD,GAAkBC,EAAG9N,IAmlBhChU,EAAOD,QAAQ8hB,kBAAuBA,GACtC7hB,EAAOD,QAAQyiB,gBAAuBA,GACtCxiB,EAAOD,QAAQ6nB,oBApjBa,SAAS9F,EAAGC,GACpCO,GAAaR,EAAGC,GAChBS,GAAgBV,IAmjBpB9hB,EAAOD,QAAQ8nB,SApVE,SAASxR,EAAGlV,GACzB,IAAI2mB,EACJ,OAAI/Z,EAAUsI,GAAI,IACdnH,EAAQmH,EAAG,IALA,IAQflV,EAAIuK,EAAa2K,EAAGlV,GACpBmP,GAAY+F,EAAGlV,EAAG,GAClB2mB,EAAM9V,GAAcqE,GAAI,GACxBnH,EAAQmH,EAAG,GACC,IAARyR,GACAxX,GAAY+F,EAAGlV,EAAG2mB,GAClBpX,GAAY2F,EAAGlV,EAAG,IAGlB2mB,EAAMtX,GAAW6F,EAAGlV,GAAK,EAC7BuP,GAAY2F,EAAGlV,EAAG2mB,GACXA,IAoUX9nB,EAAOD,QAAQgoB,cAjcO,SAAS1R,EAAG2R,EAASC,EAAOC,GAC9CxE,GAAiBrN,EAAGzO,EAAmBwX,IACvCzS,EAAa0J,GAAI,EAAG2R,GACflW,GAAcuE,GAAI,KACnBnH,EAAQmH,EAAG,GACXhH,EAAkBgH,EAAG4R,GACrBjY,EAAeqG,EAAG2R,GAClBlc,EAASuK,EAAG,EAAG,GACfnG,EAAcmG,GAAI,GAClBnF,GAAamF,GAAI,EAAG2R,IAExBnX,GAAWwF,GAAI,GACX6R,IACAhY,EAAcmG,GAAI,GAClBlF,GAAckF,EAAG2R,KAobzBhoB,EAAOD,QAAQ6jB,cAAuBA,GACtC5jB,EAAOD,QAAQooB,kBA1tBW,SAAS9R,EAAGiK,GAClCU,GAAkB3K,EAAGiK,GACrB/O,GAAiB8E,GAAI,IAytBzBrW,EAAOD,QAAQkhB,eAAuBA,GACtCjhB,EAAOD,QAAQqoB,eAhfQ,SAAS/R,EAAGsN,GAC/B,GAAIX,GAAc3M,EAAGsN,EAAKnE,IACjBpR,EAAaiI,GAAI,IAClB+J,GAAW/J,EAAGvT,GAAa,0CAC5B,CAEH,OADQ6P,GAAS0D,EAAGsN,IAEhB,KAAK9c,EACGgH,EAAcwI,EAAGsN,GACjBrU,EAAgB+G,EAAG4M,GAAKjR,GAAcqE,EAAGsN,IAEzCrU,EAAgB+G,EAAG6M,GAAK9Q,GAAaiE,EAAGsN,IAC5C,MAEJ,KAAK7c,EACDoJ,EAAcmG,EAAGsN,GACjB,MACJ,KAAKhd,EACDiJ,EAAgByG,EAAIvE,GAAcuE,EAAGsN,GAAO,OAAS,SACrD,MACJ,KAAKjd,EACDkJ,EAAgByG,EAAG,OACnB,MACJ,QAAS,CACL,IAAI0M,EAAKvC,GAAkBnK,EAAGsN,EAAKpE,IAC/B8I,EAAOtF,IAAOjc,EAAc0L,GAAa6D,GAAI,GAAKoK,GAAcpK,EAAGsN,GACvErU,EAAgB+G,EAAGvT,GAAa,UAAWulB,EAAM/V,GAAc+D,EAAGsN,IAC9DZ,IAAOrc,GACPmK,GAAWwF,GAAI,GACnB,QAKZ,OAAOlE,GAAckE,GAAI,IA+c7BrW,EAAOD,QAAQuoB,eAn3BQ,SAASjS,EAAGkS,EAAItS,EAAK2J,GACxC,IAAIE,EAAK,IAAIlW,EACTwR,EAAM9N,EAAW+I,GACjBmS,EAlBU,SAASnS,GACvB,IAAIyJ,EAAK,IAAIlW,EACT6e,EAAK,EACLC,EAAK,EAET,KAAOtb,EAAaiJ,EAAGqS,EAAI5I,IAAO2I,EAAKC,EAAIA,GAAM,EAEjD,KAAOD,EAAKC,GAAI,CACZ,IAAIroB,EAAI6E,KAAKuP,OAAOgU,EAAKC,GAAI,GACzBtb,EAAaiJ,EAAGhW,EAAGyf,GAAK2I,EAAKpoB,EAAI,EAChCqoB,EAAKroB,EAEd,OAAOqoB,EAAK,EAMDC,CAAUJ,GACjB7K,EAAK8K,EAAO5I,EAAQgJ,GA3FZ,IA2F2C,EAKvD,IAJI3S,GACA3G,EAAgB+G,EAAGvT,GAAa,QAASmT,GAC7C6N,GAAgBzN,EAAG,GAAI,MACvBzG,EAAgByG,EAAG,oBACZjJ,EAAamb,EAAI3I,IAASE,IAChB,GAATpC,KACA9N,EAAgByG,EAAG,WACnBuJ,EAAQ4I,EAlGJ,GAkGqB,IAEzBvb,EAAYsb,EAAIzlB,GAAa,QAAQ,GAAOgd,GAC5CxQ,EAAgB+G,EAAGvT,GAAa,WAAYgd,EAAGpV,WAC3CoV,EAAG3V,YAAc,GACjByF,EAAgByG,EAAMyJ,EAAG3V,YAAN,KACvByF,EAAgByG,EAAG,QACnB0J,GAAa1J,EAAGyJ,GACZA,EAAGrV,YACHmF,EAAgByG,EAAG,yBACvBlK,EAAWkK,EAAG/I,EAAW+I,GAAK+E,IAGtCjP,EAAWkK,EAAG/I,EAAW+I,GAAK+E,IA21BlCpb,EAAOD,QAAQ0gB,cAAuBA,GACtCzgB,EAAOD,QAAQ8oB,WAvUI,SAASxS,EAAGlV,EAAG2mB,GAC1BA,GAAO,IACP3mB,EAAIuK,EAAa2K,EAAGlV,GACpBmP,GAAY+F,EAAGlV,EAAG,GAClBuP,GAAY2F,EAAGlV,EAAG2mB,GAClBtY,EAAgB6G,EAAGyR,GACnBpX,GAAY2F,EAAGlV,EAAG,KAkU1BnB,EAAOD,QAAQ2gB,WAAuBA,GACtC1gB,EAAOD,QAAQ+oB,qBAnGc,WACzB,IAAK,IAAI7oB,EAAE,EAAGA,EAAE8D,UAAUN,OAAQxD,IAAK,CACnC,IAAIsD,EAAIQ,UAAU9D,GAGd,EAAG,CAGC,IAAIc,EAAI,uBAAuBsZ,KAAK9W,GACpCwlB,QAAQ5E,MAAMpjB,EAAE,IAChBwC,EAAIxC,EAAE,SACK,KAANwC,M,6BCr+BrB,MAAM,aACFsE,EAAY,YACZG,EAAW,iBACXC,EAAgB,aAChBC,EAAY,aACZE,EAAY,YACZC,EAAW,aACXC,EAAY,YACZC,EAAW,cACXxC,EACAS,gBAAgB,SACZkB,EAAQ,SACRD,EAAQ,SACRD,EAAQ,SACRd,GAEJmE,eAAe,WACXK,EAAU,WACVE,EAAU,WACVJ,EAAU,cACVC,EAAa,OACbH,EAAM,UACNC,GACH,UACDnB,EAAS,kBACTjH,EAAiB,aACjBG,GACA,EAAQ,GACNwI,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IACnByd,EAAW,EAAQ,KACnB,UACFhT,EAAS,WACTD,EAAU,eACVG,GACA,EAAQ,GACN+S,EAAW,EAAQ,GACnBC,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IACnB1d,EAAW,EAAQ,KACnB,gBAAE2d,GAAoB,EAAQ,IAC9BpS,EAAW,EAAQ,KACnB,cAAErP,GAAkB,EAAQ,GAC5B0hB,EAAW,EAAQ,IACnBtS,EAAW,EAAQ,KACnB,QAAEuS,GAAY,EAAQ,IAEtBC,EAAa,SAASlT,EAAGmT,GAC3B,GAAInT,EAAE+E,IAAMoO,EACR,KAAOnT,EAAE+E,IAAMoO,GACXnT,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,WAEpD,KAAO2P,EAAE+E,IAAMoO,UACJnT,EAAE+B,QAAQ/B,EAAE+E,MAIzBqO,EAAc,SAASpT,EAAGqT,EAASC,GACrC,IAAIC,EAAcvT,EAAE+E,IAGpB,KAAO/E,EAAE+E,IAAMuO,EAAS,GACpBtT,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,MAEpD,OAAQgjB,GACJ,KAAKxe,EACD+d,EAAQhR,YAAY5B,EAAGsT,EAAQP,EAAgB/S,EAAG,sBAClD,MAEJ,KAAKjL,EACD6d,EAAQhR,YAAY5B,EAAGsT,EAAQP,EAAgB/S,EAAG,4BAClD,MAEJ,QACI4S,EAAQnK,UAAUzI,EAAGsT,EAAQC,EAAc,GAInD,KAAOvT,EAAE+E,IAAMuO,EAAS,UACbtT,EAAE+B,QAAQ/B,EAAE+E,MAGrByO,EAAiBliB,EAAgB,IAEjCmiB,EAAoB,SAASzT,EAAG4L,GAClClM,EAAWkM,GAAWta,GAAiBsa,GAAW4H,GAClD9T,EAAWM,EAAE0T,YAAc1T,EAAE+B,MAAM3U,OAASgI,EAAOue,aACnD3T,EAAE+B,MAAM3U,OAASwe,EACjB5L,EAAE0T,WAAa9H,EAAUxW,EAAOue,aAG9BC,EAAiB,SAAS5T,EAAG3U,GAC/B,IAAIwX,EAAO7C,EAAE+B,MAAM3U,OACnB,GAAIyV,EAAOvR,EACPuiB,GAAW7T,EAAGjL,OACb,CACD,IAAI+e,EAAS9T,EAAE+E,IAAM1Z,EAAI+J,EAAOue,YAC5B/H,EAAU,EAAI/I,EACd+I,EAAUta,IAAesa,EAAUta,GACnCsa,EAAUkI,IAAQlI,EAAUkI,GAC5BlI,EAAUta,GACVmiB,EAAkBzT,EAAGwT,GACrBte,EAAO2Q,cAAc7F,EAAGvT,EAAa,kBAAkB,KAGvDgnB,EAAkBzT,EAAG4L,KAI3B9F,EAAkB,SAAS9F,EAAG3U,GAC5B2U,EAAE0T,WAAa1T,EAAE+E,KAAO1Z,GACxBuoB,EAAe5T,EAAG3U,IAYpB0oB,EAAmB,SAAS/T,GAC9B,IAAIgU,EAVW,SAAShU,GACxB,IAAIiU,EAAMjU,EAAE+E,IACZ,IAAK,IAAImP,EAAKlU,EAAEkU,GAAW,OAAPA,EAAaA,EAAKA,EAAGC,SACjCF,EAAMC,EAAGnP,MAAKkP,EAAMC,EAAGnP,KAG/B,OADArF,EAAWuU,GAAOjU,EAAE0T,YACbO,EAAM,EAIDG,CAAWpU,GACnBqU,EAAWL,EAAQnlB,KAAKuP,MAAM4V,EAAQ,GAAK,EAAE5e,EAAOue,YACpDU,EAAW/iB,IACX+iB,EAAW/iB,GACX0O,EAAE+B,MAAM3U,OAASkE,GACjB8D,EAAOkf,YAAYtU,GAGnBgU,GAAU1iB,EAAgB8D,EAAOue,aAAgBU,EAAWrU,EAAE+B,MAAM3U,QACpEqmB,EAAkBzT,EAAGqU,IAevBE,EAAe,SAASvU,EAAGwU,EAAKC,GAClC,IAAIC,EAAO1U,EAAE+B,MAAMyS,GAEnB,OAAOE,EAAK3T,MACR,KAAK1P,EACL,KAAKD,EAAU,CACX,IAAIsR,EAAIgS,EAAK3T,OAAS1P,EAAWqjB,EAAK7pB,MAAM6X,EAAIgS,EAAK7pB,MAErDib,EAAgB9F,EAAG/N,GACnB,IAAIiiB,EAAK9e,EAAOuf,cAAc3U,GAC9BkU,EAAGU,QAAUJ,EACbN,EAAGO,SAAWA,EACdP,EAAGQ,KAAOA,EACVR,EAAGnP,IAAM/E,EAAE+E,IAAM9S,EACjByN,EAAWwU,EAAGnP,KAAO/E,EAAE0T,YACvBQ,EAAGW,WAAa,EACZ7U,EAAE8U,SAAWjjB,GACbkjB,EAAU/U,EAAGxO,GAAe,GAChC,IAAInG,EAAIqX,EAAE1C,GACV,GAAiB,iBAAN3U,GAAkBA,EAAI,IAAQ,EAAFA,KAASA,EAC5C,MAAMmC,MAAM,4DAKhB,OAJAyH,EAAK+f,gBAAgBhV,EAAG3U,GAExB4pB,EAAajV,EAAGkU,EAAIlU,EAAE+E,IAAM1Z,EAAGA,IAExB,EAEX,KAAK8F,EAAU,CACX,IAAI+jB,EACAxpB,EAAIgpB,EAAK7pB,MAAMa,EACfL,EAAI2U,EAAE+E,IAAMyP,EAAM,EAClBW,EAAQzpB,EAAE0pB,aAEd,GADAtP,EAAgB9F,EAAGmV,GACfzpB,EAAE2pB,UACFH,EAAOI,EAAetV,EAAGtU,EAAGL,OACzB,CACH,KAAOA,EAAIK,EAAE6pB,UAAWlqB,IACpB2U,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,MACpD6kB,EAAOV,EAAM,EAGjB,IAAIN,EAAK9e,EAAOuf,cAAc3U,GAY9B,OAXAkU,EAAGU,QAAUJ,EACbN,EAAGO,SAAWA,EACdP,EAAGQ,KAAOA,EACVR,EAAGsB,OAASN,EACZhB,EAAGnP,IAAMmQ,EAAOC,EAChBjC,EAAWlT,EAAGkU,EAAGnP,KACjBmP,EAAGuB,OAAS/pB,EAAEgqB,KACdxB,EAAGyB,UAAY,EACfzB,EAAGW,WAAazf,EAAOwgB,SACnB5V,EAAE8U,SAAWjjB,GACbgkB,EAAS7V,EAAGkU,IACT,EAEX,QAGI,OAFApO,EAAgB9F,EAAG,GACnB8V,GAAU9V,EAAGwU,EAAKE,GACXH,EAAavU,EAAGwU,EAAKC,KAIlCQ,EAAe,SAASjV,EAAGkU,EAAI6B,EAAaC,GAC9C,IAAIC,EAAS/B,EAAGO,SAEZzU,EAAE8U,UAAY9iB,EAAcD,KACxBiO,EAAE8U,SAAW9iB,GACb+iB,EAAU/U,EAAGrO,GAAc,GAC/BqO,EAAEkW,MAAQhC,EAAGC,SAASwB,WAG1B,IAAI1O,EAAMiN,EAAGU,QAGb,OAFA5U,EAAEkU,GAAKA,EAAGC,SACVnU,EAAEkU,GAAGiC,KAAO,KACLC,EAAYpW,EAAG+V,EAAa9O,EAAK+O,EAAMC,IAG5CG,EAAc,SAASpW,EAAG+V,EAAa9O,EAAK+O,EAAMC,GACpD,OAAQA,GACJ,KAAK,EACD,MACJ,KAAK,EACY,IAATD,EACAhW,EAAE+B,MAAMkF,GAAKoP,cAEbzD,EAAQnK,UAAUzI,EAAGiH,EAAK8O,GAE9B,MAEJ,KAAK7jB,EACD,IAAK,IAAItI,EAAI,EAAGA,EAAIosB,EAAMpsB,IACtBgpB,EAAQnK,UAAUzI,EAAGiH,EAAMrd,EAAGmsB,EAAcnsB,GAChD,IAAK,IAAIA,EAAEoW,EAAE+E,IAAKnb,GAAIqd,EAAM+O,EAAOpsB,WACxBoW,EAAE+B,MAAMnY,GAEnB,OADAoW,EAAE+E,IAAMkC,EAAM+O,GACP,EAEX,QAAS,CACL,IAAIpsB,EACJ,GAAIqsB,GAAUD,EACV,IAAKpsB,EAAI,EAAGA,EAAIqsB,EAAQrsB,IACpBgpB,EAAQnK,UAAUzI,EAAGiH,EAAMrd,EAAGmsB,EAAcnsB,OAC7C,CACH,IAAKA,EAAI,EAAGA,EAAIosB,EAAMpsB,IAClBgpB,EAAQnK,UAAUzI,EAAGiH,EAAMrd,EAAGmsB,EAAcnsB,GAChD,KAAOA,EAAIqsB,EAAQrsB,IACXqd,EAAIrd,GAAKoW,EAAE+E,IACX/E,EAAE+B,MAAMkF,EAAMrd,GAAK,IAAIgpB,EAAQ9R,OAAOzQ,EAAU,MAEhD2P,EAAE+B,MAAMkF,EAAMrd,GAAGysB,cAG7B,OAGR,IAAIlD,EAASlM,EAAMgP,EACnB,IAAK,IAAIrsB,EAAEoW,EAAE+E,IAAKnb,GAAGupB,EAAQvpB,WAClBoW,EAAE+B,MAAMnY,GAEnB,OADAoW,EAAE+E,IAAMoO,GACD,GAQL4B,EAAY,SAAS/U,EAAGvM,EAAO6iB,GACjC,IAAIC,EAAOvW,EAAEuW,KACb,GAAIA,GAAQvW,EAAEwW,UAAW,CACrB,IAAItC,EAAKlU,EAAEkU,GACPnP,EAAM/E,EAAE+E,IACR0R,EAASvC,EAAGnP,IACZ0E,EAAK,IAAIlW,EACbkW,EAAGhW,MAAQA,EACXgW,EAAG3V,YAAcwiB,EACjB7M,EAAGnV,KAAO4f,EACVpO,EAAgB9F,EAAG/N,GACnBiiB,EAAGnP,IAAM/E,EAAE+E,IAAM9S,EACjByN,EAAWwU,EAAGnP,KAAO/E,EAAE0T,YACvB1T,EAAEwW,UAAY,EACdtC,EAAGW,YAAczf,EAAOshB,YACxBH,EAAKvW,EAAGyJ,GACR/J,GAAYM,EAAEwW,WACdxW,EAAEwW,UAAY,EACdtC,EAAGnP,IAAM0R,EACTvD,EAAWlT,EAAG+E,GACdmP,EAAGW,aAAezf,EAAOshB,cAI3Bb,EAAW,SAAS7V,EAAGkU,GACzB,IAAIqC,EAAO/kB,EACX0iB,EAAGyB,YACEzB,EAAGC,SAASU,WAAazf,EAAOwgB,UACnC1B,EAAGC,SAASsB,OAAOvB,EAAGC,SAASwB,UAAY,GAAGgB,QAAU9D,EAAS+D,SAASC,cACxE3C,EAAGW,YAAczf,EAAO0hB,UACxBP,EAAO3kB,GAEXmjB,EAAU/U,EAAGuW,GAAO,GACpBrC,EAAGyB,aAGDL,EAAiB,SAAStV,EAAGtU,EAAGqrB,GAClC,IAKIntB,EALAotB,EAAWtrB,EAAE6pB,UAEb0B,EAAQjX,EAAE+E,IAAMgS,EAChB7B,EAAOlV,EAAE+E,IAGb,IAAKnb,EAAI,EAAGA,EAAIotB,GAAYptB,EAAImtB,EAAQntB,IACpCgpB,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAMkV,EAAQrtB,IACrCoW,EAAE+B,MAAMkV,EAAQrtB,GAAGysB,cAGvB,KAAOzsB,EAAIotB,EAAUptB,IACjBoW,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,MAEpD,OAAO6kB,GAGLY,GAAY,SAAS9V,EAAGwU,EAAKE,GAC/B,IAAIwC,EAAKvW,EAAIwW,gBAAgBnX,EAAG0U,EAAM/T,EAAI8G,IAAI2P,SACzCF,EAAGG,aAAaH,IACjBhiB,EAAOoiB,eAAetX,EAAG0U,EAAMjoB,EAAa,QAAQ,IAExDmmB,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAI,IACnC,IAAK,IAAIrZ,EAAIsU,EAAE+E,IAAI,EAAGrZ,EAAI8oB,EAAK9oB,IAC3BknB,EAAQnK,UAAUzI,EAAGtU,EAAGA,EAAE,GAC9BknB,EAAQhK,SAAS5I,EAAGwU,EAAK0C,IAuBvBK,GAAY,SAASvX,EAAGwU,EAAKgD,KACzBxX,EAAEyX,SAAW5X,GAdJ,SAASG,GACpBA,EAAEyX,UAAY5X,EACd3K,EAAO2Q,cAAc7F,EAAGvT,EAAa,qBAAqB,IACrDuT,EAAEyX,SAAW5X,GAAkBA,GAAkB,IACtDgU,GAAW7T,EAAGjL,GAWd2iB,CAAW1X,GACVuU,EAAavU,EAAGwU,EAAKgD,IACtB9W,EAAIiX,aAAa3X,GACrBA,EAAEyX,WAGA5D,GAAa,SAAS7T,EAAGqT,GAC3B,GAAIrT,EAAE4X,SAEF,MADA5X,EAAE4X,SAASxI,OAASiE,EACdrT,EAAE4X,SACL,CACH,IAAIC,EAAI7X,EAAEqC,IAEV,GADArC,EAAEoP,OAASiE,GACPwE,EAAEC,WAAWF,SAGV,CACH,IAAIjO,EAAQkO,EAAElO,MAOd,MANIA,IACAyJ,EAAYpT,EAAGqT,EAASrT,EAAE+E,KACtB/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,MACb/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,KACjB4E,EAAM3J,IAEJ,IAAIxS,MAAM,WAAW6lB,GAV3BwE,EAAEC,WAAW/V,MAAM8V,EAAEC,WAAW/S,OAAS/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GACzD8O,GAAWgE,EAAEC,WAAYzE,KAc/B0E,GAAuB,SAAS/X,EAAG0C,EAAGmI,GACxC,IAAImN,EAAahY,EAAEyX,QACfQ,EAAK,CACL7I,OAAQ3a,EACR0f,SAAUnU,EAAE4X,UAEhB5X,EAAE4X,SAAWK,EAEb,IACIvV,EAAE1C,EAAG6K,GACP,MAAOpL,GACL,GAAIwY,EAAG7I,SAAW3a,EAAQ,CAGtB,IAAIyjB,EAAgBlY,EAAEqC,IAAI6V,cAC1B,GAAIA,EACA,IASI,GARAD,EAAG7I,OAAS3a,EAEZQ,EAAK+D,kBAAkBgH,EAAGkY,GAC1BjjB,EAAKqE,sBAAsB0G,EAAGP,GAC9B0Y,GAAiBnY,EAAGA,EAAE+E,IAAM,EAAG,GAIb,IAAd/E,EAAEoY,QAAe,CACjB,IAAIA,EAAUpY,EAAEoY,QAChBxF,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAM,IACrC6N,EAAQnK,UAAUzI,EAAGA,EAAE+E,IAAM,EAAGqT,GAChCD,GAAiBnY,EAAGA,EAAE+E,IAAM,EAAG,GAGnCkT,EAAG7I,OAASza,EACd,MAAM0jB,GACAJ,EAAG7I,SAAW3a,IAEdwjB,EAAG7I,QAAU,QAIrB6I,EAAG7I,QAAU,GAQzB,OAHApP,EAAE4X,SAAWK,EAAG9D,SAChBnU,EAAEyX,QAAUO,EAELC,EAAG7I,QAQRkJ,GAAc,SAAStY,EAAGoP,GAC5B,IAAI8E,EAAKlU,EAAEkU,GAGXxU,EAAsB,OAAXwU,EAAGqE,KAA0B,IAAVvY,EAAEwY,KAEhC9Y,EAAWwU,EAAGW,WAAazf,EAAOqjB,aAAerJ,IAAW1a,GAExDwf,EAAGW,WAAazf,EAAOqjB,cACvBvE,EAAGW,aAAezf,EAAOqjB,YACzBzY,EAAEoY,QAAUlE,EAAGwE,eAKfxE,EAAGO,WAAaviB,GAAe8N,EAAEkU,GAAGnP,IAAM/E,EAAE+E,MAAK/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,KAClE,IACI1Z,GAAIktB,EADErE,EAAGqE,KACDvY,EAAGoP,EAAQ8E,EAAGyE,OAC1B1jB,EAAK+f,gBAAgBhV,EAAG3U,GACxB4pB,EAAajV,EAAGkU,EAAIlU,EAAE+E,IAAM1Z,EAAGA,IAW7ButB,GAAS,SAAS5Y,EAAG6K,GAIvB,IAHW,OAAPA,GACAyN,GAAYtY,EAAG6K,GAEZ7K,EAAEkU,KAAOlU,EAAE6Y,SACR7Y,EAAEkU,GAAGW,WAAazf,EAAOwgB,UAG3BlV,EAAIoY,cAAc9Y,GAClBU,EAAIiX,aAAa3X,IAHjBsY,GAAYtY,EAAGtL,IA0BrBqkB,GAAU,SAAS/Y,EAAGoP,GACxB,IAAI8E,EAfU,SAASlU,GACvB,IAAK,IAAIkU,EAAKlU,EAAEkU,GAAW,OAAPA,EAAaA,EAAKA,EAAGC,SACrC,GAAID,EAAGW,WAAazf,EAAOqjB,YACvB,OAAOvE,EAGf,OAAO,KASE8E,CAAUhZ,GACnB,GAAW,OAAPkU,EAAa,OAAO,EAExB,IAAIZ,EAASY,EAAG+E,MAQhB,OAPAtG,EAAMuG,WAAWlZ,EAAGsT,GACpBF,EAAYpT,EAAGoP,EAAQkE,GACvBtT,EAAEkU,GAAKA,EACPlU,EAAEwW,UAAYtC,EAAGW,WAAazf,EAAO+jB,SACrCnZ,EAAEwY,IAAM,EACRzE,EAAiB/T,GACjBA,EAAEoY,QAAUlE,EAAGwE,cACR,GAQLU,GAAe,SAASpZ,EAAGJ,EAAKyZ,GAClC,IAAIvX,EAAKiR,EAAgB/S,EAAGJ,GAC5B,GAAa,IAATyZ,EACAzG,EAAQpK,aAAaxI,EAAG8B,GACxBnC,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,sBAC7B,CAEH,IAAK,IAAInb,EAAE,EAAGA,EAAEyvB,EAAMzvB,WACXoW,EAAE+B,QAAQ/B,EAAE+E,KACvB6N,EAAQhR,YAAY5B,EAAGA,EAAE+E,IAAI,EAAGjD,GAEpC,OAAOnN,GAUL2kB,GAAS,SAAStZ,EAAG3U,GACvB,IAAIkuB,EAAWvZ,EAAE+E,IAAM1Z,EACnB6oB,EAAKlU,EAAEkU,GACPlU,EAAEoP,SAAW3a,EACR8f,EAAavU,EAAGuZ,EAAW,EAAGrnB,IAC/BwO,EAAIiX,aAAa3X,IAErBN,EAAWM,EAAEoP,SAAW1a,GACxBsL,EAAEoP,OAAS3a,EACXyf,EAAGU,QAAUV,EAAG+E,MAChB/E,EAAGQ,KAAO1U,EAAE+B,MAAMmS,EAAGU,SAEjBV,EAAGW,WAAazf,EAAOwgB,SACvBlV,EAAIiX,aAAa3X,IAEF,OAAXkU,EAAGqE,MACHltB,EAAI6oB,EAAGqE,IAAIvY,EAAGtL,EAAWwf,EAAGyE,OAC5B1jB,EAAK+f,gBAAgBhV,EAAG3U,GACxBkuB,EAAWvZ,EAAE+E,IAAM1Z,GAGvB4pB,EAAajV,EAAGkU,EAAIqF,EAAUluB,IAGlCutB,GAAO5Y,EAAG,QAgDZnD,GAAa,SAASmD,EAAGyU,EAAU+E,EAAKC,GAC1C,IAAIvF,EAAKlU,EAAEkU,GAwBX,OAvBAjf,EAAK+f,gBAAgBhV,EAAGyU,GAEpBzU,EAAEwY,IAAM,IACJxY,IAAMA,EAAEqC,IAAIyV,WACZ5iB,EAAO2Q,cAAc7F,EAAGvT,EAAa,8CAA8C,IAEnFyI,EAAO2Q,cAAc7F,EAAGvT,EAAa,6CAA6C,KAG1FuT,EAAEoP,OAAS1a,EACXwf,EAAG+E,MAAQ/E,EAAGU,QACVV,EAAGW,WAAazf,EAAOwgB,SACvBjW,EAAUK,EAAS,OAANyZ,EAAY,yCAEzBvF,EAAGqE,IAAMkB,EACC,OAANA,IACAvF,EAAGyE,MAAQa,GACftF,EAAGU,QAAU5U,EAAE+E,IAAM0P,EAAW,EAChCP,EAAGQ,KAAO1U,EAAE+B,MAAMmS,EAAGU,SACrBf,GAAW7T,EAAGtL,IAGlBgL,EAAWwU,EAAGW,WAAazf,EAAOshB,aAC3B,GAOLgD,GAAa,SAAS1Z,EAAG0U,EAAMjmB,EAAGkrB,EAASC,GAC7C,IAAIC,EAAS7Z,EAAEkU,GACX4F,EAAiB9Z,EAAEwW,UACnBuD,EAAU/Z,EAAEwY,IACZwB,EAAcha,EAAEoY,QACpBpY,EAAEoY,QAAUwB,EAEZ,IAAIxK,EAAS2I,GAAqB/X,EAAG0U,EAAMjmB,GAa3C,OAXI2gB,IAAW3a,IACXke,EAAMuG,WAAWlZ,EAAG2Z,GACpBvG,EAAYpT,EAAGoP,EAAQuK,GACvB3Z,EAAEkU,GAAK2F,EACP7Z,EAAEwW,UAAYsD,EACd9Z,EAAEwY,IAAMuB,EACRhG,EAAiB/T,IAGrBA,EAAEoY,QAAU4B,EAEL5K,GAML+I,GAAmB,SAASnY,EAAGwU,EAAKgD,GACtCxX,EAAEwY,MACFjB,GAAUvX,EAAGwU,EAAKgD,GAClBxX,EAAEwY,OAMN,MAAMyB,GACF,YAAYC,EAAG/vB,EAAMY,GACjByI,KAAK0mB,EAAIA,EACT1mB,KAAK6P,KAAO,IAAI4P,EAChBzf,KAAK2mB,IAAM,IAAIrH,EAAQsH,QACvB5mB,KAAKzI,KAAOA,EACZyI,KAAKrJ,KAAOA,GAIpB,MAAMkwB,GAAY,SAASra,EAAGjV,EAAMsW,GAC5BtW,IAA2C,IAAnCuB,EAAkBvB,EAAMsW,EAAE,MAClCuR,EAAQxN,iBAAiBpF,EACrBvT,EAAa,6CAA8C4U,EAAGtW,GAClE8oB,GAAW7T,EAAGpL,KAIhB0lB,GAAW,SAASta,EAAGtU,GACzB,IAAI6uB,EACAtwB,EAAIyB,EAAEwuB,EAAEM,QACRvwB,IAAMyF,EAAc,IACpB2qB,GAAUra,EAAGtU,EAAEX,KAAM0B,EAAa,UAAU,IAC5C8tB,EAAKvH,EAAQyH,YAAYza,EAAGtU,EAAEwuB,EAAGxuB,EAAEvB,QAEnCkwB,GAAUra,EAAGtU,EAAEX,KAAM0B,EAAa,QAAQ,IAC1C8tB,EAAKzH,EAAQ4H,YAAY1a,EAAGtU,EAAEwuB,EAAGxuB,EAAE2X,KAAM3X,EAAEyuB,IAAKzuB,EAAEvB,KAAMF,IAG5DyV,EAAW6a,EAAGhY,YAAcgY,EAAG7uB,EAAEivB,SAASvtB,QAC1CulB,EAAMiI,gBAAgB5a,EAAGua,IAW7B5wB,EAAOD,QAAQwpB,WAAuBA,EACtCvpB,EAAOD,QAAQ6tB,UAAuBA,GACtC5tB,EAAOD,QAAQyuB,iBAAuBA,GACtCxuB,EAAOD,QAAQoc,gBAAuBA,EACtCnc,EAAOD,QAAQkqB,eAAuBA,EACtCjqB,EAAOD,QAAQqrB,UAAuBA,EACtCprB,EAAOD,QAAQob,YAxlBK,SAAS9E,GACzB8F,EAAgB9F,EAAG,GACnBA,EAAE+B,MAAM/B,EAAE+E,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,OAulBpD1G,EAAOD,QAAQgwB,WAAuBA,GACtC/vB,EAAOD,QAAQurB,aAAuBA,EACtCtrB,EAAOD,QAAQ6qB,aAAuBA,EACtC5qB,EAAOD,QAAQmxB,qBAlBc,SAAS7a,EAAGka,EAAG/vB,EAAMY,GAC9C,IAAIW,EAAI,IAAIuuB,GAAQC,EAAG/vB,EAAMY,GAC7BiV,EAAEwY,MACF,IAAIpJ,EAASsK,GAAW1Z,EAAGsa,GAAU5uB,EAAGsU,EAAE+E,IAAK/E,EAAEoY,SAEjD,OADApY,EAAEwY,MACKpJ,GAcXzlB,EAAOD,QAAQquB,qBAAuBA,GACtCpuB,EAAOD,QAAQ+pB,kBAAuBA,EACtC9pB,EAAOD,QAAQmqB,WAAuBA,GACtClqB,EAAOD,QAAQyO,gBA9HS,SAAS6H,GAC7B,OAAiB,IAAVA,EAAEwY,KA8Hb7uB,EAAOD,QAAQgR,WAvKI,SAASsF,EAAG/S,EAAM6tB,GACjC,IAAIC,EAAS/a,EAAEwY,IAEf,GAAIxY,EAAEoP,SAAW3a,GACb,GAAIuL,EAAEkU,KAAOlU,EAAE6Y,QACX,OAAOO,GAAapZ,EAAG,wCAAyC8a,QACjE,GAAI9a,EAAEoP,SAAW1a,EACpB,OAAO0kB,GAAapZ,EAAG,+BAAgC8a,GAG3D,GADA9a,EAAEyX,QAAUxqB,EAAOA,EAAKwqB,QAAU,EAAI,EAClCzX,EAAEyX,SAAW5X,EACb,OAAOuZ,GAAapZ,EAAG,oBAAqB8a,GAEhD9a,EAAEwY,IAAM,EAERvjB,EAAK+f,gBAAgBhV,EAAGA,EAAEoP,SAAW3a,EAASqmB,EAAQ,EAAGA,GAEzD,IAAI1L,EAAS2I,GAAqB/X,EAAGsZ,GAAQwB,GAC7C,IAAgB,IAAZ1L,EACAA,EAASza,MACR,CACD,KAAOya,EAAS1a,GAAaqkB,GAAQ/Y,EAAGoP,IAEpCA,EAAS2I,GAAqB/X,EAAG4Y,GAAQxJ,GAGzCA,EAAS1a,GACTsL,EAAEoP,OAASA,EACXgE,EAAYpT,EAAGoP,EAAQpP,EAAE+E,KACzB/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,KAEbrF,EAAW0P,IAAWpP,EAAEoP,QAMhC,OAHApP,EAAEwY,IAAMuC,EACR/a,EAAEyX,UACF/X,EAAWM,EAAEyX,WAAaxqB,EAAOA,EAAKwqB,QAAU,IACzCrI,GAmIXzlB,EAAOD,QAAQkT,UAhGG,SAASoD,EAAG3U,GAC1BwR,GAAWmD,EAAG3U,EAAG,EAAG,OAgGxB1B,EAAOD,QAAQmT,WAAuBA,I,6BC3uBtC,MACI1M,gBAAgB,aACZG,EAAY,SACZe,EAAQ,SACRD,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,YACVG,EAAW,cACXD,GACH,aACDnE,GACA,EAAQ,IACN,WAAEiT,GAAe,EAAQ,GACzBxK,EAAU,EAAQ,IAClB0d,EAAU,EAAQ,IAClB,iBACFoI,EAAgB,QAChBC,GACA,EAAQ,IACN7lB,EAAU,EAAQ,IAGxB,IAAI8lB,EAAuB,IAAIC,QAC/B,MAAMC,EAAyB,SAAS/tB,GACpC,IAAIguB,EAAOH,EAAqBzwB,IAAI4C,GAOpC,OANKguB,IAGDA,EAAO,GACPH,EAAqBtV,IAAIvY,EAAGguB,IAEzBA,GAGLC,EAAa,SAAStb,EAAG7U,GAC3B,OAAOA,EAAI4V,MACP,KAAK1Q,EACD,OAAO6E,EAAO2Q,cAAc7F,EAAGvT,EAAa,sBAAsB,IACtE,KAAKwE,EACD,GAAIkT,MAAMhZ,EAAIN,OACV,OAAOqK,EAAO2Q,cAAc7F,EAAGvT,EAAa,sBAAsB,IAE1E,KAAKyE,EACL,KAAKZ,EACL,KAAKI,EACL,KAAKS,EACL,KAAKC,EACL,KAAKC,EACL,KAAKT,EACL,KAAKC,EACD,OAAO1F,EAAIN,MACf,KAAKkG,EACL,KAAKC,EACD,OAAOgqB,EAAiB7vB,EAAIqW,WAChC,KAAKjR,EAAoB,CACrB,IAAIlD,EAAIlC,EAAIN,MACZ,cAAcwC,GACV,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,UAED,OAAOA,EAAE,QAAQ,SACrB,IAAK,WAGD,OAAO+tB,EAAuB/tB,GAClC,IAAK,SAED,GAAKA,aAAa+H,EAAOmQ,WAAalY,EAAEgV,MAAQrC,EAAEqC,KAC9ChV,aAAamY,GACbnY,aAAaulB,EAAQhQ,OACrBvV,aAAaulB,EAAQzQ,UACrB9U,aAAaulB,EAAQnQ,SAErB,OAAO2Y,EAAuB/tB,GAGtC,QACI,OAAOA,GAGnB,QACI,MAAM,IAAIG,MAAM,qBAAuBrC,EAAI4V,QAIvD,MAAMyE,EACF,YAAYxF,GACRxM,KAAK4O,GAAKpC,EAAEqC,IAAIC,aAChB9O,KAAK+nB,OAAS,IAAIC,IAClBhoB,KAAKioB,YAAc,IAAID,IACvBhoB,KAAKkoB,eAAY,EACjBloB,KAAKkP,OAAI,EACTlP,KAAK3J,OAAI,EACT2J,KAAKsP,UAAY,KACjBtP,KAAKmoB,OAAQ,GAIrB,MAIMC,EAAM,SAAS9wB,EAAGuwB,EAAMlwB,EAAKN,GAC/BC,EAAE2wB,YAAYI,QACd/wB,EAAE4wB,eAAY,EACd,IAAII,EAAO,KACPC,EAAQ,CACR5wB,IAAKA,EACLN,MAAOA,EACPa,EAAGowB,EAAOhxB,EAAEjB,EACZwB,OAAG,GAEFP,EAAE4X,IAAG5X,EAAE4X,EAAIqZ,GACZD,IAAMA,EAAKzwB,EAAI0wB,GACnBjxB,EAAEywB,OAAO3V,IAAIyV,EAAMU,GACnBjxB,EAAEjB,EAAIkyB,GAQJC,EAAY,SAASlxB,EAAGuwB,GAC1B,IAAI5b,EAAI3U,EAAEywB,OAAO9wB,IAAI4wB,GACrB,GAAI5b,EAAG,CACHA,EAAEtU,IAAI8wB,eACNxc,EAAE5U,WAAQ,EACV,IAAIsrB,EAAO1W,EAAEpU,EACTywB,EAAOrc,EAAE/T,EACb+T,EAAE/T,OAAI,EACHowB,IAAMA,EAAKzwB,EAAI8qB,GACfA,IAAMA,EAAKzqB,EAAIowB,GACfhxB,EAAE4X,IAAMjD,IAAG3U,EAAE4X,EAAIyT,GACjBrrB,EAAEjB,IAAM4V,IAAG3U,EAAEjB,EAAIiyB,GACpBhxB,EAAEywB,OAAOW,OAAOb,IAhBA,iBADc5B,EAkBL4B,GAjBQ,OAAN5B,EAA0B,mBAANA,IAkBtC3uB,EAAE4wB,YAAW5wB,EAAE4wB,UAAY,IAAIP,SACpCrwB,EAAE4wB,UAAU9V,IAAIyV,EAAM5b,IAGtB3U,EAAE2wB,YAAY7V,IAAIyV,EAAM5b,GAvBP,IAASga,GAgChC0C,EAAa,SAASrxB,EAAGuwB,GAC3B,IAAIhuB,EAAIvC,EAAEywB,OAAO9wB,IAAI4wB,GACrB,OAAOhuB,EAAIA,EAAExC,MAAQ+nB,EAAQ3Q,gBAG3Bma,EAAc,SAAStxB,EAAGK,GAE5B,OADAuU,EAAyB,iBAAPvU,IAAwB,EAAJA,KAAWA,GAC1CgxB,EAAWrxB,EAAGK,IA8GzBxB,EAAOD,QAAQ2yB,kBAzKW,SAASvxB,GAC/BA,EAAE6wB,MAAQ,GAyKdhyB,EAAOD,QAAQ4yB,SAvGE,SAAStc,EAAGlV,EAAGK,GAE5B,OADAuU,EAAWvU,aAAeynB,EAAQ9R,QAC9B3V,EAAIgW,WAAchW,EAAIoxB,aAAepY,MAAMhZ,EAAIN,OACxC+nB,EAAQ3Q,eACZka,EAAWrxB,EAAGwwB,EAAWtb,EAAG7U,KAoGvCxB,EAAOD,QAAQ0yB,YAAeA,EAC9BzyB,EAAOD,QAAQ8yB,UAnDG,SAAS1xB,GACvB,IAAIlB,EAAI,EACJwjB,EAAItiB,EAAEywB,OAAO1Y,KAAO,EAExB,KAAOuK,EAAIxjB,EAAI,GAAG,CACd,IAAII,EAAI6E,KAAKuP,OAAOxU,EAAEwjB,GAAG,GACrBgP,EAAYtxB,EAAGd,GAAGmX,UAAWiM,EAAIpjB,EAChCJ,EAAII,EAEb,OAAOJ,GA2CXD,EAAOD,QAAQ+yB,YA/GK,SAAS3xB,EAAGK,GAE5B,OADAuU,EAAWvU,aAAe8vB,GACnBkB,EAAWrxB,EAAGkwB,EAAiB7vB,KA8G1CxB,EAAOD,QAAQgzB,aAlFM,SAAS1c,EAAGlV,EAAGK,EAAKN,GACrC6U,EAAWvU,aAAeynB,EAAQ9R,QAClC,IAAIua,EAAOC,EAAWtb,EAAG7U,GACzB,GAAIN,EAAMsW,UAEN,YADA6a,EAAUlxB,EAAGuwB,GAIjB,IAAI5b,EAAI3U,EAAEywB,OAAO9wB,IAAI4wB,GACrB,GAAI5b,EACAA,EAAE5U,MAAM8d,QAAQ9d,OACb,CACH,IAAI4uB,EACAkD,EAAKxxB,EAAIN,MAGT4uB,EAFCtuB,EAAIoxB,cAAmB,EAAHI,KAAUA,EAE3B,IAAI/J,EAAQ9R,OAAO5P,EAAayrB,GAEhC,IAAI/J,EAAQ9R,OAAO3V,EAAI4V,KAAM4b,GAErC,IAAItvB,EAAI,IAAIulB,EAAQ9R,OAAOjW,EAAMkW,KAAMlW,EAAMA,OAC7C+wB,EAAI9wB,EAAGuwB,EAAM5B,EAAGpsB,KA8DxB1D,EAAOD,QAAQkzB,YArGK,SAAS9xB,EAAGK,EAAKN,GACjC6U,EAAyB,iBAAPvU,IAAwB,EAAJA,KAAWA,GAAON,aAAiB+nB,EAAQ9R,QACjF,IAAIua,EAAOlwB,EACX,GAAIN,EAAMsW,UAEN,YADA6a,EAAUlxB,EAAGuwB,GAGjB,IAAI5b,EAAI3U,EAAEywB,OAAO9wB,IAAI4wB,GACrB,GAAI5b,EAAG,CACMA,EAAE5U,MACR8d,QAAQ9d,OACR,CACH,IAAI4uB,EAAI,IAAI7G,EAAQ9R,OAAO5P,EAAa/F,GACpCkC,EAAI,IAAIulB,EAAQ9R,OAAOjW,EAAMkW,KAAMlW,EAAMA,OAC7C+wB,EAAI9wB,EAAGuwB,EAAM5B,EAAGpsB,KAwFxB1D,EAAOD,QAAQmzB,SAhIE,SAAS7c,GACtB,OAAO,IAAIwF,EAAMxF,IAgIrBrW,EAAOD,QAAQozB,UA5CG,SAAS9c,EAAG+c,EAAOC,GACjC,IAEIjB,EAFAkB,EAAOjd,EAAE+B,MAAMib,GAGnB,GAAIC,EAAKlc,OAAS1Q,GAEd,GADA0rB,EAAQgB,EAAMra,GACTqZ,EACD,OAAO,MACR,CAEH,IAAIV,EAAOC,EAAWtb,EAAGid,GAGzB,GADAlB,EAAQgB,EAAMxB,OAAO9wB,IAAI4wB,GACrBU,GAEA,GADAA,EAAQA,EAAM1wB,GACT0wB,EACD,OAAO,MACR,CAGH,GADAA,EAASgB,EAAMrB,WAAaqB,EAAMrB,UAAUjxB,IAAI4wB,IAAU0B,EAAMtB,YAAYhxB,IAAI4wB,IAC3EU,EAED,OAAO7mB,EAAO2Q,cAAc7F,EAAGvT,EAAa,0BAEhD,GAEI,GADAsvB,EAAQA,EAAM1wB,GACT0wB,EACD,OAAO,QACNA,EAAM5wB,IAAI+xB,gBAK3B,OAFAtK,EAAQhK,SAAS5I,EAAGgd,EAAMjB,EAAM5wB,KAChCynB,EAAQhK,SAAS5I,EAAGgd,EAAK,EAAGjB,EAAMlxB,QAC3B,GAYXlB,EAAOD,QAAQ8b,MAAeA,G,6BCjS9B,MAAM,aACF7X,EAAY,aACZtB,EAAY,eACZU,EAAc,aACdN,GACA,EAAQ,IACN,WAAEiT,GAAe,EAAQ,GAE/B,MAAMub,EAEF,YAAYjb,EAAG9R,GACXsF,KAAK6nB,KAAO,KACZ7nB,KAAK2pB,WAAajvB,EAGtB,SACI,OAAOsF,KAAK2pB,WAGhB,SACI,OAAO3pB,KAAK2pB,WAAW/vB,QAK/B,MAQMgwB,EAAY,SAASlvB,GACvBwR,EAAW/R,EAAaO,IACxB,IAAIf,EAAMe,EAAId,OACVzB,EAAI,IACR,IAAK,IAAI/B,EAAE,EAAGA,EAAEuD,EAAKvD,IACjB+B,GAAKuC,EAAItE,GAAG4F,SAAS,IACzB,OAAO7D,GAYL4U,EAAa,SAASP,EAAG9R,GAE3B,OADAwR,EAAWxR,aAAelB,YACnB,IAAIiuB,EAAQjb,EAAG9R,IAa1BvE,EAAOD,QAAQ2zB,cAzCO,SAASnwB,EAAGwB,GAG9B,OAFAgR,EAAWxS,aAAa+tB,GACxBvb,EAAWhR,aAAausB,GACjB/tB,GAAKwB,GAAKrC,EAAaa,EAAEiwB,WAAYzuB,EAAEyuB,aAuClDxzB,EAAOD,QAAQ0zB,UAAmBA,EAClCzzB,EAAOD,QAAQsxB,iBA1BU,SAASlZ,GAK9B,OAJApC,EAAWoC,aAAcmZ,GACV,OAAZnZ,EAAGuZ,OACFvZ,EAAGuZ,KAAO+B,EAAUtb,EAAGL,WAEpBK,EAAGuZ,MAsBd1xB,EAAOD,QAAQ6W,WAAmBA,EAClC5W,EAAOD,QAAQ8W,SAbE,SAASR,EAAG9R,GACzB,OAAOqS,EAAWP,EAAGjT,EAAemB,KAaxCvE,EAAOD,QAAQqpB,gBATS,SAAS/S,EAAG9R,GAChC,OAAOqS,EAAWP,EAAGvT,EAAayB,KAStCvE,EAAOD,QAAQuxB,QAAmBA,G,6BCxElC,MAAM,cACFxpB,EAAa,aACbC,EAAY,cACZI,EAAa,aACbC,EACA5B,gBAAgB,aACZG,EAAY,SACZD,EAAQ,WACRK,GAEJ8D,eAAe,WACXG,EAAU,UACVD,GACH,gBACDjF,EAAe,aACfpD,EAAY,kBACZC,EAAiB,aACjBG,GACA,EAAQ,IACN,UACFkT,EAAS,WACTD,GACA,EAAQ,IACN,WAAEhC,GAAe,EAAQ,GACzBzI,EAAW,EAAQ,IACnBE,EAAW,EAAQ,GACnBwd,EAAW,EAAQ,IACnB2K,EAAW,EAAQ,IACnB1K,EAAW,EAAQ,GACnBC,EAAW,EAAQ,IACnBzd,EAAW,EAAQ,IACnBqL,EAAW,EAAQ,GACnBE,EAAW,EAAQ,IACnBD,EAAW,EAAQ,IAEnB6c,EAAY,SAASrJ,GAEvB,OADAxU,EAAWwU,EAAGW,WAAazf,EAAOwgB,UAC3B1B,EAAGyB,UAAY,GAGpB7hB,EAAc,SAASogB,GACzB,OAA2C,IAApCA,EAAGQ,KAAK7pB,MAAMa,EAAE8xB,SAASpwB,OAAe8mB,EAAGQ,KAAK7pB,MAAMa,EAAE8xB,SAASD,EAAUrJ,KAAQ,GASxFuJ,EAAY,SAASzd,GACvB,GAAIA,EAAEoP,SAAW1a,EAAW,CACxB,IAAIwf,EAAKlU,EAAEkU,GACPwJ,EAAOxJ,EAAGU,QACdV,EAAGQ,KAAO1U,EAAE+B,MAAMmS,EAAG+E,OACrB/E,EAAGU,QAAUV,EAAG+E,MAChB/E,EAAG+E,MAAQyE,IA6CbC,EAAY,SAASjyB,EAAGkyB,GAC1Ble,EAAWke,EAAKlyB,EAAEivB,SAASvtB,QAC3B,IAAIzB,EAAID,EAAEivB,SAASiD,GAAIzzB,KACvB,OAAU,OAANwB,EAAmBc,EAAa,KAAK,GAClCd,EAAE8V,UAePoc,EAAY,SAAS7d,EAAGkU,EAAI7oB,GAC9B,IAAI6pB,EAAM/qB,EAAO,KAEjB,GAAI+pB,EAAGW,WAAazf,EAAOwgB,SAAU,CACjC,GAAIvqB,EAAI,EACJ,OAjBO,SAAS6oB,EAAI7oB,GAC5B,IAAI6I,EAAUggB,EAAGQ,KAAK7pB,MAAMa,EAAE6pB,UAC9B,OAAIlqB,GAAK6oB,EAAGsB,OAAStB,EAAGU,QAAU1gB,EACvB,KAEA,CACHua,IAAKyF,EAAGU,QAAU1gB,EAAU7I,EAC5BlB,KAAMsC,EAAa,aAAa,IAUzBqxB,CAAW5J,GAAK7oB,GAEvB6pB,EAAOhB,EAAGsB,OACVrrB,EAAOwoB,EAAMoL,kBAAkB7J,EAAGQ,KAAK7pB,MAAMa,EAAGL,EAAGkyB,EAAUrJ,SAGjEgB,EAAOhB,EAAGU,QAAU,EAExB,GAAa,OAATzqB,EAAe,CAEf,MADY+pB,IAAOlU,EAAEkU,GAAKlU,EAAE+E,IAAMmP,EAAGiC,KAAKvB,SAC9BM,GAAQ7pB,GAAKA,EAAI,GAGzB,OAAO,KAFPlB,EAAOsC,EAAa,gBAAgB,GAI5C,MAAO,CACHgiB,IAAKyG,GAAQ7pB,EAAI,GACjBlB,KAAMA,IAyCR6zB,EAAW,SAASvU,EAAI8Q,GAC1B,GAAW,OAAPA,GAAeA,aAAc3H,EAAQnQ,SACrCgH,EAAG5V,OAASpH,EAAa,SAAS,GAClCgd,EAAG1V,aAAe,EAClB0V,EAAGzV,iBAAmB,EACtByV,EAAG7V,KAAOnH,EAAa,KAAK,OACzB,CACH,IAAIf,EAAI6uB,EAAG7uB,EACX+d,EAAG5V,OAASnI,EAAEmI,OAASnI,EAAEmI,OAAO4N,SAAWhV,EAAa,MAAM,GAC9Dgd,EAAG1V,YAAcrI,EAAEqI,YACnB0V,EAAGzV,gBAAkBtI,EAAEsI,gBACvByV,EAAG7V,KAA0B,IAAnB6V,EAAG1V,YAAoBtH,EAAa,QAAQ,GAAQA,EAAa,OAAO,GAGtFgd,EAAGpV,UAAYue,EAAQjL,aAAa8B,EAAG5V,OAAQ6J,IAkB7CugB,EAAc,SAASje,EAAGkU,GAC5B,IAAIxpB,EAAI,CACJP,KAAM,KACN+zB,SAAU,MAEd,OAAW,OAAPhK,EACO,KACFA,EAAGW,WAAazf,EAAO+oB,UAC5BzzB,EAAEP,KAAOsC,EAAa,QAAQ,GAC9B/B,EAAEwzB,SAAWzxB,EAAa,cAAc,GACjC/B,KAGAwpB,EAAGW,WAAazf,EAAO0hB,YAAc5C,EAAGC,SAASU,WAAazf,EAAOwgB,SACrEwI,EAAiBpe,EAAGkU,EAAGC,UACtB,MAiFVkK,EAAQ,SAAS3yB,EAAG4yB,EAAIr0B,GAC1B,IAAIS,EAAI,CACJP,KAAM,KACN+zB,SAAU,MAGd,GAAIrL,EAAS0L,IAAIt0B,GAAI,CACjB,IAAIu0B,EAAS9yB,EAAE+tB,EAAE5G,EAAS4L,OAAOx0B,IACjC,GAAIu0B,EAAOjd,aAEP,OADA7W,EAAEP,KAAOq0B,EAAO7c,SACTjX,MAGR,CACH,IAAIkJ,EAAO8qB,EAAWhzB,EAAG4yB,EAAIr0B,GAC7B,GAAI2J,GAA6B,KAArBA,EAAKsqB,SAAS,GACtB,OAAOtqB,EAKf,OADAlJ,EAAEP,KAAOsC,EAAa,KAAK,GACpB/B,GAGLi0B,EAAW,SAASL,EAAIM,GAC1B,OAAIN,EAAKM,GACG,EACAN,GAoDVI,EAAa,SAAShzB,EAAGmzB,EAAQC,GACnC,IAAIp0B,EAAI,CACJP,KAAMwoB,EAAMoL,kBAAkBryB,EAAGozB,EAAM,EAAGD,GAC1CX,SAAU,MAGd,GAAIxzB,EAAEP,KAEF,OADAO,EAAEwzB,SAAWzxB,EAAa,SAAS,GAC5B/B,EAIX,IAAI4zB,EA1DW,SAAS5yB,EAAGmzB,EAAQC,GACnC,IAAIC,GAAU,EACVH,EAAY,EACZI,EAAMnM,EAAS+D,SACnB,IAAK,IAAI0H,EAAK,EAAGA,EAAKO,EAAQP,IAAM,CAChC,IAAI10B,EAAI8B,EAAEgqB,KAAK4I,GACXpxB,EAAItD,EAAEq1B,EACV,OAAQr1B,EAAE+sB,QACN,KAAKqI,EAAIE,WAAY,CACjB,IAAIxwB,EAAI9E,EAAE6hB,EACNve,GAAK4xB,GAAOA,GAAO5xB,EAAIwB,IACvBqwB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAIG,YACDL,GAAO5xB,EAAI,IACX6xB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAII,QACT,KAAKJ,EAAInI,YACDiI,GAAO5xB,IACP6xB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAIK,OAAQ,CACb,IACIC,EAAOhB,EAAK,EADR10B,EAAE21B,IAGNjB,EAAKgB,GAAQA,GAAQT,GACjBS,EAAOV,IACPA,EAAYU,GAEpB,MAEJ,QACQzM,EAAS2M,UAAU51B,EAAE+sB,SAAWmI,IAAQ5xB,IACxC6xB,EAASJ,EAASL,EAAIM,KAKtC,OAAOG,EAgBEU,CAAW/zB,EAAGmzB,EAAQC,GAC3BE,EAAMnM,EAAS+D,SACnB,IAAY,IAAR0H,EAAW,CACX,IAAI10B,EAAI8B,EAAEgqB,KAAK4I,GACf,OAAQ10B,EAAE+sB,QACN,KAAKqI,EAAIU,QAAS,CACd,IAAIhxB,EAAI9E,EAAE6hB,EACV,GAAI/c,EAAI9E,EAAEq1B,EACN,OAAOP,EAAWhzB,EAAG4yB,EAAI5vB,GAC7B,MAEJ,KAAKswB,EAAIW,YACT,KAAKX,EAAIY,YAAa,CAClB,IAAInG,EAAI7vB,EAAEi2B,EACN/0B,EAAIlB,EAAE6hB,EACNqU,EAAKl2B,EAAE+sB,SAAWqI,EAAIY,YAAcjN,EAAMoL,kBAAkBryB,EAAGZ,EAAI,EAAGwzB,GAAMX,EAAUjyB,EAAGZ,GAG7F,OAFAJ,EAAEP,KAAOk0B,EAAM3yB,EAAG4yB,EAAI7E,GAAGtvB,KACzBO,EAAEwzB,SAAY4B,GAAMzzB,EAAayzB,EAAIxC,EAAKyC,SAAYtzB,EAAa,UAAU,GAAQA,EAAa,SAAS,GACpG/B,EAEX,KAAKs0B,EAAIgB,YAGL,OAFAt1B,EAAEP,KAAOwzB,EAAUjyB,EAAG9B,EAAE6hB,GACxB/gB,EAAEwzB,SAAWzxB,EAAa,WAAW,GAC9B/B,EAEX,KAAKs0B,EAAIiB,SACT,KAAKjB,EAAIkB,UAAW,CAChB,IAAIxxB,EAAI9E,EAAE+sB,SAAWqI,EAAIiB,SAAWr2B,EAAEu2B,GAAKz0B,EAAEgqB,KAAK4I,EAAK,GAAG8B,GAC1D,GAAI10B,EAAE+tB,EAAE/qB,GAAG6S,aAGP,OAFA7W,EAAEP,KAAOuB,EAAE+tB,EAAE/qB,GAAGiT,SAChBjX,EAAEwzB,SAAWzxB,EAAa,YAAY,GAC/B/B,EAEX,MAEJ,KAAKs0B,EAAIqB,QAAS,CACd,IAAI5G,EAAI7vB,EAAEi2B,EAGV,OAFAn1B,EAAEP,KAAOk0B,EAAM3yB,EAAG4yB,EAAI7E,GAAGtvB,KACzBO,EAAEwzB,SAAWzxB,EAAa,UAAU,GAC7B/B,IAMnB,OAAO,MASL0zB,EAAmB,SAASpe,EAAGkU,GACjC,IAAIxpB,EAAI,CACJP,KAAM,KACN+zB,SAAU,MAGVhH,EAAK,EACLxrB,EAAIwoB,EAAGQ,KAAK7pB,MAAMa,EAClB4yB,EAAKf,EAAUrJ,GACftqB,EAAI8B,EAAEgqB,KAAK4I,GACXU,EAAMnM,EAAS+D,SAEnB,GAAI1C,EAAGW,WAAazf,EAAOshB,YAGvB,OAFAhsB,EAAEP,KAAOsC,EAAa,KAAK,GAC3B/B,EAAEwzB,SAAWzxB,EAAa,QAAQ,GAC3B/B,EAGX,OAAQd,EAAE+sB,QACN,KAAKqI,EAAII,QACT,KAAKJ,EAAInI,YACL,OAAO6H,EAAWhzB,EAAG4yB,EAAI10B,EAAEq1B,GAC/B,KAAKD,EAAIG,YAGL,OAFAz0B,EAAEP,KAAOsC,EAAa,gBAAgB,GACtC/B,EAAEwzB,SAAWzxB,EAAa,gBAAgB,GACnC/B,EAEX,KAAKs0B,EAAIqB,QACT,KAAKrB,EAAIW,YACT,KAAKX,EAAIY,YACL1I,EAAKvW,EAAI8G,IAAI6Y,SACb,MACJ,KAAKtB,EAAIuB,YACT,KAAKvB,EAAIwB,YACLtJ,EAAKvW,EAAI8G,IAAIgZ,YACb,MACJ,KAAKzB,EAAI0B,OAAWxJ,EAAKvW,EAAI8G,IAAIC,OAAW,MAC5C,KAAKsX,EAAI2B,OAAWzJ,EAAKvW,EAAI8G,IAAImZ,OAAW,MAC5C,KAAK5B,EAAI6B,OAAW3J,EAAKvW,EAAI8G,IAAIqZ,OAAW,MAC5C,KAAK9B,EAAI+B,OAAW7J,EAAKvW,EAAI8G,IAAIuZ,OAAW,MAC5C,KAAKhC,EAAIiC,OAAW/J,EAAKvW,EAAI8G,IAAIyZ,OAAW,MAC5C,KAAKlC,EAAImC,OAAWjK,EAAKvW,EAAI8G,IAAI2Z,OAAW,MAC5C,KAAKpC,EAAIqC,QAAWnK,EAAKvW,EAAI8G,IAAI6Z,QAAW,MAC5C,KAAKtC,EAAIuC,QAAWrK,EAAKvW,EAAI8G,IAAI+Z,QAAW,MAC5C,KAAKxC,EAAIyC,OAAWvK,EAAKvW,EAAI8G,IAAIia,OAAW,MAC5C,KAAK1C,EAAI2C,QAAWzK,EAAKvW,EAAI8G,IAAIma,QAAW,MAC5C,KAAK5C,EAAI6C,OAAW3K,EAAKvW,EAAI8G,IAAIqa,OAAW,MAC5C,KAAK9C,EAAI+C,OAAW7K,EAAKvW,EAAI8G,IAAIua,OAAW,MAC5C,KAAKhD,EAAIiD,OAAW/K,EAAKvW,EAAI8G,IAAIya,OAAW,MAC5C,KAAKlD,EAAImD,QAAWjL,EAAKvW,EAAI8G,IAAI2a,QAAW,MAC5C,KAAKpD,EAAIqD,OAAWnL,EAAKvW,EAAI8G,IAAI6a,OAAW,MAC5C,KAAKtD,EAAIuD,UAAWrL,EAAKvW,EAAI8G,IAAI+a,UAAW,MAC5C,KAAKxD,EAAIyD,MAAWvL,EAAKvW,EAAI8G,IAAIib,MAAW,MAC5C,KAAK1D,EAAI2D,MAAWzL,EAAKvW,EAAI8G,IAAImb,MAAW,MAC5C,KAAK5D,EAAI6D,MAAW3L,EAAKvW,EAAI8G,IAAIqb,MAAW,MAC5C,QACI,OAAO,KAKf,OAFAp4B,EAAEP,KAAO6V,EAAEqC,IAAI0gB,OAAO7L,GAAIzV,SAC1B/W,EAAEwzB,SAAWzxB,EAAa,cAAc,GACjC/B,GA+BLs4B,EAAU,SAAShjB,EAAG3V,GACxB,IAAI6pB,EAAKlU,EAAEkU,GACPlC,EAAO,KACX,GAAIkC,EAAGW,WAAazf,EAAOwgB,SAAU,CACjC5D,EAlBa,SAAShS,EAAGkU,EAAI7pB,GACjC,IAAIJ,EAAIiqB,EAAGQ,KAAK7pB,MAChB,IAAK,IAAIjB,EAAI,EAAGA,EAAIK,EAAEsY,UAAW3Y,IAC7B,GAAIK,EAAEuY,OAAO5Y,KAAOS,EAChB,MAAO,CACHF,KAAMwzB,EAAU1zB,EAAEyB,EAAG9B,GACrBs0B,SAAUzxB,EAAa,WAAW,IAK9C,OAAO,KAOIw2B,CAAajjB,EAAGkU,EAAI7pB,GAC3B,IAAI64B,EAjCM,SAASljB,EAAGkU,EAAI7pB,GAC9B,IAAK,IAAIT,EAAIsqB,EAAGsB,OAAQ5rB,EAAIsqB,EAAGnP,IAAKnb,IAChC,GAAIoW,EAAE+B,MAAMnY,KAAOS,EACf,OAAOT,EAGf,OAAO,EA2BSu5B,CAAUnjB,EAAGkU,EAAI7pB,IACxB2nB,GAAQkR,IACTlR,EAAO0M,EAAWxK,EAAGQ,KAAK7pB,MAAMa,EAAG6xB,EAAUrJ,GAAKgP,EAAQhP,EAAGsB,SAGrE,OAAOxD,EAAOY,EAAQxN,iBAAiBpF,EAAGvT,EAAa,cAAc,GAAOulB,EAAKkM,SAAUlM,EAAK7nB,MAAQsC,EAAa,IAAI,IAGvH6qB,EAAiB,SAAStX,EAAG3V,EAAG4b,GAClC,IAAInb,EAAI6V,EAAIyiB,iBAAiBpjB,EAAG3V,GAChCwb,EAAc7F,EAAGvT,EAAa,8BAA8B,GAAOwZ,EAAInb,EAAGk4B,EAAQhjB,EAAG3V,KA2BnFg5B,EAAe,SAASrjB,EAAGJ,EAAK0jB,EAAKhN,GACvC,IAAIjT,EAMJ,OAJIA,EADAigB,EACO1Q,EAAQjL,aAAa2b,EAAI7hB,SAAU/D,GAEnCjR,EAAa,KAAK,GAEtBmmB,EAAQxN,iBAAiBpF,EAAGvT,EAAa,aAAa,GAAO4W,EAAMiT,EAAM1W,IAG9EiG,EAAgB,SAAS7F,EAAGiF,KAAQC,GACtC,IAAIgP,EAAKlU,EAAEkU,GACPtU,EAAMgT,EAAQ5N,kBAAkBhF,EAAGiF,EAAKC,GACxCgP,EAAGW,WAAazf,EAAOwgB,UACvByN,EAAarjB,EAAGJ,EAAKsU,EAAGQ,KAAK7pB,MAAMa,EAAEmI,OAAQC,EAAYogB,IAC7DqP,EAAcvjB,IAGZujB,EAAgB,SAASvjB,GAC3B,GAAkB,IAAdA,EAAEoY,QAAe,CACjB,IAAIA,EAAUpY,EAAEoY,QAChBxF,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAM,IACrC6N,EAAQnK,UAAUzI,EAAGA,EAAE+E,IAAM,EAAGqT,GAChCjjB,EAAIgjB,iBAAiBnY,EAAGA,EAAE+E,IAAM,EAAG,GAGvC5P,EAAI0e,WAAW7T,EAAGrL,IAgDtBhL,EAAOD,QAAQ25B,aAAmBA,EAClC15B,EAAOD,QAAQ85B,iBAnGU,SAASxjB,EAAG8G,EAAIC,IACjCD,EAAGvF,cAAgBb,EAAI+iB,QAAQ3c,MAAKA,EAAKC,GAC7CuQ,EAAetX,EAAG8G,EAAIra,EAAa,eAAe,KAkGtD9C,EAAOD,QAAQ65B,cAAmBA,EAClC55B,EAAOD,QAAQg6B,gBA7FS,SAAS1jB,EAAG8G,EAAIC,EAAInH,IACf,IAArBc,EAAI6G,SAAST,KACbC,EAAKD,GACTwQ,EAAetX,EAAG+G,EAAInH,IA2F1BjW,EAAOD,QAAQi6B,gBAxFS,SAAS3jB,EAAG8G,EAAIC,GACpC,IAAI6c,EAAKjjB,EAAIyiB,iBAAiBpjB,EAAG8G,GAC7B+c,EAAKljB,EAAIyiB,iBAAiBpjB,EAAG+G,GAC7B1a,EAAau3B,EAAIC,GACjBhe,EAAc7F,EAAGvT,EAAa,oCAAoC,GAAOm3B,GAEzE/d,EAAc7F,EAAGvT,EAAa,iCAAiC,GAAOm3B,EAAIC,IAmFlFl6B,EAAOD,QAAQmc,cAAmBA,EAClClc,EAAOD,QAAQo6B,gBAhDS,SAAS9jB,EAAG8G,EAAIC,IAEvB,IADFrG,EAAI0G,UAAUN,KAErBC,EAAKD,GACTjB,EAAc7F,EAAGvT,EAAa,0CAA0C,GAAOu2B,EAAQhjB,EAAG+G,KA6C9Fpd,EAAOD,QAAQq6B,eA1CQ,SAAS/jB,GAC5B,IAAIkU,EAAKlU,EAAEkU,GACP8P,EAAOhkB,EAAE8U,SACTmP,EAA+B,KAAhBjkB,EAAEkkB,WAAoBF,EAAOlyB,EAChD,GAAImyB,EACAjkB,EAAEkkB,UAAYlkB,EAAEmkB,mBACf,KAAMH,EAAOjyB,GACd,OACJ,GAAImiB,EAAGW,WAAazf,EAAOgvB,eACvBlQ,EAAGW,aAAezf,EAAOgvB,mBAD7B,CAMA,GAFIH,GACA9uB,EAAI4f,UAAU/U,EAAGvO,GAAgB,GACjCuyB,EAAOjyB,EAAc,CACrB,IAAIrG,EAAIwoB,EAAGQ,KAAK7pB,MAAMa,EAClB24B,EAAMnQ,EAAGyB,UAAY,EACrB2O,EAAgC,IAAtB54B,EAAE8xB,SAASpwB,OAAe1B,EAAE8xB,SAAS6G,IAAQ,GAC/C,IAARA,GACAnQ,EAAGyB,WAAa3V,EAAEkW,OAClBoO,KAAmC,IAAtB54B,EAAE8xB,SAASpwB,OAAe1B,EAAE8xB,SAASxd,EAAEkW,MAAQ,IAAM,KAClE/gB,EAAI4f,UAAU/U,EAAGtO,EAAc4yB,GAEvCtkB,EAAEkW,MAAQhC,EAAGyB,UACT3V,EAAEoP,SAAW1a,IACTuvB,IACAjkB,EAAEkkB,UAAY,GAClBhQ,EAAGyB,YACHzB,EAAGW,YAAczf,EAAOgvB,eACxBlQ,EAAGU,QAAU5U,EAAE+E,IAAM,EACrBmP,EAAGQ,KAAO1U,EAAE+B,MAAMmS,EAAGU,SACrBzf,EAAI0e,WAAW7T,EAAGtL,MAY1B/K,EAAOD,QAAQ4tB,eAAmBA,EAClC3tB,EAAOD,QAAQ8M,YAxlBK,SAASwJ,GACzB,OAAOA,EAAEuW,MAwlBb5sB,EAAOD,QAAQ+M,iBA/kBU,SAASuJ,GAC9B,OAAOA,EAAEmkB,eA+kBbx6B,EAAOD,QAAQgN,gBArlBS,SAASsJ,GAC7B,OAAOA,EAAE8U,UAqlBbnrB,EAAOD,QAAQkN,YA3YK,SAASoJ,EAAGpM,EAAM6V,GAElC,IAAI2F,EAAQmL,EAAIrG,EAAIQ,EAyBpB,OA1BA9gB,EAAOnE,EAAgBmE,GAEvB6pB,EAAUzd,GACM,KAAZpM,EAAK,IACLsgB,EAAK,KACLQ,EAAO1U,EAAE+B,MAAM/B,EAAE+E,IAAM,GACvBpF,EAAUK,EAAG0U,EAAK2C,eAAgB,qBAClCzjB,EAAOA,EAAKuR,SAAS,GACrBnF,EAAE+E,QAEFmP,EAAKzK,EAAGnV,KACRogB,EAAOR,EAAGQ,KACVhV,EAAWwU,EAAGQ,KAAK2C,iBAGvBkD,EAAK7F,EAAK6P,cAAgB7P,EAAK7pB,MAAQ,KACvCukB,EAjEe,SAASpP,EAAGpM,EAAM6V,EAAI/G,EAAGwR,GACxC,IAAI9E,EAAS,EACb,KAAOxb,EAAKxG,OAAS,EAAGwG,EAAOA,EAAKuR,SAAS,GACzC,OAAQvR,EAAK,IACT,KAAK,GACDoqB,EAASvU,EAAI/G,GACb,MAEJ,KAAK,IACD+G,EAAG3V,YAAcogB,GAAMA,EAAGW,WAAazf,EAAOwgB,SAAW9hB,EAAYogB,IAAO,EAC5E,MAEJ,KAAK,IACDzK,EAAGxV,KAAa,OAANyO,EAAa,EAAIA,EAAEH,UACnB,OAANG,GAAcA,aAAakQ,EAAQnQ,UACnCgH,EAAGtV,UAAW,EACdsV,EAAGvV,QAAU,IAEbuV,EAAGtV,SAAWuO,EAAEhX,EAAE2pB,UAClB5L,EAAGvV,QAAUwO,EAAEhX,EAAE6pB,WAErB,MAEJ,KAAK,IACD9L,EAAGrV,WAAa8f,EAAKA,EAAGW,WAAazf,EAAO0hB,UAAY,EACxD,MAEJ,KAAK,IAA+B,CAChC,IAAIpsB,EAAIuzB,EAAYje,EAAGkU,GACb,OAANxpB,GACA+e,EAAG9V,SAAWlH,EAAa,IAAI,GAC/Bgd,EAAGtf,KAAO,OAEVsf,EAAG9V,SAAWjJ,EAAEwzB,SAChBzU,EAAGtf,KAAOO,EAAEP,MAEhB,MAEJ,KAAK,GACL,KAAK,IACD,MACJ,QAASilB,EAAS,EAI1B,OAAOA,EAoBEoV,CAAWxkB,EAAGpM,EAAM6V,EAAI8Q,EAAIrG,GACjC5nB,EAAkBsH,EAAM,MAAkC,IAC1Dgf,EAAQrK,UAAUvI,EAAG0U,GACrB/U,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,mBAGpC0Y,EAAUzd,GACN1T,EAAkBsH,EAAM,KAAiC,GAzGvC,SAASoM,EAAG0C,GAClC,GAAU,OAANA,GAAcA,aAAakQ,EAAQnQ,SACnCzC,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAI6N,EAAQ9R,OAAOzQ,EAAU,MAC9C4E,EAAKwvB,aAAazkB,OACf,CACH,IAAIwd,EAAW9a,EAAEhX,EAAE8xB,SACf1yB,EAAI2V,EAAOoc,SAAS7c,GACxBA,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAI6N,EAAQ9R,OAAOpQ,EAAY5F,GAChDmK,EAAKwvB,aAAazkB,GAClB,IAAI3S,EAAI,IAAIulB,EAAQ9R,OAAOxQ,GAAc,GACzC,IAAK,IAAI1G,EAAI,EAAGA,EAAI4zB,EAASpwB,OAAQxD,IACjC6W,EAAOmc,YAAY9xB,EAAG0yB,EAAS5zB,GAAIyD,IA+FvCq3B,CAAkB1kB,EAAGua,GAElBnL,GAiXXzlB,EAAOD,QAAQmN,aAnhBM,SAASmJ,EAAGyJ,EAAIpe,GACjC,IAAIlB,EAEJ,GADAszB,EAAUzd,GACC,OAAPyJ,EAIItf,EAHC6V,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG4f,eAGbhS,EAAMoL,kBAAkB/d,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAGla,MAAMa,EAAGL,EAAG,GAFvD,SAGR,CACH,IAAIu5B,EAAQ/G,EAAU7d,EAAGyJ,EAAGnV,KAAMjJ,GAC9Bu5B,GACAz6B,EAAOy6B,EAAMz6B,KACbyoB,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAM6iB,EAAMnW,MACnC9O,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,mBAEhC5a,EAAO,KAIf,OADAszB,EAAUzd,GACH7V,GAigBXR,EAAOD,QAAQqN,aA/kBM,SAASiJ,EAAGuJ,EAAOE,GACpC,IAAIyK,EACA9E,EACJ,GAAI7F,EAAQ,EAAG,OAAO,EACtB,IAAK2K,EAAKlU,EAAEkU,GAAI3K,EAAQ,GAAK2K,IAAOlU,EAAE6Y,QAAS3E,EAAKA,EAAGC,SACnD5K,IAMJ,OALc,IAAVA,GAAe2K,IAAOlU,EAAE6Y,SACxBzJ,EAAS,EACT3F,EAAGnV,KAAO4f,GAEV9E,EAAS,EACNA,GAqkBXzlB,EAAOD,QAAQqR,YA3mBK,SAASiF,EAAG0U,EAAMsP,EAAMa,GAC3B,OAATnQ,GAA0B,IAATsP,IACjBA,EAAO,EACPtP,EAAO,MAEP1U,EAAEkU,GAAGW,WAAazf,EAAOwgB,WACzB5V,EAAEkW,MAAQlW,EAAEkU,GAAGyB,WACnB3V,EAAEuW,KAAO7B,EACT1U,EAAEmkB,cAAgBU,EAClB7kB,EAAEkkB,UAAYlkB,EAAEmkB,cAChBnkB,EAAE8U,SAAWkP,GAkmBjBr6B,EAAOD,QAAQuR,aAhgBM,SAAS+E,EAAGyJ,EAAIpe,GACjC,IAAIlB,EACJszB,EAAUzd,GACV,IAAI4kB,EAAQ/G,EAAU7d,EAAGyJ,EAAGnV,KAAMjJ,GASlC,OARIu5B,GACAz6B,EAAOy6B,EAAMz6B,KACbyoB,EAAQnK,UAAUzI,EAAG4kB,EAAMnW,IAAKzO,EAAE+E,IAAM,UACjC/E,EAAE+B,QAAQ/B,EAAE+E,MAEnB5a,EAAO,KAEXszB,EAAUzd,GACH7V,I,6BCpLX,MAAM,aACF8H,EAAY,iBACZmB,EAAgB,oBAChBE,EACAnD,gBAAgB,YACZW,EAAW,SACXT,EAAQ,WACRK,EAAU,YACVG,GAEJ2D,eAAe,OACXC,IAEJ,EAAQ,GACNme,EAAuB,EAAQ,GAC/Bzd,EAAuB,EAAQ,GAC/BF,EAAuB,EAAQ,IAC/BwL,EAAuB,EAAQ,GAC/BE,EAAuB,EAAQ,IAI/BmkB,EAAmB,EAAI7yB,EAE7B,MAAM8yB,EAEF,cACIvxB,KAAKkhB,KAAO,KACZlhB,KAAKohB,QAAUlhB,IACfF,KAAKuR,IAAMrR,IACXF,KAAK2gB,SAAW,KAChB3gB,KAAK2iB,KAAO,KAGZ3iB,KAAKgiB,OAAS9hB,IACdF,KAAKiiB,OAAS,KACdjiB,KAAKmiB,UAAYjiB,IAEjBF,KAAK+kB,IAAM,KACX/kB,KAAKklB,cAAgB,KACrBllB,KAAKmlB,MAAQ,KAEbnlB,KAAKihB,SAAW/gB,IAChBF,KAAKqhB,WAAanhB,KAK1B,MAAM6R,EAEF,YAAYsS,GACRrkB,KAAK4O,GAAKyV,EAAEvV,aAEZ9O,KAAKqlB,QAAU,IAAIkM,EACnBvxB,KAAKuR,IAAMrR,IACXF,KAAKkgB,WAAahgB,IAClBF,KAAK0iB,MAAQxiB,IAGbF,KAAK6O,IAAMwV,EACXrkB,KAAKuO,MAAQ,KACbvO,KAAK0gB,GAAK,KACV1gB,KAAKokB,SAAW,KAChBpkB,KAAKikB,QAAU,EACfjkB,KAAK+iB,KAAO,KACZ/iB,KAAKshB,SAAW,EAChBthB,KAAK2wB,cAAgB,EACrB3wB,KAAKgjB,UAAY,EACjBhjB,KAAK0wB,UAAY1wB,KAAK2wB,cACtB3wB,KAAKglB,IAAM,EACXhlB,KAAK4b,OAAS3a,EACdjB,KAAK4kB,QAAU,GAKvB,MAAM4M,EAEF,cACIxxB,KAAK8O,WAAa,EAClB9O,KAAKmS,IAAM,IAAIwV,QAEf3nB,KAAKskB,WAAa,KAClBtkB,KAAKyxB,WAAa,IAAIrS,EAAQ9R,OAAOzQ,EAAU,MAC/CmD,KAAKmW,MAAQ,KACbnW,KAAK0kB,cAAgB,KACrB1kB,KAAK0xB,QAAU,KACf1xB,KAAKuvB,OAAS,IAAIx0B,MAAMoS,EAAI8G,IAAI0d,MAChC3xB,KAAK4xB,GAAK,IAAI72B,MAAMuC,IAK5B,MASMwjB,EAAc,SAAStU,GAChBA,EAAEkU,GACRiC,KAAO,MAGRkP,EAAa,SAASnT,EAAIlS,GAC5BkS,EAAGnQ,MAAQ,IAAIxT,MAAMu2B,GACrB5S,EAAGnN,IAAM,EACTmN,EAAGwB,WAAaoR,EA1FA,EA4FhB,IAAI5Q,EAAKhC,EAAG2G,QACZ3E,EAAGiC,KAAOjC,EAAGC,SAAW,KACxBD,EAAGW,WAAa,EAChBX,EAAGU,QAAU1C,EAAGnN,IAChBmP,EAAGQ,KAAOxC,EAAGnQ,MAAMmQ,EAAGnN,KACtBmN,EAAGnQ,MAAMmQ,EAAGnN,OAAS,IAAI6N,EAAQ9R,OAAOzQ,EAAU,MAClD6jB,EAAGnP,IAAMmN,EAAGnN,IAAM9S,EAClBigB,EAAGgC,GAAKA,GAGNoR,EAAY,SAAStlB,GACvBA,EAAEkU,GAAKlU,EAAE6Y,QACTvE,EAAYtU,GACZA,EAAE+B,MAAQ,MAiBRwjB,EAAY,SAASvlB,GACvB,IAAI6X,EAAI7X,EAAEqC,IACVgjB,EAAWrlB,GAbO,SAASA,EAAG6X,GAC9B,IAAI2N,EAAW/kB,EAAOoc,SAAS7c,GAC/B6X,EAAEoN,WAAWQ,UAAUD,GACvB/kB,EAAOmc,YAAY4I,EAAUlyB,EAAqB,IAAIsf,EAAQ9R,OAAOjQ,EAAamP,IAClFS,EAAOmc,YAAY4I,EAAUpyB,EAAkB,IAAIwf,EAAQ9R,OAAOpQ,EAAY+P,EAAOoc,SAAS7c,KAU9F0lB,CAAc1lB,EAAG6X,GACjBlX,EAAIglB,UAAU3lB,GACd6X,EAAEqN,QAAUjwB,EAAKyH,YAAY,OAyCjC/S,EAAOD,QAAQ6b,UAAkBA,EACjC5b,EAAOD,QAAQq7B,SAAkBA,EACjCp7B,EAAOD,QAAQyvB,SAAkB,EACjCxvB,EAAOD,QAAQksB,SAAkB,EACjCjsB,EAAOD,QAAQgtB,YAAkB,EACjC/sB,EAAOD,QAAQk8B,WAAkB,EACjCj8B,EAAOD,QAAQ+uB,YAAkB,GACjC9uB,EAAOD,QAAQotB,UAAkB,GACjCntB,EAAOD,QAAQ06B,eAAkB,GACjCz6B,EAAOD,QAAQm8B,SAAkB,IACjCl8B,EAAOD,QAAQy0B,SAAkB,IACjCx0B,EAAOD,QAAQiqB,YAnLK,EAoLpBhqB,EAAOD,QAAQkM,UAjBG,SAASoK,IAJP,SAASA,GACzBslB,EAAUtlB,GAKV8lB,CADA9lB,EAAIA,EAAEqC,IAAIyV,aAiBdnuB,EAAOD,QAAQ4O,aAlCM,WACjB,IAAIuf,EAAI,IAAImN,EACRhlB,EAAI,IAAIuF,EAAUsS,GAOtB,OANAA,EAAEC,WAAa9X,EAEX7K,EAAI4iB,qBAAqB/X,EAAGulB,EAAW,QAAU9wB,IACjDuL,EAAI,MAGDA,GA0BXrW,EAAOD,QAAQ8O,cApDO,SAASwH,GAC3B,IAAI6X,EAAI7X,EAAEqC,IACN6P,EAAK,IAAI3M,EAAUsS,GAQvB,OAPA7X,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAI6N,EAAQ9R,OAAOjQ,EAAaqhB,GACjDjd,EAAKwvB,aAAazkB,GAClBkS,EAAG4C,SAAW9U,EAAE8U,SAChB5C,EAAGiS,cAAgBnkB,EAAEmkB,cACrBjS,EAAGqE,KAAOvW,EAAEuW,KACZrE,EAAGgS,UAAYhS,EAAGiS,cAClBkB,EAAWnT,GACJA,GA2CXvoB,EAAOD,QAAQirB,cA9GO,SAAS3U,GAC3B,IAAIkU,EAAK,IAAI6Q,EAKb,OAJA/kB,EAAEkU,GAAGiC,KAAOjC,EACZA,EAAGC,SAAWnU,EAAEkU,GAChBA,EAAGiC,KAAO,KACVnW,EAAEkU,GAAKA,EACAA,GAyGXvqB,EAAOD,QAAQ4qB,YAAkBA,EACjC3qB,EAAOD,QAAQq8B,gBA1CS,SAAS/lB,EAAGkS,GAChCoT,EAAUpT,K,6BCpKd,MAAQ/hB,gBAAgB,SAAEE,IAAe,EAAQ,GAC3CuiB,EAAU,EAAQ,GA8DxBjpB,EAAOD,QAAQs8B,SAAoB,IACnCr8B,EAAOD,QAAQu8B,MA7Df,MACI,YAAYjmB,GACRxM,KAAK4O,GAAKpC,EAAEqC,IAAIC,aAChB9O,KAAKimB,EAAI,GACTjmB,KAAK9H,EAAI,GACT8H,KAAKkiB,KAAO,GACZliB,KAAKrF,MAAQ,KACbqF,KAAKgqB,SAAW,GAChBhqB,KAAKmnB,SAAW,GAChBnnB,KAAK+hB,UAAY,EACjB/hB,KAAK6hB,WAAY,EACjB7hB,KAAK4hB,aAAe,EACpB5hB,KAAK0yB,QAAU,GACf1yB,KAAKO,YAAc,EACnBP,KAAKQ,gBAAkB,EACvBR,KAAKK,OAAS,OA+CtBlK,EAAOD,QAAQy8B,eAtCQ,SAASnmB,EAAGuJ,GAC/B,OAAOvJ,EAAE+B,MAAMwH,IAsCnB5f,EAAOD,QAAQwvB,WAnCI,SAASlZ,EAAGuJ,GAG3B,IAAK,IAAI3f,EAAE2f,EAAO3f,EAAEoW,EAAE+E,IAAKnb,IAAK,CAC5B,IAAIw8B,EAAMpmB,EAAE+B,MAAMnY,GAClBoW,EAAE+B,MAAMnY,GAAK,IAAIgpB,EAAQ9R,OAAOslB,EAAIrlB,KAAMqlB,EAAIv7B,SA+BtDlB,EAAOD,QAAQq0B,kBAfW,SAASrb,EAAG2jB,EAAc/H,GAChD,IAAK,IAAI10B,EAAI,EAAGA,EAAI8Y,EAAEwjB,QAAQ94B,QAAUsV,EAAEwjB,QAAQt8B,GAAG+c,SAAW2X,EAAI10B,IAChE,GAAI00B,EAAK5b,EAAEwjB,QAAQt8B,GAAGgd,OAEG,MADrByf,EAEI,OAAO3jB,EAAEwjB,QAAQt8B,GAAG8c,QAAQjF,SAGxC,OAAO,MAQX9X,EAAOD,QAAQkxB,gBAzBS,SAAS5a,EAAGua,GAChC,IAAK,IAAI3wB,EAAI,EAAGA,EAAI2wB,EAAGhY,UAAW3Y,IAC9B2wB,EAAG/X,OAAO5Y,GAAK,IAAIgpB,EAAQ9R,OAAOzQ,EAAU,OAwBpD1G,EAAOD,QAAQ48B,iBA/CU,SAAStmB,EAAG3U,GACjC,OAAO,IAAIunB,EAAQzQ,SAASnC,EAAG3U,K,6BCvBnC,MACI8E,gBAAgB,WACZO,EAAU,cACVE,GACH,aACDnE,GACA,EAAQ,IACN,WAAEiT,GAAe,EAAQ,GACzBkT,EAAU,EAAQ,GAClBzd,EAAU,EAAQ,GAClBC,EAAU,EAAQ,KAClB,WACFmL,EAAU,SACVC,GACA,EAAQ,IACNC,EAAU,EAAQ,GAClBvL,EAAU,EAAQ,IAClBwL,EAAU,EAAQ,IAElB6lB,EAAkB,CACpB,WACA,MACA,UACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACFC,IAAI/mB,GAAKhT,EAAagT,IAElBgnB,EAAY,SAAS37B,GACvB,OAAOy7B,EAAgBz7B,EAAI,IAQzB2c,EAAM,CACR6Y,SAAa,EACbG,YAAa,EACbiG,MAAa,EACbC,QAAa,EACbrE,OAAa,EACbI,MAAa,EACbhb,OAAa,EACbkZ,OAAa,EACbE,OAAa,EACbE,OAAa,EACbE,OAAY,GACZE,OAAY,GACZE,QAAY,GACZE,QAAY,GACZE,OAAY,GACZE,QAAY,GACZE,OAAY,GACZE,OAAY,GACZE,OAAY,GACZE,QAAY,GACZQ,MAAY,GACZE,MAAY,GACZN,UAAY,GACZpL,QAAY,GACZ+N,KAAY,IAkCVjc,EAASzc,EAAa,UAAU,GAYhCm6B,EAAc,SAAS5mB,EAAG0C,EAAGoE,EAAIC,EAAIC,EAAI6f,GAC3C,IAAInS,EAAO1U,EAAE+E,IAcb,GAZA6N,EAAQrK,UAAUvI,EAAG0C,GACrBkQ,EAAQrK,UAAUvI,EAAG8G,GACrB8L,EAAQrK,UAAUvI,EAAG+G,GAEhB8f,GACDjU,EAAQrK,UAAUvI,EAAGgH,GAErBhH,EAAEkU,GAAGW,WAAazf,EAAOwgB,SACzBzgB,EAAIoiB,UAAUvX,EAAG0U,EAAMmS,GAEvB1xB,EAAIgjB,iBAAiBnY,EAAG0U,EAAMmS,GAE9BA,EAAQ,CACR,IAAIvlB,EAAKtB,EAAE+B,MAAM/B,EAAE+E,IAAI,UAChB/E,EAAE+B,QAAQ/B,EAAE+E,KACnBiC,EAAG2B,QAAQrH,KAIbwlB,EAAiB,SAAS9mB,EAAG8G,EAAIC,EAAIE,EAAKxT,GAC5C,IAAIyjB,EAAKC,EAAgBnX,EAAG8G,EAAIrT,GAGhC,OAFIyjB,EAAG/V,YACH+V,EAAKC,EAAgBnX,EAAG+G,EAAItT,KAC5ByjB,EAAG/V,YACPylB,EAAY5mB,EAAGkX,EAAIpQ,EAAIC,EAAIE,EAAK,IACzB,IAoCL8f,EAAa,SAASC,EAAQvzB,EAAOwzB,GACvC,MAAM/P,EAAKzW,EAAOgc,YAAYuK,EAAQC,GAEtC,OADAvnB,EAAWjM,GAASgU,EAAIib,OACpBxL,EAAG/V,WACH6lB,EAAOrL,OAAS,GAAGloB,EACZ,MAECyjB,GAGVC,EAAkB,SAASnX,EAAG3V,EAAGoJ,GACnC,IAAI2xB,EACJ,OAAO/6B,EAAE2W,SACL,KAAKtQ,EACL,KAAKE,EACDw0B,EAAK/6B,EAAEQ,MAAMiY,UACb,MACJ,QACIsiB,EAAKplB,EAAEqC,IAAI+iB,GAAG/6B,EAAE2W,SAGxB,OAAOokB,EAAK3kB,EAAOgc,YAAY2I,EAAIplB,EAAEqC,IAAI0gB,OAAOtvB,IAAUmf,EAAQ3Q,gBAGtEtY,EAAOD,QAAQw9B,OA7BA,SAASr9B,EAAGs9B,EAAI1nB,GAC3B,OAAc,OAAP0nB,GACFA,EAAGxL,MAAS,GAAKlc,EADD,KACcsnB,EAAWI,EAAI1nB,EAAG5V,EAAEwY,IAAI0gB,OAAOtjB,KA4BtE9V,EAAOD,QAAQ+d,IAAmBA,EAClC9d,EAAOD,QAAQk9B,YAAmBA,EAClCj9B,EAAOD,QAAQo9B,eAAmBA,EAClCn9B,EAAOD,QAAQ8d,cA7DO,SAASxH,EAAG8G,EAAIC,EAAIE,EAAKxT,GAC3C,IAAKqzB,EAAe9mB,EAAG8G,EAAIC,EAAIE,EAAKxT,GAChC,OAAQA,GACJ,KAAKgU,EAAI+a,UACL,OAAOttB,EAAOsuB,iBAAiBxjB,EAAG8G,EAAIC,GAC1C,KAAKU,EAAI+Z,QAAS,KAAK/Z,EAAIia,OAAQ,KAAKja,EAAIma,QAC5C,KAAKna,EAAIqa,OAAQ,KAAKra,EAAIua,OAAQ,KAAKva,EAAI2a,QAAS,CAChD,IAAI/a,EAAK3G,EAAI6G,SAAST,GAClBQ,EAAK5G,EAAI6G,SAASR,GACtB,OAAW,IAAPM,IAAuB,IAAPC,EACTpS,EAAO4uB,gBAAgB9jB,EAAG8G,EAAIC,GAE9B7R,EAAOwuB,gBAAgB1jB,EAAG8G,EAAIC,EAAIta,EAAa,gCAAgC,IAE9F,QACI,OAAOyI,EAAOwuB,gBAAgB1jB,EAAG8G,EAAIC,EAAIta,EAAa,yBAAyB,MA+C/F9C,EAAOD,QAAQ09B,iBA1CU,SAASpnB,EAAG8G,EAAIC,EAAItT,GACzC,IAAIwT,EAAM,IAAI2L,EAAQ9R,OACtB,OAAKgmB,EAAe9mB,EAAG8G,EAAIC,EAAIE,EAAKxT,IAGxBwT,EAAIogB,YAFL,MAwCf19B,EAAOD,QAAQq9B,WAAmBA,EAClCp9B,EAAOD,QAAQytB,gBAAmBA,EAClCxtB,EAAOD,QAAQi8B,UA3IG,SAAS3lB,GACvBA,EAAEqC,IAAI0gB,OAAOtb,EAAI6Y,UAAe,IAAI9f,EAASR,EAAGvT,EAAa,WAAW,IACxEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIgZ,aAAe,IAAIjgB,EAASR,EAAGvT,EAAa,cAAc,IAC3EuT,EAAEqC,IAAI0gB,OAAOtb,EAAIif,OAAe,IAAIlmB,EAASR,EAAGvT,EAAa,QAAQ,IACrEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIkf,SAAe,IAAInmB,EAASR,EAAGvT,EAAa,UAAU,IACvEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI6a,QAAe,IAAI9hB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIib,OAAe,IAAIliB,EAASR,EAAGvT,EAAa,QAAQ,IACrEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIC,QAAe,IAAIlH,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAImZ,QAAe,IAAIpgB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIqZ,QAAe,IAAItgB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIuZ,QAAe,IAAIxgB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIyZ,QAAe,IAAI1gB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI2Z,QAAe,IAAI5gB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI6Z,SAAe,IAAI9gB,EAASR,EAAGvT,EAAa,UAAU,IACvEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI+Z,SAAe,IAAIhhB,EAASR,EAAGvT,EAAa,UAAU,IACvEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIia,QAAe,IAAIlhB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIma,SAAe,IAAIphB,EAASR,EAAGvT,EAAa,UAAU,IACvEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIqa,QAAe,IAAIthB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIua,QAAe,IAAIxhB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIya,QAAe,IAAI1hB,EAASR,EAAGvT,EAAa,SAAS,IACtEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI2a,SAAe,IAAI5hB,EAASR,EAAGvT,EAAa,UAAU,IACvEuT,EAAEqC,IAAI0gB,OAAOtb,EAAImb,OAAe,IAAIpiB,EAASR,EAAGvT,EAAa,QAAQ,IACrEuT,EAAEqC,IAAI0gB,OAAOtb,EAAIqb,OAAe,IAAItiB,EAASR,EAAGvT,EAAa,QAAQ,IACrEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI+a,WAAe,IAAIhiB,EAASR,EAAGvT,EAAa,YAAY,IACzEuT,EAAEqC,IAAI0gB,OAAOtb,EAAI2P,SAAe,IAAI5W,EAASR,EAAGvT,EAAa,UAAU,KAoH3E9C,EAAOD,QAAQ05B,iBA5GU,SAASpjB,EAAG3V,GACjC,IAAI+6B,EACJ,GAAK/6B,EAAEi9B,aAA4C,QAA5BlC,EAAK/6B,EAAEQ,MAAMiY,YAC/BzY,EAAEk9B,oBAAmD,QAA5BnC,EAAK/6B,EAAEQ,MAAMiY,WAAsB,CAC7D,IAAI3Y,EAAOsW,EAAOgc,YAAY2I,EAAI7kB,EAAWP,EAAGkJ,IAChD,GAAI/e,EAAKoX,aACL,OAAOpX,EAAKwX,SAEpB,OAAO8kB,EAAUp8B,EAAE2W,UAqGvBrX,EAAOD,QAAQ+8B,UAAmBA,G,6BCnNlC,MAAM,aACF10B,EAAY,cACZD,EAAa,YACbI,EACA/B,gBAAgB,aACZG,EAAY,SACZc,EAAQ,mBACRb,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRG,EAAW,YACXS,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,cACVE,GACH,aACDnE,GACA,EAAQ,IACN,OACFgyB,EAAM,IACNF,EAAG,kBACHiJ,EACA5Q,UAAU,OACN8J,EAAM,QACNa,EAAO,QACPY,EAAO,OACPV,EAAM,QACNE,EAAO,QACPvC,EAAO,WACPqI,EAAU,UACVlF,EAAS,OACTpB,EAAM,MACNsB,EAAK,YACLiF,EAAW,WACXC,EAAU,WACVC,EAAU,YACVhI,EAAW,YACXD,EAAW,YACXK,EAAW,QACXqB,EAAO,OACPhC,EAAM,MACNwD,EAAK,OACLR,EAAM,YACNwF,EAAW,SACX5H,EAAQ,UACRC,EAAS,WACThB,EAAU,MACVyD,EAAK,OACL5B,EAAM,QACNrB,EAAO,OACPmB,EAAM,YACNiH,EAAW,OACXC,EAAM,OACN9G,EAAM,UACN+G,EAAS,QACT3H,EAAO,WACP4H,GAAU,YACVzH,GAAW,YACXD,GAAW,YACX2H,GAAW,OACXrG,GAAM,OACNE,GAAM,OACNpB,GAAM,YACN9J,GAAW,QACXsR,GAAO,WACPC,GAAU,YACVjJ,GAAW,YACXkJ,GAAW,OACXpG,GAAM,UACNqG,KAEJ,EAAQ,KACN,eACF/pB,GAAc,eACdC,GAAc,oBACde,IACA,EAAQ,IACN,WACFG,GAAU,YACVK,IACA,EAAQ,GACN6S,GAAU,EAAQ,GAClBD,GAAU,EAAQ,IAClBvd,GAAU,EAAQ,KAClB,WACFmL,GAAU,cACV8c,GAAa,iBACbrC,IACA,EAAQ,IACN7lB,GAAU,EAAQ,GAClBwL,GAAU,EAAQ,IAClBF,GAAU,EAAQ,GAClBvL,GAAU,EAAQ,IA6DlBqzB,GAAK,SAASvoB,EAAGkV,EAAMtrB,GACzB,OAAOsrB,EAAOtrB,EAAEq1B,GAGduJ,GAAK,SAASxoB,EAAGkV,EAAMtrB,GACzB,OAAOsrB,EAAOtrB,EAAE6hB,GAOdgd,GAAM,SAASzoB,EAAGkV,EAAMuE,EAAG7vB,GAC7B,OAAO20B,EAAI30B,EAAE6hB,GAAKgO,EAAEgF,EAAO70B,EAAE6hB,IAAMzL,EAAE+B,MAAMmT,EAAOtrB,EAAE6hB,IAGlDid,GAAM,SAAS1oB,EAAGkV,EAAMuE,EAAG7vB,GAC7B,OAAO20B,EAAI30B,EAAEi2B,GAAKpG,EAAEgF,EAAO70B,EAAEi2B,IAAM7f,EAAE+B,MAAMmT,EAAOtrB,EAAEi2B,IA6gBlD8I,GAAS,SAAS3oB,EAAGkU,EAAItqB,EAAG6V,GAC9B,IAAIvS,EAAItD,EAAEq1B,EACA,IAAN/xB,GAASylB,GAAMuG,WAAWlZ,EAAGkU,EAAGsB,OAAStoB,EAAI,GACjDgnB,EAAGyB,WAAa/rB,EAAE21B,IAAM9f,GAGtBmpB,GAAa,SAAS5oB,EAAGkU,GAC3ByU,GAAO3oB,EAAGkU,EAAIA,EAAGuB,OAAOvB,EAAGyB,WAAY,IAIrCkT,GAAgB,SAAS7oB,EAAGnW,EAAGa,GACjC,GAAIb,EAAEi/B,cAAgBp+B,EAAEo+B,aACpB,OAAOC,GAAMl/B,EAAGa,GAAK,EAAI,EACxB,GAAIb,EAAE0X,cAAgB7W,EAAE6W,aACzB,OAAOynB,GAASn/B,EAAE2X,UAAW9W,EAAE8W,WAAa,EAAI,EAAI,EACnD,CACD,IAAIyF,EAAMtG,GAAIymB,iBAAiBpnB,EAAGnW,EAAGa,EAAGiW,GAAI8G,IAAImb,OAGhD,OAFY,OAAR3b,GACA/R,GAAOyuB,gBAAgB3jB,EAAGnW,EAAGa,GAC1Buc,EAAM,EAAI,IAInBgiB,GAAiB,SAASjpB,EAAGnW,EAAGa,GAClC,IAAIuc,EAEJ,OAAIpd,EAAEi/B,cAAgBp+B,EAAEo+B,aACbI,GAAMr/B,EAAGa,GAAK,EAAI,EACpBb,EAAE0X,cAAgB7W,EAAE6W,aAClBynB,GAASn/B,EAAE2X,UAAW9W,EAAE8W,YAAc,EAAI,EAAI,GAErDyF,EAAMtG,GAAIymB,iBAAiBpnB,EAAGnW,EAAGa,EAAGiW,GAAI8G,IAAIqb,OAChC,OAAR7b,EACOA,EAAM,EAAI,GAGzBjH,EAAEkU,GAAGW,YAAczf,GAAOywB,SAC1B5e,EAAMtG,GAAIymB,iBAAiBpnB,EAAGtV,EAAGb,EAAG8W,GAAI8G,IAAImb,OAC5C5iB,EAAEkU,GAAGW,YAAczf,GAAOywB,SACd,OAAR5e,GACA/R,GAAOyuB,gBAAgB3jB,EAAGnW,EAAGa,GAC1Buc,EAAM,EAAI,KAGfkiB,GAAgB,SAASnpB,EAAG4jB,EAAIC,GAClC,GAAID,EAAGwF,UAAYvF,EAAGuF,QAClB,OAAIxF,EAAG5iB,UAAY6iB,EAAG7iB,SAAW4iB,EAAG5iB,UAAYxQ,EACrC,EAGCozB,EAAG/4B,QAAUg5B,EAAGh5B,MAAS,EAAI,EAI7C,IAAIqsB,EAGJ,OAAO0M,EAAGwF,SACN,KAAK/4B,EACD,OAAO,EACX,KAAKC,EACD,OAAOszB,EAAG/4B,OAASg5B,EAAGh5B,MAAQ,EAAI,EACtC,KAAK0F,EACL,KAAKW,EACL,KAAKD,EACL,KAAKG,EACD,OAAOwyB,EAAG/4B,QAAUg5B,EAAGh5B,MAAQ,EAAI,EACvC,KAAKkG,EACL,KAAKC,EACD,OAAOqsB,GAAcuG,EAAGpiB,UAAWqiB,EAAGriB,WAAa,EAAI,EAE3D,KAAK5Q,EACL,KAAKF,EACD,GAAIkzB,EAAG/4B,QAAUg5B,EAAGh5B,MAAO,OAAO,EAC7B,GAAU,OAANmV,EAAY,OAAO,EAE5BkX,EAAKvW,GAAIumB,OAAOlnB,EAAG4jB,EAAG/4B,MAAMiY,UAAWnC,GAAI8G,IAAIib,OACpC,OAAPxL,IACAA,EAAKvW,GAAIumB,OAAOlnB,EAAG6jB,EAAGh5B,MAAMiY,UAAWnC,GAAI8G,IAAIib,QACnD,MACJ,QACI,OAAOkB,EAAG/4B,QAAUg5B,EAAGh5B,MAAQ,EAAI,EAG3C,GAAW,OAAPqsB,EACA,OAAO,EAEX,IAAI5V,EAAK,IAAIsR,GAAQ9R,OAErB,OADAH,GAAIimB,YAAY5mB,EAAGkX,EAAI0M,EAAIC,EAAIviB,EAAI,GAC5BA,EAAG+lB,YAAc,EAAI,GAO1BgC,GAAW,SAAS3kB,EAAK4kB,GAC3B,IAAIC,GAAU,EACVC,EAASC,GAAe/kB,EAAK4kB,EAAO,EAAI,EAAI,GAChD,IAAe,IAAXE,EAAkB,CAClB,IAAIn+B,EAAIkc,GAAS7C,GACjB,IAAU,IAANrZ,EACA,OAAO,EAEP,EAAIA,GACJm+B,EAASjrB,GACL+qB,EAAO,IAAGC,GAAU,KAExBC,EAAShrB,GACL8qB,GAAQ,IAAGC,GAAU,IAIjC,MAAO,CACHA,QAASA,EACTC,OAAQA,IAUVC,GAAiB,SAAS/kB,EAAK3Z,GACjC,GAAI2Z,EAAI6X,YAAa,CACjB,IAAIlxB,EAAIqZ,EAAI7Z,MACR6X,EAAI7T,KAAKuP,MAAM/S,GAEnB,GAAIA,IAAMqX,EAAG,CACT,GAAa,IAAT3X,EACA,OAAO,EACFA,EAAO,IACZ2X,GAAK,GAGb,OAAOnD,GAAoBmD,GACxB,GAAIgC,EAAIC,cACX,OAAOD,EAAI7Z,MACR,GAAI6+B,GAAQhlB,GAAM,CACrB,IAAIrX,EAAI,IAAIulB,GAAQ9R,OACpB,GAAI8R,GAAQ3K,aAAavD,EAAI/C,SAAUtU,KAAQqX,EAAIilB,QAAU,EACzD,OAAOF,GAAep8B,EAAGtC,GAGjC,OAAO,GAGLqc,GAAY,SAAS/c,GACvB,OAAOA,EAAEsa,cAAgBta,EAAEQ,MAAQ4+B,GAAep/B,EAAG,IAGnDkd,GAAW,SAASld,GACtB,GAAIA,EAAE2W,UAAYxQ,EACd,OAAOnG,EAAEQ,MAEb,GAAI6+B,GAAQr/B,GAAI,CACZ,IAAIgD,EAAI,IAAIulB,GAAQ9R,OACpB,GAAI8R,GAAQ3K,aAAa5d,EAAEsX,SAAUtU,KAAQhD,EAAEs/B,QAAU,EACrD,OAAOt8B,EAAExC,MAGjB,OAAO,GAQLk+B,GAAQ,SAASl/B,EAAGa,GACtB,OAAOb,EAAEgB,MAAQH,EAAEG,OAMjBq+B,GAAQ,SAASr/B,EAAGa,GACtB,OAAOb,EAAEgB,OAASH,EAAEG,OAOlBm+B,GAAW,SAASY,EAAIC,GAC1B,IAAIhgC,EAAImxB,GAAiB4O,GACrBl/B,EAAIswB,GAAiB6O,GAEzB,OAAIhgC,IAAMa,EACC,EACFb,EAAIa,GACD,EAED,GAMTo/B,GAAc,SAAS9pB,EAAG+pB,EAAIC,GAChC,IAAI9S,EACJ,OAAO8S,EAAGZ,SACN,KAAK14B,EAAY,CACb,IAAIu5B,EAAID,EAAGn/B,MAEX,GADAqsB,EAAKvW,GAAIumB,OAAOlnB,EAAGiqB,EAAEnnB,UAAWnC,GAAI8G,IAAI6a,QAC7B,OAAPpL,EAAa,MAEjB,YADA6S,EAAG1kB,UAAU5E,GAAO+b,UAAUyN,IAGlC,KAAKl5B,EACL,KAAKC,EAED,YADA+4B,EAAG1kB,UAAU2kB,EAAGL,SAEpB,QACIzS,EAAKvW,GAAIwW,gBAAgBnX,EAAGgqB,EAAIrpB,GAAI8G,IAAI6a,QACpCpL,EAAG/V,WACHjM,GAAOoiB,eAAetX,EAAGgqB,EAAIv9B,EAAa,iBAAiB,IAKvEkU,GAAIimB,YAAY5mB,EAAGkX,EAAI8S,EAAIA,EAAID,EAAI,IAIjC3jB,GAAYvX,KAAKq7B,MAAQ,SAASh9B,EAAGwB,GACvC,IACIy7B,EAAU,MAAJj9B,EAENk9B,EAAU,MAAJ17B,EAKV,OAASy7B,EAAMC,IARJl9B,IAAM,GAAM,OAQQk9B,EAAMD,GAN1Bz7B,IAAM,GAAM,QAM4B,KAAQ,GAAK,GAG9D4X,GAAW,SAAStG,EAAGhW,EAAGqB,GAG5B,OAFU,IAANA,GACA6J,GAAO2Q,cAAc7F,EAAGvT,EAAa,8BAChB,EAAlBoC,KAAKuP,MAAMpU,EAAIqB,IAIpBgb,GAAW,SAASrG,EAAGhW,EAAGqB,GAG5B,OAFU,IAANA,GACA6J,GAAO2Q,cAAc7F,EAAGvT,EAAa,8BACjCzC,EAAI6E,KAAKuP,MAAMpU,EAAIqB,GAAKA,EAAG,GAKjCkb,GAAc,SAASlF,EAAGgpB,GAC5B,OAAIA,EAAI,EACAA,IAJE,GAIkB,EACZhpB,KAAOgpB,EAGfA,GARE,GAQiB,EACXhpB,GAAKgpB,GASnBC,GAAY,SAAS5+B,EAAG6+B,EAAOxoB,EAAOmT,GACxC,IAAIjrB,EAAIyB,EAAEyC,MACV,GAAU,OAANlE,EAAY,CACZ,IAAI2zB,EAAKlyB,EAAEivB,SACPnN,EAAMoQ,EAAGxwB,OACb,IAAK,IAAIxD,EAAI,EAAGA,EAAI4jB,EAAK5jB,IAAK,CAC1B,IAAIyD,EAAIuwB,EAAGh0B,GAAG4gC,QAAUzoB,EAAMmT,EAAO0I,EAAGh0B,GAAG0jB,KAAOid,EAAM3M,EAAGh0B,GAAG0jB,KAC9D,GAAIrjB,EAAEuY,OAAO5Y,KAAOyD,EAChB,OAAO,MAGnB,OAAOpD,GAOLwgC,GAAc,SAASzqB,EAAGtU,EAAG6+B,EAAOrV,EAAM6U,GAC5C,IAAIvc,EAAM9hB,EAAEivB,SAASvtB,OACjBwwB,EAAKlyB,EAAEivB,SACP+P,EAAM,IAAI9X,GAAQzQ,SAASnC,EAAGwN,GAClCkd,EAAIh/B,EAAIA,EACRsU,EAAE+B,MAAMgoB,GAAIY,YAAYD,GACxB,IAAK,IAAI9gC,EAAI,EAAGA,EAAI4jB,EAAK5jB,IACjBg0B,EAAGh0B,GAAG4gC,QACNE,EAAIloB,OAAO5Y,GAAK+oB,GAAMwT,eAAenmB,EAAGkV,EAAO0I,EAAGh0B,GAAG0jB,KAErDod,EAAIloB,OAAO5Y,GAAK2gC,EAAM3M,EAAGh0B,GAAG0jB,KAEpC5hB,EAAEyC,MAAQu8B,GAGRjH,GAAU,SAASp5B,GACrB,OAAOA,EAAEy+B,cAGPY,GAAU,SAASr/B,GACrB,OAAOA,EAAEkX,cAGPqpB,GAAW,SAAS5qB,EAAGpW,GACzB,IAAIS,EAAI2V,EAAE+B,MAAMnY,GAEhB,QAAIS,EAAEkX,gBAEFkiB,GAAQp5B,KACRuoB,GAAQnO,cAAczE,EAAG3V,IAClB,IAMTwgC,GAAa,SAASxgC,GACxB,OAAOA,EAAEkX,cAA8B,IAAdlX,EAAEs/B,SAIzBmB,GAAY,SAAS9qB,EAAG+E,EAAK1Z,EAAGgY,GAClC,IAAI0nB,EAAK,EACT,EAAG,CACC,IAAIzpB,EAAKtB,EAAE+B,MAAMgD,EAAI1Z,GACjBxB,EAAIyX,EAAGqoB,QACPh+B,EAAI2V,EAAGK,SACX0B,EAAKuC,IAAIja,EAAGo/B,GACZA,GAAMlhC,UACCwB,EAAI,IAOb0a,GAAc,SAAS/F,EAAGgrB,GAC5BtrB,GAAWsrB,GAAS,GACpB,EAAG,CACC,IAAIjmB,EAAM/E,EAAE+E,IACR1Z,EAAI,EAER,IAAM2U,EAAE+B,MAAMgD,EAAI,GAAGxD,cAAgBkiB,GAAQzjB,EAAE+B,MAAMgD,EAAI,MAAS6lB,GAAS5qB,EAAG+E,EAAM,GAE7E,GAAI8lB,GAAW7qB,EAAE+B,MAAMgD,EAAI,IAC9B6lB,GAAS5qB,EAAG+E,EAAM,QACf,GAAI8lB,GAAW7qB,EAAE+B,MAAMgD,EAAI,IAC9B6N,GAAQnK,UAAUzI,EAAG+E,EAAM,EAAGA,EAAM,OACjC,CAEH,IAAIgmB,EAAK/qB,EAAE+B,MAAMgD,EAAI,GAAG4kB,QAExB,IAAKt+B,EAAI,EAAGA,EAAI2/B,GAASJ,GAAS5qB,EAAG+E,EAAM1Z,EAAI,GAAIA,IAAK,CAEpD0/B,GADQ/qB,EAAE+B,MAAMgD,EAAM1Z,EAAI,GAAGs+B,QAGjC,IAAItmB,EAAO,IAAIrW,WAAW+9B,GAC1BD,GAAU9qB,EAAG+E,EAAK1Z,EAAGgY,GACrB,IAAIvB,EAAKvB,GAAWP,EAAGqD,GACvBuP,GAAQhR,YAAY5B,EAAG+E,EAAM1Z,EAAGyW,QAhBhCnB,GAAI6G,cAAcxH,EAAGA,EAAE+B,MAAMgD,EAAI,GAAI/E,EAAE+B,MAAMgD,EAAI,GAAI/E,EAAE+B,MAAMgD,EAAI,GAAIpE,GAAI8G,IAAI+a,WAoBjF,IAFAwI,GAAS3/B,EAAI,EAEN2U,EAAE+E,IAAMA,GAAK1Z,EAAE,WACX2U,EAAE+B,QAAQ/B,EAAE+E,WAClBimB,EAAQ,IAKfC,GAAgB,SAASjrB,EAAGlV,EAAGK,EAAK4+B,GACtC,IAAK,IAAI5c,EAAO,EAAGA,EAHJ,IAGuBA,IAAQ,CAC1C,IAAI+J,EAEJ,GAAKpsB,EAAEw8B,YAKA,CACH,IAAI4D,EAAOzqB,GAAO6b,SAAStc,EAAGlV,EAAED,MAAOM,GACvC,IAAK+/B,EAAK/pB,UAEN,YADAyR,GAAQhK,SAAS5I,EAAG+pB,EAAImB,GAIxB,GADAhU,EAAKvW,GAAIumB,OAAOlnB,EAAGlV,EAAED,MAAMiY,UAAWnC,GAAI8G,IAAI6Y,UACnC,OAAPpJ,EAEA,YADAlX,EAAE+B,MAAMgoB,GAAI1T,mBAZpBa,EAAKvW,GAAIwW,gBAAgBnX,EAAGlV,EAAG6V,GAAI8G,IAAI6Y,UACnCpJ,EAAG/V,WACHjM,GAAOoiB,eAAetX,EAAGlV,EAAG2B,EAAa,SAAS,IAgB1D,GAAIyqB,EAAGG,eAEH,YADA1W,GAAIimB,YAAY5mB,EAAGkX,EAAIpsB,EAAGK,EAAK6U,EAAE+B,MAAMgoB,GAAK,GAGhDj/B,EAAIosB,EAGRhiB,GAAO2Q,cAAc7F,EAAGvT,EAAa,2CAA2C,KAG9E0+B,GAAW,SAASnrB,EAAGlV,EAAGK,EAAKigC,GACjC,IAAK,IAAIje,EAAO,EAAGA,EApCJ,IAoCuBA,IAAQ,CAC1C,IAAI+J,EACJ,GAAIpsB,EAAEw8B,YAAa,CACf,IAAI2C,EAAIn/B,EAAED,MAEV,IADW4V,GAAO6b,SAAStc,EAAGiqB,EAAG9+B,GACvBgW,WAAwE,QAA1D+V,EAAKvW,GAAIumB,OAAOlnB,EAAGiqB,EAAEnnB,UAAWnC,GAAI8G,IAAIgZ,cAG5D,OAFAhgB,GAAOic,aAAa1c,EAAGiqB,EAAG9+B,EAAKigC,QAC/B3qB,GAAO4b,kBAAkB4N,QAKxB/S,EAAKvW,GAAIwW,gBAAgBnX,EAAGlV,EAAG6V,GAAI8G,IAAIgZ,cAActf,WACtDjM,GAAOoiB,eAAetX,EAAGlV,EAAG2B,EAAa,SAAS,IAG1D,GAAIyqB,EAAGG,eAEH,YADA1W,GAAIimB,YAAY5mB,EAAGkX,EAAIpsB,EAAGK,EAAKigC,EAAK,GAGxCtgC,EAAIosB,EAGRhiB,GAAO2Q,cAAc7F,EAAGvT,EAAa,8CAA8C,KAIvF9C,EAAOD,QAAQ+5B,QAAmBA,GAClC95B,EAAOD,QAAQggC,QAAmBA,GAClC//B,EAAOD,QAAQuhC,cAAmBA,GAClCthC,EAAOD,QAAQqc,YAAmBA,GAClCpc,EAAOD,QAAQ4c,SAAmBA,GAClC3c,EAAOD,QAAQy/B,cAAmBA,GAClCx/B,EAAOD,QAAQiuB,aAx8BM,SAAS3X,GAC1B,IAAIkU,EAAKlU,EAAEkU,GAEXA,EAAGW,YAAczf,GAAOwwB,WACxByF,EACA,OAAS,CACL3rB,GAAWwU,IAAOlU,EAAEkU,IACpB,IAAIqG,EAAKrG,EAAGQ,KAAK7pB,MACb4uB,EAAIc,EAAG7uB,EAAE+tB,EACTvE,EAAOhB,EAAGsB,OAEV5rB,EAAIsqB,EAAGuB,OAAOvB,EAAGyB,aAEjB3V,EAAE8U,UAAY/iB,EAAeD,IAC7BoD,GAAO6uB,eAAe/jB,GAG1B,IAAI+pB,EAAKxB,GAAGvoB,EAAGkV,EAAMtrB,GAGrB,OAFaA,EAAE+sB,QAGX,KAAK+I,EACD9M,GAAQnK,UAAUzI,EAAG+pB,EAAIvB,GAAGxoB,EAAGkV,EAAMtrB,IACrC,MAEJ,KAAKq2B,EAAU,CACX,IAAIqL,EAAQ7R,EAAE7vB,EAAEu2B,IAChBvN,GAAQhK,SAAS5I,EAAG+pB,EAAIuB,GACxB,MAEJ,KAAKpL,EAAW,CACZxgB,GAAWwU,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW+Q,GAC9C,IAAI4D,EAAQ7R,EAAEvF,EAAGuB,OAAOvB,EAAGyB,aAAayK,IACxCxN,GAAQhK,SAAS5I,EAAG+pB,EAAIuB,GACxB,MAEJ,KAAKzD,EACD7nB,EAAE+B,MAAMgoB,GAAIwB,UAAkB,IAAR3hC,EAAE6hB,GAEZ,IAAR7hB,EAAEi2B,GACF3L,EAAGyB,YAEP,MAEJ,KAAKuJ,EACD,IAAK,IAAI9R,EAAI,EAAGA,GAAKxjB,EAAE6hB,EAAG2B,IACtBpN,EAAE+B,MAAMgoB,EAAK3c,GAAGiJ,cACpB,MAEJ,KAAK2J,EAAa,CACd,IAAItxB,EAAI9E,EAAE6hB,EACVmH,GAAQhK,SAAS5I,EAAG+pB,EAAIxP,EAAG/X,OAAO9T,IAClC,MAEJ,KAAKixB,EAAa,CACd,IAAI6L,EAAQjR,EAAG/X,OAAO5Y,EAAE6hB,GACpBggB,EAAK/C,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GACzBqhC,GAAcjrB,EAAGwrB,EAAOC,EAAI1B,GAC5B,MAEJ,KAAKnK,EAAa,CACd,IAAIoK,EAAKhqB,EAAE+B,MAAMymB,GAAGxoB,EAAGkV,EAAMtrB,IACzB6hC,EAAK/C,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GACzBqhC,GAAcjrB,EAAGgqB,EAAIyB,EAAI1B,GACzB,MAEJ,KAAKxJ,GAAa,CACd,IAAIiL,EAAQjR,EAAG/X,OAAO5Y,EAAEq1B,GACpB+K,EAAKvB,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACrB6hC,EAAK/C,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GACzBuhC,GAASnrB,EAAGwrB,EAAOxB,EAAIyB,GACvB,MAEJ,KAAKvD,GACQ3N,EAAG/X,OAAO5Y,EAAE6hB,GAClB9C,QAAQ3I,EAAE+B,MAAMgoB,IACnB,MAEJ,KAAKvJ,GAAa,CACd,IAAIzD,EAAQ/c,EAAE+B,MAAMgoB,GAChB5+B,EAAMs9B,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtByD,EAAIq7B,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAExBuhC,GAASnrB,EAAG+c,EAAO5xB,EAAKkC,GACxB,MAEJ,KAAKy6B,EACD9nB,EAAE+B,MAAMgoB,GAAItE,UAAUhlB,GAAOoc,SAAS7c,IACtC,MAEJ,KAAKqgB,EAAS,CACV,IAAI2J,EAAKxB,GAAGxoB,EAAGkV,EAAMtrB,GACjB6hC,EAAK/C,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GACzBgpB,GAAQnK,UAAUzI,EAAG+pB,EAAK,EAAGC,GAC7BiB,GAAcjrB,EAAGA,EAAE+B,MAAMioB,GAAKyB,EAAI1B,GAClC,MAEJ,KAAKrJ,EAAQ,CACT,IAEIgL,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAGtBgiC,EAAIjnB,eAAiBknB,EAAIlnB,cACzB3E,EAAE+B,MAAMgoB,GAAI1kB,UAAWumB,EAAI/gC,MAAQghC,EAAIhhC,MAAO,IACP,KAA/B6gC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IACtE7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYomB,EAAYC,GAEpChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIC,QAExD,MAEJ,KAAKiZ,GAAQ,CACT,IAEI+K,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAGtBgiC,EAAIjnB,eAAiBknB,EAAIlnB,cACzB3E,EAAE+B,MAAMgoB,GAAI1kB,UAAWumB,EAAI/gC,MAAQghC,EAAIhhC,MAAO,IACP,KAA/B6gC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IACtE7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYomB,EAAYC,GAEpChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAImZ,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEI6K,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAGtBgiC,EAAIjnB,eAAiBknB,EAAIlnB,cACzB3E,EAAE+B,MAAMgoB,GAAI1kB,UAAUe,GAAUwlB,EAAI/gC,MAAOghC,EAAIhhC,SACR,KAA/B6gC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IACtE7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYomB,EAAYC,GAEpChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIqZ,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEI2K,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAGtBgiC,EAAIjnB,eAAiBknB,EAAIlnB,cACzB3E,EAAE+B,MAAMgoB,GAAI1kB,UAAUgB,GAASrG,EAAG4rB,EAAI/gC,MAAOghC,EAAIhhC,SACV,KAA/B6gC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IACtE7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYvF,GAAYC,EAAG0rB,EAAWC,IAElDhrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIuZ,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIyK,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGU,KAA/B8hC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IAC/D7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYzW,KAAKsP,IAAIutB,EAAWC,IAE5ChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIyZ,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIuK,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGU,KAA/B8hC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IAC/D7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYomB,EAAYC,GAEpChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAI2Z,QAExD,MAEJ,KAAKC,EAAS,CACV,IAEIqK,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,GAGtBgiC,EAAIjnB,eAAiBknB,EAAIlnB,cACzB3E,EAAE+B,MAAMgoB,GAAI1kB,UAAUiB,GAAStG,EAAG4rB,EAAI/gC,MAAOghC,EAAIhhC,SACV,KAA/B6gC,EAAYnkB,GAASqkB,MAAmD,KAA/BD,EAAYpkB,GAASskB,IACtE7rB,EAAE+B,MAAMgoB,GAAIzkB,YAAYzW,KAAKuP,MAAMstB,EAAYC,IAE/ChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAI6Z,SAExD,MAEJ,KAAKC,EAAS,CACV,IAEImK,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGW,KAAhC8hC,EAAYtkB,GAAUwkB,MAAoD,KAAhCD,EAAYvkB,GAAUykB,IACjE7rB,EAAE+B,MAAMgoB,GAAI1kB,UAAUqmB,EAAYC,GAElChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAI+Z,SAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIiK,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGW,KAAhC8hC,EAAYtkB,GAAUwkB,MAAoD,KAAhCD,EAAYvkB,GAAUykB,IACjE7rB,EAAE+B,MAAMgoB,GAAI1kB,UAAUqmB,EAAYC,GAElChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIia,QAExD,MAEJ,KAAKC,EAAS,CACV,IAEI+J,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGW,KAAhC8hC,EAAYtkB,GAAUwkB,MAAoD,KAAhCD,EAAYvkB,GAAUykB,IACjE7rB,EAAE+B,MAAMgoB,GAAI1kB,UAAUqmB,EAAYC,GAElChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIma,SAExD,MAEJ,KAAKC,GAAQ,CACT,IAEI6J,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGW,KAAhC8hC,EAAYtkB,GAAUwkB,MAAoD,KAAhCD,EAAYvkB,GAAUykB,IACjE7rB,EAAE+B,MAAMgoB,GAAI1kB,UAAUkB,GAAYmlB,EAAWC,IAE7ChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIqa,QAExD,MAEJ,KAAKC,GAAQ,CACT,IAEI2J,EAAWC,EAFXC,EAAMnD,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GACtBiiC,EAAMnD,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,IAGW,KAAhC8hC,EAAYtkB,GAAUwkB,MAAoD,KAAhCD,EAAYvkB,GAAUykB,IACjE7rB,EAAE+B,MAAMgoB,GAAI1kB,UAAUkB,GAAYmlB,GAAYC,IAE9ChrB,GAAI6G,cAAcxH,EAAG4rB,EAAKC,EAAK7rB,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIua,QAExD,MAEJ,KAAKC,GAAQ,CACT,IACI6J,EADA7lB,EAAKjG,EAAE+B,MAAMymB,GAAGxoB,EAAGkV,EAAMtrB,IAGzBqc,EAAGtB,cACH3E,EAAE+B,MAAMgoB,GAAI1kB,UAAsB,GAAVY,EAAGpb,QACU,KAA7BihC,EAAWvkB,GAAStB,IAC5BjG,EAAE+B,MAAMgoB,GAAIzkB,aAAawmB,GAEzBnrB,GAAI6G,cAAcxH,EAAGiG,EAAIA,EAAIjG,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAIya,QAEtD,MAEJ,KAAKC,EAAS,CACV,IAAIlc,EAAKjG,EAAE+B,MAAMymB,GAAGxoB,EAAGkV,EAAMtrB,IAEzBqc,EAAGtB,cACH3E,EAAE+B,MAAMgoB,GAAI1kB,WAAWY,EAAGpb,OAE1B8V,GAAI6G,cAAcxH,EAAGiG,EAAIA,EAAIjG,EAAE+B,MAAMgoB,GAAKppB,GAAI8G,IAAI2a,SAEtD,MAEJ,KAAK2F,EAAQ,CACT,IAAI9hB,EAAKjG,EAAE+B,MAAMymB,GAAGxoB,EAAGkV,EAAMtrB,IAC7BoW,EAAE+B,MAAMgoB,GAAIwB,UAAUtlB,EAAGohB,aACzB,MAEJ,KAAKhF,EACDyH,GAAY9pB,EAAGA,EAAE+B,MAAMgoB,GAAK/pB,EAAE+B,MAAMymB,GAAGxoB,EAAGkV,EAAMtrB,KAChD,MAEJ,KAAK24B,EAAW,CACZ,IAAI7zB,EAAI9E,EAAE6hB,EACNxhB,EAAIL,EAAEi2B,EACV7f,EAAE+E,IAAMmQ,EAAOjrB,EAAI,EACnB8b,GAAY/F,EAAG/V,EAAIyE,EAAI,GACvB,IAAIs7B,EAAK9U,EAAOxmB,EAChBkkB,GAAQnK,UAAUzI,EAAG+pB,EAAIC,GACzB70B,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KACrB,MAEJ,KAAKsa,EACDsJ,GAAO3oB,EAAGkU,EAAItqB,EAAG,GACjB,MAEJ,KAAK64B,EACG0G,GAAcnpB,EAAGyoB,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GAAI8+B,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,MAAQA,EAAEq1B,EAC/D/K,EAAGyB,YAEHiT,GAAW5oB,EAAGkU,GAClB,MAEJ,KAAKyO,EACGkG,GAAc7oB,EAAGyoB,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GAAI8+B,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,MAAQA,EAAEq1B,EAC/D/K,EAAGyB,YAEHiT,GAAW5oB,EAAGkU,GAClB,MAEJ,KAAK2O,EACGoG,GAAejpB,EAAGyoB,GAAIzoB,EAAGkV,EAAMuE,EAAG7vB,GAAI8+B,GAAI1oB,EAAGkV,EAAMuE,EAAG7vB,MAAQA,EAAEq1B,EAChE/K,EAAGyB,YAEHiT,GAAW5oB,EAAGkU,GAClB,MAEJ,KAAKiU,IACGv+B,EAAEi2B,EAAI7f,EAAE+B,MAAMgoB,GAAI1C,aAAernB,EAAE+B,MAAMgoB,GAAI1C,aAC7CnT,EAAGyB,YAEHiT,GAAW5oB,EAAGkU,GAClB,MAEJ,KAAKkU,GAAY,CACb,IAAI2D,EAAQvD,GAAGxoB,EAAGkV,EAAMtrB,GACpBogC,EAAKhqB,EAAE+B,MAAMgqB,IACbniC,EAAEi2B,EAAImK,EAAG3C,aAAe2C,EAAG3C,aAC3BnT,EAAGyB,aAEH/C,GAAQnK,UAAUzI,EAAG+pB,EAAIgC,GACzBnD,GAAW5oB,EAAGkU,IAElB,MAEJ,KAAKkL,EAAS,CACV,IAAI1wB,EAAI9E,EAAE6hB,EACNgJ,EAAW7qB,EAAEi2B,EAAI,EAErB,GADU,IAANnxB,GAASyG,GAAI+d,WAAWlT,EAAG+pB,EAAGr7B,IAC9ByG,GAAIof,aAAavU,EAAG+pB,EAAItV,GAGrB,CACHP,EAAKlU,EAAEkU,GACP,SAASmX,EAJL5W,GAAY,GACZtf,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KAM7B,MAEJ,KAAK8R,GAAa,CACd,IAAInoB,EAAI9E,EAAE6hB,EAEV,GADU,IAAN/c,GAASyG,GAAI+d,WAAWlT,EAAG+pB,EAAGr7B,IAC9ByG,GAAIof,aAAavU,EAAG+pB,EAAI73B,GACrB,CAEH,IAAI85B,EAAMhsB,EAAEkU,GACR+X,EAAMD,EAAI7X,SACV+X,EAAQF,EAAItX,KACZyX,EAAWH,EAAIpX,QACfwX,EAAWH,EAAIrX,QACfX,EAAM+X,EAAIxW,OAAS0W,EAAMrhC,MAAMa,EAAE6pB,UACjCgF,EAAG7uB,EAAEA,EAAE0B,OAAS,GAAGulB,GAAMuG,WAAWlZ,EAAGisB,EAAIzW,QAC/C,IAAK,IAAI6W,EAAM,EAAGF,EAAWE,EAAMpY,EAAKoY,IACpCzZ,GAAQnK,UAAUzI,EAAGosB,EAAWC,EAAKF,EAAWE,GACpDJ,EAAIzW,OAAS4W,GAAYJ,EAAIxW,OAAS2W,GACtCF,EAAIlnB,IAAMqnB,GAAYpsB,EAAE+E,IAAMonB,GAC9Bh3B,GAAI+d,WAAWlT,EAAGisB,EAAIlnB,KACtBknB,EAAIxW,OAASuW,EAAIvW,OACjBwW,EAAItW,UAAYqW,EAAIrW,UACpBsW,EAAIpX,YAAczf,GAAO0hB,UACzBmV,EAAI9V,KAAO,KACXjC,EAAKlU,EAAEkU,GAAK+X,EAEZvsB,GAAWM,EAAE+E,MAAQknB,EAAIzW,OAASxV,EAAE+B,MAAMqqB,GAAUvhC,MAAMa,EAAE0pB,cAE5D,SAASiW,EAEb,MAEJ,KAAKrD,EAAW,CACRzN,EAAG7uB,EAAEA,EAAE0B,OAAS,GAAGulB,GAAMuG,WAAWlZ,EAAGkV,GAC3C,IAAIxmB,EAAIyG,GAAI8f,aAAajV,EAAGkU,EAAI6V,EAAa,IAARngC,EAAE6hB,EAAU7hB,EAAE6hB,EAAI,EAAIzL,EAAE+E,IAAMglB,GAEnE,GAAI7V,EAAGW,WAAazf,GAAOwwB,WACvB,OAEJ1R,EAAKlU,EAAEkU,GACHxlB,GAAGyG,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KAC5BrF,GAAWwU,EAAGW,WAAazf,GAAOwgB,UAClClW,GAAWwU,EAAGuB,OAAOvB,EAAGyB,UAAY,GAAGgB,SAAWyI,GAClD,SAASiM,EAEb,KAAK1D,EACD,GAAI3nB,EAAE+B,MAAMgoB,GAAIplB,cAAe,CAC3B,IAAI2kB,EAAOtpB,EAAE+B,MAAMgoB,EAAK,GAAGl/B,MACvByiB,EAAOtN,EAAE+B,MAAMgoB,GAAIl/B,MAAQy+B,EAAM,EACjCgD,EAAQtsB,EAAE+B,MAAMgoB,EAAK,GAAGl/B,OAExB,EAAIy+B,EAAOhc,GAAOgf,EAAQA,GAAShf,KACnC4G,EAAGyB,WAAa/rB,EAAE21B,IAClBvf,EAAE+B,MAAMgoB,GAAIwC,UAAUjf,GACtBtN,EAAE+B,MAAMgoB,EAAK,GAAG1kB,UAAUiI,QAE3B,CACH,IAAIgc,EAAOtpB,EAAE+B,MAAMgoB,EAAK,GAAGl/B,MACvByiB,EAAMtN,EAAE+B,MAAMgoB,GAAIl/B,MAAQy+B,EAC1BgD,EAAQtsB,EAAE+B,MAAMgoB,EAAK,GAAGl/B,OAExB,EAAIy+B,EAAOhc,GAAOgf,EAAQA,GAAShf,KACnC4G,EAAGyB,WAAa/rB,EAAE21B,IAClBvf,EAAE+B,MAAMgoB,GAAIyC,YAAYlf,GACxBtN,EAAE+B,MAAMgoB,EAAK,GAAGzkB,YAAYgI,IAGpC,MAEJ,KAAKsa,EAAY,CACb,IAGI6E,EAHAC,EAAO1sB,EAAE+B,MAAMgoB,GACf4C,EAAS3sB,EAAE+B,MAAMgoB,EAAK,GACtB6C,EAAQ5sB,EAAE+B,MAAMgoB,EAAK,GAGzB,GAAI2C,EAAK/nB,eAAiBioB,EAAMjoB,gBAAkB8nB,EAASpD,GAASsD,EAAQC,EAAM/hC,QAAS,CAEvF,IAAIgiC,EAAQJ,EAAOlD,QAAU,EAAImD,EAAK7hC,MACtC8hC,EAAO9hC,MAAQ4hC,EAAOjD,OACtBkD,EAAK7hC,MAASgiC,EAAQD,EAAM/hC,MAAO,MAChC,CACH,IAAIiiC,EAAQC,EAAOC,GACiB,KAA/BF,EAASvlB,GAASolB,KACnBz3B,GAAO2Q,cAAc7F,EAAGvT,EAAa,gCAAgC,IACzEuT,EAAE+B,MAAMgoB,EAAK,GAAGzkB,YAAYwnB,IACM,KAA7BC,EAAQxlB,GAASqlB,KAClB13B,GAAO2Q,cAAc7F,EAAGvT,EAAa,+BAA+B,IACxEuT,EAAE+B,MAAMgoB,EAAK,GAAGzkB,YAAYynB,IACK,KAA5BC,EAAQzlB,GAASmlB,KAClBx3B,GAAO2Q,cAAc7F,EAAGvT,EAAa,wCAAwC,IACjFuT,EAAE+B,MAAMgoB,GAAIzkB,YAAY0nB,EAAQD,GAGpC7Y,EAAGyB,WAAa/rB,EAAE21B,IAClB,MAEJ,KAAKJ,GAAa,CACd,IAAI8N,EAAKlD,EAAK,EACdnX,GAAQnK,UAAUzI,EAAGitB,EAAG,EAAGlD,EAAG,GAC9BnX,GAAQnK,UAAUzI,EAAGitB,EAAG,EAAGlD,EAAG,GAC9BnX,GAAQnK,UAAUzI,EAAGitB,EAAIlD,GACzB50B,GAAI+d,WAAWlT,EAAGitB,EAAG,GACrB93B,GAAIoiB,UAAUvX,EAAGitB,EAAIrjC,EAAEi2B,GACvB1qB,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KAErBnb,EAAIsqB,EAAGuB,OAAOvB,EAAGyB,aACjBoU,EAAKxB,GAAGvoB,EAAGkV,EAAMtrB,GACjB8V,GAAW9V,EAAE+sB,SAAW0R,IAG5B,KAAKA,GACIroB,EAAE+B,MAAMgoB,EAAK,GAAG5oB,YACjByR,GAAQnK,UAAUzI,EAAG+pB,EAAIA,EAAK,GAC9B7V,EAAGyB,WAAa/rB,EAAE21B,KAEtB,MAEJ,KAAK0I,GAAY,CACb,IAAI58B,EAAIzB,EAAE6hB,EACNxhB,EAAIL,EAAEi2B,EAEA,IAANx0B,IAASA,EAAI2U,EAAE+E,IAAMglB,EAAK,GAEpB,IAAN9/B,IACAyV,GAAWwU,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW+Q,GAC9Cz9B,EAAIiqB,EAAGuB,OAAOvB,EAAGyB,aAAayK,IAGlC,IAAI6J,EAAIjqB,EAAE+B,MAAMgoB,GAAIl/B,MAChBsnB,GAASloB,EAAI,GAAKu9B,EAAqBn8B,EAE3C,KAAOA,EAAI,EAAGA,IACVoV,GAAOmc,YAAYqN,EAAG9X,IAAQnS,EAAE+B,MAAMgoB,EAAK1+B,IAE/C8J,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KACrB,MAEJ,KAAK0iB,EAAY,CACb,IAAI/7B,EAAI6uB,EAAG7uB,EAAEA,EAAE9B,EAAEu2B,IACbuK,EAAMJ,GAAU5+B,EAAG6uB,EAAG/X,OAAQxC,EAAE+B,MAAOmT,GAC/B,OAARwV,EACAD,GAAYzqB,EAAGtU,EAAG6uB,EAAG/X,OAAQ0S,EAAM6U,GAEnC/pB,EAAE+B,MAAMgoB,GAAIY,YAAYD,GAC5B,MAEJ,KAAKpC,GAAW,CACZ,IAEIlb,EAFA1e,EAAI9E,EAAE6hB,EAAI,EACVpgB,EAAI6pB,EAAOhB,EAAGU,QAAU2F,EAAG7uB,EAAE6pB,UAAY,EAY7C,IATIlqB,EAAI,IACJA,EAAI,GAEJqD,EAAI,IACJA,EAAIrD,EACJ8J,GAAI2Q,gBAAgB9F,EAAG3U,GACvB8J,GAAI+d,WAAWlT,EAAG+pB,EAAK1+B,IAGtB+hB,EAAI,EAAGA,EAAI1e,GAAK0e,EAAI/hB,EAAG+hB,IACxBwF,GAAQnK,UAAUzI,EAAG+pB,EAAK3c,EAAG8H,EAAO7pB,EAAI+hB,GAE5C,KAAOA,EAAI1e,EAAG0e,IACVpN,EAAE+B,MAAMgoB,EAAK3c,GAAGiJ,cACpB,MAEJ,KAAKqR,EACD,MAAMl6B,MAAM,qBAqc5B7D,EAAOD,QAAQovB,cArhCO,SAAS9Y,GAC3B,IAAIkU,EAAKlU,EAAEkU,GACPgB,EAAOhB,EAAGsB,OACV0X,EAAOhZ,EAAGuB,OAAOvB,EAAGyB,UAAY,GAChC1P,EAAKinB,EAAKvW,OAEd,OAAQ1Q,GACJ,KAAKya,EAAQ,KAAKC,GAAQ,KAAKE,EAAQ,KAAKM,EAAQ,KAAKE,EACzD,KAAKE,EAAS,KAAKE,EAAQ,KAAKE,EAAS,KAAKE,GAAQ,KAAKE,GAC3D,KAAKhB,EAAQ,KAAKE,EAClB,KAAKgB,GAAQ,KAAKE,EAAS,KAAKE,EAChC,KAAK1C,EAAa,KAAKC,EAAa,KAAKS,EACrCzN,GAAQnK,UAAUzI,EAAGkV,EAAOgY,EAAKjO,EAAGjf,EAAE+E,IAAI,UACnC/E,EAAE+B,QAAQ/B,EAAE+E,KACnB,MAEJ,KAAK8d,EAAO,KAAKF,EAAO,KAAKF,EAAO,CAChC,IAAIxb,GAAOjH,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAGsiB,mBACvBrnB,EAAE+B,QAAQ/B,EAAE+E,KACfmP,EAAGW,WAAazf,GAAOywB,WACvBnmB,GAAWuG,IAAO4c,GAClB3O,EAAGW,YAAczf,GAAOywB,SACxB5e,GAAOA,GAEXvH,GAAWwU,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW0I,GAC1CpY,MAASimB,EAAKjO,GACd/K,EAAGyB,YACP,MAEJ,KAAK4M,EAAW,CACZ,IAAIxd,EAAM/E,EAAE+E,IAAM,EAEdimB,EAAQjmB,EAAM,GAAKmQ,EADfgY,EAAKzhB,GAEbmH,GAAQnK,UAAUzI,EAAG+E,EAAM,EAAGA,GAC1BimB,EAAQ,IACRhrB,EAAE+E,IAAMA,EAAM,EACdgB,GAAY/F,EAAGgrB,IAGnBpY,GAAQnK,UAAUzI,EAAGkU,EAAGsB,OAAS0X,EAAKjO,EAAGjf,EAAE+E,IAAM,GACjD5P,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KACrB,MAEJ,KAAKoa,GACDzf,GAAWwU,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW0R,IAC9ClzB,GAAI+d,WAAWlT,EAAGkU,EAAGnP,KACrB,MAEJ,KAAKqa,EACG8N,EAAKrN,EAAI,GAAK,GACd1qB,GAAI+d,WAAWlT,EAAGkU,EAAGnP,OAo+BrCpb,EAAOD,QAAQ0c,UAAmBA,GAClCzc,EAAOD,QAAQu/B,eAAmBA,GAClCt/B,EAAOD,QAAQm/B,cAAmBA,GAClCl/B,EAAOD,QAAQ2c,SAAmBA,GAClC1c,EAAOD,QAAQogC,YAAmBA,GAClCngC,EAAOD,QAAQyjC,iBAxWU,SAASvJ,EAAIC,GAClC,OAAOsF,GAAc,KAAMvF,EAAIC,IAwWnCl6B,EAAOD,QAAQ6c,YAAmBA,GAClC5c,EAAOD,QAAQ+/B,eAAmBA,GAClC9/B,EAAOD,QAAQyhC,SAAmBA,GAClCxhC,EAAOD,QAAQ0d,UAAmBA,GAClCzd,EAAOD,QAAQ6d,SAAmBA,I,6BCloClC,MAuHM6lB,EAAe,CACjB,GACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,IAqEEC,EAAQ,SAAShiC,EAAGK,GACtB,SAAW,GAAM,IAAO,GAItB4hC,EAAQ,SAASjiC,EAAGK,GACtB,OAAS2hC,EAAMhiC,EAAGK,IAYhB6hC,EAAS,SAAS3jC,EAAGyD,EAAGohB,EAAK5L,GAE/B,OADAjZ,EAAE8rB,KAAQ9rB,EAAE8rB,KAAO4X,EAAMzqB,EAAM4L,GAAUphB,GAAKohB,EAAO4e,EAAMxqB,EAAM4L,GAC1D+e,EAAQ5jC,IA+Bb6jC,EAAY,SAAS7jC,EAAEyD,GACzB,OAAOkgC,EAAO3jC,EAAGyD,EA1FF,GANA,KAsHbmgC,EAAU,SAASE,GACrB,GAAmB,iBAARA,EACP,MAAO,CACHhY,KAAQgY,EACR/W,OAAS+W,GAtHF,EAsHmBL,EAvHnB,EAuHkC,GACzCpO,EAASyO,GAtHF,EAsHmBL,EA1HnB,EA0HkC,GACzC5hB,EAASiiB,GArHF,GAqHmBL,EA7HnB,EA6HkC,GACzCxN,EAAS6N,GAvHF,GAuHmBL,EA/HnB,EA+HkC,GACzClN,GAASuN,GAxHF,GAwHmBL,EA9HnB,GA8HkC,GACzCjN,GAASsN,GA1HF,EA0HmBL,EA7HnB,GA6HkC,GACzC9N,KAAUmO,GA1HH,GA0HoBL,EAhIpB,GAgImC,IArHnC,QAuHR,CACH,IAAIzjC,EAAI8jC,EAAIhY,KAQZ,OAPAgY,EAAI/W,OAAU/sB,GAhIH,EAgIkByjC,EAjIlB,EAiIiC,GAC5CK,EAAIzO,EAAUr1B,GAhIH,EAgIkByjC,EApIlB,EAoIiC,GAC5CK,EAAIjiB,EAAU7hB,GA/HH,GA+HkByjC,EAvIlB,EAuIiC,GAC5CK,EAAI7N,EAAUj2B,GAjIH,GAiIkByjC,EAzIlB,EAyIiC,GAC5CK,EAAIvN,GAAUv2B,GAlIH,GAkIkByjC,EAxIlB,GAwIiC,GAC5CK,EAAItN,GAAUx2B,GApIH,EAoIkByjC,EAvIlB,GAuIiC,GAC5CK,EAAInO,KAAW31B,GApIJ,GAoImByjC,EA1InB,GA0IkC,IA/HlC,OAgIJK,IAmBf/jC,EAAOD,QAAQikC,MA5II,IA6InBhkC,EAAOD,QAAQkkC,WAhBI,SAASvjC,EAAG6C,EAAGwB,EAAGzE,GACjC,OAAOujC,EAAQnjC,GA5IA,EA4Ic6C,GA3Id,EA2I2BwB,GAzI3B,GAyIwCzE,GA1IxC,KA0JnBN,EAAOD,QAAQmkC,WAbI,SAASxjC,EAAG6C,EAAG4gC,GAC9B,OAAON,EAAQnjC,GAhJA,EAgJc6C,GA/Id,EA+I2B4gC,GA9I3B,KA2JnBnkC,EAAOD,QAAQqkC,UAVG,SAAS1jC,EAAG6C,GAC1B,OAAOsgC,EAAQnjC,GApJA,EAoJc6C,GAnJd,IA6JnBvD,EAAOD,QAAQskC,WA7GI,SAASpkC,GACxB,OAAOA,EAAE+sB,QA6GbhtB,EAAOD,QAAQukC,SAhGE,SAASrkC,GACtB,OAAOA,EAAEq1B,GAgGbt1B,EAAOD,QAAQwkC,SAzFE,SAAStkC,GACtB,OAAOA,EAAE6hB,GAyFb9hB,EAAOD,QAAQykC,SAlFE,SAASvkC,GACtB,OAAOA,EAAEi2B,GAkFbl2B,EAAOD,QAAQ0kC,UA3EG,SAASxkC,GACvB,OAAOA,EAAEu2B,IA2Ebx2B,EAAOD,QAAQ2kC,UApEG,SAASzkC,GACvB,OAAOA,EAAEw2B,IAoEbz2B,EAAOD,QAAQ4kC,WA7DI,SAAS1kC,GACxB,OAAOA,EAAE21B,KA6Db51B,EAAOD,QAAQ+0B,OAxIA,SAAU/zB,GACrB,OAAW,IAAJA,GAwIXf,EAAOD,QAAQ60B,IA9IH,SAAUld,GAClB,OAXe,IAWRA,GA8IX1X,EAAOD,QAAQ89B,kBAfW,GAgB1B79B,EAAOD,QAAQ6kC,SA/JI,IAgKnB5kC,EAAOD,QAAQ8kC,UAjKI,SAkKnB7kC,EAAOD,QAAQ+kC,SAhKI,IAiKnB9kC,EAAOD,QAAQglC,UArKI,OAsKnB/kC,EAAOD,QAAQilC,SAjKI,IAkKnBhlC,EAAOD,QAAQklC,WAtKI,OAuKnBjlC,EAAOD,QAAQmlC,WA9JI,IA+JnBllC,EAAOD,QAAQolC,OAtKI,IAuKnBnlC,EAAOD,QAAQqlC,OApQA,EAqQfplC,EAAOD,QAAQslC,OAxQA,EAyQfrlC,EAAOD,QAAQulC,OAvQA,EAwQftlC,EAAOD,QAAQwlC,OAzQA,EA0QfvlC,EAAOD,QAAQylC,QAvXC,CACZ,OACA,QACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,KACA,KACA,KACA,OACA,UACA,OACA,WACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,YAyUJxlC,EAAOD,QAAQktB,SAtUE,CACb8I,QAAa,EACbO,SAAa,EACbC,UAAa,EACb2H,YAAa,EACb3I,WAAa,EACbc,YAAa,EACbL,YAAa,EACbC,YAAa,EACbW,YAAa,EACb2H,YAAa,EACb1H,YAAa,GACbsH,YAAa,GACbzH,QAAa,GACbK,OAAa,GACbC,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,QAAa,GACbE,QAAa,GACbE,OAAa,GACbE,QAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,QAAa,GACb4F,OAAa,GACb1F,OAAa,GACbE,UAAa,GACblD,OAAa,GACboD,MAAa,GACbE,MAAa,GACbE,MAAa,GACbsF,QAAa,GACbC,WAAa,GACbhJ,QAAa,GACbvI,YAAa,GACbmR,UAAa,GACbL,WAAa,GACbC,WAAa,GACbzI,YAAa,GACbkJ,YAAa,GACbJ,WAAa,GACbR,WAAa,GACba,UAAa,GACbZ,YAAa,IAwRjB/9B,EAAOD,QAAQ0lC,MArLI,EAsLnBzlC,EAAOD,QAAQ2lC,OAtLI,EAuLnB1lC,EAAOD,QAAQ4lC,MArLI,GAsLnB3lC,EAAOD,QAAQ6lC,OAvLI,GAwLnB5lC,EAAOD,QAAQ8lC,MAxLI,GAyLnB7lC,EAAOD,QAAQ+lC,OA3LI,EA4LnB9lC,EAAOD,QAAQgmC,MA1JD,SAASruB,GACnB,OArBe,IAqBRA,GA0JX1X,EAAOD,QAAQimC,SA1HE,SAAS/lC,EAAEyD,GACxB,OAAOkgC,EAAO3jC,EAAGyD,EAnEF,EAJA,IAiMnB1D,EAAOD,QAAQkmC,UA3FG,SAAShmC,EAAEyD,GACzB,OAAOkgC,EAAO3jC,EAAGyD,EAnGF,EAHA,KAiMnB1D,EAAOD,QAAQmmC,SApHE,SAASjmC,EAAEyD,GACxB,OAAOkgC,EAAO3jC,EAAGyD,EAzEF,GARA,IAqMnB1D,EAAOD,QAAQ+jC,UAAsBA,EACrC9jC,EAAOD,QAAQomC,SA9GE,SAASlmC,EAAEyD,GACxB,OAAOkgC,EAAO3jC,EAAGyD,EAlFF,GARA,IAwMnB1D,EAAOD,QAAQqmC,WAvFI,SAASnmC,EAAG8E,GAC3B,OAAO++B,EAAU7jC,EAAG8E,EArGL,SA4LnB/E,EAAOD,QAAQsmC,WA9II,SAASpmC,EAAGS,GAE3B,OADAT,EAAE8rB,KAAQ9rB,EAAE8rB,KAAO4X,EAvDJ,EACA,GAsDgCjjC,GAtDhC,EAsD+CgjC,EAvD/C,EACA,GAuDRG,EAAQ5jC,IA6InBD,EAAOD,QAAQumC,OAvMI,EAwMnBtmC,EAAOD,QAAQwmC,QAvMI,GAwMnBvmC,EAAOD,QAAQymC,OA3MI,EA4MnBxmC,EAAOD,QAAQ0mC,QA3MI,GA4MnBzmC,EAAOD,QAAQ2mC,OA9MI,EA+MnB1mC,EAAOD,QAAQ4mC,QA1MI,EA2MnB3mC,EAAOD,QAAQ8jC,QAAsBA,EACrC7jC,EAAOD,QAAQ6mC,SAjOE,SAASvmC,GACtB,OAAQojC,EAAapjC,IAAM,EAAK,GAiOpCL,EAAOD,QAAQ8mC,SA9NE,SAASxmC,GACtB,OAAQojC,EAAapjC,IAAM,EAAK,GA8NpCL,EAAOD,QAAQ+mC,UAvOG,SAASzmC,GACvB,OAAyB,EAAlBojC,EAAapjC,IAuOxBL,EAAOD,QAAQgnC,KA/RD,EAgSd/mC,EAAOD,QAAQinC,KA/RD,EAgSdhnC,EAAOD,QAAQknC,MA/RD,EAgSdjnC,EAAOD,QAAQmnC,IA/RD,EAgSdlnC,EAAOD,QAAQ81B,UAhOG,SAASx1B,GACvB,OAAyB,GAAlBojC,EAAapjC,IAgOxBL,EAAOD,QAAQonC,UA7NG,SAAS9mC,GACvB,OAAyB,IAAlBojC,EAAapjC,K,6BC1LxB,MAAM,kBACF2F,EAAiB,kBACjBC,GACA,EAAQ,GAENmhC,EAAgB,IAAMphC,EAAoB,IAAMC,EACtDjG,EAAOD,QAAQqnC,cAAgBA,EAE/BpnC,EAAOD,QAAQgW,WAAa,SAASzV,KAErCN,EAAOD,QAAQsnC,aAAe,EAAQ,IAAiBA,aAGvDrnC,EAAOD,QAAQunC,cADO,YAEtBtnC,EAAOD,QAAQwnC,kBAAoB,EAAQ,IAAiBA,kBAG5DvnC,EAAOD,QAAQynC,eADQ,QAEvBxnC,EAAOD,QAAQ0nC,cAAgB,EAAQ,IAAgBA,cASvDznC,EAAOD,QAAQ2nC,cADO,KAEtB1nC,EAAOD,QAAQ4nC,WAAa,EAAQ,IAAeA,WAGnD3nC,EAAOD,QAAQ6nC,eADQ,SAEvB5nC,EAAOD,QAAQ8nC,eAAiB,EAAQ,IAAgBA,eAGxD7nC,EAAOD,QAAQ+nC,gBADS,OAExB9nC,EAAOD,QAAQgoC,aAAe,EAAQ,IAAiBA,aAGvD/nC,EAAOD,QAAQioC,eADQ,QAKvBhoC,EAAOD,QAAQkoC,gBADS,OAExBjoC,EAAOD,QAAQmoC,aAAe,EAAQ,IAAiBA,aAGvDloC,EAAOD,QAAQooC,cADO,QAEtBnoC,EAAOD,QAAQqoC,cAAgB,EAAQ,IAAeA,cAGtDpoC,EAAOD,QAAQsoC,gBADS,UAExBroC,EAAOD,QAAQuoC,gBAAkB,EAAQ,IAAgBA,gBAGzDtoC,EAAOD,QAAQwoC,mBADY,UAE3BvoC,EAAOD,QAAQyoC,gBAAkB,EAAQ,IAAmBA,gBAE5D,MAAMC,EAAQ,EAAQ,IACtBzoC,EAAOD,QAAQ2oC,cAAgBD,EAAMC,e,6BC3DrC,MAAM,YACFngC,EAAW,WACXG,EAAU,SACVI,EAAQ,SACRE,EAAQ,SACRC,EAAQ,UACRO,EAAS,kBACT5B,EAAiB,iBACjB6B,EAAgB,gBAChBvD,EACAM,gBAAgB,YACZW,EAAW,aACXR,EAAY,SACZe,EAAQ,cACRV,EAAa,SACbS,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,UACRD,EAAS,YACTa,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,YACVG,EAAW,cACXD,GAEJ4D,eAAe,OAAEC,GAAQ,gBACzBhF,EAAe,aACfhD,GACA,EAAQ,IACN,UAAEkT,GAAc,EAAQ,GACxBzK,EAAY,EAAQ,IACpBC,EAAY,EAAQ,IACpB,UAAEm9B,GAAc,EAAQ,IACxB3f,EAAY,EAAQ,IACpBC,EAAY,EAAQ,GACpBxd,EAAY,EAAQ,KACpB,WACFmL,EAAU,SACVC,EAAQ,gBACRuS,GACA,EAAQ,IACNpS,EAAY,EAAQ,KACpB,cAAErP,GAAkB,EAAQ,GAC5BoP,EAAY,EAAQ,IACpBD,EAAY,EAAQ,IACpB,IAAE8xB,GAAQ,EAAQ,IAClBzxB,EAAY8R,EAAQ9R,OACpB2B,EAAYmQ,EAAQnQ,SAEpBgiB,EAAe,SAASzkB,GAC1BA,EAAE+E,MACFpF,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,mBAG9BiQ,EAAkB,SAAShV,EAAG3U,GAChCsU,EAAUK,EAAG3U,EAAK2U,EAAE+E,IAAM/E,EAAEkU,GAAGU,QAAU,qCAGvC4d,EAAmB,SAASvoC,GAC9B,IAAKA,EAAG,MAAMmE,UAAU,qBAGtBqkC,EAA0B,SAASpnC,GACrCmnC,EAA8B,iBAANnnC,IAAqB,EAAFA,KAASA,IAGlDqnC,EAAU,SAASroC,GACrB,OAAOA,IAAMuoB,EAAQ3Q,gBAqBnB0wB,EAAa,SAAS3yB,EAAGsN,GAC3B,IAAI4G,EAAKlU,EAAEkU,GACX,GAAI5G,EAAM,EAAG,CACT,IAAIjjB,EAAI6pB,EAAGU,QAAUtH,EAErB,OADA3N,EAAUK,EAAGsN,GAAO4G,EAAGnP,KAAOmP,EAAGU,QAAU,GAAI,sBAC3CvqB,GAAK2V,EAAE+E,IAAY6N,EAAQ3Q,eACnBjC,EAAE+B,MAAM1X,GACjB,OAAIijB,EAAM/b,GACboO,EAAUK,EAAW,IAARsN,IAAcA,GAAOtN,EAAE+E,IAAK,iBAClC/E,EAAE+B,MAAM/B,EAAE+E,IAAMuI,IAChBA,IAAQ/b,EACRyO,EAAEqC,IAAI4iB,YAGbtlB,EAAUK,GADVsN,EAAM/b,EAAoB+b,IACNqF,EAAMqT,SAAW,EAAG,2BACpC9R,EAAGQ,KAAKke,UACDhgB,EAAQ3Q,eAERqL,GAAO4G,EAAGQ,KAAK7pB,MAAM0X,UAAY2R,EAAGQ,KAAK7pB,MAAM8X,QAAQ2K,EAAM,GAAKsF,EAAQ3Q,iBAMvF4wB,GAAc,SAAS7yB,EAAGsN,GAC5B,IAAI4G,EAAKlU,EAAEkU,GACX,GAAI5G,EAAM,EAAG,CACT,IAAIjjB,EAAI6pB,EAAGU,QAAUtH,EAErB,OADA3N,EAAUK,EAAGsN,GAAO4G,EAAGnP,KAAOmP,EAAGU,QAAU,GAAI,sBAC3CvqB,GAAK2V,EAAE+E,IAAY,KACX1a,EACT,GAAIijB,EAAM/b,EAEb,OADAoO,EAAUK,EAAW,IAARsN,IAAcA,GAAOtN,EAAE+E,IAAK,iBAClC/E,EAAE+E,IAAMuI,EAEf,MAAM9f,MAAM,gCA8Dd4N,GAAa,SAAS4E,EAAGsN,GAC3B,IACI6F,EADAuB,EAAO1U,EAAEkU,GAAGU,QAEZtH,GAAO,GACP3N,EAAUK,EAAGsN,GAAOtN,EAAE0T,YAAcgB,EAAO,GAAI,qBAC/CvB,EAASuB,EAAO,EAAIpH,IAEpB3N,EAAUK,IAAKsN,EAAM,IAAMtN,EAAE+E,KAAO2P,EAAO,GAAI,mBAC/CvB,EAASnT,EAAE+E,IAAMuI,EAAM,GAE3BnY,EAAI+d,WAAWlT,EAAGmT,IAGhBta,GAAU,SAASmH,EAAG3U,GACxB+P,GAAW4E,GAAI3U,EAAI,IAGjBynC,GAAU,SAAS9yB,EAAG/S,EAAM0B,GAC9B,KAAO1B,EAAO0B,EAAI1B,IAAQ0B,IAAM,CAC5B,IAAIokC,EAAS/yB,EAAE+B,MAAM9U,GACjBywB,EAAO,IAAI5c,EAAOiyB,EAAOhyB,KAAMgyB,EAAOloC,OAC1C+nB,EAAQnK,UAAUzI,EAAG/S,EAAM0B,GAC3BikB,EAAQhK,SAAS5I,EAAGrR,EAAI+uB,KAQ1B/iB,GAAa,SAASqF,EAAGsN,EAAKjiB,GAChC,IAAIP,EAAIkV,EAAE+E,IAAM,EACZiuB,EAAOH,GAAY7yB,EAAGsN,GACtB5hB,EAAIsU,EAAE+B,MAAMixB,GAChBrzB,EAAUK,EAAG0yB,EAAQhnC,IAAM4hB,EAAM/b,EAAmB,0BACpDoO,EAAUK,GAAI3U,GAAK,EAAIA,GAAKA,IAAOP,EAAIkoC,EAAO,EAAI,eAClD,IAAIhpC,EAAIqB,GAAK,EAAIP,EAAIO,EAAI2nC,EAAO3nC,EAAI,EACpCynC,GAAQ9yB,EAAGgzB,EAAMhpC,GACjB8oC,GAAQ9yB,EAAGhW,EAAI,EAAGgW,EAAE+E,IAAM,GAC1B+tB,GAAQ9yB,EAAGgzB,EAAMhzB,EAAE+E,IAAM,IAGvBhP,GAAW,SAASiK,EAAGizB,EAASC,GAClC,IAAIjmC,EAAO0lC,EAAW3yB,EAAGizB,GACzBN,EAAW3yB,EAAGkzB,GAAOvqB,QAAQ1b,IA6F3B8L,GAAmB,SAASiH,EAAGmzB,EAAI9nC,GAGrC,GAFAmnC,EAA+B,mBAAPW,GACxBV,EAAwBpnC,GACd,IAANA,EACA2U,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO1P,EAAU+hC,OACrC,CACDne,EAAgBhV,EAAG3U,GACnBsU,EAAUK,EAAG3U,GAAKsnB,EAAMqT,SAAU,2BAClC,IAAIzL,EAAK,IAAI9X,EAASzC,EAAGmzB,EAAI9nC,GAC7B,IAAK,IAAIzB,EAAE,EAAGA,EAAEyB,EAAGzB,IACf2wB,EAAG5X,QAAQ/Y,GAAG+e,QAAQ3I,EAAE+B,MAAM/B,EAAE+E,IAAM1Z,EAAIzB,IAC9C,IAAK,IAAIA,EAAE,EAAGA,EAAEyB,EAAGzB,WACRoW,EAAE+B,QAAQ/B,EAAE+E,KACnB1Z,EAAE,KACA2U,EAAE+E,IACR/E,EAAE+B,MAAM/B,EAAE+E,KAAKquB,YAAY7Y,GAE/BkK,EAAazkB,IAGX5G,GAAoBL,GAEpBC,GAAoB,SAASgH,EAAGmzB,GAClCp6B,GAAiBiH,EAAGmzB,EAAI,IAGtB95B,GAAqBL,GA6BrBq6B,GAAY,SAASrzB,EAAGlV,EAAG2uB,GAC7B,IAAIvrB,EAAMsS,EAASR,EAAGvQ,EAAgBgqB,IACtCzE,EAAgBhV,EAAG,GACnB4S,EAAQpK,aAAaxI,EAAG9R,GACxByR,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBAChCrE,EAAIyqB,SAASnrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+B,MAAM/B,EAAE+E,IAAM,WAEhD/E,EAAE+B,QAAQ/B,EAAE+E,YACZ/E,EAAE+B,QAAQ/B,EAAE+E,MAGjBjK,GAAgB,SAASkF,EAAG7V,GAC9BkpC,GAAUrzB,EAAGS,EAAO2b,YAAYpc,EAAEqC,IAAI4iB,WAAWp6B,MAAOuI,GAAmBjJ,IAyFzEmpC,GAAY,SAAStzB,EAAGlV,EAAG2uB,GAC7B,IAAIvrB,EAAMsS,EAASR,EAAGvQ,EAAgBgqB,IAItC,OAHA7G,EAAQpK,aAAaxI,EAAG9R,GACxByR,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBAChCrE,EAAIuqB,cAAcjrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+E,IAAM,GAC7C/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SAGxB/G,GAAc,SAAS+F,EAAGsN,EAAKjiB,GACjC,IAAIP,EAAI6nC,EAAW3yB,EAAGsN,GAKtB,OAJAmlB,EAAwBpnC,GACxBsU,EAAUK,EAAGlV,EAAEw8B,YAAa,kBAC5B1U,EAAQrK,UAAUvI,EAAGS,EAAO2b,YAAYtxB,EAAED,MAAOQ,IACjDsU,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBACzB/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SAoBxBhL,GAAkB,SAASgK,EAAGuzB,EAAQC,GACxC,IAAI1oC,EAAI,IAAI8nB,EAAQ9R,OAAOpQ,EAAY+P,EAAOoc,SAAS7c,IACvDA,EAAE+B,MAAM/B,EAAE+E,KAAOja,EACjB25B,EAAazkB,IAcXyzB,GAAc,SAASzzB,EAAG0zB,EAAIroC,GAEhC,OADAonC,EAAwBpnC,GACjBqoC,EAAGtK,SACN,KAAK/3B,EAAU,CACX,IAAIqR,EAAIgxB,EAAG7oC,MACX,OAAM,GAAKQ,GAAKA,GAAKqX,EAAEH,UAChB,CACHpY,KAAMsC,EAAa,IAAI,GACvB2+B,IAAK1oB,EAAEC,QAAQtX,EAAE,IAHqB,KAM9C,KAAK8F,EAAU,CACX,IAAIuR,EAAIgxB,EAAG7oC,MACPa,EAAIgX,EAAEhX,EACV,KAAM,GAAKL,GAAKA,GAAKK,EAAEivB,SAASvtB,QAAS,OAAO,KAChD,IAAIjD,EAAOuB,EAAEivB,SAAStvB,EAAE,GAAGlB,KAC3B,MAAO,CACHA,KAAMA,EAAOA,EAAKsX,SAAWhV,EAAa,cAAc,GACxD2+B,IAAK1oB,EAAEF,OAAOnX,EAAE,IAGxB,QAAS,OAAO,OAuGlByQ,GAAgB,SAASkE,EAAGsN,GAC9B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GAEtB,IAAKjjB,EAAEkX,aAAc,CACjB,IAAKb,EAAI+iB,QAAQp5B,GACb,OAAO,KAEXuoB,EAAQnO,cAAczE,EAAG3V,GAE7B,OAAOA,EAAEsX,UAGPxF,GAAgBL,GA6ChBF,GAAiB,SAASoE,EAAGsN,GAC/B,OAAO5M,EAAI0G,UAAUurB,EAAW3yB,EAAGsN,KAQjCtR,GAAgB,SAASgE,EAAGsN,GAC9B,OAAO5M,EAAI6G,SAASorB,EAAW3yB,EAAGsN,KAuChCqmB,GAAO,IAAIxY,QAwDXyY,GAAS,SAAS5zB,EAAG6K,GACvB1V,EAAIgjB,iBAAiBnY,EAAG6K,EAAG+J,QAAS/J,EAAG4J,WAGrCnY,GAAW,SAAS0D,EAAGsN,GACzB,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAOolB,EAAQroC,GAAMA,EAAE2W,QAAU5Q,GAsF/ByjC,GAAoBpnC,EAAa,KAuCjCqnC,GAAe,SAAS9zB,EAAE+zB,EAAGC,GAC/Br0B,EAAUK,EAAGg0B,IAAO9hC,GAAgB8N,EAAEkU,GAAGnP,IAAM/E,EAAE+E,KAAO,EAAO,EAC3D,sDAGFrP,GAAY,SAASsK,EAAG8a,EAAOrG,EAAU+E,EAAKC,GAChD9Z,EAAUK,EAAS,OAANyZ,KAAgBzZ,EAAEkU,GAAGW,WAAazf,EAAOwgB,UAAW,yCACjEZ,EAAgBhV,EAAG8a,EAAQ,GAC3Bnb,EAAUK,EAAGA,EAAEoP,SAAW3a,EAAQ,wCAClCq/B,GAAa9zB,EAAG8a,EAAOrG,GACvB,IAAIC,EAAO1U,EAAE+E,KAAO+V,EAAQ,GAClB,OAANrB,GAAwB,IAAVzZ,EAAEwY,KAChBxY,EAAEkU,GAAGqE,IAAMkB,EACXzZ,EAAEkU,GAAGyE,MAAQa,EACbrkB,EAAIoiB,UAAUvX,EAAG0U,EAAMD,IAEvBtf,EAAIgjB,iBAAiBnY,EAAG0U,EAAMD,GAG9BA,IAAaviB,GAAe8N,EAAEkU,GAAGnP,IAAM/E,EAAE+E,MACzC/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,MAOfnM,GAAa,SAASoH,EAAG8a,EAAOrG,EAAU2D,EAASoB,EAAKC,GAK1D,IAAIrK,EACAsF,EALJ/U,EAAUK,EAAS,OAANyZ,KAAgBzZ,EAAEkU,GAAGW,WAAazf,EAAOwgB,UAAW,yCACjEZ,EAAgBhV,EAAG8a,EAAQ,GAC3Bnb,EAAUK,EAAGA,EAAEoP,SAAW3a,EAAQ,wCAClCq/B,GAAa9zB,EAAG8a,EAAOrG,GAInBC,EADY,IAAZ0D,EACO,EAEAya,GAAY7yB,EAAGoY,GAE1B,IAAIxD,EAAU5U,EAAE+E,KAAO+V,EAAQ,GAC/B,GAAU,OAANrB,GAAczZ,EAAEwY,IAAM,EAAG,CACzB,IAAIvuB,EAAI,CACJ2qB,QAASA,EACTH,SAAUA,GAEdrF,EAASja,EAAIukB,WAAW1Z,EAAG4zB,GAAQ3pC,EAAG2qB,EAASF,OAC5C,CACH,IAAIR,EAAKlU,EAAEkU,GACXA,EAAGqE,IAAMkB,EACTvF,EAAGyE,MAAQa,EAEXtF,EAAG+E,MAAQrE,EACXV,EAAGwE,cAAgB1Y,EAAEoY,QACrBpY,EAAEoY,QAAU1D,EACZR,EAAGW,aAAezf,EAAO+jB,SAAWnZ,EAAEwW,UACtCtC,EAAGW,YAAczf,EAAOqjB,YACxBtjB,EAAIoiB,UAAUvX,EAAG4U,EAASH,GAC1BP,EAAGW,aAAezf,EAAOqjB,YACzBzY,EAAEoY,QAAUlE,EAAGwE,cACftJ,EAAS3a,EAMb,OAHIggB,IAAaviB,GAAe8N,EAAEkU,GAAGnP,IAAM/E,EAAE+E,MACzC/E,EAAEkU,GAAGnP,IAAM/E,EAAE+E,KAEVqK,GAiDL6kB,GAAc,SAASj0B,EAAGk0B,EAAM7oC,GAClC,IAAIqoC,EAAKf,EAAW3yB,EAAGk0B,GACvBv0B,EAAUK,EAAG0zB,EAAG/O,eAAgB,yBAChC,IAAIjiB,EAAIgxB,EAAG7oC,MAGX,OAFA4nC,EAAwBpnC,GACxBsU,EAAUK,EAAG,GAAK3U,GAAKA,GAAKqX,EAAEhX,EAAEivB,SAASvtB,OAAQ,yBAC1C,CACHsV,EAAGA,EACH9Y,EAAGyB,EAAI,IAgDf1B,EAAOD,QAAQ+6B,aAAwBA,EACvC96B,EAAOD,QAAQsrB,gBAAwBA,EACvCrrB,EAAOD,QAAQ2L,aAp7BM,SAAS2K,EAAGsN,GAC7B,OAAQA,EAAM,GAAKA,GAAO/b,EACpB+b,EACCtN,EAAE+E,IAAM/E,EAAEkU,GAAGU,QAAWtH,GAk7BnC3jB,EAAOD,QAAQ4L,UArOG,SAAS0K,EAAGiG,GACtBA,IAAO9S,GAAa8S,IAAO5T,EAC3B2iB,EAAgBhV,EAAG,IAEnBgV,EAAgBhV,EAAG,GACnB4S,EAAQrK,UAAUvI,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAI,IACnCpF,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,mBAGpC6N,EAAQ/L,WAAW7G,EAAGiG,EAAIjG,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+B,MAAM/B,EAAE+E,IAAM,WAC3E/E,EAAE+B,QAAQ/B,EAAE+E,MA4NvBpb,EAAOD,QAAQ6L,YArhCK,SAASyK,EAAGm0B,GAC5B,IAAI/N,EAAMpmB,EAAEqC,IAAIsH,MAEhB,OADA3J,EAAEqC,IAAIsH,MAAQwqB,EACP/N,GAmhCXz8B,EAAOD,QAAQ8L,kBAhhCW,SAASwK,EAAGo0B,GAClC,IAAIhO,EAAMpmB,EAAEqC,IAAI6V,cAEhB,OADAlY,EAAEqC,IAAI6V,cAAgBkc,EACfhO,GA8gCXz8B,EAAOD,QAAQ+L,SAzJE,SAASuK,EAAG3U,EAAGX,GAC5BgL,GAAUsK,EAAG3U,EAAGX,EAAG,EAAG,OAyJ1Bf,EAAOD,QAAQgM,UAAwBA,GACvC/L,EAAOD,QAAQiM,eAr+BQ,SAASqK,EAAG3U,GAC/B,IAAI4b,EACAiN,EAAKlU,EAAEkU,GAEX,GADAvU,EAAUK,EAAG3U,GAAK,EAAG,gBACjB2U,EAAE0T,WAAa1T,EAAE+E,IAAM1Z,EACvB4b,GAAM,MACL,CACWjH,EAAE+E,IAAM3P,EAAOue,YACfriB,EAAgBjG,EACxB4b,GAAM,GAEN9R,EAAIye,eAAe5T,EAAG3U,GACtB4b,GAAM,GAOd,OAHIA,GAAOiN,EAAGnP,IAAM/E,EAAE+E,IAAM1Z,IACxB6oB,EAAGnP,IAAM/E,EAAE+E,IAAM1Z,GAEd4b,GAm9BXtd,EAAOD,QAAQmM,YAlVK,SAASmK,EAAGq0B,EAAQC,EAAQruB,GAC5C,IAAIsuB,EAAK5B,EAAW3yB,EAAGq0B,GACnBG,EAAK7B,EAAW3yB,EAAGs0B,GAEnB1qC,EAAI,EAER,GAAI8oC,EAAQ6B,IAAO7B,EAAQ8B,GACvB,OAAQvuB,GACJ,KAAKxT,EAAU7I,EAAI8W,EAAIyoB,cAAcnpB,EAAGu0B,EAAIC,GAAK,MACjD,KAAK5hC,EAAUhJ,EAAI8W,EAAImoB,cAAc7oB,EAAGu0B,EAAIC,GAAK,MACjD,KAAK7hC,EAAU/I,EAAI8W,EAAIuoB,eAAejpB,EAAGu0B,EAAIC,GAAK,MAClD,QAAS70B,EAAUK,GAAG,EAAO,kBAIrC,OAAOpW,GAoUXD,EAAOD,QAAQoM,WApFI,SAASkK,EAAG3U,GAC3B2pB,EAAgBhV,EAAG3U,GACfA,GAAK,EACLqV,EAAIqF,YAAY/F,EAAG3U,GACR,IAANA,IACLunB,EAAQpK,aAAaxI,EAAGO,EAAWP,EAAGvT,EAAa,IAAI,KACvDkT,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,oBA+ExCpb,EAAOD,QAAQqM,SAAwBA,GACvCpM,EAAOD,QAAQsM,gBAAwBA,GACvCrM,EAAOD,QAAQuM,SA3ME,SAAS+J,EAAGy0B,EAAQ71B,EAAM81B,GACvC1f,EAAgBhV,EAAG,GACnB,IAAI3V,EAAI2V,EAAE+B,MAAM/B,EAAE+E,IAAK,GACvB,OAAI1a,EAAEs6B,eACK2N,EAAUtyB,EAAG3V,EAAEQ,MAAMa,EAAG+oC,EAAQ71B,EAAM81B,GAC1C,GAuMX/qC,EAAOD,QAAQwM,UA5GG,SAAS8J,GACvBgV,EAAgBhV,EAAG,GACnB9K,EAAOquB,cAAcvjB,IA2GzBrW,EAAOD,QAAQyM,OAhCA,aAiCfxM,EAAOD,QAAQ0M,cA/BO,WAElB,OADAsc,QAAQiiB,KAAK,kCACN,GA8BXhrC,EAAOD,QAAQ2M,kBAtBW,WAEtB,OADAqc,QAAQiiB,KAAK,sCACN,GAqBXhrC,EAAOD,QAAQ4M,aA3fM,SAAS0J,EAAGsN,EAAKmM,GAClC,OAAO6Z,GAAUtzB,EAAG2yB,EAAW3yB,EAAGsN,GAAMmM,IA2f5C9vB,EAAOD,QAAQ6M,cA/eO,SAASyJ,EAAG7V,GAC9B,OAAOmpC,GAAUtzB,EAAGS,EAAO2b,YAAYpc,EAAEqC,IAAI4iB,WAAWp6B,MAAOuI,GAAmBjJ,IA+etFR,EAAOD,QAAQiN,SAzfE,SAASqJ,EAAGsN,EAAKjiB,GAC9B,IAAIP,EAAI6nC,EAAW3yB,EAAGsN,GAKtB,OAJAmlB,EAAwBpnC,GACxB2U,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO5P,EAAa7F,GACzCo5B,EAAazkB,GACbU,EAAIuqB,cAAcjrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+E,IAAM,GAC7C/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SAof9BrX,EAAOD,QAAQoN,iBApiBU,SAASkJ,EAAG40B,GACjC,IACIxP,EADA1gB,EAAMiuB,EAAW3yB,EAAG40B,GAEpB3tB,GAAM,EACV,OAAQvC,EAAI1D,SACR,KAAKtQ,EACL,KAAKE,EACDw0B,EAAK1gB,EAAI7Z,MAAMiY,UACf,MACJ,QACIsiB,EAAKplB,EAAEqC,IAAI+iB,GAAG1gB,EAAI1D,SAU1B,OANIokB,UACAplB,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOpQ,EAAY00B,GACxCX,EAAazkB,GACbiH,GAAM,GAGHA,GAihBXtd,EAAOD,QAAQsN,aArgBM,SAASgJ,EAAGsN,GAC7B,IAAIxiB,EAAI6nC,EAAW3yB,EAAGsN,GAEtB,OADA5M,EAAIuqB,cAAcjrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+E,IAAM,GAC7C/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SAmgB9BrX,EAAOD,QAAQuN,WAn8BI,SAAS+I,GACxB,OAAOA,EAAE+E,KAAO/E,EAAEkU,GAAGU,QAAU,IAm8BnCjrB,EAAOD,QAAQwN,eA1kBQ,SAAS8I,EAAG60B,EAAWxpC,GAC1C,IAAIypC,EAAKrB,GAAYzzB,EAAG2yB,EAAW3yB,EAAG60B,GAAYxpC,GAClD,GAAIypC,EAAI,CACJ,IAAI3qC,EAAO2qC,EAAG3qC,KACVihC,EAAM0J,EAAG1J,IAGb,OAFAxY,EAAQrK,UAAUvI,EAAGorB,GACrBzrB,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBACzB5a,EAEX,OAAO,MAkkBXR,EAAOD,QAAQyN,iBAjhBU,SAAS6I,EAAGsN,GACjC,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAG3V,EAAEk9B,mBAAoB,0BACnC,IAAI3J,EAAKvzB,EAAEQ,MAAMkY,UAGjB,OAFA/C,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO8c,EAAG7c,KAAM6c,EAAG/yB,OACxC45B,EAAazkB,GACNA,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SA4gB9BrX,EAAOD,QAAQ0N,WAz4BI,SAAS4I,EAAGsN,GAC3B3S,GAAWqF,EAAGsN,EAAK,IAy4BvB3jB,EAAOD,QAAQ2N,cAjTO,SAAS2I,EAAG3U,GAC9B,OAAOiR,GAAS0D,EAAG3U,KAAOiF,GAiT9B3G,EAAOD,QAAQ4N,gBA3TS,SAAS0I,EAAGsN,GAChC,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAOjjB,EAAEuoC,QAAQvoC,IAAMA,EAAE0qC,gBA0T7BprC,EAAOD,QAAQ6N,eA7QQ,SAASyI,EAAGsN,GAC/B,OAAOhR,GAAS0D,EAAGsN,KAAS3c,GA6QhChH,EAAOD,QAAQ8N,cApSO,SAASwI,EAAGsN,GAC9B,OAAOqlB,EAAW3yB,EAAGsN,GAAK3I,eAoS9Bhb,EAAOD,QAAQ+N,oBA3Qa,SAASuI,EAAGsN,GACpC,OAAOhR,GAAS0D,EAAGsN,KAAS/c,GA2QhC5G,EAAOD,QAAQgO,UA1TG,SAASsI,EAAG3U,GAC1B,OAAOiR,GAAS0D,EAAG3U,KAAOgF,GA0T9B1G,EAAOD,QAAQiO,WAnTI,SAASqI,EAAG3U,GAC3B,OAAOiR,GAAS0D,EAAG3U,KAAO+E,GAmT9BzG,EAAOD,QAAQkO,gBAhTS,SAASoI,EAAG3U,GAChC,OAAOiR,GAAS0D,EAAG3U,IAAM,GAgT7B1B,EAAOD,QAAQmO,aArSM,SAASmI,EAAGsN,GAC7B,OAA4C,IAArC5M,EAAI6G,SAASorB,EAAW3yB,EAAGsN,KAqStC3jB,EAAOD,QAAQoO,YAtYK,SAASpM,EAAGsU,GAC5B,IAAIg1B,EAAIrB,GAAKlpC,IAAIiB,GACjB,QAAKspC,IAES,OAANh1B,GAAgBA,EAAEqC,MAAQ2yB,IAmYtCrrC,EAAOD,QAAQqO,aAnSM,SAASiI,EAAGsN,GAC7B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAOjjB,EAAEkX,cAAgBb,EAAI+iB,QAAQp5B,IAkSzCV,EAAOD,QAAQsO,YAhTK,SAASgI,EAAGsN,GAC5B,OAAOqlB,EAAW3yB,EAAGsN,GAAKga,aAgT9B39B,EAAOD,QAAQuO,aA3RM,SAAS+H,EAAGsN,GAC7B,OAAOhR,GAAS0D,EAAGsN,KAASzc,GA2RhClH,EAAOD,QAAQwO,eAjSQ,SAAS8H,EAAGsN,GAC/B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAOjjB,EAAEk9B,iBAAiBl9B,IAAMA,EAAE4qC,qBAgStCtrC,EAAOD,QAAQ0O,QAzGC,SAAS4H,EAAGsN,GACxB,IAAIxiB,EAAI6nC,EAAW3yB,EAAGsN,GAClBhM,EAAK,IAAIR,EACbJ,EAAIopB,YAAY9pB,EAAGsB,EAAIxW,GACvBkV,EAAE+B,MAAM/B,EAAE+E,KAAOzD,EACjBmjB,EAAazkB,IAqGjBrW,EAAOD,QAAQ2O,SA1PE,SAAS2H,EAAGk1B,EAAQt2B,EAAMu2B,EAAWpqC,GAE7CoqC,EADAA,EACY1lC,EAAgB0lC,GADLtB,GAEf,OAAT9oC,IAAeA,EAAO0E,EAAgB1E,IAC1C,IAAImvB,EAAI,IAAIqY,EAAIvyB,EAAGk1B,EAAQt2B,GACvBwQ,EAASja,EAAI0lB,qBAAqB7a,EAAGka,EAAGib,EAAWpqC,GACvD,GAAIqkB,IAAW3a,EAAQ,CACnB,IAAIiO,EAAI1C,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAGla,MAC3B,GAAI6X,EAAEH,WAAa,EAAG,CAElB,IAAI6yB,EAAK30B,EAAO2b,YAAYpc,EAAEqC,IAAI4iB,WAAWp6B,MAAOuI,GAEpDsP,EAAEF,OAAO,GAAGmG,QAAQysB,IAG5B,OAAOhmB,GA4OXzlB,EAAOD,QAAQ6O,aAnkBM,SAASyH,GAC1BhK,GAAgBgK,IAmkBpBrW,EAAOD,QAAQ+O,gBA9nBS,SAASuH,EAAG6C,GAChC,IAAIpU,EALc,SAASuR,EAAG6C,GAC9B,OAAO,IAAI+P,EAAQhQ,MAAM5C,EAAG6C,GAIpBwyB,CAAcr1B,EAAG6C,GAGzB,OAFA7C,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAI6N,EAAQ9R,OAAOlQ,EAAenC,GACnDg2B,EAAazkB,GACNvR,EAAEmQ,MA2nBbjV,EAAOD,QAAQgP,SAtIE,SAASsH,EAAGsN,GACzB,IAAIxiB,EAAI6nC,EAAW3yB,EAAGsN,GAItB,OAHA3N,EAAUK,EAAGlV,EAAEw8B,YAAa,kBAC5BtnB,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EACVL,EAAOqc,UAAU9c,EAAGlV,EAAED,MAAOmV,EAAE+E,IAAM,IAE5C0f,EAAazkB,GACN,WAEAA,EAAE+B,MAAM/B,EAAE+E,YACV/E,EAAE+B,QAAQ/B,EAAE+E,KACZ,IA4Hfpb,EAAOD,QAAQiP,UApJG,SAASqH,EAAG3U,EAAGX,EAAGgY,GAChC,OAAO9J,GAAWoH,EAAG3U,EAAGX,EAAGgY,EAAG,EAAG,OAoJrC/Y,EAAOD,QAAQkP,WAAwBA,GACvCjP,EAAOD,QAAQmP,QAAwBA,GACvClP,EAAOD,QAAQoP,gBA/yBS,SAASkH,EAAGtR,GAChCsR,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOxQ,IAAgB5B,GAC5C+1B,EAAazkB,IA8yBjBrW,EAAOD,QAAQqP,iBAAwBA,GACvCpP,EAAOD,QAAQsP,kBAAwBA,GACvCrP,EAAOD,QAAQuP,gBAn2BS,SAAU+G,EAAGiF,KAAQC,GAEzC,OADAD,EAAMxV,EAAgBwV,GACf2N,EAAQ5N,kBAAkBhF,EAAGiF,EAAKC,IAk2B7Cvb,EAAOD,QAAQwP,oBAnyBa,SAAS8G,GACjC/F,GAAY+F,EAAGzO,EAAmB6B,IAmyBtCzJ,EAAOD,QAAQyP,gBA74BS,SAAS6G,EAAG3U,GAChConC,EAAwBpnC,GACxB2U,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO5P,EAAa7F,GACzCo5B,EAAazkB,IA24BjBrW,EAAOD,QAAQ0P,kBAAwBA,GACvCzP,EAAOD,QAAQ2P,mBAAwBA,GACvC1P,EAAOD,QAAQ4P,sBAlzBe,SAAS0G,EAAGtU,GACtCsU,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOvQ,EAAoB7E,GAChD+4B,EAAazkB,IAizBjBrW,EAAOD,QAAQ6P,gBAn2BS,SAAUyG,EAAGrU,GACjC,GAAIA,QACAqU,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOzQ,EAAU,MACtC2P,EAAE+E,UACC,CACHytB,EAA8B,iBAAN7mC,GACxB,IAAImW,EAAKiR,EAAgB/S,EAAGrU,GAC5BinB,EAAQpK,aAAaxI,EAAG8B,GACxBnW,EAAImW,EAAGL,SAIX,OAFA9B,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBAEzBpZ,GAw1BXhC,EAAOD,QAAQ8P,gBA54BS,SAASwG,EAAGrU,EAAGwB,GAEnC,IAAI2U,EAWJ,OAZA2wB,EAAwBtlC,GAEZ,IAARA,GACAxB,EAAIc,EAAa,IAAI,GACrBqV,EAAKvB,EAAWP,EAAGrU,KAEnBA,EAAI8D,EAAgB9D,GACpBgU,EAAUK,EAAGrU,EAAEyB,QAAUD,EAAK,qCAC9B2U,EAAKtB,EAASR,EAAGrU,EAAEwZ,SAAS,EAAGhY,KAEnCylB,EAAQpK,aAAaxI,EAAG8B,GACxBnC,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBACzBjD,EAAGjX,OAg4BdlB,EAAOD,QAAQ+P,YA95BK,SAASuG,GACzBA,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOzQ,EAAU,MACtCo0B,EAAazkB,IA65BjBrW,EAAOD,QAAQgQ,eA15BQ,SAASsG,EAAG3U,GAC/BmnC,EAA8B,iBAANnnC,GACxB2U,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO7P,EAAa5F,GACzCo5B,EAAazkB,IAw5BjBrW,EAAOD,QAAQiQ,eA/3BQ,SAAUqG,EAAGrU,GAChC,GAAIA,QACAqU,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOzQ,EAAU,MACtC2P,EAAE+E,UACC,CACH,IAAIjD,EAAKtB,EAASR,EAAGvQ,EAAgB9D,IACrCinB,EAAQpK,aAAaxI,EAAG8B,GACxBnW,EAAImW,EAAGL,SAGX,OADA9B,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBACzBpZ,GAs3BXhC,EAAOD,QAAQkQ,eAnzBQ,SAASoG,GAG5B,OAFAA,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOjQ,EAAamP,GACzCykB,EAAazkB,GACNA,EAAEqC,IAAIyV,aAAe9X,GAizBhCrW,EAAOD,QAAQmQ,cAx+BO,SAASmG,EAAGsN,GAC9BsF,EAAQrK,UAAUvI,EAAG2yB,EAAW3yB,EAAGsN,IACnC3N,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,mBAu+BpCpb,EAAOD,QAAQoQ,iBAr3BU,SAAUkG,EAAGiF,EAAKC,GAEvC,OADAD,EAAMxV,EAAgBwV,GACf2N,EAAQ5N,kBAAkBhF,EAAGiF,EAAKC,IAo3B7Cvb,EAAOD,QAAQqQ,aA1SM,SAASiG,EAAGq0B,EAAQC,GACrC,IAAIC,EAAK5B,EAAW3yB,EAAGq0B,GACnBG,EAAK7B,EAAW3yB,EAAGs0B,GACvB,OAAO5B,EAAQ6B,IAAO7B,EAAQ8B,GAAM9zB,EAAIyoB,cAAc,KAAMoL,EAAIC,GAAM,GAwS1E7qC,EAAOD,QAAQsQ,WAvqBI,SAASgG,EAAGsN,GAC3B,IAAIxiB,EAAI6nC,EAAW3yB,EAAGsN,GAGtB,OAFA3N,EAAUK,EAAGlV,EAAEw8B,UAAUx8B,GAAI,kBAC7B8nB,EAAQhK,SAAS5I,EAAGA,EAAE+E,IAAM,EAAGtE,EAAO6b,SAAStc,EAAGlV,EAAED,MAAOmV,EAAE+B,MAAM/B,EAAE+E,IAAM,KACpE/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SAoqB9BrX,EAAOD,QAAQuQ,YAAwBA,GACvCtQ,EAAOD,QAAQwQ,YAlrBK,SAAS8F,EAAGsN,EAAK5hB,GACjC,IAAIZ,EAAI6nC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAGlV,EAAEw8B,YAAa,kBAC5B,IAAI7N,EAAI,IAAI3Y,EAAOvQ,EAAoB7E,GAGvC,OAFAknB,EAAQrK,UAAUvI,EAAGS,EAAO6b,SAAStc,EAAGlV,EAAED,MAAO4uB,IACjD9Z,EAAUK,EAAGA,EAAE+E,KAAO/E,EAAEkU,GAAGnP,IAAK,kBACzB/E,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG/D,SA6qB9BrX,EAAOD,QAAQyQ,WAtfI,SAAS6F,EAAGsN,GAC3B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAQjjB,EAAE++B,SACN,KAAKr4B,EACL,KAAKC,EACD,OAAO3G,EAAEs/B,QACb,KAAK/4B,EACD,OAAOvG,EAAEQ,MAAMsC,IACnB,KAAKuD,EACD,OAAO+P,EAAO+b,UAAUnyB,EAAEQ,OAC9B,QACI,OAAO,IA4enBlB,EAAOD,QAAQ0Q,WAxuBI,SAAS4F,EAAGsN,GAC3B0H,EAAgBhV,EAAG,GACnB,IAAI3V,EAAIsoC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAG3V,EAAEi9B,YAAa,kBAC5B,IAAI7N,EAAIzZ,EAAE+B,MAAM/B,EAAE+E,IAAM,GACpB1X,EAAI2S,EAAE+B,MAAM/B,EAAE+E,IAAM,GACxBtE,EAAOic,aAAa1c,EAAG3V,EAAEQ,MAAO4uB,EAAGpsB,GACnCoT,EAAO4b,kBAAkBhyB,EAAEQ,cACpBmV,EAAE+B,QAAQ/B,EAAE+E,YACZ/E,EAAE+B,QAAQ/B,EAAE+E,MAguBvBpb,EAAOD,QAAQ2Q,YA7tBK,SAAS2F,EAAGsN,EAAKjiB,GACjConC,EAAwBpnC,GACxB2pB,EAAgBhV,EAAG,GACnB,IAAI3V,EAAIsoC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAG3V,EAAEi9B,YAAa,kBAC5B7mB,EAAOmc,YAAYvyB,EAAEQ,MAAOQ,EAAG2U,EAAE+B,MAAM/B,EAAE+E,IAAM,WACxC/E,EAAE+B,QAAQ/B,EAAE+E,MAwtBvBpb,EAAOD,QAAQ4Q,YArtBK,SAAS0F,EAAGsN,EAAK5hB,GACjCspB,EAAgBhV,EAAG,GACnB,IAAI3V,EAAIsoC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAG3V,EAAEi9B,YAAa,kBAC5B,IAAI7N,EAAI,IAAI3Y,EAAOvQ,EAAoB7E,GACnC2B,EAAI2S,EAAE+B,MAAM/B,EAAE+E,IAAM,GACxBtE,EAAOic,aAAa1c,EAAG3V,EAAEQ,MAAO4uB,EAAGpsB,UAC5B2S,EAAE+B,QAAQ/B,EAAE+E,MA+sBvBpb,EAAOD,QAAQ6Q,aA9lBM,SAASyF,EAAG3U,EAAGqX,GAChC1J,GAAkBgH,EAAG0C,GACrB5H,GAAckF,EAAG3U,IA6lBrB1B,EAAOD,QAAQ8Q,WA/7BI,SAASwF,EAAGsN,GAC3B3S,GAAWqF,EAAGsN,GAAM,GACpBzU,GAAQmH,EAAG,IA87BfrW,EAAOD,QAAQ+Q,YAv7BK,SAASuF,EAAGsN,GAC5BvX,GAASiK,GAAI,EAAGsN,GAChBzU,GAAQmH,EAAG,IAs7BfrW,EAAOD,QAAQiR,WAAwBA,GACvChR,EAAOD,QAAQ4rC,cAxFO,WAElB,OADA5iB,QAAQiiB,KAAK,kCACN,GAuFXhrC,EAAOD,QAAQmR,aAhwBM,SAASmF,EAAGsN,EAAKmM,GAClC4Z,GAAUrzB,EAAG2yB,EAAW3yB,EAAGsN,GAAMmM,IAgwBrC9vB,EAAOD,QAAQoR,cAAwBA,GACvCnR,EAAOD,QAAQsR,SA9vBE,SAASgF,EAAGsN,EAAKjiB,GAC9BonC,EAAwBpnC,GACxB2pB,EAAgBhV,EAAG,GACnB,IAAIlV,EAAI6nC,EAAW3yB,EAAGsN,GACtBtN,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAO5P,EAAa7F,GACzCo5B,EAAazkB,GACbU,EAAIyqB,SAASnrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+B,MAAM/B,EAAE+E,IAAM,WAEhD/E,EAAE+B,QAAQ/B,EAAE+E,YACZ/E,EAAE+B,QAAQ/B,EAAE+E,MAsvBvBpb,EAAOD,QAAQwR,iBAtyBU,SAAS8E,EAAG40B,GAEjC,IAAIxP,EADJpQ,EAAgBhV,EAAG,GAEnB,IAAI0E,EAAMiuB,EAAW3yB,EAAG40B,GAQxB,OAPI50B,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAG5D,UACnBikB,EAAK,MAELzlB,EAAUK,EAAGA,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAGuiB,YAAa,kBAC7ClC,EAAKplB,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAGla,OAGpB6Z,EAAI1D,SACR,KAAKpQ,EACL,KAAKF,EACDgU,EAAI7Z,MAAMiY,UAAYsiB,EACtB,MAEJ,QACIplB,EAAEqC,IAAI+iB,GAAG1gB,EAAI1D,SAAWokB,EAMhC,cADOplB,EAAE+B,QAAQ/B,EAAE+E,MACZ,GA+wBXpb,EAAOD,QAAQyR,aA5wBM,SAAS6E,EAAGsN,GAC7B0H,EAAgBhV,EAAG,GACnB,IAAIlV,EAAI6nC,EAAW3yB,EAAGsN,GACtB5M,EAAIyqB,SAASnrB,EAAGlV,EAAGkV,EAAE+B,MAAM/B,EAAE+E,IAAM,GAAI/E,EAAE+B,MAAM/B,EAAE+E,IAAM,WAChD/E,EAAE+B,QAAQ/B,EAAE+E,YACZ/E,EAAE+B,QAAQ/B,EAAE+E,MAwwBvBpb,EAAOD,QAAQ0R,WAAwBA,GACvCzR,EAAOD,QAAQ2R,eA3nBQ,SAAS2E,EAAG60B,EAAWxpC,GAC1C,IAAIqoC,EAAKf,EAAW3yB,EAAG60B,GACvB7f,EAAgBhV,EAAG,GACnB,IAAIqsB,EAAMoH,GAAYzzB,EAAG0zB,EAAIroC,GAC7B,GAAIghC,EAAK,CACL,IAAIliC,EAAOkiC,EAAIliC,KAIf,OAHUkiC,EAAIjB,IACVziB,QAAQ3I,EAAE+B,MAAM/B,EAAE+E,IAAI,WACnB/E,EAAE+B,QAAQ/B,EAAE+E,KACZ5a,EAEX,OAAO,MAinBXR,EAAOD,QAAQ4R,iBAxQU,SAAS0E,EAAGsN,GACjC0H,EAAgBhV,EAAG,GACnB,IAAI3V,EAAIsoC,EAAW3yB,EAAGsN,GACtB3N,EAAUK,EAAG3V,EAAEk9B,mBAAoB,0BACnCl9B,EAAEQ,MAAMkY,UAAU4F,QAAQ3I,EAAE+B,MAAM/B,EAAE+E,IAAM,WACnC/E,EAAE+B,QAAQ/B,EAAE+E,MAoQvBpb,EAAOD,QAAQ6R,WA7QI,SAASyE,GACxB,OAAOA,EAAEoP,QA6QbzlB,EAAOD,QAAQ8R,mBA/YY,SAASwE,EAAGrU,GACnC,IAAI2V,EAAK,IAAIR,EACT4K,EAAKkH,EAAQ3K,aAAatc,EAAG2V,GAKjC,OAJW,IAAPoK,IACA1L,EAAE+B,MAAM/B,EAAE+E,KAAOzD,EACjBmjB,EAAazkB,IAEV0L,GAyYX/hB,EAAOD,QAAQ+R,cA7iBO,SAASuE,EAAGsN,GAE9B,OADQqlB,EAAW3yB,EAAGsN,GACZ+Z,aA4iBd19B,EAAOD,QAAQoT,gBA3fS,SAASkD,EAAGsN,GAChC,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAIjjB,EAAEuoC,WAAavoC,EAAE0qC,eAAuB1qC,EAAEQ,MAClC,MAyfhBlB,EAAOD,QAAQgS,eAhhBQ,SAASsE,EAAGsN,GAC/B,IAAIioB,EAAKz5B,GAAckE,EAAGsN,GAC1B,OAAO,IAAIzO,SAAS02B,EAAGC,OAAQD,EAAGE,WAAYF,EAAGG,aA+gBrD/rC,EAAOD,QAAQiS,cAvfO,SAASqE,EAAGsN,GAC9B,IAAIjiB,EAAIuQ,GAAeoE,EAAGsN,GAC1B,OAAa,IAANjiB,EAAc,EAAIA,GAsf7B1B,EAAOD,QAAQkS,eAAwBA,GACvCjS,EAAOD,QAAQmS,eA/hBQ,SAASmE,EAAGsN,GAC/B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GAEtB,IAAKjjB,EAAEkX,aAAc,CACjB,IAAKb,EAAI+iB,QAAQp5B,GACb,OAAO,KAEXuoB,EAAQnO,cAAczE,EAAG3V,GAE7B,OAAOA,EAAEsrC,YAuhBbhsC,EAAOD,QAAQoS,cAAwBA,GACvCnS,EAAOD,QAAQqS,aAlfM,SAASiE,EAAGsN,GAC7B,IAAIjiB,EAAI2Q,GAAcgE,EAAGsN,GACzB,OAAa,IAANjiB,EAAc,EAAIA,GAif7B1B,EAAOD,QAAQsS,cAAwBA,GACvCrS,EAAOD,QAAQuS,cA3dO,SAAS+D,EAAGsN,GAC9B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAQjjB,EAAE++B,SACN,KAAK14B,EACL,KAAKS,EACL,KAAKE,EACL,KAAKD,EACL,KAAKP,EACL,KAAKD,EACL,KAAKL,EACD,OAAOlG,EAAEQ,MACb,QACI,OAAO,OAgdnBlB,EAAOD,QAAQwS,YAnbK,SAAS8D,EAAGsN,GAC5B,IAAIhM,EAAKqxB,EAAW3yB,EAAGsN,GAEvB,OAbiB,SAAS0nB,EAAGj0B,EAAMlW,GACnC,IAAI+qC,EAAQ,SAAS51B,GACjBL,EAAUK,EAAGA,aAAa5K,EAAOmQ,WAAayvB,IAAMh1B,EAAEqC,IAAK,kCAC3DrC,EAAE+B,MAAM/B,EAAE+E,KAAO,IAAIjE,EAAOC,EAAMlW,GAClC45B,EAAazkB,IAGjB,OADA2zB,GAAK/tB,IAAIgwB,EAAOZ,GACTY,EAMAC,CAAa71B,EAAEqC,IAAKf,EAAGP,KAAMO,EAAGzW,QAib3ClB,EAAOD,QAAQyS,aAAwBA,GACvCxS,EAAOD,QAAQ0S,aAneM,SAAS4D,EAAGsN,GAC7B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAOjjB,EAAEyrC,aAAezrC,EAAEQ,MAAQ,MAketClB,EAAOD,QAAQ2S,eA/eQ,SAAS2D,EAAGsN,GAC/B,IAAIjjB,EAAIsoC,EAAW3yB,EAAGsN,GACtB,OAAQjjB,EAAE2W,SACN,KAAKpQ,EACD,OAAOvG,EAAEQ,MAAM+T,KACnB,KAAKrO,EACD,OAAOlG,EAAEQ,MACb,QAAS,OAAO,OAyexBlB,EAAOD,QAAQ4S,SAAwBA,GACvC3S,EAAOD,QAAQ6S,aA5YM,SAASyD,EAAGlV,GAE7B,OADA6U,EAAUK,EAAG5P,GAAatF,GAAKA,EAAIgG,EAAa,eACzC6P,EAAI8lB,UAAU37B,IA2YzBnB,EAAOD,QAAQ8S,cArJO,SAASwD,EAAGk0B,EAAM7oC,GACpC,IAAIqoC,EAAKf,EAAW3yB,EAAGk0B,GACvB,OAAQR,EAAGtK,SACP,KAAKj4B,EAAU,CACX,IAAIsgB,EAAMwiB,GAAYj0B,EAAGk0B,EAAM7oC,GAC/B,OAAOomB,EAAI/O,EAAEF,OAAOiP,EAAI7nB,GAE5B,KAAKyH,EAAU,CACX,IAAIqR,EAAIgxB,EAAG7oC,MAEX,OADA8U,EAAUK,GAAM,EAAF3U,KAASA,GAAKA,EAAI,GAAKA,GAAKqX,EAAEH,UAAW,yBAChDG,EAAEC,QAAQtX,EAAI,GAEzB,QAEI,OADAsU,EAAUK,GAAG,EAAO,oBACb,OAwInBrW,EAAOD,QAAQ+S,gBAnIS,SAASuD,EAAG+1B,EAAO1uB,EAAI2uB,EAAO1uB,GAClD,IAAI2uB,EAAOhC,GAAYj0B,EAAG+1B,EAAO1uB,GAC7B6uB,EAAOjC,GAAYj0B,EAAGg2B,EAAO1uB,GAC7B6uB,EAAMD,EAAKxzB,EAAEF,OAAO0zB,EAAKtsC,GAC7BqsC,EAAKvzB,EAAEF,OAAOyzB,EAAKrsC,GAAKusC,GAgI5BxsC,EAAOD,QAAQgT,YAjoCK,SAASsD,GACzB,OAAU,OAANA,EAAmBnQ,EACXmQ,EAAEqC,IAAI6iB,SAgoCtBv7B,EAAOD,QAAQiT,UAnjCG,SAAS1P,EAAM0B,EAAItD,GACjC,GAAI4B,IAAS0B,EAAb,CACAqmB,EAAgB/nB,EAAM5B,GACtBsU,EAAU1S,EAAMA,EAAKoV,MAAQ1T,EAAG0T,IAAK,mCACrC1C,EAAU1S,EAAM0B,EAAGulB,GAAGnP,IAAMpW,EAAGoW,KAAO1Z,EAAG,kBACzC4B,EAAK8X,KAAO1Z,EACZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB+E,EAAGoT,MAAMpT,EAAGoW,KAAO,IAAI6N,EAAQ9R,OAC/B8R,EAAQhK,SAASja,EAAIA,EAAGoW,IAAK9X,EAAK8U,MAAM9U,EAAK8X,IAAMnb,WAC5CqD,EAAK8U,MAAM9U,EAAK8X,IAAMnb,GAC7B+E,EAAGoW,S,6BClKX,MAAM,WAAErF,GAAe,EAAQ,GA4C/B,MAEM02B,EAAY,SAASlc,GACvB,IAAI7W,EAAO6W,EAAEgb,OAAOhb,EAAEla,EAAGka,EAAEtb,MAC3B,GAAa,OAATyE,EACA,OALI,EAMR3D,EAAW2D,aAAgBrW,WAAY,6CACvC,IAAI6V,EAAOQ,EAAKjW,OAChB,OAAa,IAATyV,GARI,GAURqX,EAAEsb,OAASnyB,EACX6W,EAAE1F,IAAM,EACR0F,EAAE7uB,EAAIwX,EAAO,EACNqX,EAAEsb,OAAOtb,EAAE1F,SA4BtB7qB,EAAOD,QAAQ2sC,KAzCH,EA0CZ1sC,EAAOD,QAAQ4sC,YA7EK,SAASjzB,GACzB,OAAOA,EAAKmyB,OAAOrwB,SAAS,EAAG9B,EAAKhY,IA6ExC1B,EAAOD,QAAQ6sC,gBA1ES,SAASlzB,EAAMzZ,GACnCyZ,EAAKhY,GAAKzB,GA0EdD,EAAOD,QAAQ0sC,UAAoBA,EACnCzsC,EAAOD,QAAQ8sC,UA3BG,SAAStc,EAAGxrB,EAAG+nC,EAAUprC,GACvC,KAAOA,GAAG,CACN,GAAY,IAAR6uB,EAAE7uB,EAAS,CACX,IArBA,IAqBI+qC,EAAUlc,GACV,OAAO7uB,EAEP6uB,EAAE7uB,IACF6uB,EAAE1F,MAGV,IAAIxqB,EAAKqB,GAAK6uB,EAAE7uB,EAAKA,EAAI6uB,EAAE7uB,EAC3B,IAAK,IAAIzB,EAAE,EAAGA,EAAEI,EAAGJ,IACf8E,EAAE+nC,KAAcvc,EAAEsb,OAAOtb,EAAE1F,OAE/B0F,EAAE7uB,GAAKrB,EACK,IAARkwB,EAAE7uB,IACF6uB,EAAEsb,OAAS,MACfnqC,GAAKrB,EAGT,OAAO,GAQXL,EAAOD,QAAQgtC,iBAzEU,SAASrzB,GAC9BA,EAAKhY,EAAI,GAyEb1B,EAAOD,QAAQitC,kBAtEW,SAAS32B,EAAGqD,EAAMR,GACxC,IAAIiJ,EAAU,IAAI9e,WAAW6V,GACzBQ,EAAKmyB,QACL1pB,EAAQlG,IAAIvC,EAAKmyB,QACrBnyB,EAAKmyB,OAAS1pB,GAmElBniB,EAAOD,QAAQupB,QA1Ff,MACI,cACIzf,KAAKgiC,OAAS,KACdhiC,KAAKnI,EAAI,IAwFjB1B,EAAOD,QAAQ6oC,IAjEf,MACI,YAAYvyB,EAAGk1B,EAAQt2B,GACnBpL,KAAKwM,EAAIA,EACTN,EAA4B,mBAAVw1B,EAAsB,yBACxC1hC,KAAK0hC,OAASA,EACd1hC,KAAKoL,KAAOA,EACZpL,KAAKnI,EAAI,EACTmI,KAAKgiC,OAAS,KACdhiC,KAAKghB,IAAM,EAGf,QACI,OAAShhB,KAAKnI,KAAO,EAAKmI,KAAKgiC,OAAOhiC,KAAKghB,OAAS4hB,EAAU5iC,S,6BCxCtE,MACIrD,gBAAgB,aAAEG,EAAY,YAAEU,GAChCwD,eAAe,cAAEI,GAAe,aAChCnI,GACA,EAAQ,IACN,cACFqT,EAAa,QACbG,EAAO,WACPP,GACA,EAAQ,GACNxK,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IACnB,SACFgL,EAAQ,UACRy2B,EAAS,UACTC,EAAS,SACTx2B,EAAQ,UACRC,GACA,EAAQ,IACNsS,EAAW,EAAQ,IACnB,WACFrS,EAAU,UACV6c,EAAS,iBACTpC,EAAgB,SAChBxa,GACA,EAAQ,IACNC,EAAW,EAAQ,IACnB,IACF41B,EAAG,YACHC,EAAW,gBACXC,EAAe,iBACfG,EAAgB,kBAChBC,GACA,EAAQ,IAIN5W,EAAUtzB,EAAa,QAAQ,GA0C/BqqC,EAAW,CACb,OA7CmB,IA8CnB,SAxCgBC,IAyChB,MAxCgBA,IAyChB,QAxCgBA,IAyChB,UAxCgBA,IAyChB,OAxCgBA,IAyChB,SAxCgBA,IAyChB,OAxCgBA,IAyChB,YAxCgBA,IAyChB,QAxCgBA,IAyChB,MAxCgBA,IAyChB,MAxCgBA,IAyChB,SAxCgBA,IAyChB,OAxCgBA,IAyChB,OAxCgBA,IAyChB,MAxCgBA,IAyChB,UAxCgBA,IAyChB,UAxCgBA,IAyChB,QAxCgBA,IAyChB,QAxCgBA,IAyChB,SAxCgBA,IAyChB,SAxCgBA,IAyChB,QAvCgBA,IAwChB,UAvCgBA,IAwChB,QAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,OAvCgBA,IAwChB,OAvCgBA,IAwChB,WAvCgBA,IAwChB,OAvCgBA,IAwChB,OAvCgBA,IAwChB,OAvCgBA,IAwChB,QAvCgBA,IAwChB,UAvCgBA,KA0CdC,EAAc,CAChB,MAAO,QAAS,KAAM,OAAQ,SAC9B,MAAO,QAAS,MAAO,WAAY,OAAQ,KAC3C,KAAM,QAAS,MAAO,MAAO,KAAM,SACnC,SAAU,OAAQ,OAAQ,QAAS,QACnC,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KACrC,KAAM,KAAM,KAAM,QAClB,WAAY,YAAa,SAAU,YACrCxQ,IAAI,CAAC/mB,EAAG7V,IAAI6C,EAAagT,IAE3B,MAAMw3B,EACF,cACIzjC,KAAK9I,EAAIgJ,IACTF,KAAK5J,EAAI8J,IACTF,KAAKsO,GAAK,MAIlB,MAAMo1B,EACF,cACI1jC,KAAK2jC,MAAQzjC,IACbF,KAAK4jC,QAAU,IAAIH,GAwB3B,MAAMI,EAAO,SAASzN,EAAI3/B,GACtB,IAAIyE,EAAIk7B,EAAGvmB,KACX,GAAI3U,EAAErD,EAAI,EAAIqD,EAAE8mC,OAAOpoC,OAAQ,CACvBsB,EAAE8mC,OAAOpoC,QAAU6S,EAAQ,GAC3Bq3B,EAAS1N,EAAIn9B,EAAa,4BAA4B,GAAO,GACjE,IAAImf,EAA0B,EAAhBld,EAAE8mC,OAAOpoC,OACvBupC,EAAkB/M,EAAG5pB,EAAGtR,EAAGkd,GAE/Bld,EAAE8mC,OAAO9mC,EAAErD,KAAOpB,EAAI,EAAI,IAAMA,EAAI,EAAIA,GAGtCstC,EAAiB,SAAS3N,EAAIuN,GAChC,GAAIA,EA7Ie,IA8If,OAAOvkB,EAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAa,QAAQ,GAAO0qC,GAC/D,CACH,IAAIxrC,EAAIqrC,EAAYG,EAhJL,KAiJf,OAAIA,EA3GQJ,IA4GDnkB,EAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAa,QAAQ,GAAOd,GAE3DA,IAIb6rC,EAAgB,SAAS5N,GAC3B,OAAsB,KAAfA,EAAG6N,SAA4D,KAAf7N,EAAG6N,SAGxDthB,EAAO,SAASyT,GAClBA,EAAG6N,QAAU7N,EAAG1P,EAAEM,SAGhBkd,EAAgB,SAAS9N,GAC3ByN,EAAKzN,EAAIA,EAAG6N,SACZthB,EAAKyT,IAQH+N,EAAS,IAAI/kB,EAAQ9R,OAAOxQ,GAAc,GAC1CsnC,EAAiB,SAAShO,EAAI17B,GAChC,IAAI8R,EAAI4pB,EAAG5pB,EACP8B,EAAKtB,EAASR,EAAG9R,GAEjB2pC,EAAQjO,EAAGK,EAAE1O,OAAO9wB,IAAIuwB,EAAiBlZ,IAC7C,GAAK+1B,EAID/1B,EAAK+1B,EAAM1sC,IAAIqW,cAJP,CACR,IAAIrW,EAAM,IAAIynB,EAAQ9R,OAAO9P,EAAa8Q,GAC1CrB,EAAOic,aAAa1c,EAAG4pB,EAAGK,EAAG9+B,EAAKwsC,GAItC,OAAO71B,GAOLg2B,EAAgB,SAASlO,GAC3B,IAAIxD,EAAMwD,EAAG6N,QACb/3B,EAAW83B,EAAc5N,IACzBzT,EAAKyT,GACD4N,EAAc5N,IAAOA,EAAG6N,UAAYrR,GACpCjQ,EAAKyT,KACHA,EAAGmO,YAAc93B,GACnBq3B,EAAS1N,EAAIn9B,EAAa,4BAA4B,GAAO,IAuB/DurC,EAAc,SAASpO,EAAI3/B,GAC7B,OAAI2/B,EAAG6N,UAAYxtC,IACfksB,EAAKyT,IACE,IAUTqO,EAAc,SAASrO,EAAIhkB,GAC7B,OAAIgkB,EAAG6N,UAAY7xB,EAAI,GAAG5X,WAAW,IAAM47B,EAAG6N,UAAY7xB,EAAI,GAAG5X,WAAW,MACxE0pC,EAAc9N,IACP,IAMTsO,EAAe,SAAStO,EAAIwN,GAC9B,IAAIe,EAAO,KACPC,EAAQxO,EAAG6N,QAMf,IALA/3B,EAAWS,EAASypB,EAAG6N,UACvBC,EAAc9N,GACA,KAAVwO,GAA0CH,EAAYrO,EAAI,QAC1DuO,EAAO,QAKP,GAFIF,EAAYrO,EAAIuO,IAChBF,EAAYrO,EAAI,MAChBtpB,EAAUspB,EAAG6N,SACbC,EAAc9N,OACb,IAAmB,KAAfA,EAAG6N,QAEP,MADDC,EAAc9N,GAMtB,IAAIllB,EAAM,IAAIkO,EAAQ9R,OAGtB,OAFwD,IAApD8R,EAAQ3K,aAAaquB,EAAY1M,EAAGvmB,MAAOqB,IAC3C4yB,EAAS1N,EAAIn9B,EAAa,oBAAoB,GAhOlCsqC,KAiOZryB,EAAIC,eACJyyB,EAAQxtC,EAAI8a,EAAI7Z,MAjOJksC,MAoOZr3B,EAAWgF,EAAI6X,aACf6a,EAAQ1sC,EAAIga,EAAI7Z,MAtOJksC,MAsPdO,EAAW,SAAS1N,EAAIhqB,EAAKu3B,GAC/Bv3B,EAAM1K,EAAOmuB,aAAauG,EAAG5pB,EAAGJ,EAAKgqB,EAAG/1B,OAAQ+1B,EAAGmO,YAC/CZ,GACAvkB,EAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAa,cAAemT,EAdlD,SAASgqB,EAAIuN,GAC1B,OAAQA,GACJ,KA3OYJ,IA2OE,KA1OFA,IA2OZ,KA9OYA,IA8OC,KA7ODA,IA+OR,OAAOnkB,EAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAa,QAAQ,GAAO6pC,EAAY1M,EAAGvmB,OACrF,QACI,OAAOk0B,EAAe3N,EAAIuN,IAOkCkB,CAASzO,EAAIuN,IACjFhiC,EAAI0e,WAAW+V,EAAG5pB,EAAGpL,IAYnB0jC,EAAW,SAAS1O,GACtB,IAAI/E,EAAQ,EACRl5B,EAAIi+B,EAAG6N,QAGX,IAFA/3B,EAAiB,KAAN/T,GAA4C,KAANA,GACjD+rC,EAAc9N,GACQ,KAAfA,EAAG6N,SACNC,EAAc9N,GACd/E,IAEJ,OAAO+E,EAAG6N,UAAY9rC,EAAIk5B,GAAUA,EAAS,GAG3C0T,EAAmB,SAAS3O,EAAIwN,EAASoB,GAC3C,IAAIliB,EAAOsT,EAAGmO,WACdL,EAAc9N,GAEV4N,EAAc5N,IACdkO,EAAclO,GAElB,IAAI6O,GAAO,EACX,MAAQA,GACJ,OAAQ7O,EAAG6N,SACP,KAAKpB,EAGDiB,EAAS1N,EAAIn9B,EADH,mBADC2qC,EAAU,SAAW,+BACuB9gB,MA/RnDygB,KAiSJ,MAEJ,KAAK,GACGuB,EAAS1O,KAAQ4O,IACjBd,EAAc9N,GACd6O,GAAO,GAEX,MAEJ,KAAK,GACL,KAAK,GACDpB,EAAKzN,EAAI,IACTkO,EAAclO,GACTwN,GAASV,EAAiB9M,EAAGvmB,MAClC,MAEJ,QACQ+zB,EAASM,EAAc9N,GACtBzT,EAAKyT,GAKlBwN,IACAA,EAAQt1B,GAAK81B,EAAehO,EAAIA,EAAGvmB,KAAKmyB,OAAOrwB,SAAS,EAAIqzB,EAAK5O,EAAGvmB,KAAKhY,GAAK,EAAImtC,OAGpFE,EAAW,SAAS9O,EAAI3/B,EAAG2V,GACxB3V,IACG2/B,EAAG6N,UAAYpB,GACfqB,EAAc9N,GAClB0N,EAAS1N,EAAIhqB,EA5TDm3B,OAgUd4B,EAAU,SAAS/O,GAGrB,OAFA8N,EAAc9N,GACd8O,EAAS9O,EAAItpB,EAAUspB,EAAG6N,SAAUhrC,EAAa,8BAA8B,IACxEmmB,EAAQzP,eAAeymB,EAAG6N,UAG/BmB,EAAc,SAAShP,GACzB,IAAIl/B,EAAIiuC,EAAQ/O,GAGhB,OAFAl/B,GAAKA,GAAK,GAAKiuC,EAAQ/O,GACvB2M,EAAgB3M,EAAGvmB,KAAM,GAClB3Y,GAsBLmuC,EAAU,SAASjP,GACrB,IAAIvmB,EAAO,IAAIrW,WAAW4lB,EAAQtP,YAC9BjY,EAAIunB,EAAQxP,aAAaC,EArBZ,SAASumB,GAC1B,IAAIhgC,EAAI,EACR8tC,EAAc9N,GACd8O,EAAS9O,EAAmB,MAAfA,EAAG6N,QAA2ChrC,EAAa,eAAe,IACvF,IAAI/B,EAAIiuC,EAAQ/O,GAGhB,IADA8N,EAAc9N,GACPtpB,EAAUspB,EAAG6N,UAChB7tC,IACAc,GAAKA,GAAK,GAAKkoB,EAAQzP,eAAeymB,EAAG6N,SACzCiB,EAAS9O,EAAIl/B,GAAK,QAAU+B,EAAa,yBAAyB,IAClEirC,EAAc9N,GAKlB,OAHA8O,EAAS9O,EAAmB,MAAfA,EAAG6N,QAA2ChrC,EAAa,eAAe,IACvF0pB,EAAKyT,GACL2M,EAAgB3M,EAAGvmB,KAAMzZ,GAClBc,EAK4BouC,CAAalP,IAChD,KAAOv+B,EAAI,EAAGA,IACVgsC,EAAKzN,EAAIvmB,EAAKuP,EAAQtP,WAAajY,KAGrC0tC,EAAa,SAASnP,GACxB,IACIhgC,EADAc,EAAI,EAER,IAAKd,EAAI,EAAGA,EAAI,GAAKuW,EAASypB,EAAG6N,SAAU7tC,IACvCc,EAAI,GAAKA,EAAIk/B,EAAG6N,QAAU,GAC1BC,EAAc9N,GAIlB,OAFA8O,EAAS9O,EAAIl/B,GAAK,IAAK+B,EAAa,4BAA4B,IAChE8pC,EAAgB3M,EAAGvmB,KAAMzZ,GAClBc,GAGLsuC,EAAc,SAASpP,EAAIqP,EAAK7B,GAGlC,IAFAM,EAAc9N,GAEPA,EAAG6N,UAAYwB,GAClB,OAAQrP,EAAG6N,SACP,KAAKpB,EACDiB,EAAS1N,EAAIn9B,EAAa,qBAAqB,GA7X3CsqC,KA8XJ,MACJ,KAAK,GACL,KAAK,GACDO,EAAS1N,EAAIn9B,EAAa,qBAAqB,GA7X3CsqC,KA8XJ,MACJ,KAAK,GAA+B,CAEhC,IAAImC,EACAjvC,EACJ,OAHAytC,EAAc9N,GAGPA,EAAG6N,SACN,KAAK,GAA8BxtC,EAAI,EAA2BivC,EAAO,YAAa,MACtF,KAAK,GAA8BjvC,EAAI,EAA8BivC,EAAO,YAAa,MACzF,KAAK,IAA+BjvC,EAAI,GAA+BivC,EAAO,YAAa,MAC3F,KAAK,IAA+BjvC,EAAI,GAA+BivC,EAAO,YAAa,MAC3F,KAAK,IAA+BjvC,EAAI,GAA+BivC,EAAO,YAAa,MAC3F,KAAK,IAA+BjvC,EAAI,EAA8BivC,EAAO,YAAa,MAC1F,KAAK,IAA+BjvC,EAAI,GAA+BivC,EAAO,YAAa,MAC3F,KAAK,IAA+BjvC,EAAI2uC,EAAYhP,GAAKsP,EAAO,YAAa,MAC7E,KAAK,IAA+BL,EAAQjP,GAAKsP,EAAO,UAAW,MACnE,KAAK,GACL,KAAK,GACDpB,EAAclO,GAAK3/B,EAAI,GAA+BivC,EAAO,YAAa,MAC9E,KAAK,GACL,KAAK,GACL,KAAK,GACDjvC,EAAI2/B,EAAG6N,QAASyB,EAAO,YAAa,MACxC,KAAK7C,EAAK6C,EAAO,UAAW,MAC5B,KAAK,IAGD,IAFA3C,EAAgB3M,EAAGvmB,KAAM,GACzB8S,EAAKyT,GACEvpB,EAASupB,EAAG6N,UACXD,EAAc5N,GAAKkO,EAAclO,GAChCzT,EAAKyT,GAEdsP,EAAO,UAAW,MAEtB,QACIR,EAAS9O,EAAIzpB,EAASypB,EAAG6N,SAAUhrC,EAAa,2BAA2B,IAC3ExC,EAAI8uC,EAAWnP,GACfsP,EAAO,YAIF,cAATA,GACA/iB,EAAKyT,GAEI,cAATsP,GAAiC,cAATA,IACxB3C,EAAgB3M,EAAGvmB,KAAM,GACzBg0B,EAAKzN,EAAI3/B,IAGb,MAEJ,QACIytC,EAAc9N,GAG1B8N,EAAc9N,GAEdwN,EAAQt1B,GAAK81B,EAAehO,EAAIA,EAAGvmB,KAAKmyB,OAAOrwB,SAAS,EAAGykB,EAAGvmB,KAAKhY,EAAE,KAGnE8tC,EAAiB7uC,OAAOY,OAAO,MACrC8rC,EAAYoC,QAAQ,CAAC35B,EAAG7V,IAAIuvC,EAAe/b,EAAU3d,IAAM7V,GAE3D,MAKM0zB,GAAO,SAASsM,EAAIwN,GAEtB,IADAV,EAAiB9M,EAAGvmB,QAGhB,OADA3D,EAAgC,iBAAdkqB,EAAG6N,SACb7N,EAAG6N,SACP,KAAK,GACL,KAAK,GACDK,EAAclO,GACd,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,GACDzT,EAAKyT,GACL,MAEJ,KAAK,GAED,GADAzT,EAAKyT,GACc,KAAfA,EAAG6N,QAA0C,OAAO,GAGxD,GADAthB,EAAKyT,GACc,KAAfA,EAAG6N,QAA0C,CAC7C,IAAIe,EAAMF,EAAS1O,GAEnB,GADA8M,EAAiB9M,EAAGvmB,MAChBm1B,GAAO,EAAG,CACVD,EAAiB3O,EAAI,KAAM4O,GAC3B9B,EAAiB9M,EAAGvmB,MACpB,OAKR,MAAQm0B,EAAc5N,IAAOA,EAAG6N,UAAYpB,GACxClgB,EAAKyT,GACT,MAEJ,KAAK,GAA8B,CAC/B,IAAI4O,EAAMF,EAAS1O,GACnB,OAAI4O,GAAO,GACPD,EAAiB3O,EAAIwN,EAASoB,GAxe9BzB,OA0egB,IAATyB,GACPlB,EAAS1N,EAAIn9B,EAAa,iCAAiC,GA3e3DsqC,KA4eG,IAEX,KAAK,GAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IA3fhBmN,IA4fQ,GAEhB,KAAK,GAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IA9fhBmN,IA+fKiB,EAAYpO,EAAI,IA7frBmN,IA8fQ,GAEhB,KAAK,GAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IArgBhBmN,IAsgBKiB,EAAYpO,EAAI,IAlgBrBmN,IAmgBQ,GAEhB,KAAK,GAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IA/gBhBmN,IAghBQ,GAEhB,KAAK,IAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IA9gBhBmN,IA+gBQ,IAEhB,KAAK,GAED,OADA5gB,EAAKyT,GACDoO,EAAYpO,EAAI,IAhhBhBmN,IAihBQ,GAEhB,KAAK,GACL,KAAK,GAED,OADAiC,EAAYpP,EAAIA,EAAG6N,QAASL,GAhhBxBL,IAmhBR,KAAK,GAED,OADAW,EAAc9N,GACVoO,EAAYpO,EAAI,IACZoO,EAAYpO,EAAI,IAliBpBmN,IADAA,IAuiBM52B,EAASypB,EAAG6N,SACVS,EAAatO,EAAIwN,GADU,GAG3C,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GACjJ,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAC7I,OAAOc,EAAatO,EAAIwN,GAE5B,KAAKf,EACD,OAtiBIU,IAwiBR,QACI,GAAIF,EAAUjN,EAAG6N,SAAU,CACvB,GACIC,EAAc9N,SACTgN,EAAUhN,EAAG6N,UACtB,IAAI31B,EAAK81B,EAAehO,EAAI0M,EAAY1M,EAAGvmB,OAC3C+zB,EAAQt1B,GAAKA,EACb,IAAIu3B,EAAOF,EAAene,EAAiBlZ,IAC3C,YAAa,IAATu3B,GAAmBA,GAAQ,GACpBA,EAvlBR,IAyCHtC,IAijBG,CACH,IAAI9sC,EAAI2/B,EAAG6N,QAEX,OADAthB,EAAKyT,GACE3/B,KAyB3BN,EAAOD,QAAQqtC,eAtnBQ,IAunBvBptC,EAAOD,QAAQq2B,QAAmBA,EAClCp2B,EAAOD,QAAQ4vC,SAzgBf,MACI,cACI9lC,KAAKikC,QAAU/jC,IACfF,KAAKukC,WAAarkC,IAClBF,KAAK+lC,SAAW7lC,IAChBF,KAAK1I,EAAI,IAAIosC,EACb1jC,KAAKgmC,UAAY,IAAItC,EACrB1jC,KAAKimC,GAAK,KACVjmC,KAAKwM,EAAI,KACTxM,KAAK0mB,EAAI,KACT1mB,KAAK6P,KAAO,KACZ7P,KAAKy2B,EAAI,KACTz2B,KAAK2mB,IAAM,KACX3mB,KAAKK,OAAS,KACdL,KAAKkmC,KAAO,OA4fpB/vC,EAAOD,QAAQotC,SAAmBA,EAClCntC,EAAOD,QAAQiwC,WArJI,SAASC,GACxB,IAAIP,EAAOF,EAAene,EAAiB4e,IAC3C,YAAgB,IAATP,GAAmBA,GAAQ,IAoJtC1vC,EAAOD,QAAQmwC,eAXQ,SAASjQ,GAG5B,OAFAlqB,EA3kBgBq3B,MA2kBLnN,EAAG4P,UAAUrC,OACxBvN,EAAG4P,UAAUrC,MAAQ7Z,GAAKsM,EAAIA,EAAG4P,UAAUpC,SACpCxN,EAAG4P,UAAUrC,OASxBxtC,EAAOD,QAAQkuC,eAAmBA,EAClCjuC,EAAOD,QAAQowC,UAzBG,SAASlQ,GACvBA,EAAG2P,SAAW3P,EAAGmO,WA/jBDhB,MAgkBZnN,EAAG4P,UAAUrC,OACbvN,EAAG9+B,EAAEqsC,MAAQvN,EAAG4P,UAAUrC,MAC1BvN,EAAG9+B,EAAEssC,QAAQxtC,EAAIggC,EAAG4P,UAAUpC,QAAQxtC,EACtCggC,EAAG9+B,EAAEssC,QAAQ1sC,EAAIk/B,EAAG4P,UAAUpC,QAAQ1sC,EACtCk/B,EAAG9+B,EAAEssC,QAAQt1B,GAAK8nB,EAAG4P,UAAUpC,QAAQt1B,GACvC8nB,EAAG4P,UAAUrC,MArkBDJ,KAukBZnN,EAAG9+B,EAAEqsC,MAAQ7Z,GAAKsM,EAAIA,EAAG9+B,EAAEssC,UAiBnCztC,EAAOD,QAAQqwC,cAvbO,SAAS/5B,EAAG4pB,EAAI1P,EAAGrmB,EAAQmmC,GAC7CpQ,EAAG9+B,EAAI,CACHqsC,MAAO,EACPC,QAAS,IAAIH,GAEjBrN,EAAG5pB,EAAIA,EACP4pB,EAAG6N,QAAUuC,EACbpQ,EAAG4P,UAAY,CACXrC,MAzKYJ,IA0KZK,QAAS,IAAIH,GAEjBrN,EAAG1P,EAAIA,EACP0P,EAAG6P,GAAK,KACR7P,EAAGmO,WAAa,EAChBnO,EAAG2P,SAAW,EACd3P,EAAG/1B,OAASA,EACZ+1B,EAAG8P,KAAOn5B,EAAWP,EAAG+f,GACxB4W,EAAkB32B,EAAG4pB,EAAGvmB,KAAMvD,IAualCnW,EAAOD,QAAQuwC,iBA3VU,SAASrQ,EAAIhqB,GAClC03B,EAAS1N,EAAIhqB,EAAKgqB,EAAG9+B,EAAEqsC,QA2V3BxtC,EAAOD,QAAQ6tC,eAAmBA,EAClC5tC,EAAOD,QAAQstC,YAAmBA,G,6BCpqBlC,MAAM,IACLpqC,EAAG,QACHC,EAAO,OACPC,EAAM,aACNL,GACG,EAAQ,IACN,YACLyF,EAAW,OACXuC,EAAM,kBACNlD,EAAiB,oBACjB+B,EAAmB,aACnBhD,EAAY,cACZK,EAAa,mBACbJ,EAAkB,SAClBF,EAAQ,UACRD,EAAS,YACTI,EAAW,YACXC,EAAW,WACXC,EAAU,YACVG,EAAW,cACXD,EAAa,kBACb4E,EAAiB,SACjBC,EAAQ,aACRa,EAAY,aACZU,EAAY,WACZC,EAAU,UACVS,EAAS,YACTI,EAAW,gBACXW,EAAe,UACfE,EAAS,QACTE,EAAO,gBACPC,EAAe,kBACfE,EAAiB,gBACjBG,EAAe,sBACfG,EAAqB,gBACrBC,EAAe,YACfE,EAAW,eACXC,EAAc,eACdC,EAAc,cACdE,EAAa,YACbI,EAAW,YACXC,EAAW,YACXI,EAAW,WACXK,EAAU,aACVE,EAAY,aACZM,EAAY,WACZC,EAAU,cACVK,EAAa,eACbI,EAAc,aACdE,EAAY,YACZG,EAAW,aACXE,EAAY,eACZC,EAAc,SACdC,GACG1P,GACE,cACLgd,GAAa,cACbuG,GAAa,iBACbC,GAAgB,gBAChB3C,GAAe,gBACf8C,GAAe,WACfxG,GAAU,kBACVI,GAAiB,YACjB6G,GAAW,kBACXE,GAAiB,cACjBQ,GAAa,cACbnE,GAAa,kBACbuE,GAAiB,eACjBlH,GAAc,eACdmH,IACGllB,GACE,aACLmkC,IACGlkC,EAgBJ,MAAMotC,GAKwB,oBAAXjrB,OAEVA,OACgC,oBAAtBkrB,mBAAqCC,gBAAgBD,kBAE/DC,MAGA,EAAIC,MAAM,QAInB,IAAIC,GAAOC,GAAWC,GACtB,GAAuB,oBAAZC,QACVH,GAAQG,QAAQH,MAChBC,GAAYE,QAAQF,UACpBC,GAAyBC,QAAQC,mBAC3B,CACN,MAAMC,EAASC,SAASN,MAClBlvC,EAAOwvC,SAASxvC,KACtBkvC,GAAQ,SAASO,EAAQC,EAAcC,GACtC,OAAOJ,EAAO5wC,KAAK8wC,EAAQC,EAAcC,IAE1CR,GAAY,SAASM,EAAQE,GAC5B,OAAQA,EAAc3tC,QACrB,KAAK,EAAG,OAAO,IAAIytC,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOE,EAAc,IACxC,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,IAC1D,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAC5E,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAE/F,IAAIC,EAAO,CAAC,MAEZ,OADAA,EAAKC,KAAKX,MAAMU,EAAMD,GACf,IAAK3vC,EAAKkvC,MAAMO,EAAQG,KAGhCR,GAAyBI,SAAS,IAAK,IAAK,eAO7C,MAAMprC,GAAWR,OAAOxD,UAAU0vC,OAAO9vC,KAAK,IAExC+vC,GAAW,SAAS9wC,GACzB,MAAoB,iBAANA,EAAuB,OAANA,EAA0B,mBAANA,GAG9C+wC,GAAW3uC,EAAa,aAGxB4uC,GAAS,SAASr7B,EAAGsN,GAC1B,IAAI7e,EAAImc,GAAe5K,EAAGsN,EAAK8tB,IAC/B,OAAI3sC,EACIA,EAAEmQ,UAET,GAGI08B,GAAU,SAASt7B,EAAGsN,GAC3B,OAAOiD,GAAgBvQ,EAAGsN,EAAK8tB,IAAUx8B,MAGpC28B,GAAS,SAASv7B,EAAG3S,GAClBoL,EAAgBuH,GACtBpB,KAAOvR,EACTykB,GAAkB9R,EAAGo7B,KAGhBI,GAAgB,SAASx7B,GAC9B/F,EAAY+F,EAAGzO,EAAmB+B,GAClC,IAAImoC,EAAQr/B,EAAa4D,GAAI,GAE7B,OADAnH,EAAQmH,EAAG,GACJy7B,GAIFC,GAAS,IAAIvgB,QAEb8f,GAAO,SAASj7B,EAAG3S,GACxB,cAAeA,GACd,IAAK,YACJoM,EAAYuG,GACZ,MACD,IAAK,SACJtG,EAAesG,EAAG3S,GAClB,MACD,IAAK,SACJsM,EAAeqG,EAAGvT,EAAaY,IAC/B,MACD,IAAK,UACJyL,EAAgBkH,EAAG3S,GACnB,MACD,IAAK,SACJiM,EAAsB0G,EAAG3S,GACzB,MACD,IAAK,WACJ,GAAIyK,EAAYzK,EAAG2S,GAAI,CACtB3S,EAAE2S,GACF,MAGF,IAAK,SACJ,GAAU,OAAN3S,EAAY,CAEf,GAAI6M,EAAY8F,EAAGzO,EAAmB,QAAUX,EAC/C,MAAMpD,MAzDmB,wCA0D1B,MAGF,QAAS,CAER,IAAImuC,EAAeD,GAAOjxC,IAAI+wC,GAAcx7B,IAC5C,IAAK27B,EAAc,MAAMnuC,MAhEE,wCAiE3B,IAAI9B,EAAIiwC,EAAalxC,IAAI4C,GACrB3B,EACHA,EAAEsU,IAEFu7B,GAAOv7B,EAAG3S,GACV3B,EAAIwQ,EAAY8D,GAAI,GACpB27B,EAAa/1B,IAAIvY,EAAG3B,OAMlBwsB,GAAgB,SAASlY,GAC9B,IAAIvR,EAAI4N,EAAe2D,EAAG,GAE1B,OADAi7B,GAAKj7B,EAAGvR,GACD,GAGFmtC,GAAO,SAAS57B,EAAGsN,GACxB,OAAOhR,EAAS0D,EAAGsN,IAClB,KAAKld,EACL,KAAKC,EACJ,OACD,KAAKC,EACJ,OAAOmL,EAAcuE,EAAGsN,GACzB,KAAK/c,EACJ,OAAO8L,EAAe2D,EAAGsN,GAC1B,KAAK9c,EACJ,OAAOuL,EAAaiE,EAAGsN,GACxB,KAAK7c,EACJ,OAAOoL,EAAemE,EAAGsN,GAC1B,KAAK1c,EAAe,CACnB,IAAInC,EAAI4sC,GAAOr7B,EAAGsN,GAClB,QAAU,IAAN7e,EACH,OAAOA,EAGT,KAAKiC,EACL,KAAKC,EACL,KAAKE,EAEL,QACC,OAAOgrC,GAAK77B,EAAG9D,EAAY8D,EAAGsN,MAO3BwuB,GAAS,SAAS97B,EAAG8a,GAC1B,IAAI1L,EAASzW,EAAUqH,EAAG8a,EAAO,EAAG,GAChCpwB,EAAIkxC,GAAK57B,GAAI,GAEjB,OADAnH,EAAQmH,EAAG,GACJoP,GACN,KAAK3a,EACJ,OAAO/J,EACR,QACC,MAAMA,IAIHqxC,GAAS,SAAS/7B,EAAGtU,EAAGswC,EAAShB,EAAMiB,GAC5C,IAAKd,GAASH,GAAO,MAAM,IAAI5sC,UAAU,qCACzC,IAAIhB,GAAU4tC,EAAK5tC,OACbA,GAAU,IAAIA,EAAS,GAC7BqgB,GAAgBzN,EAAG,EAAE5S,EAAQ,MAC7B,IAAI8nB,EAAOje,EAAW+I,GACtBtU,EAAEsU,GACFi7B,GAAKj7B,EAAGg8B,GACR,IAAK,IAAIpyC,EAAE,EAAGA,EAAEwD,EAAQxD,IACvBqxC,GAAKj7B,EAAGg7B,EAAKpxC,IAEd,OAAO+O,EAAUqH,EAAG,EAAE5S,EAAQ6uC,EAAW,IACxC,KAAKxnC,EAAQ,CACZ,IAAIuhB,EAAO/e,EAAW+I,GAAGkV,EACrBjO,EAAM,IAAI1Y,MAAMynB,GACpB,IAAK,IAAIpsB,EAAE,EAAGA,EAAEosB,EAAMpsB,IACrBqd,EAAIrd,GAAKgyC,GAAK57B,EAAGkV,EAAKtrB,EAAE,GAGzB,OADAwR,EAAW4E,EAAGkV,GACPjO,EAER,QAAS,CACR,IAAIvc,EAAIkxC,GAAK57B,GAAI,GAEjB,MADA5E,EAAW4E,EAAGkV,GACRxqB,KAKHwxC,GAAW,SAASl8B,GAEzB,OADAhJ,EAAagJ,EAAG,GACT,GAGFvV,GAAM,SAASuV,EAAGtU,EAAGywC,GAK1B,OAJA1uB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,EAAGk8B,IACrBxwC,EAAEsU,GACFi7B,GAAKj7B,EAAGm8B,GACDL,GAAO97B,EAAG,IAGZo8B,GAAM,SAASp8B,EAAGtU,EAAGywC,GAM1B,OALA1uB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,EAAGk8B,IACrBxwC,EAAEsU,GACFi7B,GAAKj7B,EAAGm8B,GACKxjC,EAAUqH,EAAG,EAAG,EAAG,IAE/B,KAAKvL,EAAQ,CACZ,IAAI/J,EAAIgN,EAAUsI,GAAI,GAEtB,OADAnH,EAAQmH,EAAG,IACHtV,EAET,QAAS,CACR,IAAIA,EAAIkxC,GAAK57B,GAAI,GAEjB,MADAnH,EAAQmH,EAAG,GACLtV,KAKHkb,GAAM,SAAS5F,EAAGtU,EAAGywC,EAAMtxC,GAShC,OARA4iB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,GAAG,SAASA,GAE7B,OADA7E,EAAa6E,EAAG,GACT,KAERtU,EAAEsU,GACFi7B,GAAKj7B,EAAGm8B,GACRlB,GAAKj7B,EAAGnV,GACD8N,EAAUqH,EAAG,EAAG,EAAG,IACzB,KAAKvL,EACJ,OACD,QAAS,CACR,IAAI/J,EAAIkxC,GAAK57B,GAAI,GAEjB,MADAnH,EAAQmH,EAAG,GACLtV,KAKHgwC,GAAiB,SAAS16B,EAAGtU,EAAGywC,GASrC,OARA1uB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,GAAG,SAASA,GAE7B,OADA7E,EAAa6E,EAAG,GACT,KAERtU,EAAEsU,GACFi7B,GAAKj7B,EAAGm8B,GACR1iC,EAAYuG,GACLrH,EAAUqH,EAAG,EAAG,EAAG,IACzB,KAAKvL,EACJ,OACD,QAAS,CACR,IAAI/J,EAAIkxC,GAAK57B,GAAI,GAEjB,MADAnH,EAAQmH,EAAG,GACLtV,KAKHkgC,GAAW,SAAS5qB,EAAGtU,GAO5B,OANA+hB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,GAAG,SAASA,GAE7B,OADA+R,GAAe/R,EAAG,GACX,KAERtU,EAAEsU,GACK87B,GAAO97B,EAAG,IAIZq8B,GAAY,WACjB,IAAIr8B,EAAIxM,KAAKwM,EACbyN,GAAgBzN,EAAG,EAAG,MACtB,IAAI+E,EAAM9N,EAAW+I,GAIrB,OAHAxM,KAAK8oC,KAAKt8B,GACVxM,KAAK+oC,MAAMv8B,GACXxM,KAAK2e,KAAKnS,GACHrH,EAAUqH,EAAG,EAAG9N,EAAa,IACnC,KAAKuC,EAAQ,CAEZ,IAAI/J,EACJ,GAFA8I,KAAK2e,KAAOjW,EAAY8D,EAAG+E,EAAI,GAE3BrN,EAAUsI,GAAI,GACjBtV,EAAI,CACH8xC,MAAM,EACN3xC,WAAO,OAEF,CACN,IAAIoxC,EAAYhlC,EAAW+I,GAAK+E,EAC5B7G,EAAS,IAAI3P,MAAM0tC,GACvB,IAAK,IAAIryC,EAAE,EAAGA,EAAEqyC,EAAWryC,IAC1BsU,EAAOtU,GAAKgyC,GAAK57B,EAAG+E,EAAInb,EAAE,GAE3Bc,EAAI,CACH8xC,MAAM,EACN3xC,MAAOqT,GAIT,OADA9C,EAAW4E,EAAG+E,GACPra,EAER,QAAS,CACR,IAAI+U,EAAIm8B,GAAK57B,GAAI,GAEjB,MADAnH,EAAQmH,EAAG,GACLP,KAqCHo8B,GAAO,SAAS3pB,EAAIxmB,GACzB,MAAMsU,EAAIw7B,GAActpB,GAExB,IAAIuqB,EAAW,WAEd,OAAOV,GAAO/7B,EAAGtU,EAAG8H,KAAM9F,UAAW,GAAG,IAEzC+uC,EAASnC,MAAQ,SAAS0B,EAAShB,GAElC,OAAOe,GAAO/7B,EAAGtU,EAAGswC,EAAShB,EAAM,GAAG,IAEvCyB,EAASV,OAAS,SAASC,EAAShB,GACnC,OAAOe,GAAO/7B,EAAGtU,EAAGswC,EAAShB,EAAM9oC,IAEpCuqC,EAAShyC,IAAM,SAASgvB,GACvB,OAAOhvB,GAAIuV,EAAGtU,EAAG+tB,IAElBgjB,EAASL,IAAM,SAAS3iB,GACvB,OAAO2iB,GAAIp8B,EAAGtU,EAAG+tB,IAElBgjB,EAAS72B,IAAM,SAAS6T,EAAGpsB,GAC1B,OAAOuY,GAAI5F,EAAGtU,EAAG+tB,EAAGpsB,IAErBovC,EAASvgB,OAAS,SAASzC,GAC1B,OAAOihB,GAAe16B,EAAGtU,EAAG+tB,IAE7BgjB,EAASjtC,SAAW,WACnB,OAAOo7B,GAAS5qB,EAAGtU,IAEE,mBAAXf,SACV8xC,EAAS9xC,OAAOC,aAAe,iBAC/B6xC,EAAS9xC,OAAO+xC,UAAY,WAC3B,OA/DgB,SAAS18B,EAAGtU,GAS9B,OARA+hB,GAAgBzN,EAAG,EAAG,MACtBhH,EAAkBgH,GAAG,SAASA,GAK7B,OAJA0R,GAAc1R,EAAGvT,EAAa,MAAOukC,GAAc,GACnD16B,EAAa0J,GAAI,EAAGvT,EAAa,UACjCf,EAAEsU,GACFvK,EAASuK,EAAG,EAAG,GACR,KAEDrH,EAAUqH,EAAG,EAAG,EAAG,IACzB,KAAKvL,EAAQ,CACZ,IAAI6nC,EAAOpgC,EAAY8D,GAAI,GACvBu8B,EAAQrgC,EAAY8D,GAAI,GACxBmS,EAAOjW,EAAY8D,GAAI,GAE3B,OADAnH,EAAQmH,EAAG,GACJ,CACNA,EAAGA,EACHs8B,KAAMA,EACNC,MAAOA,EACPpqB,KAAMA,EACNgE,KAAMkmB,IAGR,QAAS,CACR,IAAI3xC,EAAIkxC,GAAK57B,GAAI,GAEjB,MADAnH,EAAQmH,EAAG,GACLtV,IAqCCiyC,CAAW38B,EAAGtU,IAElBf,OAAOiyC,cACVH,EAAS9xC,OAAOiyC,aAAe,SAASC,GACvC,GAAa,WAATA,EACH,OAAOjS,GAAS5qB,EAAGtU,MAQvB,IAAIiwC,EAAeD,GAAOjxC,IAAIuV,GAC9B,IAAK27B,EAAc,MAAMnuC,MAnWI,wCAqW7B,OADAmuC,EAAa/1B,IAAI62B,EAAU/wC,GACpB+wC,GAGFK,GAAQ,CACb,IAAO,SAAS98B,GACf,IAAIvR,EAAImtC,GAAK57B,EAAG,GACZ8a,EAAQ7jB,EAAW+I,GAAG,EACtBg7B,EAAO,IAAIzsC,MAAMusB,GACrB,IAAK,IAAIlxB,EAAI,EAAGA,EAAIkxB,EAAOlxB,IAC1BoxC,EAAKpxC,GAAKgyC,GAAK57B,EAAGpW,EAAE,GAGrB,OADAqxC,GAAKj7B,EAAGu6B,GAAU9rC,EAAGusC,IACd,GAER,SAAY,SAASh7B,GACpB,IAAIvR,EAAImtC,GAAK57B,EAAG,GAEhB,OADAtG,EAAesG,GAAIvR,GACZ,GAER,SAAY,SAASuR,GACpB,IAAIvR,EAAImtC,GAAK57B,EAAG,GAEhB,OADAzG,EAAgByG,EAAGxQ,GAASf,IACrB,GAER,WAAc,SAASuR,GACtB,IAAI7Q,EAAKysC,GAAK57B,EAAG,GACb5Q,EAAKwsC,GAAK57B,EAAG,GAEjB,OADAlH,EAAgBkH,EAAG7Q,aAAcC,GAC1B,GAER,OAAU,SAAS4Q,GAClB,IAAIvR,EAAImtC,GAAK57B,EAAG,GAEhB,OADAzG,EAAgByG,SAAUvR,GACnB,IAIT,GAAsB,mBAAX9D,QAAyBA,OAAO+xC,SAAU,CACpD,MAAMK,EAAe,SAAS/8B,EAAGsN,GAChC,IAAI7e,EAAI6sC,GAAQt7B,EAAGsN,GACf0vB,EAAUvuC,EAAE9D,OAAO+xC,UAClBM,GACJpzB,GAAc5J,EAAGsN,EAAK7gB,EAAa,wBACpC,IAAI6vC,EAAOhC,GAAM0C,EAASvuC,EAAG,IAG7B,OAFK0sC,GAASmB,IACb1yB,GAAc5J,EAAGsN,EAAK7gB,EAAa,0DAC7B6vC,GAGFnmB,EAAO,SAASnW,GACrB,IACItV,EADOkxC,GAAK57B,EAAG,GACNmW,OACb,OAAIzrB,EAAE8xC,KACE,GAEPvB,GAAKj7B,EAAGtV,EAAEG,OACH,IAITiyC,GAAU,GAAI,SAAS98B,GACtB,IAAIs8B,EAAOS,EAAa/8B,EAAG,GAG3B,OAFAhH,EAAkBgH,EAAGmW,GACrB8kB,GAAKj7B,EAAGs8B,GACD,GAIT,GAAqB,mBAAVW,OAA0C,mBAAXtyC,OAAuB,CAChE,MAAMuyC,EAAWvyC,OAAO,aAClBwyC,EAAWxyC,OAAO,iBAElByyC,EAAiB,CACtB,MAAS,SAASvC,EAAQmB,EAAShB,GAClC,OAAOe,GAAOlB,EAAOqC,GAAWrC,EAAOsC,GAAWnB,EAAShB,EAAM,GAAG,IAErE,UAAa,SAASH,EAAQE,GAC7B,IAAI/6B,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GACXE,EAAatC,EAAc3tC,OAC/BqgB,GAAgBzN,EAAG,EAAEq9B,EAAY,MACjC3xC,EAAEsU,GACF,IAAIsN,EAAMrW,EAAW+I,GACrB,GAAImK,GAAkBnK,EAAGsN,EAAK7gB,EAAa,gBAAkB4D,EAE5D,MADAwI,EAAQmH,EAAG,GACL,IAAI5R,UAAU,qBAErBuM,EAAWqF,EAAGsN,EAAK,GACnB,IAAK,IAAI1jB,EAAE,EAAGA,EAAEyzC,EAAYzzC,IAC3BqxC,GAAKj7B,EAAG+6B,EAAcnxC,IAEvB,OAAOkyC,GAAO97B,EAAG,EAAEq9B,IAEpB,eAAkB,SAASxC,EAAQsB,EAAMmB,GACxC,IAAIt9B,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GAGf,OAFA1vB,GAAgBzN,EAAG,EAAG,MACtBtU,EAAEsU,GACEmK,GAAkBnK,GAAI,EAAGvT,EAAa,qBAAuB4D,GAChEwI,EAAQmH,EAAG,IACJ,IAERrF,EAAWqF,GAAI,EAAG,GAClBi7B,GAAKj7B,EAAGm8B,GACRlB,GAAKj7B,EAAGs9B,GACDxB,GAAO97B,EAAG,KAElB,eAAkB,SAAS66B,EAAQphB,GAClC,OAAOihB,GAAeG,EAAOqC,GAAWrC,EAAOsC,GAAW1jB,IAE3D,IAAO,SAASohB,EAAQphB,GACvB,OAAOhvB,GAAIowC,EAAOqC,GAAWrC,EAAOsC,GAAW1jB,IAEhD,yBAA4B,SAASohB,EAAQsB,GAC5C,IAAIn8B,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GAGf,GAFA1vB,GAAgBzN,EAAG,EAAG,MACtBtU,EAAEsU,GACEmK,GAAkBnK,GAAI,EAAGvT,EAAa,+BAAiC4D,EAM3E,OAFAsK,EAAWqF,GAAI,EAAG,GAClBi7B,GAAKj7B,EAAGm8B,GACDL,GAAO97B,EAAG,GALhBnH,EAAQmH,EAAG,IAOb,eAAkB,SAAS66B,GAC1B,IAAI76B,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GAGf,OAFA1vB,GAAgBzN,EAAG,EAAG,MACtBtU,EAAEsU,GACEmK,GAAkBnK,GAAI,EAAGvT,EAAa,qBAAuB4D,GAChEwI,EAAQmH,EAAG,GACJ,OAERrF,EAAWqF,GAAI,EAAG,GACX87B,GAAO97B,EAAG,KAElB,IAAO,SAAS66B,EAAQphB,GACvB,OAAO2iB,GAAIvB,EAAOqC,GAAWrC,EAAOsC,GAAW1jB,IAEhD,QAAW,SAASohB,GACnB,IAAI76B,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GAGf,GAFA1vB,GAAgBzN,EAAG,EAAG,MACtBtU,EAAEsU,GACEmK,GAAkBnK,GAAI,EAAGvT,EAAa,cAAgB4D,EAEzD,MADAwI,EAAQmH,EAAG,GACLxS,MAAM,sCAGb,OADAmN,EAAWqF,GAAI,EAAG,GACX87B,GAAO97B,EAAG,IAElB,IAAO,SAAS66B,EAAQphB,EAAGpsB,GAE1B,OADAuY,GAAIi1B,EAAOqC,GAAWrC,EAAOsC,GAAW1jB,EAAGpsB,IACpC,GAER,eAAkB,SAASwtC,EAAQrvC,GAClC,IAAIwU,EAAI66B,EAAOqC,GACXxxC,EAAImvC,EAAOsC,GAGf,OAFA1vB,GAAgBzN,EAAG,EAAG,MACtBtU,EAAEsU,GACEmK,GAAkBnK,GAAI,EAAGvT,EAAa,qBAAuB4D,GAChEwI,EAAQmH,EAAG,IACJ,IAERrF,EAAWqF,GAAI,EAAG,GAClBi7B,GAAKj7B,EAAGxU,GACDswC,GAAO97B,EAAG,MAebu9B,EAAe,WACpB,IAAI76B,EAAI,aAAetX,OAGvB,cAFOsX,EAAEtV,cACFsV,EAAEvY,KACFuY,GAUF86B,EAAsB5C,SAAS,sBAC/B6C,EAAqB,WAC1B,IAAI/6B,EAAI86B,IAGR,cAFO96B,EAAEtV,cACFsV,EAAEvY,KACFuY,GAiBFg7B,EAAc,SAASxrB,EAAIxmB,EAAGqV,GACnC,MAAMf,EAAIw7B,GAActpB,GACxB,IAAI2oB,EACJ,OAAQ95B,GACP,IAAK,WACJ85B,EAAS0C,IACT,MACD,IAAK,iBACJ1C,EAAS4C,IACT,MACD,IAAK,SACJ5C,EAAS,GACT,MACD,QACC,MAAMzsC,UAAU,+BAIlB,OAFAysC,EAAOsC,GAAYzxC,EACnBmvC,EAAOqC,GAAYl9B,EACZ,IAAIi9B,MAAMpC,EAAQuC,IAGpBO,EAAc,CAAC,WAAY,iBAAkB,UAC7CC,EAA2BD,EAAYnX,IAAKn5B,GAAMZ,EAAaY,IACrEyvC,GAAmB,YAAI,SAAS98B,GAC/BmQ,GAAcnQ,EAAG,GACjB,IAAIe,EAAO48B,EAAYvtB,GAAiBpQ,EAAG,EAAG49B,EAAyB,GAAIA,IACvEC,EAAeH,EAAY19B,EAAG9D,EAAY8D,EAAG,GAAIe,GAErD,OADAk6B,GAAKj7B,EAAG69B,GACD,GAIT,IAAIC,GAAO,CACV,QAAW,SAAS99B,GACnB,IAAIvR,EAAI6sC,GAAQt7B,EAAG,GACfyZ,EAAImiB,GAAK57B,EAAG,GAEhB,OADAi7B,GAAKj7B,EAAGvR,EAAEgrB,IACH,GAER,WAAc,SAASzZ,GACtB,IAAIvR,EAAI6sC,GAAQt7B,EAAG,GACfyZ,EAAImiB,GAAK57B,EAAG,GACZ3S,EAAIuuC,GAAK57B,EAAG,GAKhB,YAJU,IAAN3S,EACHmtC,GAAuB/rC,EAAGgrB,GAE1BhrB,EAAEgrB,GAAKpsB,EACD,GAER,WAAc,SAAS2S,GACtB,IAAIvR,EAAI6sC,GAAQt7B,EAAG,GACfrU,EAAI6D,GAASf,GAEjB,OADAkL,EAAeqG,EAAGvT,EAAad,IACxB,GAER,OAAU,SAASqU,GAClB,IAEIg8B,EAFAvtC,EAAI6sC,GAAQt7B,EAAG,GACf8a,EAAQ7jB,EAAW+I,GAAG,EAEtBg7B,EAAO,IAAIzsC,MAAMM,KAAKgd,IAAI,EAAGiP,EAAM,IACvC,GAAIA,EAAQ,IACXkhB,EAAUJ,GAAK57B,EAAG,GACd8a,KAAU,GACb,IAAK,IAAIlxB,EAAI,EAAGA,EAAIkxB,EAAOlxB,IAC1BoxC,EAAKpxC,GAAKgyC,GAAK57B,EAAGpW,EAAE,GAKvB,OADAqxC,GAAKj7B,EAAGs6B,GAAM7rC,EAAGutC,EAAShB,IACnB,GAER,QAAW,SAASh7B,GACnB,IACI0C,EACA45B,EAAMC,EAAOnE,EAFb3pC,EAAI6sC,GAAQt7B,EAAG,GAGnB,GAAsB,mBAAXrV,aAA4D,KAAlC+X,EAAIjU,EAAE9D,OAAOozC,IAAI,aAErDzB,EAAO,SAASnqB,GACf,GAAI3e,KAAKwqC,OAASxqC,KAAKyqC,KAAK7wC,OAC3B,OACD,IAAIjC,EAAMqI,KAAKyqC,KAAKzqC,KAAKwqC,SACzB,MAAO,CAAC7yC,EAAKqI,KAAKlI,OAAOH,KAE1BoxC,EAAQ,CACPjxC,OAAQmD,EACRwvC,KAAM3zC,OAAO2zC,KAAKxvC,GAClBuvC,MAAO,OAEF,CACN,IAAItzC,EAAI4vC,GAAM53B,EAAGjU,EAAG,SACV,IAAN/D,GACHqf,GAAW/J,EAAGvT,EAAa,8EAC5B6vC,EAAO5xC,EAAE4xC,UACI,IAATA,GACHvyB,GAAW/J,EAAGvT,EAAa,kDAC5B8vC,EAAQ7xC,EAAE6xC,MACVnE,EAAQ1tC,EAAE0tC,MAoBX,OAlBAp/B,EAAkBgH,GAAG,WACpB,IAAIu8B,EAAQX,GAAK57B,EAAG,GAChBmS,EAAOypB,GAAK57B,EAAG,GACftV,EAAI4vC,GAAMgC,EAAMC,EAAO,CAACpqB,IAE5B,QAAU,IAANznB,EACH,OAAO,EAEH6D,MAAM2vC,QAAQxzC,IAClBqf,GAAW/J,EAAGvT,EAAa,sDAC5BghB,GAAgBzN,EAAGtV,EAAE0C,OAAQ,MAC7B,IAAK,IAAIxD,EAAE,EAAGA,EAAEc,EAAE0C,OAAQxD,IACzBqxC,GAAKj7B,EAAGtV,EAAEd,IAEX,OAAOc,EAAE0C,UAEV6tC,GAAKj7B,EAAGu8B,GACRtB,GAAKj7B,EAAGo4B,GACD,GAER,MAAS,SAASp4B,GACjB,IACI0C,EACAhY,EAFA+D,EAAI6sC,GAAQt7B,EAAG,GAUnB,OALCtV,EAFqB,mBAAXC,aAA0D,KAAhC+X,EAAIjU,EAAE9D,OAAOozC,IAAI,WAEjDtvC,EAAErB,OAEFktC,GAAM53B,EAAGjU,EAAG,IAEjBwsC,GAAKj7B,EAAGtV,GACD,IAkCTf,EAAOD,QAAQy0C,wBApyByBC,MAqyBxCz0C,EAAOD,QAAQ20C,4BAvyByB,EAwyBxC10C,EAAOD,QAAQ40C,wBAryByBH,QAsyBxCx0C,EAAOD,QAAQ4xC,QAAUA,GACzB3xC,EAAOD,QAAQ2xC,OAASA,GACxB1xC,EAAOD,QAAQ6xC,OAASA,GACxB5xC,EAAOD,QAAQuxC,KAAOA,GACtBtxC,EAAOD,QAAQkyC,KAAOA,GACtBjyC,EAAOD,QAAQ60C,WAtCI,SAASv+B,GA2B3B,OAzBA07B,GAAO91B,IAAI41B,GAAcx7B,GAAI,IAAImb,SAEjC3lB,EAAkBwK,EAAGkY,IAErBlH,GAAYhR,EAAG88B,IACfvjC,EAAgByG,EA7wBuBo+B,OA8wBvCvjC,EAAamF,GAAI,EAAGvT,EAAa,aACjC0M,EAAgB6G,EAjxBuB,GAkxBvCnF,EAAamF,GAAI,EAAGvT,EAAa,iBACjC8M,EAAgByG,EAhxBuBm+B,SAixBvCtjC,EAAamF,GAAI,EAAGvT,EAAa,aAEjCykB,GAAkBlR,EAAGo7B,IACrB7tB,GAAcvN,EAAG89B,GAAM,GACvBjlC,EAAQmH,EAAG,GAEXu7B,GAAOv7B,EAAG,MAEVnG,EAAcmG,GAAI,GAClB1F,EAAY0F,EAAGzO,EAAmB,MAClCsJ,EAAamF,GAAI,EAAGvT,EAAa,SAEjCwuC,GAAKj7B,EAAGk6B,IACRr/B,EAAamF,GAAI,EAAGvT,EAAa,WAE1B,I,6BCh3BR,MAAM,aAAEF,GAAiB,EAAQ,GAE3BiyC,EAAcjyC,EAChB,EACA,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACjD,GAAO,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,GAiCrD5C,EAAOD,QAAQyW,SAxBE,SAASlW,GACtB,OAA8C,IAAnB,EAAnBu0C,EAAYv0C,EAAE,KAwB1BN,EAAOD,QAAQktC,UALG,SAAS3sC,GACvB,OAA8D,IAAnC,EAAnBu0C,EAAYv0C,EAAE,KAK1BN,EAAOD,QAAQmtC,UAVG,SAAS5sC,GACvB,OAA8C,IAAnB,EAAnBu0C,EAAYv0C,EAAE,KAU1BN,EAAOD,QAAQ0W,SAnBE,SAASnW,GACtB,OAA8C,IAAnB,EAAnBu0C,EAAYv0C,EAAE,KAmB1BN,EAAOD,QAAQ2W,SAhBE,SAASpW,GACtB,OAA8C,IAAnB,EAAnBu0C,EAAYv0C,EAAE,KAgB1BN,EAAOD,QAAQ4W,UAzBG,SAASrW,GACvB,OAA+C,IAApB,GAAnBu0C,EAAYv0C,EAAE,M,6BCjD1B,MAAM,YACFiI,EAAW,aACXzF,GACA,EAAQ,IAERgyC,QAAQ,QACJC,EAAO,QACPC,EAAO,SACPC,EAAQ,QACRC,EAAO,SACPC,EAAQ,WACRC,EAAU,QACVC,EAAO,OACPC,EAAM,OACNC,EAAM,OACNC,EAAM,SACNC,EAAQ,OACRC,EAAM,OACNC,EAAM,QACNC,EAAO,QACPC,EAAO,OACPC,EAAM,aACNC,EAAY,OACZC,EAAM,QACNC,EAAO,QACPC,EAAO,QACPC,EAAO,QACPC,GAEJC,OAAO,SACHC,EAAQ,QACRC,EAAO,UACPC,EAAS,QACTC,EAAO,YACPC,GACH,QACDC,EAAO,eACPC,EAAc,gBACdC,EAAe,aACfC,EAAY,aACZC,EAAY,cACZC,EAAa,WACbC,EAAU,YACVC,EAAW,mBACXC,EAAkB,YAClBC,EAAW,gBACXC,EAAe,kBACfC,EAAiB,iBACjBC,EAAgB,aAChBC,EAAY,aACZC,EAAY,cACZC,EAAa,eACbC,EAAc,cACdC,EAAa,aACbC,EAAY,WACZC,EAAU,UACVC,EAAS,UACTC,EAAS,YACTC,GAAW,SACXC,GAAQ,gBACRC,GAAe,eACfC,GAAc,iBACdC,GAAgB,YAChBC,GAAW,YACXC,GAAW,iBACXC,GAAgB,SAChBC,GAAQ,UACRC,GAAS,aACTC,GAAY,gBACZC,GAAe,eACfC,GAAc,gBACdC,GAAe,cACfC,GAAa,aACbC,IACA,EAAQ,IACNxtC,GAAW,EAAQ,GACnBwd,GAAW,EAAQ,IACnB2K,GAAW,EAAQ,KACnB,eACFzd,GAAc,QACdI,GAAO,WACPP,IACC,EAAQ,GACPkT,GAAW,EAAQ,IAErBgE,UAAU,QACNwI,GAAO,WACPqI,GAAU,WACVE,GAAU,WACVC,GAAU,YACV5H,GAAW,QACXN,GAAO,YACPoI,GAAW,YACXtH,GAAW,YACX3J,GAAW,YACXsI,GAAW,YACXkJ,GAAW,UACXC,IACH,kBACDd,GAAiB,SACjBqI,GAAQ,SACRC,GAAQ,WACRE,IACA,EAAQ,KACN,cACF3S,GAAa,SACb7c,GAAQ,gBACRuS,IACA,EAAQ,IACNtS,GAAW,EAAQ,GACnBwlB,GAAWtT,GAAMsT,MACjB2c,GAAWtlB,GAAKwZ,SAIhB+L,GAAa,SAASppB,GACxB,OAAOA,IAAMqpB,GAAQC,OAAStpB,IAAMqpB,GAAQE,SAG1CC,GAAQ,SAAS/1C,EAAGwB,GAEtB,OAAO2uB,GAAcnwB,EAAGwB,IAG5B,MAAMw0C,GACF,cACI1vC,KAAK2gB,SAAW,KAChB3gB,KAAK2vC,WAAazvC,IAClBF,KAAK4vC,UAAY1vC,IACjBF,KAAK6vC,QAAU3vC,IACfF,KAAKg4B,MAAQ93B,IACbF,KAAK8vC,OAAS5vC,KAItB,MAAMovC,GAAU,CACZS,MAAO,EAEPC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,GAAI,EACJC,MAAO,EACPC,MAAO,EACPC,UAAW,EAEXC,OAAQ,EACRC,OAAQ,EACRC,SAAU,GAIVC,KAAM,GAENC,WAAY,GAEZpB,MAAO,GACPC,QAAS,IAWb,MAAMoB,GACF,cACI5wC,KAAKimB,EAAI/lB,IACTF,KAAK/E,EAAI,CACL41C,KAAM3wC,IACN4wC,KAAM5wC,IACN6wC,KAAM7wC,IACN8wC,IAAK,CACDl3B,IAAK5Z,IACL5I,EAAG4I,IACH+wC,GAAI/wC,MAGZF,KAAK1I,EAAI4I,IACTF,KAAKkP,EAAIhP,IAGb,GAAG+L,GACCjM,KAAKimB,EAAIha,EAAEga,EACXjmB,KAAK/E,EAAIgR,EAAEhR,EACX+E,KAAK1I,EAAI2U,EAAE3U,EACX0I,KAAKkP,EAAIjD,EAAEiD,GAInB,MAAMgiC,GACF,cACIlxC,KAAKkP,EAAI,KACTlP,KAAKsoB,KAAO,KACZtoB,KAAKo2B,GAAK,KACVp2B,KAAKmxC,GAAK,KACVnxC,KAAK8qB,GAAK5qB,IACVF,KAAKoxC,WAAalxC,IAClBF,KAAKqxC,IAAMnxC,IACXF,KAAKsxC,GAAKpxC,IACVF,KAAKuxC,GAAKrxC,IACVF,KAAKwxC,WAAatxC,IAClBF,KAAKyxC,SAAWvxC,IAChBF,KAAK6vC,QAAU3vC,IACfF,KAAKS,KAAOP,IACZF,KAAK0xC,QAAUxxC,KAKvB,MAAMyxC,GACF,cACI3xC,KAAK8Z,IAAM5Z,KAMnB,MAAM0xC,GACF,cACI5xC,KAAKrJ,KAAO,KACZqJ,KAAK8qB,GAAK5qB,IACVF,KAAK8iB,KAAO5iB,IACZF,KAAK6vC,QAAU3vC,KAMvB,MAAM2xC,GACF,cACI7xC,KAAKuZ,IAAM,GACXvZ,KAAKnI,EAAIqI,IACTF,KAAKqP,KAAOnP,KAiBpB,MAAM4xC,GAAW,SAAS1b,EAAIhqB,GAC1BgqB,EAAG9+B,EAAEqsC,MAAQ,EACb7Z,GAAK2c,iBAAiBrQ,EAAIhqB,IAGxB2lC,GAAiB,SAAS3b,EAAIuN,GAChC7Z,GAAK2c,iBAAiBrQ,EAAIhX,GAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAa,eAAe,GAAO6wB,GAAKia,eAAe3N,EAAIuN,MAclHqO,GAAa,SAAS/L,EAAIpsC,EAAGxD,EAAG+J,GAC9BvG,EAAIxD,GAZO,SAAS4vC,EAAInN,EAAO14B,GACnC,IAAIoM,EAAIy5B,EAAG7P,GAAG5pB,EACVsW,EAAOmjB,EAAG/2B,EAAE3O,YACZ0xC,EAAkB,IAATnvB,EACP7pB,EAAa,iBAAiB,GAC9BmmB,GAAQxN,iBAAiBpF,EAAGvT,EAAa,uBAAuB,GAAO6pB,GACzE1W,EAAMgT,GAAQxN,iBAAiBpF,EAAGvT,EAAa,mCAAmC,GAClFmH,EAAM04B,EAAOmZ,GACjBnoB,GAAK2c,iBAAiBR,EAAG7P,GAAIhqB,GAIlB8lC,CAAWjM,EAAI5vC,EAAG+J,IAG3B+xC,GAAW,SAAS/b,EAAI3/B,GAC1B,OAAI2/B,EAAG9+B,EAAEqsC,QAAUltC,IACfqzB,GAAKwc,UAAUlQ,IACR,IAMTgc,GAAQ,SAAShc,EAAI3/B,GACnB2/B,EAAG9+B,EAAEqsC,QAAUltC,GACfs7C,GAAe3b,EAAI3/B,IAGrB47C,GAAY,SAASjc,EAAI3/B,GAC3B27C,GAAMhc,EAAI3/B,GACVqzB,GAAKwc,UAAUlQ,IAGbkc,GAAkB,SAASlc,EAAI3/B,EAAG2V,GAC/B3V,GACDqzB,GAAK2c,iBAAiBrQ,EAAIhqB,IAG5BmmC,GAAc,SAASnc,EAAIh2B,EAAMoyC,EAAKP,GACnCE,GAAS/b,EAAIh2B,KACV6xC,IAAU7b,EAAGmO,WACbwN,GAAe3b,EAAIh2B,GAEnB0pB,GAAK2c,iBAAiBrQ,EAAIhX,GAAQxN,iBAAiBwkB,EAAG5pB,EAClDvT,EAAa,wCACb6wB,GAAKia,eAAe3N,EAAIh2B,GAAO0pB,GAAKia,eAAe3N,EAAIoc,GAAMP,MAIvEQ,GAAgB,SAASrc,GAC3Bgc,GAAMhc,EAAIgZ,GAAEsD,SACZ,IAAIpkC,EAAK8nB,EAAG9+B,EAAEssC,QAAQt1B,GAEtB,OADAwb,GAAKwc,UAAUlQ,GACR9nB,GAGLqkC,GAAW,SAAS1mC,EAAGga,EAAG7vB,GAC5B6V,EAAEiD,EAAIjD,EAAE3U,EAAIw1C,EACZ7gC,EAAEga,EAAIA,EACNha,EAAEhR,EAAE81C,KAAO36C,GAGTw8C,GAAa,SAASxc,EAAInqB,EAAG9T,GAC/Bw6C,GAAS1mC,EAAGqjC,GAAQa,GAAIhB,GAAa/Y,EAAG6P,GAAI9tC,KAG1C06C,GAAY,SAASzc,EAAInqB,GAC3B2mC,GAAWxc,EAAInqB,EAAGwmC,GAAcrc,KAW9B0c,GAAe,SAAS1c,EAAIz/B,GAC9B,IAAIsvC,EAAK7P,EAAG6P,GACRtf,EAAMyP,EAAGzP,IACT2E,EAXiB,SAAS8K,EAAIljB,GAClC,IAAI+yB,EAAK7P,EAAG6P,GACR/2B,EAAI+2B,EAAG/2B,EAGX,OAFAA,EAAEwjB,QAAQuT,EAAGwL,UAAY,IAAIryB,GAAQnM,OACrC/D,EAAEwjB,QAAQuT,EAAGwL,UAAUv+B,QAAUA,EAC1B+yB,EAAGwL,WAMAsB,CAAiB3c,EAAIz/B,GAC/Bq7C,GAAW/L,EAAItf,EAAIqsB,OAAOn7C,EAAI,EAAIouC,EAAGuL,WAxOzB,IAwO8Cv4C,EAAa,mBAAmB,IAC1F0tB,EAAIqsB,OAAOz5B,IAAIoN,EAAIqsB,OAAOn7C,GAAK,IAAI85C,GACnChrB,EAAIqsB,OAAOz5B,IAAIoN,EAAIqsB,OAAOn7C,GAAGiiB,IAAMwR,EACnC3E,EAAIqsB,OAAOn7C,KAGTo7C,GAAsB,SAAS7c,EAAIz/B,GACrCm8C,GAAa1c,EAAItM,GAAKsa,eAAehO,EAAIn9B,EAAatC,GAAM,MAG1Du8C,GAAY,SAASjN,EAAI7vC,GAC3B,IAAI0jB,EAAMmsB,EAAG7P,GAAGzP,IAAIqsB,OAAOz5B,IAAI0sB,EAAGuL,WAAap7C,GAAG0jB,IAElD,OADA5N,GAAW4N,EAAMmsB,EAAGwL,UACbxL,EAAG/2B,EAAEwjB,QAAQ5Y,IAGlBq5B,GAAkB,SAAS/c,EAAIgd,GACjC,IAAInN,EAAK7P,EAAG6P,GAEZ,IADAA,EAAG4J,QAAU5J,EAAG4J,QAAUuD,EACnBA,EAAOA,IACVF,GAAUjN,EAAIA,EAAG4J,QAAUuD,GAAOjgC,QAAU8yB,EAAGnb,IAkBjDuoB,GAAa,SAASpN,EAAItvC,EAAMkD,GAClC,IAAIqV,EAAI+2B,EAAG/2B,EAOX,OANA8iC,GAAW/L,EAAIA,EAAGxlC,KAAO,EAAG0e,GAAMqT,SAAUv5B,EAAa,YAAY,IACrEiW,EAAEiY,SAAS8e,EAAGxlC,MAAQ,CAClBu2B,QAASn9B,EAAEosB,IAAMqpB,GAAQiB,OACzBz2B,IAAKjgB,EAAEoB,EAAE81C,KACTp6C,KAAMA,GAEHsvC,EAAGxlC,QA2BR6yC,GAAe,SAASrN,EAAIpuC,EAAG07C,EAAI7xB,GACrC,GAAW,OAAPukB,EACA0M,GAASY,EAAIjE,GAAQS,MAAO,OAC3B,CACD,IAAIl2C,EA5BM,SAASosC,EAAIpuC,GAC3B,IAAK,IAAIzB,EAAI6vC,EAAG4J,QAAU,EAAGz5C,GAAK,EAAGA,IACjC,GAAIq5C,GAAM53C,EAAGq7C,GAAUjN,EAAI7vC,GAAG8c,SAC1B,OAAO9c,EAGf,OAAQ,EAsBIo9C,CAAUvN,EAAIpuC,GACtB,GAAIgC,GAAK,EACL84C,GAASY,EAAIjE,GAAQiB,OAAQ12C,GACxB6nB,GAlBC,SAASukB,EAAIlwB,GAC3B,IAAIo7B,EAAKlL,EAAGkL,GACZ,KAAOA,EAAGtB,QAAU95B,GAChBo7B,EAAKA,EAAGxwB,SACZwwB,EAAGnZ,MAAQ,EAeCyb,CAAUxN,EAAIpsC,OACf,CACH,IAAIigB,EAtDM,SAASmsB,EAAItvC,GAC/B,IAAI2qC,EAAK2E,EAAG/2B,EAAEiY,SACd,IAAK,IAAI/wB,EAAI,EAAGA,EAAI6vC,EAAGxlC,KAAMrK,IACzB,GAAIq5C,GAAMnO,EAAGlrC,GAAGO,KAAMA,GAClB,OAAOP,EAEf,OAAQ,EAgDUs9C,CAAczN,EAAIpuC,GAC5B,GAAIiiB,EAAM,EAAG,CAET,GADAw5B,GAAarN,EAAG3d,KAAMzwB,EAAG07C,EAAI,GACzBA,EAAGttB,IAAMqpB,GAAQS,MACjB,OAEJj2B,EAAMu5B,GAAWpN,EAAIpuC,EAAG07C,GAE5BZ,GAASY,EAAIjE,GAAQkB,OAAQ12B,MAKnC65B,GAAY,SAASvd,EAAImd,GAC3B,IAAIrgC,EAAUu/B,GAAcrc,GACxB6P,EAAK7P,EAAG6P,GAEZ,GADAqN,GAAarN,EAAI/yB,EAASqgC,EAAI,GAC1BA,EAAGttB,IAAMqpB,GAAQS,MAAO,CACxB,IAAIp4C,EAAM,IAAIi5C,GACd0C,GAAarN,EAAI7P,EAAG8P,KAAMqN,EAAI,GAC9BrnC,GAAWqnC,EAAGttB,IAAMqpB,GAAQS,OAC5B6C,GAAWxc,EAAIz+B,EAAKub,GACpB86B,EAAa/H,EAAIsN,EAAI57C,KAIvBi8C,GAAgB,SAASxd,EAAIgd,EAAOS,EAAO5nC,GAC7C,IAAIg6B,EAAK7P,EAAG6P,GACRxgB,EAAQ2tB,EAAQS,EACpB,GAAIxE,GAAWpjC,EAAEga,GACbR,IACIA,EAAQ,IAAGA,EAAQ,GACvBwpB,GAAgBhJ,EAAIh6B,EAAGwZ,GACnBA,EAAQ,GAAGkpB,GAAiB1I,EAAIxgB,EAAQ,QAG5C,GADIxZ,EAAEga,IAAMqpB,GAAQS,OAAOrC,EAAiBzH,EAAIh6B,GAC5CwZ,EAAQ,EAAG,CACX,IAAI6F,EAAM2a,EAAGyL,QACb/C,GAAiB1I,EAAIxgB,GACrB4oB,GAASpI,EAAI3a,EAAK7F,GAGtBouB,EAAQT,IACRhd,EAAG6P,GAAGyL,SAAWmC,EAAQT,IAG3BU,GAAa,SAAS1d,GACxB,IAAI5pB,EAAI4pB,EAAG5pB,IACTA,EAAEyX,QACJ+tB,GAAW5b,EAAG6P,GAAIz5B,EAAEyX,QAAS5X,GAAgBpT,EAAa,aAAa,KAGrE86C,GAAa,SAAS3d,GACxB,OAAOA,EAAG5pB,EAAEyX,WAGV+vB,GAAY,SAAS5d,EAAI/R,EAAG4vB,GAC9B,IAAIhO,EAAK7P,EAAG6P,GACRiO,EAAK9d,EAAGzP,IAAIib,GACZA,EAAKsS,EAAG36B,IAAI8K,GAEhB,GADAnY,GAAWujC,GAAM7N,EAAGjrC,KAAMs9C,EAAMt9C,OAC5BirC,EAAGiO,QAAUoE,EAAMpE,QAAS,CAC5B,IAAIsE,EAAQjB,GAAUjN,EAAIrE,EAAGiO,SAAS38B,QAClC9G,EAAMgT,GAAQxN,iBAAiBwkB,EAAG5pB,EAClCvT,EAAa,2DACb2oC,EAAGjrC,KAAKsX,SAAU2zB,EAAG9e,KAAMqxB,EAAMlmC,UACrC6jC,GAAS1b,EAAIhqB,GAEjBmiC,GAAetI,EAAIrE,EAAG9W,GAAImpB,EAAMnpB,IAEhC,IAAK,IAAI10B,EAAIiuB,EAAGjuB,EAAI89C,EAAGr8C,EAAI,EAAGzB,IAC1B89C,EAAG36B,IAAInjB,GAAK89C,EAAG36B,IAAInjB,EAAI,GAC3B89C,EAAGr8C,KAMDu8C,GAAY,SAAShe,EAAI/R,GAC3B,IAAI8sB,EAAK/a,EAAG6P,GAAGkL,GACXxqB,EAAMyP,EAAGzP,IACTib,EAAKjb,EAAIib,GAAGroB,IAAI8K,GAEpB,IAAK,IAAIjuB,EAAI+6C,EAAGxB,WAAYv5C,EAAIuwB,EAAIstB,MAAMp8C,EAAGzB,IAAK,CAC9C,IAAIi+C,EAAK1tB,EAAIstB,MAAM16B,IAAInjB,GACvB,GAAIq5C,GAAM4E,EAAG19C,KAAMirC,EAAGjrC,MAIlB,OAHIirC,EAAGiO,QAAUwE,EAAGxE,UAAYsB,EAAGnZ,OAASrR,EAAIstB,MAAMp8C,EAAIs5C,EAAGxB,aACzDrB,GAAgBlY,EAAG6P,GAAIrE,EAAG9W,GAAIupB,EAAGxE,SACrCmE,GAAU5d,EAAI/R,EAAGgwB,IACV,EAGf,OAAO,GAGLC,GAAgB,SAASle,EAAI//B,EAAGM,EAAMmsB,EAAMgI,GAC9C,IAAIjzB,EAAIxB,EAAEwB,EAOV,OANAxB,EAAEkjB,IAAI1hB,GAAK,IAAI+5C,GACfv7C,EAAEkjB,IAAI1hB,GAAGlB,KAAOA,EAChBN,EAAEkjB,IAAI1hB,GAAGirB,KAAOA,EAChBzsB,EAAEkjB,IAAI1hB,GAAGg4C,QAAUzZ,EAAG6P,GAAG4J,QACzBx5C,EAAEkjB,IAAI1hB,GAAGizB,GAAKA,EACdz0B,EAAEwB,EAAIA,EAAI,EACHA,GAOL08C,GAAY,SAASne,EAAIie,GAC3B,IAAIH,EAAK9d,EAAGzP,IAAIib,GACZxrC,EAAIggC,EAAG6P,GAAGkL,GAAGvB,UACjB,KAAOx5C,EAAI89C,EAAGr8C,GACN43C,GAAMyE,EAAG36B,IAAInjB,GAAGO,KAAM09C,EAAG19C,MACzBq9C,GAAU5d,EAAIhgC,EAAGi+C,GAEjBj+C,KA2BNo+C,GAAa,SAASvO,EAAIkL,EAAIrB,GAChCqB,EAAGrB,OAASA,EACZqB,EAAGtB,QAAU5J,EAAG4J,QAChBsB,EAAGxB,WAAa1J,EAAG7P,GAAGzP,IAAIstB,MAAMp8C,EAChCs5C,EAAGvB,UAAY3J,EAAG7P,GAAGzP,IAAIib,GAAG/pC,EAC5Bs5C,EAAGnZ,MAAQ,EACXmZ,EAAGxwB,SAAWslB,EAAGkL,GACjBlL,EAAGkL,GAAKA,EACRjlC,GAAW+5B,EAAGyL,UAAYzL,EAAG4J,UA6C3B4E,GAAY,SAASre,EAAI6P,EAAIkL,GAC/BlL,EAAG3d,KAAO8N,EAAG6P,GACbA,EAAG7P,GAAKA,EACRA,EAAG6P,GAAKA,EACRA,EAAGnb,GAAK,EACRmb,EAAGmL,WAAa,EAChBnL,EAAGoL,IAAMvE,EACT7G,EAAGyL,QAAU,EACbzL,EAAGqL,GAAK,EACRrL,EAAGsL,GAAK,EACRtL,EAAGxlC,KAAO,EACVwlC,EAAGwL,SAAW,EACdxL,EAAG4J,QAAU,EACb5J,EAAGuL,WAAapb,EAAGzP,IAAIqsB,OAAOn7C,EAC9BouC,EAAGkL,GAAK,KACR,IAAIjiC,EAAI+2B,EAAG/2B,EACXA,EAAE7O,OAAS+1B,EAAG/1B,OACd6O,EAAE0S,aAAe,EACjB4yB,GAAWvO,EAAIkL,GAAI,IAGjBuD,GAAa,SAASzO,GACxB,IAAIkL,EAAKlL,EAAGkL,GACR/a,EAAK6P,EAAG7P,GACZ,GAAI+a,EAAGxwB,UAAYwwB,EAAGnZ,MAAO,CAEzB,IAAIpe,EAAIu0B,EAAUlI,GAClBqI,GAAgBrI,EAAIrsB,EAAIu3B,EAAGtB,SAC3BrB,GAAiBvI,EAAIrsB,GAGrBu3B,EAAGrB,QAtEQ,SAAS1Z,GACxB,IAAIv+B,EAAI0nB,GAAgB6W,EAAG5pB,EAAG,SAC1BnW,EAAIi+C,GAAcle,EAAIA,EAAGzP,IAAIstB,MAAOp8C,EAAG,EAAGu+B,EAAG6P,GAAGnb,IACpDypB,GAAUne,EAAIA,EAAGzP,IAAIstB,MAAM16B,IAAIljB,IAoE3Bs+C,CAAWve,GAEf6P,EAAGkL,GAAKA,EAAGxwB,SAnSI,SAASslB,EAAI2O,GAE5B,IADA3O,EAAG7P,GAAGzP,IAAIqsB,OAAOn7C,GAAKouC,EAAG4J,QAAU+E,EAC5B3O,EAAG4J,QAAU+E,GAChB1B,GAAUjN,IAAMA,EAAG4J,SAASz8B,MAAQ6yB,EAAGnb,GAiS3C+pB,CAAW5O,EAAIkL,EAAGtB,SAClB3jC,GAAWilC,EAAGtB,UAAY5J,EAAG4J,SAC7B5J,EAAGyL,QAAUzL,EAAG4J,QAChBzZ,EAAGzP,IAAIstB,MAAMp8C,EAAIs5C,EAAGxB,WAChBwB,EAAGxwB,SA7GU,SAASslB,EAAIkL,GAC9B,IAAI/6C,EAAI+6C,EAAGvB,UACPsE,EAAKjO,EAAG7P,GAAGzP,IAAIib,GAGnB,KAAOxrC,EAAI89C,EAAGr8C,GAAG,CACb,IAAI+pC,EAAKsS,EAAG36B,IAAInjB,GACZwrC,EAAGiO,QAAUsB,EAAGtB,UACZsB,EAAGnZ,OACHsW,GAAgBrI,EAAIrE,EAAG9W,GAAIqmB,EAAGtB,SAClCjO,EAAGiO,QAAUsB,EAAGtB,SAEfuE,GAAUnO,EAAG7P,GAAIhgC,IAClBA,KAiGJ0+C,CAAa7O,EAAIkL,GACZA,EAAGvB,UAAYxZ,EAAGzP,IAAIib,GAAG/pC,GAtEpB,SAASu+B,EAAIwL,GAC3B,IAAIx1B,EAAM0d,GAAKqc,WAAWvE,EAAGjrC,MACvB,oCACA,8CACNyV,EAAMgT,GAAQxN,iBAAiBwkB,EAAG5pB,EAAGvT,EAAamT,GAAMw1B,EAAGjrC,KAAKsX,SAAU2zB,EAAG9e,MAC7EgvB,GAAS1b,EAAIhqB,GAkET2oC,CAAU3e,EAAIA,EAAGzP,IAAIib,GAAGroB,IAAI43B,EAAGvB,aAGjCoF,GAAa,SAAS5e,GACxB,IAAI6P,EAAK7P,EAAG6P,GACZ2I,GAAS3I,EAAI,EAAG,GAChByO,GAAWzO,GACX/5B,GAAqB,OAAV+5B,EAAGkL,IACd/a,EAAG6P,GAAKA,EAAG3d,MAOT2sB,GAAe,SAAS7e,EAAI8e,GAC9B,OAAQ9e,EAAG9+B,EAAEqsC,OACT,KAAKyL,GAAE+F,QAAS,KAAK/F,GAAEgG,UACvB,KAAKhG,GAAEiG,OAAQ,KAAKjG,GAAEkG,OAClB,OAAO,EACX,KAAKlG,GAAEmG,SAAU,OAAOL,EACxB,QAAS,OAAO,IAIlBM,GAAW,SAASpf,GAEtB,MAAQ6e,GAAa7e,EAAI,IAAI,CACzB,GAAIA,EAAG9+B,EAAEqsC,QAAUyL,GAAEqG,UAEjB,YADAC,GAAUtf,GAGdsf,GAAUtf,KAIZuf,GAAW,SAASvf,EAAIv8B,GAE1B,IAAIosC,EAAK7P,EAAG6P,GACRtuC,EAAM,IAAIi5C,GACdnD,EAAkBxH,EAAIpsC,GACtBiwB,GAAKwc,UAAUlQ,GACfyc,GAAUzc,EAAIz+B,GACdq2C,EAAa/H,EAAIpsC,EAAGlC,IAGlBi+C,GAAS,SAASxf,EAAIv8B,GAExBiwB,GAAKwc,UAAUlQ,GACfyf,GAAKzf,EAAIv8B,GACT8zC,EAAavX,EAAG6P,GAAIpsC,GACpBw4C,GAAUjc,EAAI,KASlB,MAAM0f,GACF,cACI91C,KAAKnG,EAAI,IAAI+2C,GACb5wC,KAAK1I,EAAI,IAAIs5C,GACb5wC,KAAK+1C,GAAK71C,IACVF,KAAKugC,GAAKrgC,IACVF,KAAKg2C,QAAU91C,KAIvB,MAAM+1C,GAAW,SAAS7f,EAAI8f,GAE1B,IAAIjQ,EAAK7P,EAAG6P,GACR3a,EAAM8K,EAAG6P,GAAGyL,QACZ/5C,EAAM,IAAIi5C,GACVhZ,EAAM,IAAIgZ,GAEVxa,EAAG9+B,EAAEqsC,QAAUyL,GAAEsD,SACjBV,GAAW/L,EAAIiQ,EAAGH,GAAItpC,GAASxT,EAAa,0BAA0B,IACtE45C,GAAUzc,EAAIz+B,IAEdi+C,GAAOxf,EAAIz+B,GACfu+C,EAAGH,KACH1D,GAAUjc,EAAI,IACd,IAAI+f,EAAQ5I,EAAYtH,EAAItuC,GAC5Bk+C,GAAKzf,EAAIwB,GACTqV,EAAahH,EAAIjZ,GAAakpB,EAAG5+C,EAAE2D,EAAE81C,KAAMoF,EAAO5I,EAAYtH,EAAIrO,IAClEqO,EAAGyL,QAAUpmB,GAGX8qB,GAAiB,SAASnQ,EAAIiQ,GAC5BA,EAAGr8C,EAAEosB,IAAMqpB,GAAQS,QACvBrC,EAAiBzH,EAAIiQ,EAAGr8C,GACxBq8C,EAAGr8C,EAAEosB,EAAIqpB,GAAQS,MACbmG,EAAGF,UAAYhiB,KACf8a,GAAa7I,EAAIiQ,EAAG5+C,EAAE2D,EAAE81C,KAAMmF,EAAG3V,GAAI2V,EAAGF,SACxCE,EAAGF,QAAU,KAiBfK,GAAY,SAASjgB,EAAI8f,GAE3BL,GAAKzf,EAAI8f,EAAGr8C,GACZm4C,GAAW5b,EAAG6P,GAAIiQ,EAAG3V,GAAI9zB,GAASxT,EAAa,0BAA0B,IACzEi9C,EAAG3V,KACH2V,EAAGF,WAGDM,GAAQ,SAASlgB,EAAI8f,GAEvB,OAAQ9f,EAAG9+B,EAAEqsC,OACT,KAAKyL,GAAEsD,QAC6B,KAA5B5oB,GAAKuc,eAAejQ,GACpBigB,GAAUjgB,EAAI8f,GAEdD,GAAS7f,EAAI8f,GACjB,MAEJ,KAAK,GACDD,GAAS7f,EAAI8f,GACb,MAEJ,QACIG,GAAUjgB,EAAI8f,KAMpBK,GAAc,SAASngB,EAAI9+B,GAG7B,IAAI2uC,EAAK7P,EAAG6P,GACRnjB,EAAOsT,EAAGmO,WACVzZ,EAAKmiB,EAAahH,EAAI3R,GAAa,EAAG,EAAG,GACzC4hB,EAAK,IAAIJ,GACbI,EAAG3V,GAAK2V,EAAGH,GAAKG,EAAGF,QAAU,EAC7BE,EAAG5+C,EAAIA,EACPq7C,GAASr7C,EAAGg4C,GAAQqB,WAAY7lB,GAChC6nB,GAASuD,EAAGr8C,EAAGy1C,GAAQS,MAAO,GAC9BrC,EAAiBtX,EAAG6P,GAAI3uC,GACxB+6C,GAAUjc,EAAI,KACd,EAAG,CAEC,GADAlqB,GAAWgqC,EAAGr8C,EAAEosB,IAAMqpB,GAAQS,OAASmG,EAAGF,QAAU,GACjC,MAAf5f,EAAG9+B,EAAEqsC,MAAyC,MAClDyS,GAAenQ,EAAIiQ,GACnBI,GAAMlgB,EAAI8f,SACL/D,GAAS/b,EAAI,KAAiC+b,GAAS/b,EAAI,KACpEmc,GAAYnc,EAAI,IAA+B,IAA+BtT,GA7D5D,SAASmjB,EAAIiQ,GACZ,IAAfA,EAAGF,UACH3G,GAAW6G,EAAGr8C,EAAEosB,IAChB8oB,GAAgB9I,EAAIiQ,EAAGr8C,GACvBi1C,GAAa7I,EAAIiQ,EAAG5+C,EAAE2D,EAAE81C,KAAMmF,EAAG3V,GAAI7hC,GACrCw3C,EAAG3V,OAEC2V,EAAGr8C,EAAEosB,IAAMqpB,GAAQS,OACnBrC,EAAiBzH,EAAIiQ,EAAGr8C,GAC5Bi1C,GAAa7I,EAAIiQ,EAAG5+C,EAAE2D,EAAE81C,KAAMmF,EAAG3V,GAAI2V,EAAGF,WAqD5CQ,CAAcvQ,EAAIiQ,GAClB7Z,GAAS4J,EAAG/2B,EAAEgT,KAAK4I,GAAK1L,GAAQ5K,YAAY0hC,EAAG3V,KAC/CjE,GAAS2J,EAAG/2B,EAAEgT,KAAK4I,GAAK1L,GAAQ5K,YAAY0hC,EAAGH,MAiC7CU,GAAO,SAASrgB,EAAInqB,EAAGyqC,EAAU5zB,GAEnC,IAAI6zB,EAAS,IAAIzF,GACbC,EAAK,IAAIzB,GACbiH,EAAOznC,EArQU,SAASknB,GAC1B,IAAI5pB,EAAI4pB,EAAG5pB,EACPoqC,EAAM,IAAInkB,GAAMjmB,GAChBy5B,EAAK7P,EAAG6P,GAGZ,OAFQA,EAAG/2B,EACThX,EAAE+tC,EAAGsL,MAAQqF,EACRA,EA+PIC,CAAazgB,GACxBugB,EAAOznC,EAAE3O,YAAcuiB,EACvB2xB,GAAUre,EAAIugB,EAAQxF,GACtBkB,GAAUjc,EAAI,IACVsgB,IACAzD,GAAoB7c,EAAI,QACxB+c,GAAgB/c,EAAI,IAtCZ,SAASA,GAErB,IAAI6P,EAAK7P,EAAG6P,GACR/2B,EAAI+2B,EAAG/2B,EACPxO,EAAU,EAEd,GADAwO,EAAE2S,WAAY,EACK,KAAfuU,EAAG9+B,EAAEqsC,MACL,GACI,OAAQvN,EAAG9+B,EAAEqsC,OACT,KAAKyL,GAAEsD,QACHI,GAAa1c,EAAIqc,GAAcrc,IAC/B11B,IACA,MAEJ,KAAK0uC,GAAE0H,QACHhtB,GAAKwc,UAAUlQ,GACflnB,EAAE2S,WAAY,EACd,MAEJ,QAASiI,GAAK2c,iBAAiBrQ,EAAIn9B,EAAa,4BAA4B,YAE3EiW,EAAE2S,WAAaswB,GAAS/b,EAAI,KAEzC+c,GAAgB/c,EAAI11B,GACpBwO,EAAE6S,UAAYkkB,EAAG4J,QACjBlB,GAAiB1I,EAAIA,EAAG4J,SAexBkH,CAAQ3gB,GACRic,GAAUjc,EAAI,IACdof,GAASpf,GACTugB,EAAOznC,EAAE1O,gBAAkB41B,EAAGmO,WAC9BgO,GAAYnc,EAAIgZ,GAAEiG,OAAQjG,GAAE4H,YAAal0B,GArQzB,SAASsT,EAAIv8B,GAC7B,IAAIosC,EAAK7P,EAAG6P,GAAG3d,KACfqqB,GAAS94C,EAAGy1C,GAAQqB,WAAYzD,EAAajH,EAAIhS,GAAY,EAAGgS,EAAGsL,GAAI,IACvE7D,EAAiBzH,EAAIpsC,GAmQrBo9C,CAAY7gB,EAAInqB,GAChB+oC,GAAW5e,IAGT8gB,GAAU,SAAS9gB,EAAIv8B,GAEzB,IAAIhC,EAAI,EAER,IADAg+C,GAAKzf,EAAIv8B,GACFs4C,GAAS/b,EAAI,KAChBsX,EAAiBtX,EAAG6P,GAAIpsC,GACxBg8C,GAAKzf,EAAIv8B,GACThC,IAEJ,OAAOA,GAGLs/C,GAAW,SAAS/gB,EAAIlnB,EAAG4T,GAC7B,IA4BIpiB,EA5BAulC,EAAK7P,EAAG6P,GACRuB,EAAO,IAAIoJ,GACf,OAAQxa,EAAG9+B,EAAEqsC,OACT,KAAK,GACD7Z,GAAKwc,UAAUlQ,GACI,KAAfA,EAAG9+B,EAAEqsC,MACL6D,EAAKvhB,EAAIqpB,GAAQS,OAEjBmH,GAAQ9gB,EAAIoR,GACZuH,GAAgB9I,EAAIuB,IAExB+K,GAAYnc,EAAI,GAA8B,GAA8BtT,GAC5E,MAEJ,KAAK,IACDyzB,GAAYngB,EAAIoR,GAChB,MAEJ,KAAK4H,GAAEgI,UACHxE,GAAWxc,EAAIoR,EAAMpR,EAAG9+B,EAAEssC,QAAQt1B,IAClCwb,GAAKwc,UAAUlQ,GACf,MAEJ,QACItM,GAAK2c,iBAAiBrQ,EAAIn9B,EAAa,+BAA+B,IAG9EiT,GAAWgD,EAAE+W,IAAMqpB,GAAQgB,WAE3B,IAAI5uB,EAAOxS,EAAEjU,EAAE81C,KACX1B,GAAW7H,EAAKvhB,GAChBvlB,EAAUhC,GAEN8oC,EAAKvhB,IAAMqpB,GAAQS,OACnBrC,EAAiBzH,EAAIuB,GACzB9mC,EAAUulC,EAAGyL,SAAWhwB,EAAK,IAEjCixB,GAASzjC,EAAGogC,GAAQC,MAAOtC,EAAahH,EAAIra,GAASlK,EAAMhhB,EAAQ,EAAG,IACtEktC,EAAa3H,EAAInjB,GACjBmjB,EAAGyL,QAAUhwB,EAAO,GA8BlB21B,GAAc,SAASjhB,EAAIv8B,GAG7B,IAAIosC,EAAK7P,EAAG6P,GACRnjB,EAAOsT,EAAGmO,WAEd,KA3Be,SAASnO,EAAIv8B,GAE5B,OAAQu8B,EAAG9+B,EAAEqsC,OACT,KAAK,GAA8B,CAC/B,IAAI7gB,EAAOsT,EAAGmO,WAKd,OAJAza,GAAKwc,UAAUlQ,GACfyf,GAAKzf,EAAIv8B,GACT04C,GAAYnc,EAAI,GAA8B,GAA8BtT,QAC5EwqB,EAAmBlX,EAAG6P,GAAIpsC,GAG9B,KAAKu1C,GAAEsD,QAEH,YADAiB,GAAUvd,EAAIv8B,GAGlB,QACIiwB,GAAK2c,iBAAiBrQ,EAAIn9B,EAAa,qBAAqB,KAUpEq+C,CAAWlhB,EAAIv8B,KAEX,OAAQu8B,EAAG9+B,EAAEqsC,OACT,KAAK,GACDgS,GAASvf,EAAIv8B,GACb,MAEJ,KAAK,GAA8B,CAC/B,IAAIlC,EAAM,IAAIi5C,GACdnD,EAAkBxH,EAAIpsC,GACtB+7C,GAAOxf,EAAIz+B,GACXq2C,EAAa/H,EAAIpsC,EAAGlC,GACpB,MAEJ,KAAK,GAA8B,CAC/B,IAAIA,EAAM,IAAIi5C,GACd9mB,GAAKwc,UAAUlQ,GACfyc,GAAUzc,EAAIz+B,GACdk3C,GAAU5I,EAAIpsC,EAAGlC,GACjBw/C,GAAS/gB,EAAIv8B,EAAGipB,GAChB,MAEJ,KAAK,GAA8B,KAAKssB,GAAEgI,UAAW,KAAK,IACtD1J,EAAiBzH,EAAIpsC,GACrBs9C,GAAS/gB,EAAIv8B,EAAGipB,GAChB,MAEJ,QAAS,SA+Ffy0B,GAAW,CACb,CAACC,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAClB,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GACtC,CAACD,KAAM,EAAGC,MAAO,GACjB,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,IASpCC,GAAU,SAASthB,EAAIv8B,EAAGi/B,GAC5Bgb,GAAW1d,GACX,IAAIuhB,EA1DS,SAASllC,GACtB,OAAQA,GACJ,KAAK28B,GAAEwI,OAAQ,OAAOhL,EACtB,KAAK,GAA8B,OAAOD,EAC1C,KAAK,IAA+B,OAAOF,EAC3C,KAAK,GAA8B,OAAOC,EAC1C,QAAS,OAAOG,GAoDVgL,CAASzhB,EAAG9+B,EAAEqsC,OACxB,GAAIgU,IAAQ9K,EAAa,CACrB,IAAI/pB,EAAOsT,EAAGmO,WACdza,GAAKwc,UAAUlQ,GACfshB,GAAQthB,EAAIv8B,EAZG,IAaf60C,GAAYtY,EAAG6P,GAAI0R,EAAK99C,EAAGipB,QApHjB,SAASsT,EAAIv8B,GAG3B,OAAQu8B,EAAG9+B,EAAEqsC,OACT,KAAKyL,GAAE0I,OACHnF,GAAS94C,EAAGy1C,GAAQc,MAAO,GAC3Bv2C,EAAEoB,EAAE61C,KAAO1a,EAAG9+B,EAAEssC,QAAQ1sC,EACxB,MAEJ,KAAKk4C,GAAE2I,OACHpF,GAAS94C,EAAGy1C,GAAQe,MAAO,GAC3Bx2C,EAAEoB,EAAE41C,KAAOza,EAAG9+B,EAAEssC,QAAQxtC,EACxB,MAEJ,KAAKg5C,GAAEgI,UACHxE,GAAWxc,EAAIv8B,EAAGu8B,EAAG9+B,EAAEssC,QAAQt1B,IAC/B,MAEJ,KAAK8gC,GAAE4I,OACHrF,GAAS94C,EAAGy1C,GAAQU,KAAM,GAC1B,MAEJ,KAAKZ,GAAE6I,QACHtF,GAAS94C,EAAGy1C,GAAQW,MAAO,GAC3B,MAEJ,KAAKb,GAAE8I,SACHvF,GAAS94C,EAAGy1C,GAAQY,OAAQ,GAC5B,MAEJ,KAAKd,GAAE0H,QAAS,CACZ,IAAI7Q,EAAK7P,EAAG6P,GACZqM,GAAgBlc,EAAI6P,EAAG/2B,EAAE2S,UAAW5oB,EAAa,8CAA8C,IAC/F05C,GAAS94C,EAAGy1C,GAAQE,QAASvC,EAAahH,EAAInR,GAAW,EAAG,EAAG,IAC/D,MAEJ,KAAK,IAED,YADAyhB,GAAYngB,EAAIv8B,GAGpB,KAAKu1C,GAAE4H,YAGH,OAFAltB,GAAKwc,UAAUlQ,QACfqgB,GAAKrgB,EAAIv8B,EAAG,EAAGu8B,EAAGmO,YAGtB,QAEI,YADA8S,GAAYjhB,EAAIv8B,GAIxBiwB,GAAKwc,UAAUlQ,GAoEX+hB,CAAU/hB,EAAIv8B,GAElB,IAAI4Y,EAzDU,SAASA,GACvB,OAAQA,GACJ,KAAK,GAA8B,OAAOy4B,EAC1C,KAAK,GAA8B,OAAOqB,EAC1C,KAAK,GAA8B,OAAOP,EAC1C,KAAK,GAA8B,OAAOD,EAC1C,KAAK,GAA8B,OAAOK,EAC1C,KAAK,GAA8B,OAAOZ,EAC1C,KAAK4D,GAAEgJ,QAAW,OAAOxM,EACzB,KAAK,GAA8B,OAAOR,EAC1C,KAAK,IAA+B,OAAOC,EAC3C,KAAK,IAA+B,OAAOC,EAC3C,KAAK8D,GAAEiJ,OAAW,OAAOhM,EACzB,KAAK+C,GAAEkJ,OAAW,OAAOhM,EACzB,KAAK8C,GAAEmJ,UAAW,OAAOhN,EACzB,KAAK6D,GAAEoJ,MAAW,OAAOvM,EACzB,KAAKmD,GAAEqJ,MAAW,OAAOhN,EACzB,KAAK,GAA8B,OAAOK,EAC1C,KAAKsD,GAAEsJ,MAAW,OAAO7M,EACzB,KAAK,GAA8B,OAAOF,EAC1C,KAAKyD,GAAEuJ,MAAW,OAAOjN,EACzB,KAAK0D,GAAEwJ,OAAW,OAAOzN,EACzB,KAAKiE,GAAEyJ,MAAW,OAAO1M,EACzB,QAAkB,OAAOD,GAkCpB4M,CAAU1iB,EAAG9+B,EAAEqsC,OACxB,KAAOlxB,IAAOy5B,GAAgBqL,GAAS9kC,GAAI+kC,KAAO1e,GAAO,CACrD,IAAInmB,EAAK,IAAIi+B,GACT9tB,EAAOsT,EAAGmO,WACdza,GAAKwc,UAAUlQ,GACf6X,EAAW7X,EAAG6P,GAAIxzB,EAAI5Y,GAEtB,IAAIk/C,EAASrB,GAAQthB,EAAIzjB,EAAI4kC,GAAS9kC,GAAIglC,OAC1ChJ,GAAYrY,EAAG6P,GAAIxzB,EAAI5Y,EAAG8Y,EAAImQ,GAC9BrQ,EAAKsmC,EAGT,OADAhF,GAAW3d,GACJ3jB,GAGLojC,GAAO,SAASzf,EAAIv8B,GACtB69C,GAAQthB,EAAIv8B,EAAG,IAabm/C,GAAQ,SAAS5iB,GAEnB,IAAI6P,EAAK7P,EAAG6P,GACRkL,EAAK,IAAIzB,GACb8E,GAAWvO,EAAIkL,EAAI,GACnBqE,GAASpf,GACTse,GAAWzO,IAOf,MAAMgT,GACF,cACIj5C,KAAKsoB,KAAO,KACZtoB,KAAKnG,EAAI,IAAI+2C,IAUrB,MA2BMsI,GAAa,SAAS9iB,EAAI+iB,EAAI/F,GAChC,IAAInnC,EAAI,IAAI2kC,GAvhCA,IAAS3qB,EAyhCrB,GADAqsB,GAAgBlc,GAxhCKnQ,EAwhCOkzB,EAAGt/C,EAAEosB,EAvhC1BqpB,GAAQiB,QAAUtqB,GAAKA,GAAKqpB,GAAQmB,UAuhCNx3C,EAAa,gBAAgB,IAC9Dk5C,GAAS/b,EAAI,IAA+B,CAC5C,IAAIgjB,EAAK,IAAIH,GACbG,EAAG9wB,KAAO6wB,EACV9B,GAAYjhB,EAAIgjB,EAAGv/C,GACfu/C,EAAGv/C,EAAEosB,IAAMqpB,GAAQmB,UAlCR,SAASra,EAAI+iB,EAAIt/C,GACpC,IAAIosC,EAAK7P,EAAG6P,GACRxgB,EAAQwgB,EAAGyL,QACX2H,GAAW,EACf,KAAOF,EAAIA,EAAKA,EAAG7wB,KACX6wB,EAAGt/C,EAAEosB,IAAMqpB,GAAQmB,WAEf0I,EAAGt/C,EAAEoB,EAAE+1C,IAAIC,KAAOp3C,EAAEosB,GAAKkzB,EAAGt/C,EAAEoB,EAAE+1C,IAAI15C,IAAMuC,EAAEoB,EAAE81C,OAC9CsI,GAAW,EACXF,EAAGt/C,EAAEoB,EAAE+1C,IAAIC,GAAK3B,GAAQiB,OACxB4I,EAAGt/C,EAAEoB,EAAE+1C,IAAI15C,EAAImuB,GAGf5rB,EAAEosB,IAAMqpB,GAAQiB,QAAU4I,EAAGt/C,EAAEoB,EAAE+1C,IAAIl3B,MAAQjgB,EAAEoB,EAAE81C,OACjDsI,GAAW,EACXF,EAAGt/C,EAAEoB,EAAE+1C,IAAIl3B,IAAM2L,IAI7B,GAAI4zB,EAAU,CAEV,IAAI5mC,EAAK5Y,EAAEosB,IAAMqpB,GAAQiB,OAASrkB,GAAUM,GAC5CygB,EAAahH,EAAIxzB,EAAIgT,EAAO5rB,EAAEoB,EAAE81C,KAAM,GACtCpC,GAAiB1I,EAAI,IAYjBqT,CAAeljB,EAAI+iB,EAAIC,EAAGv/C,GAC9Bm4C,GAAW5b,EAAG6P,GAAImN,EAAQhd,EAAG5pB,EAAEyX,QAAS5X,GAAgBpT,EAAa,aAAa,IAClFigD,GAAW9iB,EAAIgjB,EAAIhG,EAAQ,OACxB,CACHf,GAAUjc,EAAI,IACd,IAAIyd,EAAQqD,GAAQ9gB,EAAInqB,GACxB,GAAI4nC,IAAUT,EAKV,OAFApE,GAAe5Y,EAAG6P,GAAIh6B,QACtBijC,GAAc9Y,EAAG6P,GAAIkT,EAAGt/C,EAAGoS,GAH3B2nC,GAAcxd,EAAIgd,EAAOS,EAAO5nC,GAOxC0mC,GAAS1mC,EAAGqjC,GAAQgB,UAAWla,EAAG6P,GAAGyL,QAAQ,GAC7CxC,GAAc9Y,EAAG6P,GAAIkT,EAAGt/C,EAAGoS,IAGzBwQ,GAAO,SAAS2Z,GAElB,IAAIv8B,EAAI,IAAI+2C,GAIZ,OAHAiF,GAAKzf,EAAIv8B,GACLA,EAAEosB,IAAMqpB,GAAQU,OAAMn2C,EAAEosB,EAAIqpB,GAAQY,QACxCnC,EAAc3X,EAAG6P,GAAIpsC,GACdA,EAAEqV,GAGPqqC,GAAW,SAASnjB,EAAItL,GAC1B,IACImpB,EADAnxB,EAAOsT,EAAGmO,WAEV4N,GAAS/b,EAAIgZ,GAAEoK,SACfvF,EAAQxB,GAAcrc,IAEtBtM,GAAKwc,UAAUlQ,GACf6d,EAAQ10B,GAAgB6W,EAAG5pB,EAAG,UAElC,IAAI6X,EAAIiwB,GAAcle,EAAIA,EAAGzP,IAAIib,GAAIqS,EAAOnxB,EAAMgI,GAClDspB,GAAUhe,EAAI/R,IAqBZo1B,GAAY,SAASrjB,EAAI6d,EAAOnxB,GAElC,IAEIzsB,EAFA4vC,EAAK7P,EAAG6P,GACRyT,EAAKtjB,EAAGzP,IAAIstB,OApBE,SAAShO,EAAIyT,EAAIzF,GACnC,IAAK,IAAI79C,EAAI6vC,EAAGkL,GAAGxB,WAAYv5C,EAAIsjD,EAAG7hD,EAAGzB,IACrC,GAAIq5C,GAAMwE,EAAOyF,EAAGngC,IAAInjB,GAAGO,MAAO,CAC9B,IAAIyV,EAAMgT,GAAQxN,iBAAiBq0B,EAAG7P,GAAG5pB,EACrCvT,EAAa,yCAAyC,GACtDg7C,EAAMhmC,SAAUyrC,EAAGngC,IAAInjB,GAAG0sB,MAC9BgvB,GAAS7L,EAAG7P,GAAIhqB,IAgBxButC,CAAc1T,EAAIyT,EAAIzF,GACtB5B,GAAUjc,EAAIgZ,GAAEwK,YAEhBvjD,EAAIi+C,GAAcle,EAAIsjB,EAAIzF,EAAOnxB,EAAM+qB,EAAc5H,IAbpC,SAAS7P,GAC1B,KAAsB,KAAfA,EAAG9+B,EAAEqsC,OAA0CvN,EAAG9+B,EAAEqsC,QAAUyL,GAAEwK,YACnElE,GAAUtf,GAYdyjB,CAAazjB,GACT6e,GAAa7e,EAAI,KAEjBsjB,EAAGngC,IAAIljB,GAAGw5C,QAAU5J,EAAGkL,GAAGtB,SAE9B0E,GAAUne,EAAIsjB,EAAGngC,IAAIljB,KAsCnBia,GAAO,SAAS8lB,GAClB,IAAInqB,EAAI,IAAI2kC,GAKZ,OAJAiF,GAAKzf,EAAInqB,GACTyhC,EAAiBtX,EAAG6P,GAAIh6B,GACxBC,GAAWD,EAAEga,IAAMqpB,GAAQgB,WACjBrkC,EAAEhR,EAAE81C,MAIZ+I,GAAU,SAAS1jB,EAAI1U,EAAMoB,EAAMswB,EAAO2G,GAE5C,IAEIC,EAFA7I,EAAK,IAAIzB,GACTzJ,EAAK7P,EAAG6P,GAEZkN,GAAgB/c,EAAI,GACpBic,GAAUjc,EAAIgZ,GAAE6K,OAChB,IAAIC,EAAOH,EAAQ5M,EAAclH,EAAI7R,GAAY1S,EAAMorB,GAAWqB,EAAUlI,GAC5EuO,GAAWvO,EAAIkL,EAAI,GACnBgC,GAAgB/c,EAAIgd,GACpBzE,GAAiB1I,EAAImN,GACrB4F,GAAM5iB,GACNse,GAAWzO,GACXuI,GAAiBvI,EAAIiU,GACjBH,EACAC,EAAS7M,EAAclH,EAAI9R,GAAYzS,EAAMorB,IAE7CG,EAAahH,EAAIta,GAAajK,EAAM,EAAG0xB,GACvCxF,EAAa3H,EAAInjB,GACjBk3B,EAAS7M,EAAclH,EAAIpR,GAAanT,EAAO,EAAGorB,IAEtDyB,GAAetI,EAAI+T,EAAQE,EAAO,GAClCtM,EAAa3H,EAAInjB,IA+Cfq3B,GAAU,SAAS/jB,EAAItT,GAEzB,IAAImjB,EAAK7P,EAAG6P,GACRkL,EAAK,IAAIzB,GACb8E,GAAWvO,EAAIkL,EAAI,GACnBrnB,GAAKwc,UAAUlQ,GACf,IAAIljB,EAAUu/B,GAAcrc,GAC5B,OAAQA,EAAG9+B,EAAEqsC,OACT,KAAK,IApDE,SAASvN,EAAIljB,EAAS4P,GAEjC,IAAImjB,EAAK7P,EAAG6P,GACRvkB,EAAOukB,EAAGyL,QACduB,GAAoB7c,EAAI,eACxB6c,GAAoB7c,EAAI,eACxB6c,GAAoB7c,EAAI,cACxB0c,GAAa1c,EAAIljB,GACjBm/B,GAAUjc,EAAI,IACd9lB,GAAK8lB,GACLic,GAAUjc,EAAI,IACd9lB,GAAK8lB,GACD+b,GAAS/b,EAAI,IACb9lB,GAAK8lB,IAELgX,EAAWnH,EAAIA,EAAGyL,QAASxD,EAAUjI,EAAI,IACzC0I,GAAiB1I,EAAI,IAEzB6T,GAAQ1jB,EAAI1U,EAAMoB,EAAM,EAAG,GAkCYs3B,CAAOhkB,EAAIljB,EAAS4P,GAAO,MAC9D,KAAK,GAA8B,KAAKssB,GAAEiL,OAhClC,SAASjkB,EAAIkkB,GAEzB,IAAIrU,EAAK7P,EAAG6P,GACRh6B,EAAI,IAAI2kC,GACRwC,EAAQ,EACR1xB,EAAOukB,EAAGyL,QAOd,IALAuB,GAAoB7c,EAAI,mBACxB6c,GAAoB7c,EAAI,eACxB6c,GAAoB7c,EAAI,iBAExB0c,GAAa1c,EAAIkkB,GACVnI,GAAS/b,EAAI,KAChB0c,GAAa1c,EAAIqc,GAAcrc,IAC/Bgd,IAEJf,GAAUjc,EAAIgZ,GAAEiL,OAChB,IAAIv3B,EAAOsT,EAAGmO,WACdqP,GAAcxd,EAAI,EAAG8gB,GAAQ9gB,EAAInqB,GAAIA,GACrC+gC,EAAgB/G,EAAI,GACpB6T,GAAQ1jB,EAAI1U,EAAMoB,EAAMswB,EAAQ,EAAG,GAYkBmH,CAAQnkB,EAAIljB,GAAU,MACvE,QAAS4W,GAAK2c,iBAAiBrQ,EAAIn9B,EAAa,wBAAwB,IAE5Es5C,GAAYnc,EAAIgZ,GAAEiG,OAAQjG,GAAEoL,OAAQ13B,GACpC4xB,GAAWzO,IAGTwU,GAAkB,SAASrkB,EAAIskB,GAEjC,IAGIC,EAHAxJ,EAAK,IAAIzB,GACTzJ,EAAK7P,EAAG6P,GACRpsC,EAAI,IAAI+2C,GAOZ,GAJA9mB,GAAKwc,UAAUlQ,GACfyf,GAAKzf,EAAIv8B,GACTw4C,GAAUjc,EAAIgZ,GAAEwL,SAEZxkB,EAAG9+B,EAAEqsC,QAAUyL,GAAEoK,SAAWpjB,EAAG9+B,EAAEqsC,QAAUyL,GAAEyL,SAAU,CAIvD,IAHA/M,EAAe1X,EAAG6P,GAAIpsC,GACtB26C,GAAWvO,EAAIkL,GAAI,GACnBoI,GAASnjB,EAAIv8B,EAAEvC,GACR66C,GAAS/b,EAAI,MACpB,GAAI6e,GAAa7e,EAAI,GAEjB,OADAse,GAAWzO,GACJyU,EAEPC,EAAKxM,EAAUlI,QAEnB8H,EAAc3X,EAAG6P,GAAIpsC,GACrB26C,GAAWvO,EAAIkL,GAAI,GACnBwJ,EAAK9gD,EAAEqV,EASX,OANAsmC,GAASpf,GACTse,GAAWzO,GACP7P,EAAG9+B,EAAEqsC,QAAUyL,GAAE+F,SAAW/e,EAAG9+B,EAAEqsC,QAAUyL,GAAEgG,YAC7CsF,EAAarN,EAAYpH,EAAIyU,EAAYvM,EAAUlI,KACvDuI,GAAiBvI,EAAI0U,GAEdD,GA0DLI,GAAW,SAAS1kB,EAAItT,GAE1B,IAAIjpB,EAAI,IAAI+2C,GACR11C,EAAI,IAAI01C,GACZ9mB,GAAKwc,UAAUlQ,GACf,IAAIsgB,EAlBS,SAAStgB,EAAIv8B,GAE1B,IAAI68C,EAAW,EAEf,IADA/C,GAAUvd,EAAIv8B,GACQ,KAAfu8B,EAAG9+B,EAAEqsC,OACRgS,GAASvf,EAAIv8B,GAKjB,OAJmB,KAAfu8B,EAAG9+B,EAAEqsC,QACL+S,EAAW,EACXf,GAASvf,EAAIv8B,IAEV68C,EAQQhsB,CAAS0L,EAAIv8B,GAC5B48C,GAAKrgB,EAAIl7B,EAAGw7C,EAAU5zB,GACtBosB,GAAc9Y,EAAG6P,GAAIpsC,EAAGqB,GACxB0yC,EAAaxX,EAAG6P,GAAInjB,IAiDlB4yB,GAAY,SAAStf,GACvB,IAAItT,EAAOsT,EAAGmO,WAEd,OADAuP,GAAW1d,GACJA,EAAG9+B,EAAEqsC,OACR,KAAK,GACD7Z,GAAKwc,UAAUlQ,GACf,MAEJ,KAAKgZ,GAAE2L,OAxHA,SAAS3kB,EAAItT,GAExB,IAAImjB,EAAK7P,EAAG6P,GACRyU,EAAa5N,EAEjB,IADA4N,EAAaD,GAAgBrkB,EAAIskB,GAC1BtkB,EAAG9+B,EAAEqsC,QAAUyL,GAAEgG,WACpBsF,EAAaD,GAAgBrkB,EAAIskB,GACjCvI,GAAS/b,EAAIgZ,GAAE+F,UACf6D,GAAM5iB,GACVmc,GAAYnc,EAAIgZ,GAAEiG,OAAQjG,GAAE2L,MAAOj4B,GACnC0rB,GAAiBvI,EAAIyU,GA+GbM,CAAO5kB,EAAItT,GACX,MAEJ,KAAKssB,GAAE6L,UAjSG,SAAS7kB,EAAItT,GAE3B,IAAImjB,EAAK7P,EAAG6P,GACRkL,EAAK,IAAIzB,GACb5lB,GAAKwc,UAAUlQ,GACf,IAAI8kB,EAAYrN,EAAc5H,GAC1BkV,EAAW1+B,GAAK2Z,GACpBoe,GAAWvO,EAAIkL,EAAI,GACnBkB,GAAUjc,EAAIgZ,GAAE6K,OAChBjB,GAAM5iB,GACNgY,GAAYnI,EAAIiV,GAChB3I,GAAYnc,EAAIgZ,GAAEiG,OAAQjG,GAAE6L,SAAUn4B,GACtC4xB,GAAWzO,GACXuI,GAAiBvI,EAAIkV,GAqRbC,CAAUhlB,EAAItT,GACd,MAEJ,KAAKssB,GAAE6K,MACHnwB,GAAKwc,UAAUlQ,GACf4iB,GAAM5iB,GACNmc,GAAYnc,EAAIgZ,GAAEiG,OAAQjG,GAAE6K,MAAOn3B,GACnC,MAEJ,KAAKssB,GAAEoL,OACHL,GAAQ/jB,EAAItT,GACZ,MAEJ,KAAKssB,GAAEiM,WA/RI,SAASjlB,EAAItT,GAE5B,IAAImjB,EAAK7P,EAAG6P,GACRqV,EAAczN,EAAc5H,GAC5BsV,EAAM,IAAI7L,GACV8L,EAAM,IAAI9L,GACd8E,GAAWvO,EAAIsV,EAAK,GACpB/G,GAAWvO,EAAIuV,EAAK,GACpB1xB,GAAKwc,UAAUlQ,GACfof,GAASpf,GACTmc,GAAYnc,EAAIgZ,GAAEmG,SAAUnG,GAAEiM,UAAWv4B,GACzC,IAAIq4B,EAAW1+B,GAAK2Z,GAChBolB,EAAIxjB,OACJsW,GAAgBrI,EAAIkV,EAAUK,EAAI3L,SACtC6E,GAAWzO,GACXsI,GAAetI,EAAIkV,EAAUG,GAC7B5G,GAAWzO,GAgRHwV,CAAWrlB,EAAItT,GACf,MAEJ,KAAKssB,GAAE4H,YACH8D,GAAS1kB,EAAItT,GACb,MAEJ,KAAKssB,GAAEsM,SACH5xB,GAAKwc,UAAUlQ,GACX+b,GAAS/b,EAAIgZ,GAAE4H,aAvIb,SAAS5gB,GACvB,IAAIl7B,EAAI,IAAI01C,GACR3K,EAAK7P,EAAG6P,GACZ6M,GAAa1c,EAAIqc,GAAcrc,IAC/B+c,GAAgB/c,EAAI,GACpBqgB,GAAKrgB,EAAIl7B,EAAG,EAAGk7B,EAAGmO,YAElB2O,GAAUjN,EAAI/qC,EAAED,EAAE81C,MAAM59B,QAAU8yB,EAAGnb,GAiIzB6wB,CAAUvlB,GA9HR,SAASA,GAEvB,IACIyd,EADAT,EAAQ,EAERnnC,EAAI,IAAI2kC,GACZ,GACIkC,GAAa1c,EAAIqc,GAAcrc,IAC/Bgd,UACKjB,GAAS/b,EAAI,KAClB+b,GAAS/b,EAAI,IACbyd,EAAQqD,GAAQ9gB,EAAInqB,IAEpBA,EAAEga,EAAIqpB,GAAQS,MACd8D,EAAQ,GAEZD,GAAcxd,EAAIgd,EAAOS,EAAO5nC,GAChCknC,GAAgB/c,EAAIgd,GAgHRwI,CAAUxlB,GACd,MAEJ,KAAKgZ,GAAEwK,WACH9vB,GAAKwc,UAAUlQ,GACfqjB,GAAUrjB,EAAIqc,GAAcrc,GAAKtT,GACjC,MAEJ,KAAKssB,GAAEqG,UACH3rB,GAAKwc,UAAUlQ,GA/EX,SAASA,GAErB,IAEIwO,EAAOiX,EAFP5V,EAAK7P,EAAG6P,GACRh6B,EAAI,IAAI2kC,GAERqE,GAAa7e,EAAI,IAAqB,KAAfA,EAAG9+B,EAAEqsC,MAC5BiB,EAAQiX,EAAO,GAEfA,EAAO3E,GAAQ9gB,EAAInqB,GACfojC,GAAWpjC,EAAEga,IACb8oB,GAAgB9I,EAAIh6B,GAChBA,EAAEga,IAAMqpB,GAAQC,OAAkB,IAATsM,IACzBrf,GAAWuQ,EAAe9G,EAAIh6B,GAAIoX,IAClCnX,GAAW6gC,EAAe9G,EAAIh6B,GAAGwf,IAAMwa,EAAG4J,UAE9CjL,EAAQqB,EAAG4J,QACXgM,EAAOn9C,GAEM,IAATm9C,EACAjX,EAAQ4I,EAAgBvH,EAAIh6B,IAE5ByhC,EAAiBzH,EAAIh6B,GACrB24B,EAAQqB,EAAG4J,QACX3jC,GAAW2vC,IAAS5V,EAAGyL,QAAU9M,KAI7CgK,GAAS3I,EAAIrB,EAAOiX,GACpB1J,GAAS/b,EAAI,IAoDL0lB,CAAQ1lB,GACR,MAEJ,KAAKgZ,GAAEyL,SACP,KAAKzL,GAAEoK,QACHD,GAASnjB,EAAI+X,EAAU/X,EAAG6P,KAC1B,MAEJ,SAvGQ,SAAS7P,GAErB,IAAI6P,EAAK7P,EAAG6P,GACRpsC,EAAI,IAAIo/C,GACZ5B,GAAYjhB,EAAIv8B,EAAEA,GACC,KAAfu8B,EAAG9+B,EAAEqsC,OAAyD,KAAfvN,EAAG9+B,EAAEqsC,OACpD9pC,EAAEyuB,KAAO,KACT4wB,GAAW9iB,EAAIv8B,EAAG,KAGlBy4C,GAAgBlc,EAAIv8B,EAAEA,EAAEosB,IAAMqpB,GAAQC,MAAOt2C,EAAa,gBAAgB,IAC1EqjC,GAASyQ,EAAe9G,EAAIpsC,EAAEA,GAAI,IA6F9BkiD,CAAS3lB,GAIjBlqB,GAAWkqB,EAAG6P,GAAG/2B,EAAE0S,cAAgBwU,EAAG6P,GAAGyL,SAAWtb,EAAG6P,GAAGyL,SAAWtb,EAAG6P,GAAG4J,SAC3EzZ,EAAG6P,GAAGyL,QAAUtb,EAAG6P,GAAG4J,QACtBkE,GAAW3d,IA4CfjgC,EAAOD,QAAQ0wB,QAz5Cf,MACI,cACI5mB,KAAKgzC,OAAS,CACVz5B,IAAK,GACL1hB,EAAGqI,IACHmP,KAAMnP,KAEVF,KAAK4hC,GAAK,IAAIiQ,GACd7xC,KAAKi0C,MAAQ,IAAIpC,KAk5CzB17C,EAAOD,QAAQo5C,QAAcA,GAC7Bn5C,EAAOD,QAAQ06C,QAAcA,GAC7Bz6C,EAAOD,QAAQgxB,YA3BK,SAAS1a,EAAGka,EAAG7W,EAAM8W,EAAKhwB,EAAM6vC,GAChD,IAAIwV,EAAW,IAAIlyB,GAAKgc,SACpBmW,EAAY,IAAI/K,GAChBnqB,EAAK5H,GAAM2T,iBAAiBtmB,EAAG,GAiBnC,OAhBA7K,GAAI2P,YAAY9E,GAChBA,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAG4lB,YAAYpQ,GAC7Bi1B,EAASvlB,EAAIxpB,GAAOoc,SAAS7c,GAC7B7K,GAAI2P,YAAY9E,GAChBA,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAG0gB,UAAU+pB,EAASvlB,GACpCwlB,EAAU/sC,EAAI6X,EAAG7uB,EAAI,IAAIu6B,GAAMjmB,GAC/ByvC,EAAU/sC,EAAE7O,OAAS2M,GAASR,EAAG7V,GACjCqlD,EAASnsC,KAAOA,EAChBmsC,EAASr1B,IAAMA,EACfA,EAAIqsB,OAAOn7C,EAAI8uB,EAAIib,GAAG/pC,EAAI8uB,EAAIstB,MAAMp8C,EAAI,EACxCiyB,GAAKyc,cAAc/5B,EAAGwvC,EAAUt1B,EAAGu1B,EAAU/sC,EAAE7O,OAAQmmC,GA3B1C,SAASpQ,EAAI6P,GAC1B,IAAIkL,EAAK,IAAIzB,GACT71C,EAAI,IAAI+2C,GACZ6D,GAAUre,EAAI6P,EAAIkL,GAClBlL,EAAG/2B,EAAE2S,WAAY,EACjB8wB,GAAS94C,EAAGy1C,GAAQiB,OAAQ,GAC5B8C,GAAWpN,EAAI7P,EAAG8P,KAAMrsC,GACxBiwB,GAAKwc,UAAUlQ,GACfof,GAASpf,GACTgc,GAAMhc,EAAIgZ,GAAEkG,QACZN,GAAW5e,GAkBX8lB,CAASF,EAAUC,GACnB/vC,IAAY+vC,EAAU3zB,MAA2B,IAAnB2zB,EAAUx7C,OAAeu7C,EAAS/V,IAEhE/5B,GAA4B,IAAjBya,EAAIqsB,OAAOn7C,GAAwB,IAAb8uB,EAAIib,GAAG/pC,GAA2B,IAAhB8uB,EAAIstB,MAAMp8C,UACtD2U,EAAE+B,QAAQ/B,EAAE+E,KACZwV,GAQX5wB,EAAOD,QAAQimD,UA1+CG,SAASl2B,GACvB,OAAOA,IAAMqpB,GAAQgB,WAAarqB,IAAMqpB,GAAQiB,S,6BCrKpD,MAAM,YACF7xC,EAAW,OACXuC,EAAM,cACN9D,EAAa,SACbN,EAAQ,UACRD,EAAS,YACTI,EAAW,YACXC,EAAW,WACXC,EAAU,YACVX,EAAW,UACX2E,EAAS,SACTe,EAAQ,UACRC,EAAS,WACTI,EAAU,UACVI,EAAS,cACTK,EAAa,SACbI,EAAQ,iBACRG,EAAgB,WAChBG,EAAU,WACVG,EAAU,UACVM,EAAS,WACTC,EAAU,aACVI,EAAY,SACZM,EAAQ,SACRK,EAAQ,WACRE,EAAU,QACVC,EAAO,gBACPC,EAAe,kBACfE,EAAiB,oBACjBE,EAAmB,gBACnBC,EAAe,gBACfI,EAAe,YACfE,EAAW,eACXE,EAAc,cACdE,EAAa,aACbE,EAAY,WACZC,EAAU,WACVG,EAAU,WACVC,EAAU,WACVI,EAAU,YACVC,EAAW,WACXE,EAAU,aACVE,EAAY,iBACZK,EAAgB,WAChBE,EAAU,eACVC,EAAc,mBACdG,EAAkB,cAClBC,EAAa,cACbK,EAAa,aACbK,EAAY,SACZG,EAAQ,aACRC,GACA,EAAQ,IACN,cACFyT,GAAa,cACbG,GAAa,kBACb7E,GAAiB,iBACjB8E,GAAgB,gBAChB3C,GAAe,eACf6C,GAAc,WACdvG,GAAU,kBACVI,GAAiB,iBACjBoC,GAAgB,cAChBkD,GAAa,eACblB,GAAc,gBACd6C,GAAe,eACfhG,GAAc,cACdmC,GAAa,eACbwE,GAAc,WACd1H,IACA,EAAQ,IACN,YACF7d,GAAW,aACXC,IACA,EAAQ,GAEZ,IAAImjD,GACAC,GAEA,GAA2B,mBAAhBC,YAA4B,CACnC,IAAIzsC,EAAO,GACP0sC,EAAU,IAAID,YAAY,SAC9BF,GAAkB,SAASjkD,GACvB0X,GAAQ0sC,EAAQC,OAAOrkD,EAAG,CAACskD,QAAQ,KAEvC,IAAI9nC,EAAQ,IAAInb,WAAW,GAC3B6iD,GAAgB,WACZxsC,GAAQ0sC,EAAQC,OAAO7nC,GACvBuK,QAAQw9B,IAAI7sC,GACZA,EAAO,QAER,CACH,IAAIA,EAAO,GACXusC,GAAkB,SAASjkD,GACvB,IAEIA,EAAIa,GAAYb,GAClB,MAAM8T,GAEJ,IAAI0wC,EAAO,IAAInjD,WAAWrB,EAAEyB,QAC5B+iD,EAAKvqC,IAAIja,GACTA,EAAIwkD,EAER9sC,EAAK43B,KAAKtvC,IAEdkkD,GAAgB,WACZn9B,QAAQw9B,IAAI5V,MAAM5nB,QAAQw9B,IAAK7sC,GAC/BA,EAAO,IAWnB,MA6EM+sC,GAAO,CACT,OAAQ,UAAW,UACnB,QAAS,OAAQ,WAAY,aAC7B,aACF5pB,IAAK/mB,GAAMhT,GAAagT,IA4BpB4wC,GAAY,SAASrwC,GAGvB,OAFAsQ,GAAetQ,EAAG,EAAGtP,GACrB0K,EAAW4E,EAAG,GACVtH,EAASsH,EAAG,GACL,GAEPvG,EAAYuG,GACL,IAWTswC,GAAY,SAAStwC,GACvB,IAAIpW,EAAI0hB,GAAkBtL,EAAG,GAAK,EAElC,OADA7G,EAAgB6G,EAAGpW,GACZ+M,EAASqJ,EAAG,EAAGpW,KAAOyG,EAAW,EAAI,GA0D1CkgD,GAAa,SAASvwC,GACxB,IAAIuJ,EAAQ6H,GAAgBpR,EAAG,EAAG,GAOlC,OANA5E,EAAW4E,EAAG,GACV1D,EAAS0D,EAAG,KAAOvP,GAAe8Y,EAAQ,IAC1Cc,GAAWrK,EAAGuJ,GACd1P,EAAcmG,EAAG,GACjBlK,EAAWkK,EAAG,IAEX9J,EAAU8J,IAoCfwwC,GAAc,SAASxwC,EAAGoP,EAAQ6J,GACpC,OAAI7J,IAAW3a,GAAU2a,IAAW1a,GAChCoE,EAAgBkH,EAAG,GACnBnG,EAAcmG,GAAI,GACX,GAEA/I,EAAW+I,GAAKiZ,GA0BzBw3B,GAAW,SAASzwC,EAAGoP,EAAQshC,GACjC,OAAIthC,IAAW3a,GACI,IAAXi8C,IACA72C,EAAcmG,EAAG0wC,GACZr1C,EAAe2E,GAAI,EAAG,IACvBnH,EAAQmH,EAAG,IAEZ,IAEPvG,EAAYuG,GACZ5I,EAAW4I,GAAI,GACR,IAiBT2wC,GAAiB,SAAS3wC,EAAG6K,GAI/B,OAHA4C,GAAgBzN,EAAG,EAAG,6BACtBnG,EAAcmG,EAAG,GACjBvK,EAASuK,EAAG,EAAG,GACXtI,EAAUsI,GAAI,IACdnH,EAAQmH,EAAG,GACJ,OACCjI,EAAaiI,GAAI,IACzB+J,GAAW/J,EAAGvT,GAAa,yCAC/BgO,EAAYuF,EAjBK,GAkBV7D,EAAa6D,EAlBH,KA8Cf4wC,GAAa,SAAS5wC,EAAG6wC,EAAIC,GAC/B,OAAO75C,EAAW+I,GAAK,GAYrB+wC,GAAa,CACf,OAjJgB,SAAS/wC,GACzB,OAAIvE,EAAcuE,EAAG,GACV/I,EAAW+I,IAElBmQ,GAAcnQ,EAAG,GACjBxF,EAAWwF,EAAG,GACdzG,EAAgByG,EAAG,qBACnB5E,EAAW4E,EAAG,GACPuwC,GAAWvwC,KA0ItB,eAvQwB,SAASA,GACjCoQ,GAAiBpQ,EAAG,EAAG,UAAWowC,IAClCh/B,GAAgBpR,EAAG,EAAG,GACtB+J,GAAW/J,EAAGvT,GAAa,4BAqQ3B,OAZgB,SAASuT,GACzB,IAAIwK,EAAQY,GAAepL,EAAG,EAAG,MAEjC,OADA5E,EAAW4E,EAAG,GACVyP,GAAczP,EAAGwK,KAAW/V,EACrByB,EAAU8J,IACrBtK,EAAUsK,EAAG,EAAG9N,EAAa,EAAG0+C,IACzBA,GAAW5wC,KAOlB,MAAkBuwC,GAClB,aAnUsB,SAASvwC,GAE/B,OADAmQ,GAAcnQ,EAAG,GACZlJ,EAAiBkJ,EAAG,IAIzBmK,GAAkBnK,EAAG,EAAGvT,GAAa,eAAe,IAC7C,IAJHgN,EAAYuG,GACL,IAgUX,OApNgB,SAASA,GAQzB,OAJAmQ,GAAcnQ,EAAG,GACjBhH,EAAkBgH,EAAGswC,IACrBz2C,EAAcmG,EAAG,GACjB7G,EAAgB6G,EAAG,GACZ,GA6MP,KA7Cc,SAASA,GACvB,IAGIoP,EAHAzjB,EAAIwQ,EAAa6D,EAAG,GACpBjV,EAAOqgB,GAAepL,EAAG,EAAG,MAC5BgxC,EAAOr5C,EAAWqI,EAAG,GAAS,EAAJ,EAE9B,GAAU,OAANrU,EAAY,CACZ,IAAIwpC,EAAY/pB,GAAepL,EAAG,EAAGrU,GACrCyjB,EAAS7C,GAAiBvM,EAAGrU,EAAGA,EAAEyB,OAAQ+nC,EAAWpqC,OAClD,CACH,IAAIoqC,EAAY/pB,GAAepL,EAAG,EAAG,WACrCsQ,GAAetQ,EAAG,EAAGrP,GACrByK,EAAW4E,EAhCE,GAiCboP,EAAS/W,EAAS2H,EAAG2wC,GAAgB,KAAMxb,EAAWpqC,GAE1D,OAAO0lD,GAASzwC,EAAGoP,EAAQ4hC,IAgC3B,SA7BkB,SAAShxC,GAC3B,IAAIwK,EAAQY,GAAepL,EAAG,EAAG,MAC7BjV,EAAOqgB,GAAepL,EAAG,EAAG,MAC5BgxC,EAAOr5C,EAAWqI,EAAG,GAAS,EAAJ,EAC1BoP,EAASb,GAAevO,EAAGwK,EAAOzf,GACtC,OAAO0lD,GAASzwC,EAAGoP,EAAQ4hC,IAyB3B,KAAkBX,GAClB,MAzOe,SAASrwC,GACxB,OA1Bc,SAASA,EAAGixC,EAAQC,EAAQ5U,GAW1C,OAVAnsB,GAAcnQ,EAAG,GACbmK,GAAkBnK,EAAG,EAAGixC,KAAY5gD,GACpC2I,EAAkBgH,EAAGs8B,GACrBziC,EAAcmG,EAAG,GACbkxC,EAAQ/3C,EAAgB6G,EAAG,GAC1BvG,EAAYuG,KAEjBnG,EAAcmG,EAAG,GACjBvK,EAASuK,EAAG,EAAG,IAEZ,EAeAmxC,CAAUnxC,EAAGvT,GAAa,WAAW,GAAO,EAAG4jD,KAyOtD,MAjHe,SAASrwC,GACxBmQ,GAAcnQ,EAAG,GACjBlH,EAAgBkH,EAAG,GACnB5I,EAAW4I,EAAG,GACd,IAAIoP,EAASxW,EAAWoH,EAAG/I,EAAW+I,GAAK,EAAG9N,EAAa,EAAG,EAAGs+C,IACjE,OAAOA,GAAYxwC,EAAGoP,EAAQ,IA6G9B,MAnWe,SAASpP,GACxB,IAAI3U,EAAI4L,EAAW+I,GACnBzJ,EAAcyJ,EAAGvT,GAAa,YAAY,IAC1C,IAAK,IAAI7C,EAAI,EAAGA,GAAKyB,EAAGzB,IAAK,CACzBiQ,EAAcmG,GAAI,GAClBnG,EAAcmG,EAAGpW,GACjB6L,EAASuK,EAAG,EAAG,GACf,IAAIrU,EAAImQ,EAAckE,GAAI,GAC1B,GAAU,OAANrU,EACA,OAAOoe,GAAW/J,EAAGvT,GAAa,+CAClC7C,EAAI,GAAGgmD,GAAgBnjD,GAAa,OACxCmjD,GAAgBjkD,GAChBkN,EAAQmH,EAAG,GAGf,OADA6vC,KACO,GAqVP,SAtTkB,SAAS7vC,GAI3B,OAHAmQ,GAAcnQ,EAAG,GACjBmQ,GAAcnQ,EAAG,GACjBlH,EAAgBkH,EAAGjG,EAAaiG,EAAG,EAAG,IAC/B,GAmTP,OAzSgB,SAASA,GAKzB,OAJAsQ,GAAetQ,EAAG,EAAGtP,GACrByf,GAAcnQ,EAAG,GACjB5E,EAAW4E,EAAG,GACdhG,EAAWgG,EAAG,GACP,GAqSP,OAjTgB,SAASA,GACzB,IAAIlV,EAAIwR,EAAS0D,EAAG,GAGpB,OAFAgQ,GAAchQ,EAAGlV,IAAM4F,GAAc5F,IAAM2F,EAAa,EAAG,4BAC3D0I,EAAgB6G,EAAG7F,EAAW6F,EAAG,IAC1B,GA8SP,OAnSgB,SAASA,GAMzB,OALAsQ,GAAetQ,EAAG,EAAGtP,GACrByf,GAAcnQ,EAAG,GACjBmQ,GAAcnQ,EAAG,GACjB5E,EAAW4E,EAAG,GACd5F,EAAW4F,EAAG,GACP,GA8RP,OArJgB,SAASA,GACzB,IAAI3U,EAAI4L,EAAW+I,GACnB,GAAI1D,EAAS0D,EAAG,KAAOvP,GAAyC,KAA1B0L,EAAa6D,EAAG,GAAG,GAErD,OADA7G,EAAgB6G,EAAG3U,EAAI,GAChB,EACJ,CACH,IAAIzB,EAAI0hB,GAAkBtL,EAAG,GAI7B,OAHIpW,EAAI,EAAGA,EAAIyB,EAAIzB,EACVA,EAAIyB,IAAGzB,EAAIyB,GACpB2kB,GAAchQ,EAAG,GAAKpW,EAAG,EAAG,sBACrByB,EAAIzB,IA4If,aAtUsB,SAASoW,GAC/B,IAAIlV,EAAIwR,EAAS0D,EAAG,GAGpB,OAFAsQ,GAAetQ,EAAG,EAAGtP,GACrBsf,GAAchQ,EAAGlV,IAAMuF,GAAYvF,IAAM4F,EAAY,EAAG,yBACpDyZ,GAAkBnK,EAAG,EAAGvT,GAAa,eAAe,MAAW4D,EACxD0Z,GAAW/J,EAAGvT,GAAa,yCACtC2O,EAAW4E,EAAG,GACd9E,EAAiB8E,EAAG,GACb,IA+TP,SAzMkB,SAASA,GAC3B,GAAI1D,EAAS0D,EAAG,IAAM,EAAG,CAErB,GADAmQ,GAAcnQ,EAAG,GACb1D,EAAS0D,EAAG,KAAOxP,EAEnB,OADA4K,EAAW4E,EAAG,GACP,EACJ,CACH,IAAIrU,EAAIwQ,EAAa6D,EAAG,GACxB,GAAU,OAANrU,GAAc6P,EAAmBwE,EAAGrU,KAAOA,EAAEyB,OAAO,EACpD,OAAO,OAEZ,CACH,IAAI8nB,EAAO5J,GAAkBtL,EAAG,GAChCsQ,GAAetQ,EAAG,EAAGvP,GACrB,IAAI9E,EAAIwQ,EAAa6D,EAAG,GACxBgQ,GAAchQ,EAAG,GAAKkV,GAAQA,GAAQ,GAAI,EAAG,qBAC7C,IAAI7pB,EA7BM,SAASM,EAAGupB,GAC1B,IACIvpB,EAAIa,GAAYb,GAClB,MAAO8T,GACL,OAAO,KAEX,IAAI/U,EAAI,wDAAwDsZ,KAAKrY,GACrE,IAAKjB,EAAG,OAAO,KACf,IAAI2C,EAAI+jD,SAAS1mD,EAAE,GAAGA,EAAE,GAAIwqB,GAC5B,OAAI/Q,MAAM9W,GAAW,KACZ,EAAFA,EAmBKgkD,CAAU1lD,EAAGupB,GACrB,GAAU,OAAN7pB,EAEA,OADA8N,EAAgB6G,EAAG3U,GACZ,EAKf,OADAoO,EAAYuG,GACL,GAkLP,SAzVkB,SAASA,GAI3B,OAHAmQ,GAAcnQ,EAAG,GACjB+R,GAAe/R,EAAG,GAEX,GAsVP,KApRc,SAASA,GACvB,IAAIlV,EAAIwR,EAAS0D,EAAG,GAGpB,OAFAgQ,GAAchQ,EAAGlV,IAAMsF,EAAW,EAAG,kBACrCuJ,EAAeqG,EAAGzD,EAAayD,EAAGlV,IAC3B,GAiRP,OA/GgB,SAASkV,GACzB,IAAI3U,EAAI4L,EAAW+I,GACnBsQ,GAAetQ,EAAG,EAAGrP,GACrBmI,EAAgBkH,EAAG,GACnBnG,EAAcmG,EAAG,GACjBrF,EAAWqF,EAAG,EAAG,GACjB,IAAIoP,EAASxW,EAAWoH,EAAG3U,EAAI,EAAG6G,EAAa,EAAG,EAAGs+C,IACrD,OAAOA,GAAYxwC,EAAGoP,EAAQ,KAwHlCzlB,EAAOD,QAAQsnC,aAbM,SAAShxB,GAU1B,OARA9G,EAAoB8G,GACpBuN,GAAcvN,EAAG+wC,GAAY,GAE7Bl3C,EAAcmG,GAAI,GAClBnF,EAAamF,GAAI,EAAGvT,GAAa,OAEjC8M,EAAgByG,EAAGjQ,GACnB8K,EAAamF,GAAI,EAAGvT,GAAa,aAC1B,I,6BChfX,MAAM,OACFgI,EAAM,cACN9D,EAAa,YACbF,EAAW,UACXiE,EAAS,UACTnB,EAAS,eACToC,EAAc,WACdG,EAAU,UACVI,EAAS,aACTa,EAAY,WACZE,EAAU,WACVG,EAAU,gBACVe,EAAe,cACfK,EAAa,QACbK,EAAO,gBACPC,EAAe,iBACfC,EAAgB,gBAChBQ,EAAe,eACfK,EAAc,cACdC,EAAa,WACba,EAAU,WACVa,EAAU,aACVa,EAAY,SACZE,EAAQ,iBACR/H,EAAgB,UAChBoI,EAAS,UACTC,GACA,EAAQ,IACN,cACFoT,EAAa,eACbM,EAAc,YACdU,EAAW,WACX3G,GACA,EAAQ,GAENinC,EAAQ,SAAStxC,GACnB,IAAIuxC,EAAKn1C,EAAa4D,EAAG,GAEzB,OADAgQ,EAAchQ,EAAGuxC,EAAI,EAAG,mBACjBA,GAGLC,EAAY,SAASxxC,EAAGuxC,EAAIl4B,GAC9B,IAAK1jB,EAAe47C,EAAIl4B,GAEpB,OADA9f,EAAgByG,EAAG,iCACX,EAGZ,GAAIzE,EAAWg2C,KAAQ98C,GAA6B,IAAnBwC,EAAWs6C,GAExC,OADAh4C,EAAgByG,EAAG,iCACX,EAGZrD,EAAUqD,EAAGuxC,EAAIl4B,GACjB,IAAIjK,EAAS1U,EAAW62C,EAAIvxC,EAAGqZ,GAC/B,GAAIjK,IAAW3a,GAAU2a,IAAW1a,EAAW,CAC3C,IAAIshB,EAAO/e,EAAWs6C,GACtB,OAAK57C,EAAeqK,EAAGgW,EAAO,IAM9BrZ,EAAU40C,EAAKvxC,EAAGgW,GACXA,IANHnd,EAAQ04C,EAAIv7B,GACZzc,EAAgByG,EAAG,+BACX,GAOZ,OADArD,EAAU40C,EAAIvxC,EAAG,IACT,GAkBVyxC,EAAe,SAASzxC,GAC1B,IAAIuxC,EAAKn1C,EAAa4D,EAAGzL,EAAiB,IACtC7J,EAAI8mD,EAAUxxC,EAAGuxC,EAAIt6C,EAAW+I,IACpC,OAAItV,EAAI,GACA4R,EAAS0D,GAAI,KAAOvP,IACpB4Z,EAAWrK,EAAG,GACd5I,EAAW4I,GAAI,GACflK,EAAWkK,EAAG,IAGX9J,EAAU8J,IAGdtV,GAGLgnD,EAAgB,SAAS1xC,GAC3BsQ,EAAetQ,EAAG,EAAGrP,GACrB,IAAIghD,EAAKn5C,EAAcwH,GAGvB,OAFAnG,EAAcmG,EAAG,GACjBrD,EAAUqD,EAAG2xC,EAAI,GACV,GAkDLC,EAAW,CACb,OAAeF,EACf,YAZmB,SAAS1xC,GAE5B,OADAlH,EAAgBkH,EAAG7H,EAAgB6H,IAC5B,GAWP,OAxFkB,SAASA,GAC3B,IAAIuxC,EAAKD,EAAMtxC,GACXtV,EAAI8mD,EAAUxxC,EAAGuxC,EAAIt6C,EAAW+I,GAAK,GACzC,OAAItV,EAAI,GACJoO,EAAgBkH,EAAG,GACnB5I,EAAW4I,GAAI,GACR,IAEPlH,EAAgBkH,EAAG,GACnB5I,EAAW4I,IAAKtV,EAAI,IACbA,EAAI,IA+Ef,QATmB,SAASsV,GAE5B,OADAlH,EAAgBkH,EAAGpG,EAAeoG,IAC3B,GAQP,OA1CkB,SAASA,GAC3B,IAAIuxC,EAAKD,EAAMtxC,GACf,GAAIA,IAAMuxC,EAAIh4C,EAAgByG,EAAG,gBAE7B,OAAQzE,EAAWg2C,IACf,KAAK78C,EACD6E,EAAgByG,EAAG,aACnB,MACJ,KAAKvL,EAAQ,CACT,IAAIgV,EAAK,IAAIlW,EACTwD,EAAaw6C,EAAI,EAAG9nC,GAAM,EAC1BlQ,EAAgByG,EAAG,UACK,IAAnB/I,EAAWs6C,GAChBh4C,EAAgByG,EAAG,QAEnBzG,EAAgByG,EAAG,aACvB,MAEJ,QACIzG,EAAgByG,EAAG,QAK/B,OAAO,GAmBP,KArDgB,SAASA,GAGzB,OAFA0xC,EAAc1xC,GACdjH,EAAiBiH,EAAGyxC,EAAc,GAC3B,GAmDP,MAhDe,SAASzxC,GACxB,OAAOpD,EAAUoD,EAAG/I,EAAW+I,MAuDnCrW,EAAOD,QAAQwnC,kBALW,SAASlxB,GAE/B,OADAgR,EAAYhR,EAAG4xC,GACR,I,6BCvKX,MAAM,eAAErzC,GAAmB,EAAQ,IAC7B,SACF9L,EAAQ,SACRG,EAAQ,cACRjC,EAAa,SACbN,EAAQ,WACRK,EAAU,SACV+E,EAAQ,eACRE,EAAc,YACdE,EAAW,gBACXG,EAAe,SACfW,EAAQ,iBACRG,EAAgB,WAChBG,EAAU,WACVG,EAAU,UACVM,EAAS,gBACTE,EAAe,aACfG,EAAY,QACZc,EAAO,gBACPM,EAAe,YACfM,EAAW,eACXE,EAAc,cACdE,EAAa,WACbG,EAAU,aACVa,EAAY,SACZG,EAAQ,WACRI,EAAU,cACVK,EAAa,SACba,GACA,EAAQ,IACN,YACF8M,EAAW,gBACX4C,EAAe,cACf+D,EAAa,cACbC,EAAa,cACbjE,EAAa,kBACbT,EAAiB,eACjBgF,EAAc,WACdvG,EAAU,SACVgH,EAAQ,YACRC,EAAW,SACX5E,EAAQ,gBACRgF,EAAe,gBACflG,EAAe,gBACfiB,EAAe,cACf/B,GACA,EAAQ,GACNtd,EAAS,EAAQ,KACjB,aAAEL,GAAiB,EAAQ,GAW3BolD,EAAa,SAAS7xC,EAAG7U,EAAKE,GAEhC,OADAsO,EAAeqG,EAAG7U,GACX6O,EAAWgG,GAAI3U,KAAOgF,GAO3ByhD,EAAW,SAAS9xC,EAAG6J,EAAKjW,GAC9B,GAAI0I,EAAS0D,EAAG6J,KAASnZ,EAAY,CACjC,IAAIrF,EAAI,GACJyL,EAAiBkJ,EAAG6J,IAjBjB,EAkBAjW,IAAiBi+C,EAAW7xC,EAAGvT,EAAa,WAAW,KAASpB,IAjBhE,EAkBAuI,IAAiBi+C,EAAW7xC,EAAGvT,EAAa,cAAc,KAASpB,IAjBnE,EAkBAuI,IAAiBi+C,EAAW7xC,EAAGvT,EAAa,SAAS,KAASpB,GAIjEilB,EAAetQ,EAAG6J,EAAKnZ,GAHvBmI,EAAQmH,EAAG3U,KAOjB0mD,EAAW,SAAS/xC,EAAG3U,EAAGuuC,GAE5B,OADAkY,EAAS9xC,EAAG3U,EA3BD,EA2BIuuC,GACR7oB,EAAS/Q,EAAG3U,IAGjB2mD,EAAW,SAAShyC,EAAGtR,EAAG9E,GAC5B+M,EAASqJ,EAAG,EAAGpW,GACVmO,EAAaiI,GAAI,IAClB+J,EAAW/J,EAAGvT,EAAa,wDACvB2d,EAAcpK,GAAI,GAAIpW,GAE9BmmB,EAAcrhB,IAmIZujD,EAAO,SAASjyC,EAAGpW,EAAGwjB,GACxBpS,EAASgF,EAAG,EAAGpW,GACfoR,EAASgF,EAAG,EAAGoN,IAGb8kC,EAAY,SAASlyC,EAAG9S,EAAGwB,GAC7B,GAAIgJ,EAAUsI,EAAG,GACb,OAAOnK,EAAYmK,EAAG9S,EAAGwB,EAAGkE,GAC3B,CACDiH,EAAcmG,EAAG,GACjBnG,EAAcmG,EAAG9S,EAAE,GACnB2M,EAAcmG,EAAGtR,EAAE,GACnB+G,EAASuK,EAAG,EAAG,GACf,IAAIiH,EAAMxL,EAAcuE,GAAI,GAE5B,OADAnH,EAAQmH,EAAG,GACJiH,IAITkrC,GAAY,SAASnyC,EAAGoyC,EAAItd,GAC9B,IAAIlrC,EAAIwoD,EACJhlC,EAAI0nB,EAAK,EAEb,OAAS,CAEL,KAAOn+B,EAASqJ,EAAG,IAAKpW,GAAIsoD,EAAUlyC,GAAI,GAAI,IACtCpW,GAAKkrC,EAAK,GACV/qB,EAAW/J,EAAGvT,EAAa,uCAC/BoM,EAAQmH,EAAG,GAIf,KAAOrJ,EAASqJ,EAAG,IAAKoN,GAAI8kC,EAAUlyC,GAAI,GAAI,IACtCoN,EAAIxjB,GACJmgB,EAAW/J,EAAGvT,EAAa,uCAC/BoM,EAAQmH,EAAG,GAGf,GAAIoN,EAAIxjB,EAKJ,OAHAiP,EAAQmH,EAAG,GAEXiyC,EAAKjyC,EAAG80B,EAAK,EAAGlrC,GACTA,EAGXqoD,EAAKjyC,EAAGpW,EAAGwjB,KAIbilC,GAAc,SAASD,EAAItd,EAAIwd,GACjC,IAAIC,EAAK1jD,KAAKuP,OAAO02B,EAAKsd,GAAM,GAC5B1mD,EAAI4mD,GAAY,EAALC,IAAWH,EAAKG,GAE/B,OADAzlD,EAAO4S,WAAW0yC,EAAKG,GAAM7mD,GAAKA,GAAKopC,EAAKyd,GACrC7mD,GAGL8mD,GAAU,SAASxyC,EAAGoyC,EAAItd,EAAIwd,GAChC,KAAOF,EAAKtd,GAAI,CAQZ,GANAn+B,EAASqJ,EAAG,EAAGoyC,GACfz7C,EAASqJ,EAAG,EAAG80B,GACXod,EAAUlyC,GAAI,GAAI,GAClBiyC,EAAKjyC,EAAGoyC,EAAItd,GAEZj8B,EAAQmH,EAAG,GACX80B,EAAKsd,GAAM,EACX,OACJ,IAAI1mD,EAwBAL,EAPJ,GAfIK,EADAopC,EAAKsd,EAvEA,KAuEyB,IAARE,EAClBzjD,KAAKuP,OAAOg0C,EAAKtd,GAAI,GAErBud,GAAYD,EAAItd,EAAIwd,GAC5B37C,EAASqJ,EAAG,EAAGtU,GACfiL,EAASqJ,EAAG,EAAGoyC,GACXF,EAAUlyC,GAAI,GAAI,GAClBiyC,EAAKjyC,EAAGtU,EAAG0mD,IAEXv5C,EAAQmH,EAAG,GACXrJ,EAASqJ,EAAG,EAAG80B,GACXod,EAAUlyC,GAAI,GAAI,GAClBiyC,EAAKjyC,EAAGtU,EAAGopC,GAEXj8B,EAAQmH,EAAG,IAEf80B,EAAKsd,GAAM,EACX,OACJz7C,EAASqJ,EAAG,EAAGtU,GACfmO,EAAcmG,GAAI,GAClBrJ,EAASqJ,EAAG,EAAG80B,EAAK,GACpBmd,EAAKjyC,EAAGtU,EAAGopC,EAAK,GAChBppC,EAAIymD,GAAUnyC,EAAGoyC,EAAItd,GAGjBppC,EAAI0mD,EAAKtd,EAAKppC,GACd8mD,GAAQxyC,EAAGoyC,EAAI1mD,EAAI,EAAG4mD,GACtBjnD,EAAIK,EAAI0mD,EACRA,EAAK1mD,EAAI,IAET8mD,GAAQxyC,EAAGtU,EAAI,EAAGopC,EAAIwd,GACtBjnD,EAAIypC,EAAKppC,EACTopC,EAAKppC,EAAI,IAERopC,EAAKsd,GAAM,IAAM/mD,IAClBinD,EA7GDzjD,KAAKuP,MAAoB,WAAdvP,KAAK4jD,aA6HrBC,GAAY,CACd,OA9KY,SAAS1yC,GACrB,IAAImS,EAAO4/B,EAAS/xC,EAAG,EAtHZ,GAuHPw4B,EAAMttB,EAAgBlL,EAAG,EAAG,IAC5B2yC,EAAOna,EAAIprC,OACXxD,EAAIwnB,EAAgBpR,EAAG,EAAG,GAC9BmS,EAAOf,EAAgBpR,EAAG,EAAGmS,GAE7B,IAAIzjB,EAAI,IAAI0a,EAGZ,IAFA2C,EAAc/L,EAAGtR,GAEV9E,EAAIuoB,EAAMvoB,IACbooD,EAAShyC,EAAGtR,EAAG9E,GACfoiB,EAAgBtd,EAAG8pC,EAAKma,GAQ5B,OALI/oD,IAAMuoB,GACN6/B,EAAShyC,EAAGtR,EAAG9E,GAEnBuiB,EAAgBzd,GAET,GA2JP,OA1PY,SAASsR,GACrB,IACIyO,EADAhP,EAAIsyC,EAAS/xC,EAAG,EAxCT,GAwCsB,EAEjC,OAAQ/I,EAAW+I,IACf,KAAK,EACDyO,EAAMhP,EACN,MACJ,KAAK,EACDgP,EAAMnD,EAAkBtL,EAAG,GAC3BgQ,EAAchQ,EAAG,GAAKyO,GAAOA,GAAOhP,EAAG,EAAG,0BAC1C,IAAK,IAAI7V,EAAI6V,EAAG7V,EAAI6kB,EAAK7kB,IACrB+M,EAASqJ,EAAG,EAAGpW,EAAI,GACnBoR,EAASgF,EAAG,EAAGpW,GAEnB,MAEJ,QACI,OAAOmgB,EAAW/J,EAAG,yCAK7B,OADAhF,EAASgF,EAAG,EAAGyO,GACR,GAqOP,KA7MU,SAASzO,GACnB,IAAI0C,EAAI4I,EAAkBtL,EAAG,GACzBP,EAAI6L,EAAkBtL,EAAG,GACzBlV,EAAIwgB,EAAkBtL,EAAG,GACzB0M,EAAM9U,EAAgBoI,EAAG,GAAS,EAAJ,EAGlC,GAFA8xC,EAAS9xC,EAAG,EA7FD,GA8FX8xC,EAAS9xC,EAAG0M,EA7FD,GA8FPjN,GAAKiD,EAAG,CACRsN,EAAchQ,EAAG0C,EAAI,GAAKjD,EAAIlB,EAAiBmE,EAAG,EAAG,6BACrD,IAAIrX,EAAIoU,EAAIiD,EAAI,EAGhB,GAFAsN,EAAchQ,EAAGlV,GAAKyT,EAAiBlT,EAAI,EAAG,EAAG,2BAE7CP,EAAI2U,GAAK3U,GAAK4X,GAAa,IAAPgK,GAAgD,IAApC7W,EAAYmK,EAAG,EAAG0M,EAAIja,GACtD,IAAK,IAAI7I,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB+M,EAASqJ,EAAG,EAAG0C,EAAI9Y,GACnBoR,EAASgF,EAAG0M,EAAI5hB,EAAIlB,QAGxB,IAAK,IAAIA,EAAIyB,EAAI,EAAGzB,GAAK,EAAGA,IACxB+M,EAASqJ,EAAG,EAAG0C,EAAI9Y,GACnBoR,EAASgF,EAAG0M,EAAI5hB,EAAIlB,GAMhC,OADAiQ,EAAcmG,EAAG0M,GACV,GAoLP,KA1JS,SAAS1M,GAClB,IAAI3U,EAAI4L,EAAW+I,GACnBhK,EAAgBgK,EAAG3U,EAAG,GACtB+L,EAAW4I,EAAG,GACd,IAAK,IAAIpW,EAAIyB,EAAGzB,GAAK,EAAGA,IACpBoR,EAASgF,EAAG,EAAGpW,GAGnB,OAFAuP,EAAgB6G,EAAG3U,GACnBwP,EAAamF,EAAG,EAAGvT,EAAa,MACzB,GAmJP,OApOY,SAASuT,GACrB,IAAI6C,EAAOkvC,EAAS/xC,EAAG,EAjEZ,GAkEPyO,EAAM2C,EAAgBpR,EAAG,EAAG6C,GAIhC,IAHI4L,IAAQ5L,GACRmN,EAAchQ,EAAG,GAAKyO,GAAOA,GAAO5L,EAAO,EAAG,EAAG,0BACrDlM,EAASqJ,EAAG,EAAGyO,GACRA,EAAM5L,EAAM4L,IACf9X,EAASqJ,EAAG,EAAGyO,EAAM,GACrBzT,EAASgF,EAAG,EAAGyO,GAInB,OAFAhV,EAAYuG,GACZhF,EAASgF,EAAG,EAAGyO,GACR,GAyNP,KAlBS,SAASzO,GAClB,IAAI3U,EAAI0mD,EAAS/xC,EAAG,EApRT,GA4RX,OAPI3U,EAAI,IACJ2kB,EAAchQ,EAAG3U,EAAIkT,EAAgB,EAAG,iBACnC3G,EAAgBoI,EAAG,IACpBsQ,EAAetQ,EAAG,EAAGrP,GACzByK,EAAW4E,EAAG,GACdwyC,GAAQxyC,EAAG,EAAG3U,EAAG,IAEd,GAUP,OAlJW,SAAS2U,GACpB,IAAIpW,EAAIwnB,EAAgBpR,EAAG,EAAG,GAC1BP,EAAI2M,EAASpM,EAAGsL,EAAmB,EAAGyF,EAAS/Q,EAAG,IACtD,GAAIpW,EAAI6V,EAAG,OAAO,EAClB,IAAIpU,EAAIoU,EAAI7V,EACZ,GAAIyB,GAAKgU,OAAOuzC,mBAAqBj9C,EAAeqK,IAAK3U,GACrD,OAAO0e,EAAW/J,EAAGvT,EAAa,+BACtC,KAAO7C,EAAI6V,EAAG7V,IACV+M,EAASqJ,EAAG,EAAGpW,GAEnB,OADA+M,EAASqJ,EAAG,EAAGP,GACRpU,IAgJX1B,EAAOD,QAAQ0nC,cALO,SAASpxB,GAE3B,OADAgR,EAAYhR,EAAG0yC,IACR,I,6BCpWX,MAAM,SACFriD,EAAQ,WACRK,EAAU,UACVkF,EAAS,gBACTI,EAAe,aACfM,EAAY,cACZe,EAAa,gBACbO,EAAe,QACfiB,EAAO,gBACPC,EAAe,gBACfG,EAAe,gBACfE,EAAe,gBACfI,EAAe,YACfE,EAAW,eACXC,EAAc,eACdC,EAAc,aACdkB,EAAY,WACZO,EAAU,cACVK,EAAa,eACbG,GACA,EAAQ,IACN,YACFwN,EAAW,aACX0G,EAAY,eACZ5D,EAAc,cAEdtC,EAAa,cACbmC,EAAa,kBACbT,EAAiB,iBACjBL,EAAgB,eAChBqF,EAAc,WACdvG,EAAU,gBACV4G,EAAe,gBACfrG,EAAe,YACf0G,EAAW,gBACXI,EAAe,gBACflG,EAAe,eACfE,EAAc,gBACde,GACA,EAAQ,IACN,aACF9f,EAAY,YACZG,EAAW,aACXC,GACA,EAAQ,GAwBNomD,EAAsBpmD,EAAa,yCAGnCqmD,EAAW,SAAS9yC,EAAG7U,EAAKN,GAC9BsO,EAAgB6G,EAAGnV,GACnBgQ,EAAamF,GAAI,EAAGvT,EAAatB,GAAK,KAGpC4nD,EAAe,SAAS/yC,EAAGgzC,EAAMC,GACnCH,EAAS9yC,EAAG,MAASizC,EAAMD,EAAKE,gBAAmBF,EAAKG,cACxDL,EAAS9yC,EAAG,MAASizC,EAAMD,EAAKI,gBAAmBJ,EAAKK,cACxDP,EAAS9yC,EAAG,OAASizC,EAAMD,EAAKM,cAAmBN,EAAKO,YACxDT,EAAS9yC,EAAG,MAASizC,EAAMD,EAAKQ,aAAmBR,EAAKS,WACxDX,EAAS9yC,EAAG,SAAUizC,EAAMD,EAAKU,cAAkBV,EAAKW,YAAc,GACtEb,EAAS9yC,EAAG,OAASizC,EAAMD,EAAKY,iBAAmBZ,EAAKa,eACxDf,EAAS9yC,EAAG,QAAUizC,EAAMD,EAAKc,YAAkBd,EAAKe,UAAY,GACpEjB,EAAS9yC,EAAG,OAAQnR,KAAKuP,OAAO40C,EAAO,IAAKgB,KAAKhB,EAAKa,cAAe,EAAG,IAA4C,SAIlHI,EAAkB50C,OAAOuzC,iBAAmB,EAE5CsB,EAAW,SAASl0C,EAAG7U,EAAKjB,EAAGiqD,GACjC,IAAIrpD,EAAIwL,EAAa0J,GAAI,EAAGvT,EAAatB,GAAK,IAC1C8b,EAAMrL,EAAeoE,GAAI,GAC7B,IAAY,IAARiH,EAAe,CACf,GAAInc,IAAMuF,EACN,OAAO0Z,EAAW/J,EAAGvT,EAAa,gCAAiCtB,GAClE,GAAIjB,EAAI,EACT,OAAO6f,EAAW/J,EAAGvT,EAAa,oCAAqCtB,GAC3E8b,EAAM/c,MAEL,CACD,MAAO+pD,GAAkBhtC,GAAOA,GAAOgtC,GACnC,OAAOlqC,EAAW/J,EAAGvT,EAAa,8BAA+BtB,GACrE8b,GAAOktC,EAGX,OADAt7C,EAAQmH,EAAG,GACJiH,GAILmtC,EAAS,CACXC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAAa7tB,IAAK76B,GAAMc,EAAad,IAC9G2oD,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAO9tB,IAAK76B,GAAMc,EAAad,IACrF4oD,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAAY/tB,IAAK76B,GAAMc,EAAad,IAC3J6oD,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOhuB,IAAK76B,GAAMc,EAAad,IAC1H8oD,GAAIhoD,EAAa,MACjBioD,GAAIjoD,EAAa,MACjBkoD,GAAIloD,EAAa,MACjBmoD,GAAInoD,EAAa,MACjBooD,QAAS,CACL5qD,EAAGwC,EAAa,wBAChBqoD,EAAGroD,EAAa,YAChBsoD,EAAGtoD,EAAa,YAChBm2C,EAAGn2C,EAAa,SAChB/B,EAAG+B,EAAa,eAChBuoD,EAAGvoD,EAAa,YAChBwoD,EAAGxoD,EAAa,MAChB4U,EAAG5U,EAAa,QAIlByoD,EAAc,SAASC,EAAMC,GAG/B,IAAIC,EAAUF,EAAKpB,SACG,WAAlBqB,IACgB,IAAZC,EACAA,EAAU,EAEVA,KAER,IAAIC,GAAQH,EAAO,IAAInB,KAAKmB,EAAKtB,cAAe,EAAG,IAAM,MACzD,OAAOhlD,KAAKuP,OAAOk3C,EAAO,EAAID,GAAW,IAGvCE,EAAa,SAAS7mD,EAAGrD,EAAGmqD,GAC1BnqD,EAAI,IACJykB,EAAaphB,EAAG8mD,GACpBtpC,EAAexd,EAAGjC,EAAauC,OAAO3D,MAGpCoqD,EAAW,SAASz1C,EAAGtR,EAAG/C,EAAGwpD,GAC/B,IAAIvrD,EAAI,EACR,KAAOA,EAAI+B,EAAEyB,QACT,GAAa,KAATzB,EAAE/B,GACFkmB,EAAaphB,EAAG/C,EAAE/B,UACf,CACHA,IACA,IAAIuD,EAAMuoD,EAAY11C,EAAGrU,EAAG/B,GAE5B,OAAO+B,EAAE/B,IAEL,KAAK,GACDkmB,EAAaphB,EAAG,IAChB,MAGJ,KAAK,GACDwd,EAAexd,EAAG0lD,EAAOC,KAAKc,EAAKpB,WACnC,MAGJ,KAAK,GACD7nC,EAAexd,EAAG0lD,EAAOG,OAAOY,EAAKxB,aACrC,MAGJ,KAAK,GACD4B,EAAW7mD,EAAGG,KAAKuP,MAAM+2C,EAAKtB,cAAgB,KAAM,IACpD,MAGJ,KAAK,GACD4B,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQC,EAAGK,GACjC,MAGJ,KAAK,GACDM,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQE,EAAGI,GACjC,MAGJ,KAAK,GACDI,EAAW7mD,EAAGymD,EAAK5B,WAAY,IAC/B,MAGJ,KAAK,GACDgC,EAAW7mD,GAAIymD,EAAK5B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,GACDgC,EAAW7mD,EAAGymD,EAAK9B,aAAc,IACjC,MAGJ,KAAK,GACDnnC,EAAexd,EAAGymD,EAAK5B,WAAa,GAAKa,EAAOO,GAAKP,EAAOQ,IAC5D,MAGJ,KAAK,GACDa,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQjS,EAAGuS,GACjC,MAGJ,KAAK,GACDI,EAAW7mD,EAAGymD,EAAKhC,aAAc,IACjC,MAGJ,KAAK,GACDsC,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQG,EAAGG,GACjC,MAGJ,KAAK,GACDI,EAAW7mD,EAAGwmD,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDI,EAAW7mD,EAAGwmD,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDM,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQI,EAAGE,GACjC,MAGJ,KAAK,GACDjpC,EAAexd,EAAGjC,EAAauC,OAAOmmD,EAAKtB,iBAC3C,MAGJ,KAAK,GAAY,CACb,IAAI8B,EAAWR,EAAK3lD,WAAWomD,MAAM,iBACjCD,GACAzpC,EAAexd,EAAGjC,EAAakpD,EAAS,KAC5C,MAIJ,KAAK,GACDzpC,EAAexd,EAAG0lD,EAAOE,UAAUa,EAAKpB,WACxC,MAGJ,KAAK,GACL,KAAK,IACD7nC,EAAexd,EAAG0lD,EAAOI,YAAYW,EAAKxB,aAC1C,MAGJ,KAAK,GACD8B,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQ5qD,EAAGkrD,GACjC,MAGJ,KAAK,IACDI,EAAW7mD,EAAGymD,EAAK1B,UAAW,IAC9B,MAGJ,KAAK,IACD8B,EAAW7mD,EAAGymD,EAAK1B,UAAW,IAC9B,MAGJ,KAAK,IAAa,CACd,IAAI6B,EAAOzmD,KAAKuP,OAAO+2C,EAAO,IAAInB,KAAKmB,EAAKtB,cAAe,EAAG,IAAM,OAChEyB,EAAO,MACHA,EAAO,IACPxlC,EAAaphB,EAAG,IACpBohB,EAAaphB,EAAG,KAEpBwd,EAAexd,EAAGjC,EAAauC,OAAOsmD,KACtC,MAIJ,KAAK,IACDC,EAAW7mD,EAAGymD,EAAK5B,WAAY,IAC/B,MAGJ,KAAK,IACDgC,EAAW7mD,GAAIymD,EAAK5B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,IACDgC,EAAW7mD,EAAGymD,EAAKxB,WAAa,EAAG,IACnC,MAGJ,KAAK,IACD7jC,EAAaphB,EAAG,IAChB,MAGJ,KAAK,IACDwd,EAAexd,EAAGymD,EAAK5B,WAAa,GAAKa,EAAOK,GAAKL,EAAOM,IAC5D,MAGJ,KAAK,IACDe,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQnqD,EAAGyqD,GACjC,MAGJ,KAAK,IACDjpC,EAAexd,EAAGjC,EAAauC,OAAOH,KAAKuP,MAAM+2C,EAAO,QACxD,MAGJ,KAAK,IACDrlC,EAAaphB,EAAG,GAChB,MAGJ,KAAK,IAAa,CACd,IAAImnD,EAAMV,EAAKpB,SACf7nC,EAAexd,EAAGjC,EAAauC,OAAe,IAAR6mD,EAAY,EAAIA,KACtD,MAIJ,KAAK,IACD3pC,EAAexd,EAAGjC,EAAauC,OAAOmmD,EAAKpB,YAC3C,MAGJ,KAAK,IACD0B,EAASz1C,EAAGtR,EAAG0lD,EAAOS,QAAQxzC,EAAG8zC,GACjC,MAGJ,KAAK,IACDI,EAAW7mD,EAAGymD,EAAKtB,cAAgB,IAAK,IACxC,MAGJ,KAAK,IAAa,CACd,IAAIr/B,EAAM2gC,EAAKW,oBACXthC,EAAM,EACN1E,EAAaphB,EAAG,KAEhB8lB,GAAOA,EACP1E,EAAaphB,EAAG,KAEpB6mD,EAAW7mD,EAAGG,KAAKuP,MAAMoW,EAAI,IAAK,IAClC+gC,EAAW7mD,EAAG8lB,EAAM,GAAI,IACxB,OAGR5qB,GAAKuD,IAMXuoD,EAAc,SAAS11C,EAAG+1C,EAAMnsD,GAClC,IAAIosD,EAASnD,EACTxoD,EAAI,EACJ4rD,EAAQ,EACZ,KAAO5rD,EAAI2rD,EAAO5oD,QAAU6oD,GAAUF,EAAK3oD,OAASxD,EAAIS,GAAK4rD,EACzD,GAAID,EAAO3rD,KAAO,IAAI2D,WAAW,GAC7BioD,SACC,GAAI5pD,EAAa0pD,EAAK5wC,SAASvb,EAAGA,EAAEqsD,GAAQD,EAAO7wC,SAAS9a,EAAGA,EAAE4rD,IAClE,OAAOA,EAGfrsC,EAAc5J,EAAG,EACb/G,EAAgB+G,EAAGvT,EAAa,uCAAwCspD,KAoD1EG,EAAc,SAASl2C,EAAG6J,GAG5B,OAFQyB,EAAkBtL,EAAG6J,IAY3BssC,EAAS,CACX,KA3DY,SAASn2C,GACrB,IAAIrU,EAAIuf,EAAgBlL,EAAG,EAAG,MAC1Bo2C,EAAMx+C,EAAgBoI,EAAG,GAAK,IAAIg0C,KAAS,IAAIA,KAAyB,IAApBkC,EAAYl2C,EAAG,IACnEizC,GAAM,EACNrpD,EAAI,EAKR,GAJI+B,EAAE/B,KAAO,IAAIoE,WAAW,KACxBilD,GAAM,EACNrpD,KAEA+B,EAAE/B,KAAO,IAAIoE,WAAW,IAAMrC,EAAE/B,EAAE,KAAO,IAAIoE,WAAW,GACxDgI,EAAgBgK,EAAG,EAAG,GACtB+yC,EAAa/yC,EAAGo2C,EAAKnD,OAClB,CACM,IAAIjmD,WAAW,GACrB,GAAK,IAAIgB,WAAW,GACvB,IAAIU,EAAI,IAAI0a,EACZ2C,EAAc/L,EAAGtR,GACjB+mD,EAASz1C,EAAGtR,EAAG/C,EAAGyqD,GAClBjqC,EAAgBzd,GAEpB,OAAO,GAwCP,SATgB,SAASsR,GACzB,IAAI4jB,EAAKsyB,EAAYl2C,EAAG,GACpB6jB,EAAKqyB,EAAYl2C,EAAG,GAExB,OADAtG,EAAesG,EAAG4jB,EAAKC,GAChB,GAMP,KAtCY,SAAS7jB,GACrB,IAAIlV,EAkBJ,OAjBI8M,EAAgBoI,EAAG,GACnBlV,EAAI,IAAIkpD,MAER1jC,EAAetQ,EAAG,EAAGtP,GACrB0K,EAAW4E,EAAG,GACdlV,EAAI,IAAIkpD,KACJE,EAASl0C,EAAG,QAAS,EAAG,GACxBk0C,EAASl0C,EAAG,SAAU,EAAG,GACzBk0C,EAASl0C,EAAG,OAAQ,EAAG,GACvBk0C,EAASl0C,EAAG,OAAQ,GAAI,GACxBk0C,EAASl0C,EAAG,MAAO,EAAG,GACtBk0C,EAASl0C,EAAG,MAAO,EAAG,IAE1B+yC,EAAa/yC,EAAGlV,IAGpBqO,EAAgB6G,EAAGnR,KAAKuP,MAAMtT,EAAI,MAC3B,GAuBP,MAAe,SAASkV,GAEpB,OADAtG,EAAesG,EAAGq2C,YAAYC,MAAM,KAC7B,IA4Gf3sD,EAAOD,QAAQ4nC,WALI,SAAStxB,GAExB,OADAgR,EAAYhR,EAAGm2C,GACR,I,6BCrjBX,MAAM,QAAEI,GAAY,EAAQ,KAEtB,gBACFl4C,EAAe,mBACfC,EAAkB,eAClBE,EAAc,eACdC,EAAc,kBACdC,EAAiB,MACjBC,EAAK,sBACLO,GACA,EAAQ,IACN,aACF5O,EAAY,cACZK,EAAa,SACbN,EAAQ,YACRG,EAAW,YACXC,EAAW,WACXC,EAAU,SACV+E,EAAQ,gBACRO,EAAe,SACfC,EAAQ,aACRe,EAAY,WACZC,EAAU,cACVO,EAAa,aACbO,EAAY,QACZc,EAAO,iBACPE,EAAgB,gBAChBI,EAAe,sBACfG,EAAqB,gBACrBC,EAAe,gBACfC,EAAe,YACfC,EAAW,eACXC,EAAc,eACdC,EAAc,cACdE,EAAa,WACbW,EAAU,aACVK,EAAY,iBACZK,EAAgB,WAChBE,EAAU,cACVK,EAAa,cACbE,EAAa,aACbI,EAAY,aACZI,EAAY,eACZE,EAAc,SACdC,EAAQ,iBACR/H,GACA,EAAQ,IACN,YACF6U,EAAW,aACX0G,EAAY,gBACZ9D,EAAe,aACfC,EAAY,eACZC,EAAc,cACd6D,EAAa,cACbC,EAAa,cACbpG,EAAa,cACbmC,EAAa,kBACbmE,GAAiB,kBACjB5E,GAAiB,iBACjBD,GAAgB,gBAChBoC,GAAe,iBACfxC,GAAgB,eAChBqF,GAAc,WACdvG,GAAU,YACViH,GAAW,gBACXI,GAAe,eACfhG,GAAc,kBACdI,GAAiB,gBACjBW,GAAe,oBACfoF,GAAmB,eACnBQ,GAAc,cACd3H,IACA,EAAQ,GACNtd,GAAS,EAAQ,KACjB,aACFT,GAAY,kBACZC,GAAiB,YACjBE,GAAW,aACXC,IACA,EAAQ,GAGN+pD,GADU,IACOxoD,WAAW,GAa5ByoD,GAAS,SAAS9qD,GACpB,IAAIwB,EAAMb,GAAkBX,EAAG,GAC/B,OAAOwB,GAAO,EAAIA,EAAMxB,EAAEyB,QAIxBspD,GAAW,SAASjoC,EAAKthB,GAC3B,OAAIshB,GAAO,EAAUA,EACZ,EAAIA,EAAMthB,EAAY,EACnBA,EAAMshB,EAAM,GAkCtBgmB,GAAS,SAASz0B,EAAGtR,EAAGmU,EAAM4I,GAEhC,OADAO,EAAgBP,EAAG/c,EAAGmU,GACf,GAeL8zC,GAAaj4C,EAAkBtR,OAAS,EAmCxCwpD,GAAkB,SAAS52C,EAAGiF,EAAK5D,GACrC,IAAIgC,EAhCW,SAAShC,GAExB,GAAI/W,OAAOusD,GAAGx1C,EAAGy1C,KACb,OAAOrqD,GAAa,OACnB,GAAInC,OAAOusD,GAAGx1C,GAAIy1C,KACnB,OAAOrqD,GAAa,QACnB,GAAI4S,OAAO8E,MAAM9C,GAClB,OAAO5U,GAAa,OACnB,GAAU,IAAN4U,EAAS,CAEd,IAAI01C,EAAOR,EAAQ93C,EAAiB,QAAS4C,GAG7C,OAFI/W,OAAOusD,GAAGx1C,GAAI,KACd01C,EAAO,IAAMA,GACVtqD,GAAasqD,GACjB,CACH,IAAI1zC,EAAO,GACP2zC,EAAKr4C,EAAM0C,GACXrX,EAAIgtD,EAAG,GACPv3C,EAAIu3C,EAAG,GASX,OARIhtD,EAAI,IACJqZ,GAAQ,IACRrZ,GAAKA,GAETqZ,GAAQ,KACRA,IAAa,EAAJrZ,GAAiBwF,SAAS,IACnCiQ,GA3BO,EA4BP4D,GAAQkzC,EAAQ,OAAQ92C,GACjBhT,GAAa4W,IAKb4zC,CAAW51C,GACtB,GAAwB,KAApB4D,EAAI0xC,IACJ,IAAK,IAAI/sD,EAAI,EAAGA,EAAIyZ,EAAKjW,OAAQxD,IAAK,CAClC,IAAIK,EAAIoZ,EAAKzZ,GACTK,GAAK,KACLoZ,EAAKzZ,GAAS,IAAJK,QAES,KAApBgb,EAAI0xC,KACX5sC,GAAW/J,EAAGvT,GAAa,qDAC/B,OAAO4W,GAcL6zC,GAAQzqD,GAAa,SAOrB0qD,GAAU13C,GAAM,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,GACzD23C,GAAU33C,GAAK,IAAMA,GAAKA,GAAK,GAC/B43C,GAAU53C,GAAM,GAAQA,GAAKA,GAAK,IAAe,MAANA,EAC3C63C,GAAU73C,GAAK,IAAMA,GAAKA,GAAK,IAC/B83C,GAAU93C,GAAK,IAAMA,GAAKA,GAAK,IAC/B+3C,GAAU/3C,GAAK,IAAMA,GAAKA,GAAK,GAC/Bg4C,GAAUh4C,GAAM,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,GACjFi4C,GAAUj4C,GAAK63C,GAAQ73C,KAAOg4C,GAAQh4C,GACtCk4C,GAAUl4C,GAAW,KAANA,GAAaA,GAAK,GAAKA,GAAK,GAC3Cm4C,GAAWn4C,GAAM,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IAkCjFo4C,GAAa,SAAS73C,EAAGtR,EAAGmb,GAC9B,OAAOvN,EAAS0D,EAAG6J,IACf,KAAKpZ,EAAa,CACd,IAAI9E,EAAIwQ,EAAa6D,EAAG6J,IAnClB,SAASnb,EAAG/C,EAAGwB,GAC7B2iB,EAAaphB,EAAG,IAChB,IAAI9E,EAAI,EACR,KAAOuD,KAAO,CACV,GAAa,KAATxB,EAAE/B,IACO,KAAT+B,EAAE/B,IACO,KAAT+B,EAAE/B,GACFkmB,EAAaphB,EAAG,IAChBohB,EAAaphB,EAAG/C,EAAE/B,SACf,GAAIytD,GAAQ1rD,EAAE/B,IAAK,CACtB,IAAIyZ,EAAO,GAAG1X,EAAE/B,GACZwtD,GAAQzrD,EAAE/B,EAAE,MACZyZ,EAAO,IAAIy0C,OAAO,EAAEz0C,EAAKjW,QAAUiW,GACvC6I,EAAexd,EAAGjC,GAAa,KAAO4W,SAEtCyM,EAAaphB,EAAG/C,EAAE/B,IACtBA,IAEJkmB,EAAaphB,EAAG,IAkBRqpD,CAAUrpD,EAAG/C,EAAGA,EAAEyB,QAClB,MAEJ,KAAKoD,EAAa,CACd,IAAI6S,EACJ,GAAK7L,EAAcwI,EAAG6J,GAIf,CACH,IAAIxe,EAAIsQ,EAAcqE,EAAG6J,GAIzBxG,EAAO5W,GAAa8pD,EAHNlrD,IAAMmT,EACd,MAAQF,EAAqB,IAC7BD,EAC8BhT,QATZ,CACxB,IAAIA,EAAI0Q,EAAaiE,EAAG6J,GACxBxG,EAAOuzC,GAAgB52C,EAAGvT,GAAa,IAAI6R,MAAwBjT,GAnBnE,SAASgY,GACrB,GAAI/W,GAAkB+W,EAAM,IAAgC,EAAG,CAC3D,IAAI20C,EAAQ94C,IACR+4C,EAAS3rD,GAAkB+W,EAAM20C,GACjCC,IAAQ50C,EAAK40C,GAAU,KAgBnBC,CAAQ70C,GAQZ6I,EAAexd,EAAG2U,GAClB,MAEJ,KAAKhT,EAAU,KAAKC,EAChByhB,GAAe/R,EAAG6J,GAClBkG,EAAcrhB,GACd,MAEJ,QACIkb,EAAc5J,EAAG6J,EAAKpd,GAAa,gCAKzC0rD,GAAa,SAASn4C,EAAGo4C,EAASxuD,EAAGyuD,GACvC,IAAI3sD,EAAI9B,EACR,KAAsB,IAAfwuD,EAAQ1sD,IAAYY,GAAkB4qD,GAAOkB,EAAQ1sD,KAAO,GAAGA,IAClEA,EAAI9B,GAAKstD,GAAM9pD,QACf2c,GAAW/J,EAAGvT,GAAa,oCAC3B2qD,GAAQgB,EAAQ1sD,KAAKA,IACrB0rD,GAAQgB,EAAQ1sD,KAAKA,IACN,KAAf0sD,EAAQ1sD,KACRA,IACI0rD,GAAQgB,EAAQ1sD,KAAKA,IACrB0rD,GAAQgB,EAAQ1sD,KAAKA,KAEzB0rD,GAAQgB,EAAQ1sD,KAChBqe,GAAW/J,EAAGvT,GAAa,iDAC/B4rD,EAAK,GAAK,GACV,IAAK,IAAIjrC,EAAI,EAAGA,EAAI1hB,EAAI9B,EAAI,EAAGwjB,IAC3BirC,EAAKjrC,EAAE,GAAKgrC,EAAQxuD,EAAEwjB,GAC1B,OAAO1hB,GAML4sD,GAAY,SAASD,EAAME,GAC7B,IAAI1uD,EAAIwuD,EAAKjrD,OACTorD,EAAKD,EAAOnrD,OACZqrD,EAAOJ,EAAKxuD,EAAI,GACpB,IAAK,IAAID,EAAI,EAAGA,EAAI4uD,EAAI5uD,IACpByuD,EAAKzuD,EAAIC,EAAI,GAAK0uD,EAAO3uD,GAC7ByuD,EAAKxuD,EAAI2uD,EAAK,GAAKC,GAgGvB,MAAMC,GACF,YAAY14C,GACRxM,KAAKwM,EAAIA,EACTxM,KAAKmlD,UAAW,EAChBnlD,KAAKolD,SAAW,GAOxB,MAUMC,GAAQzB,GAER0B,GAAS,SAAS7zC,EAAK8zC,GACzB,GAAI9zC,EAAIuP,KAAOvP,EAAItZ,EAAEyB,SAAWyrD,GAAM5zC,EAAItZ,EAAEsZ,EAAIuP,MAC5C,OAAOukC,EACN,CACD,IAAI7rD,EAAI,EACR,GACIA,EAAQ,GAAJA,GAAU+X,EAAItZ,EAAEsZ,EAAIuP,OAAS,UAC5BvP,EAAIuP,IAAMvP,EAAItZ,EAAEyB,QAAUyrD,GAAM5zC,EAAItZ,EAAEsZ,EAAIuP,OAAStnB,GAAK,aACjE,OAAOA,IAQT8rD,GAAc,SAAS/uB,EAAGhlB,EAAK8zC,GACjC,IAAIrtC,EAAKotC,GAAO7zC,EAAK8zC,GAGrB,OAFIrtC,EAxDW,IAwDQA,GAAM,IACzB3B,GAAWkgB,EAAEjqB,EAAGvT,GAAa,2CAA4Cif,EAzD9D,IA0DRA,GAMLutC,GAAY,SAAShvB,EAAGhlB,GAC1B,IAAIva,EAAI,CACJwuD,IAAKj0C,EAAItZ,EAAEsZ,EAAIuP,OACf3R,KAAM,GAEV,OAAQnY,EAAEwuD,KACN,KAAK,GAAyC,OAA5BxuD,EAAEmY,KAAO,EAAGnY,EAAEwuD,IA5CrB,EA4C0CxuD,EACrD,KAAK,GAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IA5CrB,EA4C0CxuD,EACrD,KAAK,IAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IA9CrB,EA8C0CxuD,EACrD,KAAK,GAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IA9CrB,EA8C0CxuD,EACrD,KAAK,IAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IAhDrB,EAgD0CxuD,EACrD,KAAK,GAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IAhDrB,EAgD0CxuD,EACrD,KAAK,IAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IAlDrB,EAkD0CxuD,EACrD,KAAK,GACL,KAAK,GAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IAnDrB,EAmD0CxuD,EACrD,KAAK,IAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IAnDrB,EAmD0CxuD,EACrD,KAAK,IACL,KAAK,IAAyC,OAA5BA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IArDrB,EAqD0CxuD,EACrD,KAAK,IAA+D,OAAlDA,EAAEmY,KAAOm2C,GAAY/uB,EAAGhlB,EAAK,GAAIva,EAAEwuD,IAxD1C,EAwDgExuD,EAC3E,KAAK,GAA+D,OAAlDA,EAAEmY,KAAOm2C,GAAY/uB,EAAGhlB,EAAK,GAAIva,EAAEwuD,IAxD1C,EAwDgExuD,EAC3E,KAAK,IAA+D,OAAlDA,EAAEmY,KAAOm2C,GAAY/uB,EAAGhlB,EAAK,GAAIva,EAAEwuD,IAtD1C,EAsDgExuD,EAC3E,KAAK,GAKD,OAJAA,EAAEmY,KAAOi2C,GAAO7zC,GAAM,IACN,IAAZva,EAAEmY,MACFkH,GAAWkgB,EAAEjqB,EAAGvT,GAAa,uCACjC/B,EAAEwuD,IA5DK,EA6DAxuD,EAEX,KAAK,IAA6C,OAApBA,EAAEwuD,IA7DrB,EA6D8CxuD,EACzD,KAAK,IAA6C,OAAhCA,EAAEmY,KAAO,EAAGnY,EAAEwuD,IA7DrB,EA6D8CxuD,EACzD,KAAK,GAA6C,OAApBA,EAAEwuD,IA7DrB,EA6D8CxuD,EACzD,KAAK,GAAa,MAClB,KAAK,GAAau/B,EAAE0uB,UAAW,EAAM,MACrC,KAAK,GAAa1uB,EAAE0uB,UAAW,EAAO,MACtC,KAAK,GAAa1uB,EAAE0uB,UAAW,EAAM,MACrC,KAAK,GAAa1uB,EAAE2uB,SAAWI,GAAY/uB,EAAGhlB,EAzFrC,GAyFqD,MAC9D,QAAS8E,GAAWkgB,EAAEjqB,EAAGvT,GAAa,8BAA+B/B,EAAEwuD,KAG3E,OADAxuD,EAAEwuD,IApEa,EAqERxuD,GAYLyuD,GAAa,SAASlvB,EAAGmvB,EAAWn0C,GACtC,IAAIva,EAAI,CACJwuD,IAAKxlD,IACLmP,KAAMnP,IACN2lD,SAAU3lD,KAGVwlD,EAAMD,GAAUhvB,EAAGhlB,GACvBva,EAAEmY,KAAOq2C,EAAIr2C,KACbnY,EAAEwuD,IAAMA,EAAIA,IACZ,IAAII,EAAQ5uD,EAAEmY,KACd,GA7Fe,IA6FXnY,EAAEwuD,IACF,GAAIj0C,EAAIuP,KAAOvP,EAAItZ,EAAEyB,QAA6B,IAAnB6X,EAAItZ,EAAEsZ,EAAIuP,KACrC5K,EAAcqgB,EAAEjqB,EAAG,EAAGvT,GAAa,2CAClC,CACD,IAAIpC,EAAI4uD,GAAUhvB,EAAGhlB,GACrBq0C,EAAQjvD,EAAEwY,KACVxY,EAAIA,EAAE6uD,IAvGC,IAwGH7uD,GAAyB,IAAVivD,GACf1vC,EAAcqgB,EAAEjqB,EAAG,EAAGvT,GAAa,uCAY/C,OATI6sD,GAAS,GA5GE,IA4GG5uD,EAAEwuD,IAChBxuD,EAAE2uD,SAAW,GAETC,EAAQrvB,EAAE2uB,WACVU,EAAQrvB,EAAE2uB,UACe,IAAxBU,EAASA,EAAO,IACjB1vC,EAAcqgB,EAAEjqB,EAAG,EAAGvT,GAAa,6CACvC/B,EAAE2uD,SAAYC,GAASF,EAAaE,EAAQ,GAAQA,EAAQ,GAEzD5uD,GASL6uD,GAAU,SAAS7qD,EAAGrD,EAAGstD,EAAU91C,EAAMY,GAC3C,IAAIJ,EAAOmI,GAAkB9c,EAAGmU,GAChCQ,EAAKs1C,EAAW,EAAI91C,EAAO,GArJpB,IAqJyBxX,EAChC,IAAK,IAAIzB,EAAI,EAAGA,EAAIiZ,EAAMjZ,IACtByB,IA1JG,EA2JHgY,EAAKs1C,EAAW/uD,EAAIiZ,EAAO,EAAIjZ,GAxJ5B,IAwJiCyB,EAExC,GAAIoY,GAAOZ,EAhKD,EAiKN,IAAK,IAAIjZ,EAjKH,EAiKcA,EAAIiZ,EAAMjZ,IAC1ByZ,EAAKs1C,EAAW/uD,EAAIiZ,EAAO,EAAIjZ,GA5JhC,IA8JPqiB,EAAavd,EAAGmU,IAgNd22C,GAAY,SAASx5C,EAAG9R,EAAKyqD,EAAU91C,EAAM42C,GAC/C,IAAIxyC,EAAM,EACNqlB,EAAQzpB,GAtXF,EAsXkBA,EAtXlB,EAuXV,IAAK,IAAIjZ,EAAI0iC,EAAQ,EAAG1iC,GAAK,EAAGA,IAC5Bqd,IArXG,EAsXHA,GAAO/Y,EAAIyqD,EAAW/uD,EAAIiZ,EAAO,EAAIjZ,GAEzC,GAAIiZ,EA3XM,GA4XN,GAAI42C,EAAU,CACV,IAAIz1B,EAAO,GA1XZ,EA0XkBnhB,EAAY,EAC7BoE,GAAQA,EAAM+c,GAAQA,QAEvB,GAAInhB,EAhYD,EAgYe,CACrB,IAAImhB,GAAQy1B,GAAYxyC,GAAO,EAAI,EA3XhC,IA4XH,IAAK,IAAIrd,EAAI0iC,EAAO1iC,EAAIiZ,EAAMjZ,IACtBsE,EAAIyqD,EAAW/uD,EAAIiZ,EAAO,EAAIjZ,KAAOo6B,GACrCja,GAAW/J,EAAGvT,GAAa,iDAAkDoW,GAGzF,OAAOoE,GAGLyyC,GAAY,SAAS15C,EAAGtR,EAAGiqD,EAAU91C,GACvC/V,GAAO4S,WAAWhR,EAAEtB,QAAUyV,GAE9B,IAAI82C,EAAK,IAAI96C,SAAS,IAAIC,YAAY+D,IACtC,IAAK,IAAIjZ,EAAI,EAAGA,EAAIiZ,EAAMjZ,IACtB+vD,EAAGC,SAAShwD,EAAG8E,EAAE9E,GAAI+uD,GAEzB,OAAY,GAAR91C,EAAkB82C,EAAGE,WAAW,EAAGlB,GAC3BgB,EAAGG,WAAW,EAAGnB,IAoE3BoB,GAAiBttD,GAAa,cAEpC,MAAMutD,GACF,YAAYh6C,GACRxM,KAAK8vB,IAAM,KACX9vB,KAAKymD,SAAW,KAChBzmD,KAAK0mD,QAAU,KACf1mD,KAAK9H,EAAI,KACT8H,KAAK2mD,MAAQ,KACb3mD,KAAKwM,EAAIA,EACTxM,KAAK4mD,WAAa1mD,IAClBF,KAAK+V,MAAQ7V,IACbF,KAAK6mD,QAAU,IAIvB,MAcMC,GAAW,SAASC,EAAI7uD,GAC1B,OAAO6uD,EAAG7uD,EAAEA,MACR,KAAK8qD,GAGD,OAFI9qD,IAAM6uD,EAAGJ,OACTpwC,GAAWwwC,EAAGv6C,EAAGvT,GAAa,uCAC3Bf,EAAI,EAEf,KAAK,GACe,KAAZ6uD,EAAG7uD,EAAEA,IAAmCA,IAC5C,GACQA,IAAM6uD,EAAGJ,OACTpwC,GAAWwwC,EAAGv6C,EAAGvT,GAAa,oCAC9B8tD,EAAG7uD,EAAEA,OAAS8qD,IAAS9qD,EAAI6uD,EAAGJ,OAC9BzuD,UACa,KAAZ6uD,EAAG7uD,EAAEA,IACd,OAAOA,EAAI,EAEf,QACI,OAAOA,IAKb8uD,GAAc,SAASvwD,EAAGswB,GAC5B,OAAQA,GACJ,KAAK,GAA6B,OAAQ48B,GAAQltD,GAClD,KAAK,GAA6B,OAAQktD,GAAQltD,GAClD,KAAK,GAA6B,OAAQotD,GAAQptD,GAClD,KAAK,GAA6B,OAAQotD,GAAQptD,GAClD,KAAK,IAA6B,OAAQmtD,GAAQntD,GAClD,KAAK,GAA6B,OAAQmtD,GAAQntD,GAClD,KAAK,IAA6B,OAAQqtD,GAAQrtD,GAClD,KAAK,GAA6B,OAAQqtD,GAAQrtD,GAClD,KAAK,IAA6B,OAAQstD,GAAQttD,GAClD,KAAK,GAA6B,OAAQstD,GAAQttD,GAClD,KAAK,IAA6B,OAAQytD,GAAQztD,GAClD,KAAK,GAA6B,OAAQytD,GAAQztD,GAClD,KAAK,IAA6B,OAAQ0tD,GAAQ1tD,GAClD,KAAK,GAA6B,OAAQ0tD,GAAQ1tD,GAClD,KAAK,IAA6B,OAAQutD,GAAQvtD,GAClD,KAAK,GAA6B,OAAQutD,GAAQvtD,GAClD,KAAK,IAA6B,OAAQwtD,GAAQxtD,GAClD,KAAK,GAA6B,OAAQwtD,GAAQxtD,GAClD,KAAK,IAA6B,OAAQ2tD,GAAS3tD,GACnD,KAAK,GAA6B,OAAQ2tD,GAAS3tD,GACnD,KAAK,IAA6B,OAAc,IAANA,EAC1C,KAAK,GAA6B,OAAc,IAANA,EAC1C,QAAS,OAAQswB,IAAOtwB,IAI1BwwD,GAAoB,SAASF,EAAItwD,EAAGyB,EAAGgvD,GACzC,IAAIC,GAAM,EAKV,IAJoB,KAAhBJ,EAAG7uD,EAAEA,EAAI,KACTivD,GAAM,EACNjvD,OAEKA,EAAIgvD,GACT,GAAIH,EAAG7uD,EAAEA,KAAO8qD,IAEZ,GADA9qD,IACI8uD,GAAYvwD,EAAGswD,EAAG7uD,EAAEA,IACpB,OAAOivD,OACR,GAAoB,KAAhBJ,EAAG7uD,EAAEA,EAAI,IAAqCA,EAAI,EAAIgvD,GAE7D,GADAhvD,GAAK,EACD6uD,EAAG7uD,EAAEA,EAAI,IAAMzB,GAAKA,GAAKswD,EAAG7uD,EAAEA,GAC9B,OAAOivD,OACR,GAAIJ,EAAG7uD,EAAEA,KAAOzB,EAAG,OAAO0wD,EAErC,OAAQA,GAGNC,GAAc,SAASL,EAAI5uD,EAAGD,EAAGmvD,GACnC,GAAIlvD,GAAK4uD,EAAGL,QACR,OAAO,EACN,CACD,IAAIjwD,EAAIswD,EAAGj3B,IAAI33B,GACf,OAAQ4uD,EAAG7uD,EAAEA,IACT,KAAK,GAA4B,OAAO,EACxC,KAAK8qD,GAAO,OAAOgE,GAAYvwD,EAAGswD,EAAG7uD,EAAEA,EAAI,IAC3C,KAAK,GAA4B,OAAO+uD,GAAkBF,EAAItwD,EAAGyB,EAAGmvD,EAAK,GACzE,QAAS,OAAON,EAAG7uD,EAAEA,KAAOzB,KAKlC6wD,GAAe,SAASP,EAAI5uD,EAAGD,GAGjC,GAFIA,GAAK6uD,EAAGJ,MAAQ,GAChBpwC,GAAWwwC,EAAGv6C,EAAGvT,GAAa,kDAC9B8tD,EAAGj3B,IAAI33B,KAAO4uD,EAAG7uD,EAAEA,GACnB,OAAO,KACN,CACD,IAAIgD,EAAI6rD,EAAG7uD,EAAEA,GACT+T,EAAI86C,EAAG7uD,EAAEA,EAAI,GACbqvD,EAAO,EACX,OAASpvD,EAAI4uD,EAAGL,SACZ,GAAIK,EAAGj3B,IAAI33B,KAAO8T,GACd,GAAe,KAATs7C,EAAY,OAAOpvD,EAAI,OAExB4uD,EAAGj3B,IAAI33B,KAAO+C,GAAGqsD,IAGlC,OAAO,MAGLC,GAAa,SAAST,EAAI5uD,EAAGD,EAAGmvD,GAClC,IAAIjxD,EAAI,EACR,KAAOgxD,GAAYL,EAAI5uD,EAAI/B,EAAG8B,EAAGmvD,IAC7BjxD,IAEJ,KAAOA,GAAK,GAAG,CACX,IAAIqd,EAAM2uC,GAAM2E,EAAI5uD,EAAI/B,EAAGixD,EAAK,GAChC,GAAI5zC,EAAK,OAAOA,EAChBrd,IAEJ,OAAO,MAGLqxD,GAAa,SAASV,EAAI5uD,EAAGD,EAAGmvD,GAClC,OAAS,CACL,IAAI5zC,EAAM2uC,GAAM2E,EAAI5uD,EAAGkvD,EAAK,GAC5B,GAAY,OAAR5zC,EACA,OAAOA,EACN,IAAI2zC,GAAYL,EAAI5uD,EAAGD,EAAGmvD,GAE1B,OAAO,KADRlvD,MAKNuvD,GAAgB,SAASX,EAAI5uD,EAAGD,EAAGkI,GACrC,IAMIqT,EANAsC,EAAQgxC,EAAGhxC,MASf,OARIA,GAv7BgB,IAu7BUQ,GAAWwwC,EAAGv6C,EAAGvT,GAAa,sBAC5D8tD,EAAGF,QAAQ9wC,GAASgxC,EAAGF,QAAQ9wC,GAASgxC,EAAGF,QAAQ9wC,GAAS,GAC5DgxC,EAAGF,QAAQ9wC,GAAOmjB,KAAO/gC,EACzB4uD,EAAGF,QAAQ9wC,GAAOpc,IAAMyG,EACxB2mD,EAAGhxC,MAAQA,EAAQ,EAEa,QAA3BtC,EAAM2uC,GAAM2E,EAAI5uD,EAAGD,KACpB6uD,EAAGhxC,QACAtC,GAGLk0C,GAAc,SAASZ,EAAI5uD,EAAGD,GAChC,IAEIub,EAFApd,EArJiB,SAAS0wD,GAC9B,IAAIhxC,EAAQgxC,EAAGhxC,MACf,IAAKA,IAASA,GAAS,EAAGA,IACtB,IA7Be,IA6BXgxC,EAAGF,QAAQ9wC,GAAOpc,IAAwB,OAAOoc,EACzD,OAAOQ,GAAWwwC,EAAGv6C,EAAGvT,GAAa,4BAiJ7B2uD,CAAiBb,GAKzB,OAJAA,EAAGF,QAAQxwD,GAAGsD,IAAMxB,EAAI4uD,EAAGF,QAAQxwD,GAAG6iC,KAEN,QAA3BzlB,EAAM2uC,GAAM2E,EAAI5uD,EAAGD,MACpB6uD,EAAGF,QAAQxwD,GAAGsD,KAnLC,GAoLZ8Z,GAQLo0C,GAAgB,SAASd,EAAI5uD,EAAG9B,GAClCA,EA1KkB,SAAS0wD,EAAI1wD,GAE/B,OADAA,GAAQ,IACA,GAAKA,GAAK0wD,EAAGhxC,QArBF,IAqBWgxC,EAAGF,QAAQxwD,GAAGsD,IACjC4c,GAAWwwC,EAAGv6C,EAAGvT,GAAa,8BAA+B5C,EAAI,GACrEA,EAsKHyxD,CAAcf,EAAI1wD,GACtB,IAAIsD,EAAMotD,EAAGF,QAAQxwD,GAAGsD,IACxB,OAAKotD,EAAGL,QAAQvuD,GAAMwB,GAPR,SAASD,EAAGquD,EAAI7sD,EAAG8sD,EAAIruD,GACrC,OAAOd,GAAaa,EAAEiY,SAASo2C,EAAIA,EAAGpuD,GAAMuB,EAAEyW,SAASq2C,EAAIA,EAAGruD,IAMjCsuD,CAAUlB,EAAGj3B,IAAKi3B,EAAGF,QAAQxwD,GAAG6iC,KAAM6tB,EAAGj3B,IAAK33B,EAAGwB,GACnExB,EAAEwB,EACD,MAGVyoD,GAAQ,SAAS2E,EAAI5uD,EAAGD,GAC1B,IAAIgwD,GAAc,EACdC,GAAW,EAKf,IAHwB,GAApBpB,EAAGH,cACHrwC,GAAWwwC,EAAGv6C,EAAGvT,GAAa,wBAE3BkvD,GAAYD,GAEf,GADAC,GAAW,EACPjwD,IAAM6uD,EAAGJ,MACT,OAAQuB,OAAc,EAASnB,EAAG7uD,EAAEA,IAChC,KAAK,GAEGC,EADgB,KAAhB4uD,EAAG7uD,EAAEA,EAAI,GACLwvD,GAAcX,EAAI5uD,EAAGD,EAAI,GAhN9B,GAkNKwvD,GAAcX,EAAI5uD,EAAGD,EAAI,GAnN9B,GAoNH,MAEJ,KAAK,GACDC,EAAIwvD,GAAYZ,EAAI5uD,EAAGD,EAAI,GAC3B,MAEJ,KAAK,GACD,GAAIA,EAAI,IAAM6uD,EAAGJ,MAAO,CACpBuB,GAAc,EACd,MAEJ/vD,EAAK4uD,EAAGj3B,IAAIl2B,OAASzB,GAAO,EAAIA,EAAI,KACpC,MAEJ,KAAK6qD,GACD,OAAQ+D,EAAG7uD,EAAEA,EAAI,IACb,KAAK,GAES,QADVC,EAAImvD,GAAaP,EAAI5uD,EAAGD,EAAI,MAExBA,GAAK,EACLiwD,GAAW,GAEf,MAEJ,KAAK,IAA6B,CAC9BjwD,GAAK,EACW,KAAZ6uD,EAAG7uD,EAAEA,IACLqe,GAAWwwC,EAAGv6C,EAAGvT,GAAa,uCAClC,IAAIouD,EAAKP,GAASC,EAAI7uD,GAClByoB,EAAWxoB,IAAM4uD,EAAGN,SAAW,EAAIM,EAAGj3B,IAAI33B,EAAE,GAChD,IAAK8uD,GAAkBF,EAAIpmC,EAAUzoB,EAAGmvD,EAAK,IAAMJ,GAAkBF,EAAK5uD,IAAI4uD,EAAGL,QAAS,EAAEK,EAAGj3B,IAAI33B,GAAID,EAAGmvD,EAAK,GAAI,CAC/GnvD,EAAImvD,EAAIc,GAAW,EAAM,MAE7BhwD,EAAI,KACJ,MAEJ,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GACzC,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAE3B,QADVA,EAAI0vD,GAAcd,EAAI5uD,EAAG4uD,EAAG7uD,EAAEA,EAAI,OAE9BA,GAAK,EAAGiwD,GAAW,GAEvB,MAEJ,QAASD,GAAc,EAE3B,MAEJ,QAAS,CACLA,GAAc,EACd,IAAIb,EAAKP,GAASC,EAAI7uD,GAEtB,GAAKkvD,GAAYL,EAAI5uD,EAAGD,EAAGmvD,GASvB,OAAQN,EAAG7uD,EAAEmvD,IACT,KAAK,GAA4B,CAC7B,IAAI5zC,EACqC,QAApCA,EAAM2uC,GAAM2E,EAAI5uD,EAAI,EAAGkvD,EAAK,IAC7BlvD,EAAIsb,GAEJvb,EAAImvD,EAAK,EAAGc,GAAW,GAE3B,MAEJ,KAAK,GACDhwD,IAEJ,KAAK,GACDA,EAAIqvD,GAAWT,EAAI5uD,EAAGD,EAAGmvD,GACzB,MACJ,KAAK,GACDlvD,EAAIsvD,GAAWV,EAAI5uD,EAAGD,EAAGmvD,GACzB,MACJ,QACIlvD,IAAKD,EAAImvD,EAAIc,GAAW,MA7BJ,CAC5B,GAAiB,KAAbpB,EAAG7uD,EAAEmvD,IACQ,KAAbN,EAAG7uD,EAAEmvD,IACQ,KAAbN,EAAG7uD,EAAEmvD,GACP,CACEnvD,EAAImvD,EAAK,EAAGc,GAAW,EAAM,MAE7BhwD,EAAI,KAyBZ,OAMhB,OADA4uD,EAAGH,aACIzuD,GAGLiwD,GAAkB,SAASrB,EAAI3wD,EAAG+B,EAAG8T,GACvC,GAAI7V,GAAK2wD,EAAGhxC,MACE,IAAN3f,EACA4P,EAAgB+gD,EAAGv6C,EAAGu6C,EAAGj3B,IAAIne,SAASxZ,EAAG8T,GAAIA,EAAI9T,GAEjDoe,GAAWwwC,EAAGv6C,EAAGvT,GAAa,8BAA+B7C,EAAI,OAClE,CACH,IAAIC,EAAI0wD,EAAGF,QAAQzwD,GAAGuD,KAxTP,IAyTXtD,GAAsBkgB,GAAWwwC,EAAGv6C,EAAGvT,GAAa,wBAxTzC,IAyTX5C,EACAsP,EAAgBohD,EAAGv6C,EAAGu6C,EAAGF,QAAQzwD,GAAG8iC,KAAO6tB,EAAGN,SAAW,GAEzDzgD,EAAgB+gD,EAAGv6C,EAAGu6C,EAAGj3B,IAAIne,SAASo1C,EAAGF,QAAQzwD,GAAG8iC,MAAO7iC,KAIjEgyD,GAAgB,SAAStB,EAAI5uD,EAAG8T,GAClC,IAAIq8C,EAAuB,IAAbvB,EAAGhxC,OAAegxC,EAAGj3B,IAAIne,SAASxZ,GAAK,EAAI4uD,EAAGhxC,MAC5DkE,GAAgB8sC,EAAGv6C,EAAG87C,EAAS,qBAC/B,IAAK,IAAIlyD,EAAI,EAAGA,EAAIkyD,EAASlyD,IACzBgyD,GAAgBrB,EAAI3wD,EAAG+B,EAAG8T,GAC9B,OAAOq8C,GAWLC,GAAY,SAASxB,EAAIv6C,EAAGrU,EAAGi+B,EAAIl+B,EAAGswD,GACxCzB,EAAGv6C,EAAIA,EACPu6C,EAAGH,WAjVgB,IAkVnBG,EAAGj3B,IAAM33B,EACT4uD,EAAGN,SAAW,EACdM,EAAGL,QAAUtwB,EACb2wB,EAAG7uD,EAAIA,EACP6uD,EAAGJ,MAAQ6B,GAGTC,GAAc,SAAS1B,GACzBA,EAAGhxC,MAAQ,EACXzc,GAAO4S,WA3VY,MA2VD66C,EAAGH,aAkBnB8B,GAAe,SAASl8C,EAAGm8C,GAC7B,IAAIxwD,EAAIsf,GAAiBjL,EAAG,GACxBtU,EAAIuf,GAAiBjL,EAAG,GACxB4pB,EAAKj+B,EAAEyB,OACP4uD,EAAKtwD,EAAE0B,OACPs/B,EAAOgqB,GAAStlC,GAAgBpR,EAAG,EAAG,GAAI4pB,GAC9C,GAAI8C,EAAO,EAAGA,EAAO,OAChB,GAAIA,EAAO9C,EAAK,EAEjB,OADAnwB,EAAYuG,GACL,EAGX,GAAIm8C,IAAS1gD,EAAcuE,EAAG,IAlDf,SAAStU,EAAG7B,GAC3B,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAGD,IACf,IAA2C,IAAvC0C,GAAkBytD,GAAUruD,EAAE9B,IAC9B,OAAO,EAEf,OAAO,EA6C6BwyD,CAAW1wD,EAAGswD,IAAM,CAEpD,IAAIt5C,EA7BU,SAASqK,EAAKC,EAAQC,GACxC,IAAIrjB,EAAIqjB,IAAe,EACnBC,EAAKF,EAAO5f,OAEhB,GAAW,IAAP8f,EACA,OAAOtjB,EAEX,MAA4C,KAApCA,EAAImjB,EAAIzf,QAAQ0f,EAAO,GAAIpjB,IAAYA,IAC3C,GAAIyC,GAAa0gB,EAAI5H,SAASvb,EAAGA,EAAEsjB,GAAKF,GACpC,OAAOpjB,EAGf,OAAQ,EAiBIkjB,CAAcnhB,EAAEwZ,SAASunB,EAAO,GAAIhhC,EAAG,GAC/C,GAAIgX,GAAK,EAGL,OAFAvJ,EAAgB6G,EAAG0sB,EAAOhqB,GAC1BvJ,EAAgB6G,EAAG0sB,EAAOhqB,EAAIs5C,EAAK,GAC5B,MAER,CACH,IAAIzB,EAAK,IAAIP,GAAWh6C,GACpB3Q,EAAKq9B,EAAO,EACZ2vB,EAAkB,KAAT3wD,EAAE,GACX2wD,IACA3wD,EAAIA,EAAEyZ,SAAS,GAAI62C,KAEvBD,GAAUxB,EAAIv6C,EAAGrU,EAAGi+B,EAAIl+B,EAAGswD,GAC3B,EAAG,CACC,IAAI/0C,EAEJ,GADAg1C,GAAY1B,GACqB,QAA5BtzC,EAAM2uC,GAAM2E,EAAIlrD,EAAI,IACrB,OAAI8sD,GACAhjD,EAAgB6G,EAAG3Q,EAAK,GACxB8J,EAAgB6G,EAAGiH,GACZ40C,GAActB,EAAI,KAAM,GAAK,GAE7BsB,GAActB,EAAIlrD,EAAI4X,SAEhC5X,IAAOkrD,EAAGL,UAAYmC,GAGnC,OADA5iD,EAAYuG,GACL,GAYX,MAAMs8C,GACF,cACI9oD,KAAK8vB,IAAM5vB,IACXF,KAAK9H,EAAIgI,IACTF,KAAK+oD,UAAY7oD,IACjBF,KAAK+mD,GAAK,IAAIP,IAItB,MAAMwC,GAAa,SAASx8C,GACxB,IAAIy8C,EAAKpgD,EAAe2D,EAAGzL,EAAiB,IAC5CkoD,EAAGlC,GAAGv6C,EAAIA,EACV,IAAK,IAAIsjB,EAAMm5B,EAAGn5B,IAAKA,GAAOm5B,EAAGlC,GAAGL,QAAS52B,IAAO,CAEhD,IAAI7jB,EACJ,GAFAw8C,GAAYQ,EAAGlC,IAEuB,QAAjC96C,EAAIm2C,GAAM6G,EAAGlC,GAAIj3B,EAAKm5B,EAAG/wD,KAAgB+T,IAAMg9C,EAAGF,UAEnD,OADAE,EAAGn5B,IAAMm5B,EAAGF,UAAY98C,EACjBo8C,GAAcY,EAAGlC,GAAIj3B,EAAK7jB,GAGzC,OAAO,GA4CLi9C,GAAY,SAASnC,EAAI7rD,EAAG/C,EAAG8T,EAAGk9C,GACpC,IAAI38C,EAAIu6C,EAAGv6C,EACX,OAAQ28C,GACJ,KAAKhsD,EAAe,CAChBkJ,EAAcmG,EAAG,GACjB,IAAI3U,EAAIwwD,GAActB,EAAI5uD,EAAG8T,GAC7BhK,EAASuK,EAAG3U,EAAG,GACf,MAEJ,KAAKqF,EACDkrD,GAAgBrB,EAAI,EAAG5uD,EAAG8T,GAC1BzI,EAAagJ,EAAG,GAChB,MAEJ,QAEI,YAzCE,SAASu6C,EAAI7rD,EAAG/C,EAAG8T,GAC7B,IAAIO,EAAIu6C,EAAGv6C,EACP48C,EAAOzgD,EAAa6D,EAAG,GACvBnW,EAAI+yD,EAAKxvD,OACb,IAAK,IAAIxD,EAAI,EAAGA,EAAIC,EAAGD,IACfgzD,EAAKhzD,KAAO4sD,GACZ1mC,EAAaphB,EAAGkuD,EAAKhzD,KAErBA,IACKwtD,GAAQwF,EAAKhzD,IAIK,KAAZgzD,EAAKhzD,GACZoiB,EAAgBtd,EAAG6rD,EAAGj3B,IAAIne,SAASxZ,EAAG8T,GAAIA,EAAI9T,IAE9CiwD,GAAgBrB,EAAIqC,EAAKhzD,GAAK,GAA4B+B,EAAG8T,GAC7DsS,GAAe/R,GAAI,GACnBxF,EAAWwF,GAAI,GACf+P,EAAcrhB,KATVkuD,EAAKhzD,KAAO4sD,IACZzsC,GAAW/J,EAAGvT,GAAa,6CAA8C+pD,IAC7E1mC,EAAaphB,EAAGkuD,EAAKhzD,MA4BzBizD,CAAMtC,EAAI7rD,EAAG/C,EAAG8T,GAInBhE,EAAcuE,GAAI,GAGXjI,EAAaiI,GAAI,IACzB+J,GAAW/J,EAAGvT,GAAa,oCAAqC2d,GAAcpK,GAAI,KAHlFnH,EAAQmH,EAAG,GACXxG,EAAgBwG,EAAGu6C,EAAGj3B,IAAIne,SAASxZ,EAAG8T,GAAIA,EAAI9T,IAGlDokB,EAAcrhB,IAyCZouD,GAAS,CACX,KA5rBa,SAAS98C,GACtB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACN2vD,EAAOrG,GAAStlC,GAAgBpR,EAAG,EAAG,GAAInW,GAC1CmzD,EAAOtG,GAAStlC,GAAgBpR,EAAG,EAAG+8C,GAAOlzD,GAIjD,GAFIkzD,EAAO,IAAGA,EAAO,GACjBC,EAAOnzD,IAAGmzD,EAAOnzD,GACjBkzD,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQ19C,OAAOuzC,iBACtB,OAAO7oC,GAAW/J,EAAG,yBAEzB,IAAI3U,EAAK2xD,EAAOD,EAAQ,EACxBtvC,GAAgBzN,EAAG3U,EAAG,yBACtB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBuP,EAAgB6G,EAAGrU,EAAEoxD,EAAOnzD,EAAI,IACpC,OAAOyB,GA6qBP,KAxxCa,SAAS2U,GACtB,IAAI3U,EAAI4L,EAAW+I,GACftR,EAAI,IAAI0a,EACR1d,EAAIwkB,GAAkBlQ,EAAGtR,EAAGrD,GAChC,IAAK,IAAIzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAAK,CACzB,IAAIK,EAAIqhB,GAAkBtL,EAAGpW,GAC7BomB,EAAchQ,EAAG/V,GAAK,GAAKA,GAAK,IAAK,sBACrCyB,EAAE9B,EAAE,GAAKK,EAGb,OADAsnB,GAAoB7iB,EAAGrD,GAChB,GA+wCP,KAvwCa,SAAS2U,GACtB,IAAItR,EAAI,IAAI0a,EACRsrB,EAAQj5B,EAAcuE,EAAG,GAI7B,OAHAsQ,GAAetQ,EAAG,EAAGrP,GACrByK,EAAW4E,EAAG,GACd+L,EAAc/L,EAAGtR,GACqB,IAAlCuH,EAAS+J,EAAGy0B,GAAQ/lC,EAAGgmC,GAChB3qB,GAAW/J,EAAGvT,GAAa,mCACtC0f,GAAgBzd,GACT,IA+vCP,KA9Ia,SAASsR,GACtB,OAAOk8C,GAAal8C,EAAG,IA8IvB,OA7kCe,SAASA,GACxB,IAAI+E,EAAM9N,EAAW+I,GACjB6J,EAAM,EACNuuC,EAAUntC,GAAiBjL,EAAG6J,GAC9BjgB,EAAI,EACJ8E,EAAI,IAAI0a,EAEZ,IADA2C,EAAc/L,EAAGtR,GACV9E,EAAIwuD,EAAQhrD,QACf,GAAIgrD,EAAQxuD,KAAO4sD,GACf1mC,EAAaphB,EAAG0pD,EAAQxuD,WACrB,GAAIwuD,IAAUxuD,KAAO4sD,GACxB1mC,EAAaphB,EAAG0pD,EAAQxuD,UACrB,CACH,IAAIyuD,EAAO,GAIX,SAHMxuC,EAAM9E,GACR6E,EAAc5J,EAAG6J,EAAKpd,GAAa,aACvC7C,EAAIuuD,GAAWn4C,EAAGo4C,EAASxuD,EAAGyuD,GACtBrpD,OAAOC,aAAampD,EAAQxuD,OAChC,IAAK,IAEDkmB,EAAaphB,EAAG4c,GAAkBtL,EAAG6J,IACrC,MAEJ,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,CACpC,IAAIxe,EAAIigB,GAAkBtL,EAAG6J,GAC7ByuC,GAAUD,EAAM5rD,GAAa6R,GAAoB,IACjD4N,EAAexd,EAAGjC,GAAa8pD,EAAQvnD,OAAOC,gBAAgBopD,GAAOhtD,KACrE,MAEJ,IAAK,IAAK,IAAK,IACXitD,GAAUD,EAAM5rD,GAAa6R,GAAoB,IACjD4N,EAAexd,EAAGkoD,GAAgB52C,EAAGq4C,EAAMhtC,GAAiBrL,EAAG6J,KAC/D,MAEJ,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,CAChB,IAAIxe,EAAIggB,GAAiBrL,EAAG6J,GAC5ByuC,GAAUD,EAAM5rD,GAAa6R,GAAoB,IACjD4N,EAAexd,EAAGjC,GAAa8pD,EAAQvnD,OAAOC,gBAAgBopD,GAAOhtD,KACrE,MAEJ,IAAK,IACDwsD,GAAW73C,EAAGtR,EAAGmb,GACjB,MAEJ,IAAK,IAAK,CACN,IAAIle,EAAIomB,GAAe/R,EAAG6J,GACtBwuC,EAAKjrD,QAAU,GAAiB,IAAZirD,EAAK,GACzBtoC,EAAcrhB,IAEdshB,EAAchQ,EAAGrU,EAAEyB,SAAWqpD,GAAO9qD,GAAIke,EAAK,yBAC1Cvd,GAAkB+rD,EAAM,IAA8B,GAAK1sD,EAAEyB,QAAU,IAEvE2iB,EAAcrhB,IAGdwd,EAAexd,EAAGjC,GAAa8pD,EAAQvnD,OAAOC,gBAAgBopD,GAAO7rD,GAAYb,MACjFkN,EAAQmH,EAAG,KAGnB,MAEJ,QACI,OAAO+J,GAAW/J,EAAGvT,GAAa,qCAAsC2rD,EAAQxuD,EAAE,KAMlG,OADAuiB,GAAgBzd,GACT,GAwgCP,OAhHe,SAASsR,GACxB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBtU,EAAIuf,GAAiBjL,EAAG,GACxB4pB,EAAKj+B,EAAEyB,OACP4uD,EAAKtwD,EAAE0B,OACXgO,EAAW4E,EAAG,GACd,IAAIy8C,EAAK,IAAIH,GAOb,OANAhjD,EAAsB0G,EAAGy8C,GACzBV,GAAUU,EAAGlC,GAAIv6C,EAAGrU,EAAGi+B,EAAIl+B,EAAGswD,GAC9BS,EAAGn5B,IAAM,EACTm5B,EAAG/wD,EAAI,EACP+wD,EAAGF,UAAY,KACfxjD,EAAiBiH,EAAGw8C,GAAY,GACzB,GAoGP,KA7Ca,SAASx8C,GACtB,IAAIsjB,EAAMrY,GAAiBjL,EAAG,GAC1Bi9C,EAAO35B,EAAIl2B,OACX1B,EAAIuf,GAAiBjL,EAAG,GACxBg8C,EAAKtwD,EAAE0B,OACPmvD,EAAY,KACZI,EAAKrgD,EAAS0D,EAAG,GACjBk9C,EAAQ9rC,GAAgBpR,EAAG,EAAGi9C,EAAO,GACrCZ,EAAkB,KAAT3wD,EAAE,GACXL,EAAI,EACJkvD,EAAK,IAAIP,GAAWh6C,GACpBtR,EAAI,IAAI0a,EASZ,IARA4G,EAAchQ,EAAG28C,IAAOnsD,GAAemsD,IAAOlsD,GAAeksD,IAAOhsD,GAAiBgsD,IAAOjsD,EAAY,EACpG,kCACJqb,EAAc/L,EAAGtR,GACb2tD,IACA3wD,EAAIA,EAAEyZ,SAAS,GAAI62C,KAEvBD,GAAUxB,EAAIv6C,EAAGsjB,EAAK25B,EAAMvxD,EAAGswD,GAC/B14B,EAAM,EAAG53B,EAAI,EACNL,EAAI6xD,GAAO,CACd,IAAIz9C,EAEJ,GADAw8C,GAAY1B,GACoB,QAA3B96C,EAAIm2C,GAAM2E,EAAIj3B,EAAK53B,KAAgB+T,IAAM88C,EAC1ClxD,IACAqxD,GAAUnC,EAAI7rD,EAAG40B,EAAK7jB,EAAGk9C,GACzBr5B,EAAMi5B,EAAY98C,MACf,MAAI6jB,EAAMi3B,EAAGL,SAEf,MADDpqC,EAAaphB,EAAG6rD,EAAGj3B,IAAIA,MAE3B,GAAI+4B,EAAQ,MAKhB,OAHArwC,EAAgBtd,EAAG6rD,EAAGj3B,IAAIne,SAASme,EAAKi3B,EAAGL,SAAUK,EAAGL,QAAU52B,GAClEnX,GAAgBzd,GAChByK,EAAgB6G,EAAG3U,GACZ,GAWP,IAnyCY,SAAS2U,GAErB,OADA7G,EAAgB6G,EAAGiL,GAAiBjL,EAAG,GAAG5S,QACnC,GAkyCP,MA5vBc,SAAS4S,GACvB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACN1C,EAAI,IAAIsC,WAAWnD,GACvB,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAIK,EAAI0B,EAAE/B,GACN4tD,GAAQvtD,KACRA,GAAQ,IACZS,EAAEd,GAAKK,EAGX,OADA0P,EAAeqG,EAAGtV,GACX,GAkvBP,MAhJc,SAASsV,GACvB,OAAOk8C,GAAal8C,EAAG,IAgJvB,KA71Ba,SAASA,GACtB,IAAItR,EAAI,IAAI0a,EACR6gB,EAAI,IAAIyuB,GAAO14C,GACfiF,EAAM,CACNtZ,EAAGsf,GAAiBjL,EAAG,GACvBwU,IAAK,GAEL3K,EAAM,EACNuvC,EAAY,EAGhB,IAFA3/C,EAAYuG,GACZ+L,EAAc/L,EAAGtR,GACVuW,EAAIuP,IAAMvP,EAAItZ,EAAEyB,QAAQ,CAC3B,IAAI+vD,EAAUhE,GAAWlvB,EAAGmvB,EAAWn0C,GACnCi0C,EAAMiE,EAAQjE,IACdr2C,EAAOs6C,EAAQt6C,KACfw2C,EAAW8D,EAAQ9D,SAEvB,IADAD,GAAaC,EAAWx2C,EACjBw2C,KAAa,GAChBvpC,EAAaphB,EA9LA,GAgMjB,OADAmb,IACQqvC,GACJ,KApKO,EAoKI,CACP,IAAI7tD,EAAIigB,GAAkBtL,EAAG6J,GAC7B,GAAIhH,EA9LN,EA8LoB,CACd,IAAIoR,EAAM,GAAa,EAAPpR,EAAY,EAC5BmN,EAAchQ,GAAIiU,GAAO5oB,GAAKA,EAAI4oB,EAAKpK,EAAK,oBAEhD0vC,GAAQ7qD,EAAGrD,EAAG4+B,EAAE0uB,SAAU91C,EAAMxX,EAAI,GACpC,MAEJ,KA5KO,EA4KK,CACR,IAAIA,EAAIigB,GAAkBtL,EAAG6J,GACzBhH,EAvMN,GAwMMmN,EAAchQ,EAAI3U,IAAI,EAAM,GArMrC,EAqM2CwX,EAAagH,EAAK,qBACxD0vC,GAAQ7qD,EAAGrD,IAAI,EAAG4+B,EAAE0uB,SAAU91C,GAAM,GACpC,MAEJ,KAlLO,EAkLM,CACT,IAAIQ,EAAOmI,GAAkB9c,EAAGmU,GAC5BxX,EAAIggB,GAAiBrL,EAAG6J,GACxB8vC,EAAK,IAAI96C,SAASwE,EAAKmyB,OAAQnyB,EAAKoyB,WAAYpyB,EAAKqyB,YAC5C,IAAT7yB,EAAY82C,EAAGyD,WAAW,EAAG/xD,EAAG4+B,EAAE0uB,UACjCgB,EAAG56C,WAAW,EAAG1T,EAAG4+B,EAAE0uB,UAC3B1sC,EAAavd,EAAGmU,GAChB,MAEJ,KA1LO,EA0LK,CACR,IAAIlX,EAAIsf,GAAiBjL,EAAG6J,GACxB1c,EAAMxB,EAAEyB,OAGZ,IAFA4iB,EAAchQ,EAAG7S,GAAO0V,EAAMgH,EAAK,iCACnCmC,EAAgBtd,EAAG/C,EAAGwB,GACfA,IAAQ0V,GACXiN,EAAaphB,EAhOR,GAiOT,MAEJ,KAlMO,EAkMO,CACV,IAAI/C,EAAIsf,GAAiBjL,EAAG6J,GACxB1c,EAAMxB,EAAEyB,OACZ4iB,EAAchQ,EACV6C,GAAQ,GAA0B1V,EAAO,GA/NlD,EA+NwD0V,EAC/CgH,EAAK,4CACT0vC,GAAQ7qD,EAAGvB,EAAK88B,EAAE0uB,SAAU91C,EAAM,GAClCmJ,EAAgBtd,EAAG/C,EAAGwB,GACtBisD,GAAajsD,EACb,MAEJ,KA5MO,EA4MK,CACR,IAAIxB,EAAIsf,GAAiBjL,EAAG6J,GACxB1c,EAAMxB,EAAEyB,OACZ4iB,EAAchQ,EAAG1T,GAAkBX,EAAG,GAAK,EAAGke,EAAK,0BACnDmC,EAAgBtd,EAAG/C,EAAGwB,GACtB2iB,EAAaphB,EAAG,GAChB0qD,GAAajsD,EAAM,EACnB,MAEJ,KApNO,EAoNQ2iB,EAAaphB,EAvPf,GAwPb,KApNO,EAoNU,KAnNV,EAoNHmb,KAKZ,OADAsC,GAAgBzd,GACT,GA4wBP,SAprBiB,SAASsR,GAC1B,IAAIiqB,EAAI,IAAIyuB,GAAO14C,GACfiF,EAAM,CACNtZ,EAAGsf,GAAiBjL,EAAG,GACvBwU,IAAK,GAEL4kC,EAAY,EAChB,KAAOn0C,EAAIuP,IAAMvP,EAAItZ,EAAEyB,QAAQ,CAC3B,IAAI+vD,EAAUhE,GAAWlvB,EAAGmvB,EAAWn0C,GACnCi0C,EAAMiE,EAAQjE,IACdr2C,EAAOs6C,EAAQt6C,KAKnB,OAHAA,GADes6C,EAAQ9D,SAEvBrpC,EAAchQ,EAAGo5C,GA5pBT,WA4pBgCv2C,EAAM,EAAG,2BACjDu2C,GAAav2C,EACLq2C,GACJ,KArUO,EAsUP,KArUO,EAsUHtvC,EAAc5J,EAAG,EAAG,2BAMhC,OADA7G,EAAgB6G,EAAGo5C,GACZ,GA6pBP,IApuBY,SAASp5C,GACrB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACN/B,EAAIigB,GAAkBtL,EAAG,GACzBw4B,EAAMptB,GAAepL,EAAG,EAAG,IAC3B2yC,EAAOna,EAAIprC,OACf,GAAI/B,GAAK,EAAGkO,EAAgByG,EAAG,QAC1B,IAAInW,EAAI8oD,EAAO9oD,GAAKA,EAAI8oD,EAvmBjB,WAumBkCtnD,EAC1C,OAAO0e,GAAW/J,EAAGvT,GAAa,+BACjC,CACD,IAAI4wD,EAAWhyD,EAAIxB,GAAKwB,EAAI,GAAKsnD,EAC7BjkD,EAAI,IAAI0a,EACR1d,EAAIwkB,GAAkBlQ,EAAGtR,EAAG2uD,GAC5BC,EAAK,EACT,KAAOjyD,KAAM,GACTK,EAAEka,IAAIja,EAAG2xD,GACTA,GAAMzzD,EACF8oD,EAAO,IACPjnD,EAAEka,IAAI4yB,EAAK8kB,GACXA,GAAM3K,GAGdjnD,EAAEka,IAAIja,EAAG2xD,GACT/rC,GAAoB7iB,EAAG2uD,IAE3B,OAAO,GA4sBP,QA3wBgB,SAASr9C,GACzB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACN1C,EAAI,IAAIsC,WAAWnD,GACvB,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAGD,IACfc,EAAEd,GAAK+B,EAAE9B,EAAE,EAAED,GAEjB,OADA+P,EAAeqG,EAAGtV,GACX,GAqwBP,IAvzCY,SAASsV,GACrB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACNmwD,EAAQ7G,GAASprC,GAAkBtL,EAAG,GAAInW,GAC1C2zD,EAAM9G,GAAStlC,GAAgBpR,EAAG,GAAI,GAAInW,GAM9C,OALI0zD,EAAQ,IAAGA,EAAQ,GACnBC,EAAM3zD,IAAG2zD,EAAM3zD,GACf0zD,GAASC,EACT7jD,EAAeqG,EAAGrU,EAAEwZ,SAASo4C,EAAQ,EAAIA,EAAQ,GAAMC,EAAMD,EAAQ,KACpEhkD,EAAgByG,EAAG,IACjB,GA8yCP,OApnBe,SAASA,GACxB,IAAIiqB,EAAI,IAAIyuB,GAAO14C,GACfiF,EAAM,CACNtZ,EAAGsf,GAAiBjL,EAAG,GACvBwU,IAAK,GAEL5V,EAAOqM,GAAiBjL,EAAG,GAC3By9C,EAAK7+C,EAAKxR,OACVqhB,EAAMioC,GAAStlC,GAAgBpR,EAAG,EAAG,GAAIy9C,GAAM,EAC/CpyD,EAAI,EAER,IADA2kB,EAAchQ,EAAGyO,GAAOgvC,GAAMhvC,GAAO,EAAG,EAAG,kCACpCxJ,EAAIuP,IAAMvP,EAAItZ,EAAEyB,QAAQ,CAC3B,IAAI+vD,EAAUhE,GAAWlvB,EAAGxb,EAAKxJ,GAC7Bi0C,EAAMiE,EAAQjE,IACdr2C,EAAOs6C,EAAQt6C,KACfw2C,EAAW8D,EAAQ9D,SAOvB,OANkC5qC,EAAM4qC,EAAWx2C,EAAO46C,GACtD7zC,EAAc5J,EAAG,EAAGvT,GAAa,0BACrCgiB,GAAO4qC,EAEP5rC,GAAgBzN,EAAG,EAAG,oBACtB3U,IACQ6tD,GACJ,KApZO,EAqZP,KApZO,EAoZK,CACR,IAAIjyC,EAAMuyC,GAAUx5C,EAAGpB,EAAKuG,SAASsJ,GAAMwb,EAAE0uB,SAAU91C,EAtZpD,IAsZ0Dq2C,GAC7D//C,EAAgB6G,EAAGiH,GACnB,MAEJ,KAxZO,EAwZM,CACT,IAAIA,EAAMyyC,GAAU15C,EAAGpB,EAAKuG,SAASsJ,GAAMwb,EAAE0uB,SAAU91C,GACvDnJ,EAAesG,EAAGiH,GAClB,MAEJ,KA5ZO,EA6ZHtN,EAAeqG,EAAGpB,EAAKuG,SAASsJ,EAAKA,EAAM5L,IAC3C,MAEJ,KA/ZO,EA+ZO,CACV,IAAI1V,EAAMqsD,GAAUx5C,EAAGpB,EAAKuG,SAASsJ,GAAMwb,EAAE0uB,SAAU91C,EAAM,GAC7DmN,EAAchQ,EAAGyO,EAAMthB,EAAM0V,GAAQ46C,EAAI,EAAG,yBAC5C9jD,EAAeqG,EAAGpB,EAAKuG,SAASsJ,EAAM5L,EAAM4L,EAAM5L,EAAO1V,IACzDshB,GAAOthB,EACP,MAEJ,KAraO,EAqaK,CACR,IAAIsS,EAAInT,GAAkBsS,EAAM,EAAG6P,IACxB,IAAPhP,IAAUA,EAAIb,EAAKxR,OAASqhB,GAChC9U,EAAeqG,EAAGpB,EAAKuG,SAASsJ,EAAKhP,IACrCgP,EAAMhP,EAAI,EACV,MAEJ,KA1aO,EA0aU,KA3aV,EA2ayB,KAzazB,EA0aHpU,IAGRojB,GAAO5L,EAGX,OADA1J,EAAgB6G,EAAGyO,EAAM,GAClBpjB,EAAI,GA0jBX,MAtvBc,SAAS2U,GACvB,IAAIrU,EAAIsf,GAAiBjL,EAAG,GACxBnW,EAAI8B,EAAEyB,OACN1C,EAAI,IAAIsC,WAAWnD,GACvB,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAIK,EAAI0B,EAAE/B,GACN2tD,GAAQttD,KACRA,GAAQ,KACZS,EAAEd,GAAKK,EAGX,OADA0P,EAAeqG,EAAGtV,GACX,IA+vBXf,EAAOD,QAAQ8nC,eANQ,SAASxxB,GAG5B,OAFAgR,GAAYhR,EAAG88C,IAZK,SAAS98C,GAC7BhK,EAAgBgK,EAAG,EAAG,GACtBzG,EAAgByG,EAAG,IACnBnG,EAAcmG,GAAI,GAClB9E,EAAiB8E,GAAI,GACrBnH,EAAQmH,EAAG,GACXnG,EAAcmG,GAAI,GAClBnF,EAAamF,GAAI,EAAGvT,GAAa,WAAW,IAC5CoM,EAAQmH,EAAG,GAKX09C,CAAgB19C,GACT,I,6BCr7CX,MAAM,WACF/I,EAAU,kBACV+B,EAAiB,gBACjBC,EAAe,gBACfE,EAAe,YACfM,EAAW,eACXE,EAAc,cACdE,EAAa,aACbgB,EAAY,cACZc,GACA,EAAQ,IACN,YACFyN,EAAW,cACX2G,EAAa,cACbC,EAAa,cACbjE,EAAa,kBACbT,EAAiB,gBACjBmC,EAAe,iBACfxC,EAAgB,WAChBlB,EAAU,YACViH,EAAW,gBACXI,EAAe,gBACfjF,GACA,EAAQ,IACN,aACF5f,EAAY,aACZE,GACA,EAAQ,GAINkxD,EAAS,SAASjyD,GAEpB,OAAa,OADD,IAAJA,IAKNkyD,EAAa,SAASnvC,EAAKthB,GAC7B,OAAIshB,GAAO,EAAUA,EACZ,EAAIA,EAAMthB,EAAY,EACnBA,EAAMshB,EAAM,GAMtBovC,EAAS,CAAC,IAAM,IAAM,KAAO,OAC7BC,EAAc,SAASnyD,EAAG8iB,GAC5B,IAAIxkB,EAAI0B,EAAE8iB,GACNxH,EAAM,EACV,GAAIhd,EAAI,IACJgd,EAAMhd,MACL,CACD,IAAI46B,EAAQ,EACZ,KAAW,GAAJ56B,GAAU,CACb,IAAIy/C,EAAK/9C,EAAE8iB,KAASoW,GACpB,GAAoB,MAAV,IAAL6kB,GACD,OAAO,KACXziC,EAAOA,GAAO,EAAW,GAALyiC,EACpBz/C,IAAM,EAGV,GADAgd,IAAa,IAAJhd,IAAsB,EAAR46B,EACnBA,EAAQ,GAAK5d,EAjCN,SAiC0BA,GAAO42C,EAAOh5B,GAC/C,OAAO,KACXpW,GAAOoW,EAGX,MAAO,CACHnP,KAAMzO,EACNwH,IAAKA,EAAM,IAiCbsvC,EAAMtxD,EAAa,MACnBuxD,EAAc,SAASh+C,EAAG6J,GAC5B,IAAI6L,EAAOpK,EAAkBtL,EAAG6J,GAChCmG,EAAchQ,EAAG,GAAK0V,GAAQA,GA5Ef,QA4EmC7L,EAAK,sBACvD5Q,EAAgB+G,EAAG+9C,EAAKroC,IAgGtBuoC,EAAW,SAASj+C,GACtB,IAAIrU,EAAIsf,EAAiBjL,EAAG,GACxB7S,EAAMxB,EAAEyB,OACR/B,EAAIsQ,EAAcqE,EAAG,GAAK,EAE9B,GAAI3U,EAAI,EACJA,EAAI,OACH,GAAIA,EAAI8B,EAET,IADA9B,IACOsyD,EAAOhyD,EAAEN,KAAKA,IAGzB,GAAIA,GAAK8B,EACL,OAAO,EACN,CACD,IAAI+wD,EAAMJ,EAAYnyD,EAAGN,GACzB,OAAY,OAAR6yD,GAAgBP,EAAOhyD,EAAEuyD,EAAIzvC,MACtB1E,EAAW/J,EAAGvT,EAAa,wBACtC0M,EAAgB6G,EAAG3U,EAAI,GACvB8N,EAAgB6G,EAAGk+C,EAAIxoC,MAChB,KAYTyoC,EAAQ,CACV,KA3HY,SAASn+C,GACrB,IAAI3U,EAAI4L,EAAW+I,GACnB,GAAU,IAAN3U,EACA2yD,EAAYh+C,EAAG,OACd,CACD,IAAItR,EAAI,IAAI0a,EACZ2C,EAAc/L,EAAGtR,GACjB,IAAK,IAAI9E,EAAI,EAAGA,GAAKyB,EAAGzB,IACpBo0D,EAAYh+C,EAAGpW,GACfmmB,EAAcrhB,GAElByd,EAAgBzd,GAEpB,OAAO,GA+GP,UA3Dc,SAASsR,GACvB,IAAIrU,EAAIsf,EAAiBjL,EAAG,GACxB+8C,EAAOa,EAAWxsC,EAAgBpR,EAAG,EAAG,GAAIrU,EAAEyB,QAC9C4vD,EAAOY,EAAWxsC,EAAgBpR,EAAG,EAAG+8C,GAAOpxD,EAAEyB,QAKrD,GAHA4iB,EAAchQ,EAAG+8C,GAAQ,EAAG,EAAG,gBAC/B/sC,EAAchQ,EAAGg9C,GAAQrxD,EAAEyB,OAAQ,EAAG,gBAElC2vD,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQ19C,OAAOuzC,iBACtB,OAAO7oC,EAAW/J,EAAG,yBACzB,IAAI3U,EAAK2xD,EAAOD,EAAQ,EAGxB,IAFAtvC,EAAgBzN,EAAG3U,EAAG,yBACtBA,EAAI,EACC0xD,GAAQ,EAAGA,EAAOC,GAAO,CAC1B,IAAIkB,EAAMJ,EAAYnyD,EAAGoxD,GACzB,GAAY,OAARmB,EACA,OAAOn0C,EAAW/J,EAAG,sBACzB7G,EAAgB6G,EAAGk+C,EAAIxoC,MACvBqnC,EAAOmB,EAAIzvC,IACXpjB,IAEJ,OAAOA,GAsCP,MAXe,SAAS2U,GAKxB,OAJAiL,EAAiBjL,EAAG,GACpBhH,EAAkBgH,EAAGi+C,GACrBpkD,EAAcmG,EAAG,GACjB7G,EAAgB6G,EAAG,GACZ,GAOP,IAhKW,SAASA,GACpB,IAAI3U,EAAI,EACJM,EAAIsf,EAAiBjL,EAAG,GACxB7S,EAAMxB,EAAEyB,OACR2vD,EAAOa,EAAWxsC,EAAgBpR,EAAG,EAAG,GAAI7S,GAC5CixD,EAAOR,EAAWxsC,EAAgBpR,EAAG,GAAI,GAAI7S,GAKjD,IAHA6iB,EAAchQ,EAAG,GAAK+8C,KAAUA,GAAQ5vD,EAAK,EAAG,kCAChD6iB,EAAchQ,IAAKo+C,EAAOjxD,EAAK,EAAG,gCAE3B4vD,GAAQqB,GAAM,CACjB,IAAIF,EAAMJ,EAAYnyD,EAAGoxD,GACzB,GAAY,OAARmB,EAGA,OAFAzkD,EAAYuG,GACZ7G,EAAgB6G,EAAG+8C,EAAO,GACnB,EAEXA,EAAOmB,EAAIzvC,IACXpjB,IAGJ,OADA8N,EAAgB6G,EAAG3U,GACZ,GA4IP,OA3Ge,SAAS2U,GACxB,IAAIrU,EAAIsf,EAAiBjL,EAAG,GACxB3U,EAAIigB,EAAkBtL,EAAG,GACzB+8C,EAAO1xD,GAAK,EAAI,EAAIM,EAAEyB,OAAS,EAKnC,GAJA2vD,EAAOa,EAAWxsC,EAAgBpR,EAAG,EAAG+8C,GAAOpxD,EAAEyB,QAEjD4iB,EAAchQ,EAAG,GAAK+8C,KAAUA,GAAQpxD,EAAEyB,OAAQ,EAAG,yBAE3C,IAAN/B,EAEA,KAAO0xD,EAAO,GAAKY,EAAOhyD,EAAEoxD,KAAQA,SAKpC,GAHIY,EAAOhyD,EAAEoxD,KACThzC,EAAW/J,EAAG,2CAEd3U,EAAI,EACJ,KAAOA,EAAI,GAAK0xD,EAAO,GAAG,CACtB,GACIA,UACKA,EAAO,GAAKY,EAAOhyD,EAAEoxD,KAC9B1xD,SAIJ,IADAA,IACOA,EAAI,GAAK0xD,EAAOpxD,EAAEyB,QAAQ,CAC7B,GACI2vD,UACKY,EAAOhyD,EAAEoxD,KAClB1xD,IAUZ,OALU,IAANA,EACA8N,EAAgB6G,EAAG+8C,EAAO,GAE1BtjD,EAAYuG,GAET,IAyELq+C,EAAW9xD,EAAa,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAStF5C,EAAOD,QAAQgoC,aAPM,SAAS1xB,GAI1B,OAHAgR,EAAYhR,EAAGm+C,GACfxkD,EAAeqG,EAAGq+C,GAClBxjD,EAAamF,GAAI,EAAGvT,EAAa,eAAe,IACzC,I,6BCzPX,MAAM,SACFmG,EAAQ,YACRpC,EAAW,YACXqF,EAAW,WACXoB,EAAU,cACVO,EAAa,gBACbI,EAAe,gBACfkB,EAAe,gBACfK,EAAe,gBACfI,EAAe,YACfE,EAAW,eACXC,EAAc,cACdG,EAAa,aACbgB,EAAY,WACZO,EAAU,cACVO,EAAa,eACbC,EAAc,SACdU,GACA,EAAQ,IACN,cACF0T,EAAa,cACbpG,EAAa,cACbuG,EAAa,kBACb7E,EAAiB,iBACjBD,EAAgB,WAChBtB,EAAU,YACViH,EAAW,eACXK,GACA,EAAQ,IACN,eACF9S,EAAc,eACdC,EAAc,oBACde,GACA,EAAQ,IACN,aAAE9S,GAAiB,EAAQ,GAEjC,IAAI6xD,EAEJ,MAAMC,EAAS,WAEX,OADAD,EAAc,WAAaA,EAAa,MAAS,WAC1CA,GAmGLE,EAAa,SAASx+C,EAAG9V,GAC3B,IAAImB,EAAIkU,EAAoBrV,IAClB,IAANmB,EACA8N,EAAgB6G,EAAG3U,GAEnBqO,EAAesG,EAAG9V,IAoIpBu0D,EAAU,CACZ,IAhMa,SAASz+C,GACtB,GAAIxI,EAAcwI,EAAG,GAAI,CACrB,IAAI3U,EAAIsQ,EAAcqE,EAAG,GACrB3U,EAAI,IAAGA,EAAS,GAAHA,GACjB8N,EAAgB6G,EAAG3U,QAGnBqO,EAAesG,EAAGnR,KAAKoP,IAAIoN,EAAiBrL,EAAG,KACnD,OAAO,GAyLP,KAlKc,SAASA,GAEvB,OADAtG,EAAesG,EAAGnR,KAAK6vD,KAAKrzC,EAAiBrL,EAAG,KACzC,GAiKP,KAxKc,SAASA,GAEvB,OADAtG,EAAesG,EAAGnR,KAAK8vD,KAAKtzC,EAAiBrL,EAAG,KACzC,GAuKP,KA/Jc,SAASA,GACvB,IAAIqqB,EAAIhf,EAAiBrL,EAAG,GACxBqB,EAAIgQ,EAAerR,EAAG,EAAG,GAE7B,OADAtG,EAAesG,EAAGnR,KAAK+vD,MAAMv0B,EAAGhpB,IACzB,GA4JP,KA7Hc,SAASrB,GAMvB,OALIxI,EAAcwI,EAAG,GACjB5E,EAAW4E,EAAG,GAEdw+C,EAAWx+C,EAAGnR,KAAKmP,KAAKqN,EAAiBrL,EAAG,KAEzC,GAwHP,IArLa,SAASA,GAEtB,OADAtG,EAAesG,EAAGnR,KAAKgwD,IAAIxzC,EAAiBrL,EAAG,KACxC,GAoLP,IAnFa,SAASA,GAEtB,OADAtG,EAAesG,EAAGqL,EAAiBrL,EAAG,IAAM,IAAMnR,KAAKiwD,KAChD,GAkFP,IAzFa,SAAS9+C,GAEtB,OADAtG,EAAesG,EAAGnR,KAAKkwD,IAAI1zC,EAAiBrL,EAAG,KACxC,GAwFP,MA1Ie,SAASA,GAMxB,OALIxI,EAAcwI,EAAG,GACjB5E,EAAW4E,EAAG,GAEdw+C,EAAWx+C,EAAGnR,KAAKuP,MAAMiN,EAAiBrL,EAAG,KAE1C,GAqIP,KAvCc,SAASA,GACvB,GAAIxI,EAAcwI,EAAG,IAAMxI,EAAcwI,EAAG,GAAI,CAC5C,IAAI9V,EAAIyR,EAAcqE,EAAG,GAEf,IAAN9V,EACA0f,EAAc5J,EAAG,EAAG,QAEpB7G,EAAgB6G,EAAIrE,EAAcqE,EAAG,GAAK9V,EAAG,OAC9C,CACH,IAAIgD,EAAIme,EAAiBrL,EAAG,GACxBtR,EAAI2c,EAAiBrL,EAAG,GAC5BtG,EAAesG,EAAG9S,EAAEwB,GAExB,OAAO,GA2BP,IA9Ga,SAASsR,GACtB,IACIiH,EADA5F,EAAIgK,EAAiBrL,EAAG,GAE5B,GAAIpI,EAAgBoI,EAAG,GACnBiH,EAAMpY,KAAKqhD,IAAI7uC,OACd,CACD,IAAI6T,EAAO7J,EAAiBrL,EAAG,GAE3BiH,EADS,IAATiO,EACMrmB,KAAKmwD,KAAK39C,GACF,KAAT6T,EACCrmB,KAAKowD,MAAM59C,GAEXxS,KAAKqhD,IAAI7uC,GAAGxS,KAAKqhD,IAAIh7B,GAGnC,OADAxb,EAAesG,EAAGiH,GACX,GAgGP,IAlEa,SAASjH,GACtB,IAAI3U,EAAI4L,EAAW+I,GACfk/C,EAAO,EACXlvC,EAAchQ,EAAG3U,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAIzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAChBiM,EAAYmK,EAAGk/C,EAAMt1D,EAAGgJ,KACxBssD,EAAOt1D,GAGf,OADAiQ,EAAcmG,EAAGk/C,GACV,GA0DP,IA/Ea,SAASl/C,GACtB,IAAI3U,EAAI4L,EAAW+I,GACfm/C,EAAO,EACXnvC,EAAchQ,EAAG3U,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAIzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAChBiM,EAAYmK,EAAGpW,EAAGu1D,EAAMvsD,KACxBusD,EAAOv1D,GAGf,OADAiQ,EAAcmG,EAAGm/C,GACV,GAuEP,KA3Bc,SAASn/C,GACvB,GAAIxI,EAAcwI,EAAG,GACjB5E,EAAW4E,EAAG,GACdtG,EAAesG,EAAG,OACf,CACH,IAAI3U,EAAIggB,EAAiBrL,EAAG,GACxBo/C,EAAK/zD,EAAI,EAAIwD,KAAKmP,KAAK3S,GAAKwD,KAAKuP,MAAM/S,GAC3CmzD,EAAWx+C,EAAGo/C,GACd1lD,EAAesG,EAAG3U,IAAM+zD,EAAK,EAAI/zD,EAAI+zD,GAEzC,OAAO,GAkBP,IAtFa,SAASp/C,GAEtB,OADAtG,EAAesG,EAAGqL,EAAiBrL,EAAG,IAAMnR,KAAKiwD,GAAK,MAC/C,GAqFP,OApPgB,SAAS9+C,GACzB,IAAIq/C,EAAKvqB,EAELpqC,OAAoB,IAAf4zD,EAAuBzvD,KAAK4jD,SAAU8L,IAAW,WAC1D,OAAQtnD,EAAW+I,IACf,KAAK,EAED,OADAtG,EAAesG,EAAGtV,GACX,EACX,KAAK,EACD20D,EAAM,EACNvqB,EAAKxpB,EAAkBtL,EAAG,GAC1B,MAEJ,KAAK,EACDq/C,EAAM/zC,EAAkBtL,EAAG,GAC3B80B,EAAKxpB,EAAkBtL,EAAG,GAC1B,MAEJ,QAAS,OAAO+J,EAAW/J,EAAG,6BAUlC,OANAgQ,EAAchQ,EAAGq/C,GAAOvqB,EAAI,EAAG,qBAC/B9kB,EAAchQ,EAAGq/C,GAAO,GAAKvqB,GAAMv2B,EAAiB8gD,EAAK,EACrD,sBAEJ30D,GAAMoqC,EAAKuqB,EAAO,EAClBlmD,EAAgB6G,EAAGnR,KAAKuP,MAAM1T,GAAK20D,GAC5B,GAyNP,WAtNoB,SAASr/C,GArCjB,IAASqB,EAwCrB,OAxCqBA,EAsCbgK,EAAiBrL,EAAG,GArC5Bs+C,EAAe,EAAFj9C,EACM,IAAfi9C,IACAA,EAAa,GAoCjBC,IACO,GAoNP,IAtMa,SAASv+C,GAEtB,OADAtG,EAAesG,EAAGnR,KAAKywD,IAAIj0C,EAAiBrL,EAAG,KACxC,GAqMP,KAlIc,SAASA,GAEvB,OADAtG,EAAesG,EAAGnR,KAAK0wD,KAAKl0C,EAAiBrL,EAAG,KACzC,GAiIP,IA9La,SAASA,GAEtB,OADAtG,EAAesG,EAAGnR,KAAK2wD,IAAIn0C,EAAiBrL,EAAG,KACxC,GA6LP,UAzKe,SAASA,GACxB,IAAI3U,EAAIuQ,EAAeoE,EAAG,GAO1B,OANU,IAAN3U,EACA8N,EAAgB6G,EAAG3U,IAEnB8kB,EAAcnQ,EAAG,GACjBvG,EAAYuG,IAET,GAkKP,KAhEc,SAASA,GAUvB,OATI1D,EAAS0D,EAAG,KAAOxP,EACfgH,EAAcwI,EAAG,GACjBzG,EAAgByG,EAAG,WAEnBzG,EAAgByG,EAAG,UAEvBmQ,EAAcnQ,EAAG,GACjBvG,EAAYuG,IAET,GAuDP,IAjIa,SAASA,GACtB,IAAI9S,EAAIoe,EAAkBtL,EAAG,GACzBtR,EAAI4c,EAAkBtL,EAAG,GAE7B,OADAlH,EAAgBkH,EAAI9S,GAAK,EAAIwB,EAAE,GAAKxB,EAAEwB,EAAIA,EAAE,GAAKxB,EAAEwB,GAC5C,IA6IX/E,EAAOD,QAAQmoC,aAbM,SAAS7xB,GAU1B,OATAgR,EAAYhR,EAAGy+C,GACf/kD,EAAesG,EAAGnR,KAAKiwD,IACvBjkD,EAAamF,GAAI,EAAGvT,EAAa,MAAM,IACvCiN,EAAesG,EAAG82C,KAClBj8C,EAAamF,GAAI,EAAGvT,EAAa,QAAQ,IACzC0M,EAAgB6G,EAAGzB,GACnB1D,EAAamF,GAAI,EAAGvT,EAAa,cAAc,IAC/C0M,EAAgB6G,EAAGxB,GACnB3D,EAAamF,GAAI,EAAGvT,EAAa,cAAc,IACxC,I,6BCxTX,MAAM,aACFoF,EAAY,cACZC,EAAa,aACbC,EAAY,YACZC,EAAW,kBACXT,EAAiB,cACjBZ,EAAa,SACbN,EAAQ,WACRK,EAAU,cACVE,EAAa,UACb2C,EAAS,SACTkC,EAAQ,eACRE,EAAc,YACda,EAAW,iBACXC,EAAgB,gBAChBC,EAAe,YACfE,EAAW,aACXC,EAAY,iBACZC,EAAgB,aAChBC,EAAY,eACZG,EAAc,iBACdC,EAAgB,WAChBC,EAAU,gBACVE,EAAe,eACfC,EAAc,gBACdK,EAAe,aACfK,EAAY,aACZM,EAAY,UACZI,EAAS,QACTE,EAAO,gBACPC,EAAe,gBACfG,EAAe,gBACfE,EAAe,sBACfG,EAAqB,gBACrBC,EAAe,YACfE,EAAW,eACXE,EAAc,cACdE,EAAa,YACbK,EAAW,YACXI,EAAW,WACXK,EAAU,aACVE,EAAY,YACZE,EAAW,aACXE,EAAY,iBACZC,EAAgB,WAChBE,EAAU,eACVC,EAAc,iBACdC,EAAgB,eAChBO,EAAc,YACdK,EAAW,aACXC,EAAY,aACZC,EAAY,eACZC,GAAc,SACdC,GAAQ,cACRE,GAAa,gBACbC,GAAe,UACfE,IACA,EAAQ,IACN,cACFqT,GAAa,cACbpG,GAAa,cACbuG,GAAa,kBACb7E,GAAiB,iBACjBL,GAAgB,eAChBqF,GAAc,WACdvG,GAAU,gBACVyC,GAAe,YACfwE,GAAW,gBACXI,GAAe,eACfhG,GAAc,eACd6G,GAAc,qBACdQ,IACA,EAAQ,GACN3lB,GAAS,EAAQ,KACjB,kBACFR,GAAiB,aACjBG,IACA,EAAQ,GAONgzD,GAAa,SAASz/C,EAAGkS,EAAI7mB,GAC3B2U,IAAMkS,GAAOvc,EAAeuc,EAAI7mB,IAChC0e,GAAW/J,EAAGvT,GAAa,kBAAkB,KA+C/CizD,GAAY,SAAS1/C,GACvB,OAAI/H,EAAa+H,EAAG,GACT,CACH6J,IAAK,EACL81C,OAAQvjD,EAAa4D,EAAG,IAGrB,CACH6J,IAAK,EACL81C,OAAQ3/C,IAUd4/C,GAAW,SAAS5/C,EAAGyZ,EAAGpsB,GAC5BsM,EAAeqG,EAAG3S,GAClBwN,EAAamF,GAAI,EAAGyZ,IAGlBomC,GAAW,SAAS7/C,EAAGyZ,EAAGpsB,GAC5B8L,EAAgB6G,EAAG3S,GACnBwN,EAAamF,GAAI,EAAGyZ,IAGlBqmC,GAAW,SAAS9/C,EAAGyZ,EAAGpsB,GAC5ByL,EAAgBkH,EAAG3S,GACnBwN,EAAamF,GAAI,EAAGyZ,IAWlBsmC,GAAmB,SAAS//C,EAAGkS,EAAI1H,GACjCxK,GAAKkS,EACLvX,EAAWqF,GAAI,EAAG,GAElBrD,GAAUuV,EAAIlS,EAAG,GACrBnF,EAAamF,GAAI,EAAGwK,IA6GlBw1C,GAAa,SAAShgD,EAAGvV,GAC3B,IAAIY,EAAIigB,GAAkBtL,EAAG,GAC7BsQ,GAAetQ,EAAG,EAAGrP,GACrB,IAAIxG,EAAOM,EAAMyM,EAAe8I,EAAG,EAAG3U,GAAKgQ,EAAe2E,EAAG,EAAG3U,GAChE,OAAa,OAATlB,EAAsB,GAC1BwP,EAAeqG,EAAG7V,GAClBiN,EAAW4I,IAAKvV,EAAI,IACbA,EAAM,IAiBXw1D,GAAa,SAASjgD,EAAGkgD,EAAMC,GACjC,IAAI3yC,EAAMlC,GAAkBtL,EAAGmgD,GAG/B,OAFA7vC,GAAetQ,EAAGkgD,EAAMvvD,GACxBqf,GAAchQ,EAAqC,OAAjC9I,EAAe8I,EAAGkgD,EAAM1yC,GAAgB2yC,EAAQ,yBAC3D3yC,GAsBL4yC,GAAU3zD,GAAa,aAAa,GAEpC4zD,GAAY,CAAC,OAAQ,SAAU,OAAQ,QAAS,aAAa75B,IAAI/mB,GAAKhT,GAAagT,IAMnF6gD,GAAQ,SAAStgD,EAAGyJ,GACtBvP,EAAY8F,EAAGzO,EAAmB6uD,IAClC,IACIxqB,EADYv5B,GAAe2D,GAAI,GACbvV,IAAIuV,GACtB41B,IACAA,EAAM51B,GACNrG,EAAeqG,EAAGqgD,GAAU52C,EAAGhW,QAC3BgW,EAAG3V,aAAe,EAClBqF,EAAgB6G,EAAGyJ,EAAG3V,aACrB2F,EAAYuG,GACjBlT,GAAO4S,WAAW9I,EAAYoJ,EAAGvT,GAAa,MAAOgd,IACrDhU,EAASuK,EAAG,EAAG,KA4FjBugD,GAAQ,CACV,QApCe,SAASvgD,GACxB,IACIkS,EADSwtC,GAAU1/C,GACP2/C,OACZt8C,EAAO,IAAIrW,WAAW,GACtBg3B,EAAOttB,EAAgBwb,GACvBqE,EAAO/f,EAAY0b,GACvB,GAAa,OAATqE,EACA9c,EAAYuG,QACX,GAAIuW,IAAS+pC,GACd/mD,EAAgByG,EAAG,qBAClB,CACD9F,EAAY8F,EAAGzO,EAAmB6uD,IAClB/jD,GAAe2D,GAAI,GACbvV,IAAIynB,EAC1B0jB,CAAM51B,GAIV,OAFArG,EAAeqG,EAtDA,SAASgkB,EAAMw8B,GAC9B,IAAI52D,EAAI,EAIR,OAHIo6B,EAAOnyB,IAAc2uD,EAAM52D,KAAO,IAClCo6B,EAAOhyB,IAAawuD,EAAM52D,KAAO,KACjCo6B,EAAOjyB,IAAcyuD,EAAM52D,KAAO,KAC/B42D,EAAMr7C,SAAS,EAAGvb,GAiDP62D,CAAWz8B,EAAM3gB,IACnClK,EAAgB6G,EAAGvJ,EAAiByb,IAC7B,GAmBP,QAvQe,SAASlS,GACxB,IAAIyJ,EAAK,IAAIlW,EACTosD,EAASD,GAAU1/C,GACnB6J,EAAM81C,EAAO91C,IACbqI,EAAKytC,EAAOA,OACZe,EAAUt1C,GAAepL,EAAG6J,EAAM,EAAG,UAEzC,GADA41C,GAAWz/C,EAAGkS,EAAI,GACd3a,EAAeyI,EAAG6J,EAAM,GACxB62C,EAAUznD,EAAgB+G,EAAGvT,GAAa,OAAQi0D,GAClD7mD,EAAcmG,EAAG6J,EAAM,GACvBlN,GAAUqD,EAAGkS,EAAI,QAEjB,IAAKnb,EAAamb,EAAI5G,GAAkBtL,EAAG6J,EAAM,GAAIJ,GAEjD,OADAhQ,EAAYuG,GACL,EA+Bf,OA3BKpJ,EAAYsb,EAAIwuC,EAASj3C,IAC1BG,GAAc5J,EAAG6J,EAAM,EAAG,kBAC9BtR,EAAayH,GACT1T,GAAkBo0D,EAAS,KAA+B,IAC1Dd,GAAS5/C,EAAGvT,GAAa,UAAU,GAAOgd,EAAG5V,QAC7C+rD,GAAS5/C,EAAGvT,GAAa,aAAa,GAAOgd,EAAGpV,WAChDwrD,GAAS7/C,EAAGvT,GAAa,eAAe,GAAOgd,EAAG1V,aAClD8rD,GAAS7/C,EAAGvT,GAAa,mBAAmB,GAAOgd,EAAGzV,iBACtD4rD,GAAS5/C,EAAGvT,GAAa,QAAQ,GAAOgd,EAAG7V,OAE3CtH,GAAkBo0D,EAAS,MAAgC,GAC3Db,GAAS7/C,EAAGvT,GAAa,eAAe,GAAOgd,EAAG3V,aAClDxH,GAAkBo0D,EAAS,MAAgC,IAC3Db,GAAS7/C,EAAGvT,GAAa,QAAQ,GAAOgd,EAAGxV,MAC3C4rD,GAAS7/C,EAAGvT,GAAa,WAAW,GAAOgd,EAAGvV,SAC9C4rD,GAAS9/C,EAAGvT,GAAa,YAAY,GAAOgd,EAAGtV,WAE/C7H,GAAkBo0D,EAAS,MAAgC,IAC3Dd,GAAS5/C,EAAGvT,GAAa,QAAQ,GAAOgd,EAAGtf,MAC3Cy1D,GAAS5/C,EAAGvT,GAAa,YAAY,GAAOgd,EAAG9V,WAE/CrH,GAAkBo0D,EAAS,MAAgC,GAC3DZ,GAAS9/C,EAAGvT,GAAa,cAAc,GAAOgd,EAAGrV,YACjD9H,GAAkBo0D,EAAS,KAA+B,GAC1DX,GAAiB//C,EAAGkS,EAAIzlB,GAAa,eAAe,IACpDH,GAAkBo0D,EAAS,MAAgC,GAC3DX,GAAiB//C,EAAGkS,EAAIzlB,GAAa,QAAQ,IAC1C,GA2NP,SAxNgB,SAASuT,GACzB,IAAI2/C,EAASD,GAAU1/C,GACnBkS,EAAKytC,EAAOA,OACZ91C,EAAM81C,EAAO91C,IACbJ,EAAK,IAAIlW,EACTotD,EAAOr1C,GAAkBtL,EAAG6J,EAAM,GACtC,GAAItS,EAAeyI,EAAG6J,EAAM,GAGxB,OAFAhQ,EAAcmG,EAAG6J,EAAM,GACvBlQ,EAAeqG,EAAGnJ,EAAamJ,EAAG,KAAM2gD,IACjC,EACJ,CACH,IAAIp3C,EAAQ+B,GAAkBtL,EAAG6J,EAAM,GACvC,IAAK9S,EAAamb,EAAI3I,EAAOE,GACzB,OAAOG,GAAc5J,EAAG6J,EAAI,EAAG,sBACnC41C,GAAWz/C,EAAGkS,EAAI,GAClB,IAAI/nB,EAAO0M,EAAaqb,EAAIzI,EAAIk3C,GAChC,OAAIx2D,GACAwS,GAAUuV,EAAIlS,EAAG,GACjBrG,EAAeqG,EAAG7V,GAClBwQ,EAAWqF,GAAI,EAAG,GACX,IAGPvG,EAAYuG,GACL,KAiMf,aAxWoB,SAASA,GAK7B,OAJAmQ,GAAcnQ,EAAG,GACZlJ,EAAiBkJ,EAAG,IACrBvG,EAAYuG,GAET,GAoWP,YA9WmB,SAASA,GAE5B,OADAnG,EAAcmG,EAAGzO,GACV,GA6WP,WA5JkB,SAASyO,GAC3B,OAAOggD,GAAWhgD,EAAG,IA4JrB,aA3VoB,SAASA,GAK7B,OAJI1D,GAAS0D,EAAG,KAAOpP,EACnB6I,EAAYuG,GAEZ7I,EAAiB6I,EAAG,GACjB,GAuVP,QAzEe,SAASA,GACxB,IAAIgkB,EAAMa,EAAOnQ,EAebksC,EAdAjB,EAASD,GAAU1/C,GACnBkS,EAAKytC,EAAOA,OACZ91C,EAAM81C,EAAO91C,IACjB,GAAIjS,EAAgBoI,EAAG6J,EAAI,GACvBzO,EAAW4E,EAAG6J,EAAI,GAClB6K,EAAO,KAAMsP,EAAO,EAAGa,EAAQ,MAE9B,CACD,MAAM27B,EAAQv1C,GAAiBjL,EAAG6J,EAAM,GACxCyG,GAAetQ,EAAG6J,EAAI,EAAGlZ,GACzBk0B,EAAQzT,GAAgBpR,EAAG6J,EAAM,EAAG,GACpC6K,EAAO4rC,GAAOt8B,EAjCL,SAASw8B,EAAO37B,GAC7B,IAAIb,EAAO,EAKX,OAJI13B,GAAkBk0D,EAAO,KAA+B,IAAGx8B,GAAQnyB,GACnEvF,GAAkBk0D,EAAO,MAAgC,IAAGx8B,GAAQhyB,GACpE1F,GAAkBk0D,EAAO,MAAgC,IAAGx8B,GAAQjyB,GACpE8yB,EAAQ,IAAGb,GAAQlyB,GAChBkyB,EA2BkB68B,CAASL,EAAO37B,GAIrC3qB,EAAY8F,EAAGzO,EAAmB6uD,MAAa/vD,GAC/CuwD,EAAY,IAAIzlC,QAChB7hB,EAAsB0G,EAAG4gD,GACzBtmD,EAAY0F,EAAGzO,EAAmB6uD,KAElCQ,EAAYvkD,GAAe2D,GAAI,GAEnC,IAAI41B,EAAQ15B,EAAY8D,EAAG6J,EAAM,GAGjC,OAFA+2C,EAAUh7C,IAAIsM,EAAI0jB,GAClB76B,EAAYmX,EAAIwC,EAAMsP,EAAMa,GACrB,GA+CP,SAjMgB,SAAS7kB,GACzB,IAAI2/C,EAASD,GAAU1/C,GACnBkS,EAAKytC,EAAOA,OACZ91C,EAAM81C,EAAO91C,IACbJ,EAAK,IAAIlW,EACTgW,EAAQ+B,GAAkBtL,EAAG6J,EAAM,GACnC82C,EAAOr1C,GAAkBtL,EAAG6J,EAAM,GACtC,IAAK9S,EAAamb,EAAI3I,EAAOE,GACzB,OAAOG,GAAc5J,EAAG6J,EAAM,EAAG,sBACrCsG,GAAcnQ,EAAG6J,EAAM,GACvBzO,EAAW4E,EAAG6J,EAAM,GACpB41C,GAAWz/C,EAAGkS,EAAI,GAClBvV,GAAUqD,EAAGkS,EAAI,GACjB,IAAI/nB,EAAO8Q,EAAaiX,EAAIzI,EAAIk3C,GAIhC,OAHa,OAATx2D,GACA0O,EAAQqZ,EAAI,GAChBvY,EAAeqG,EAAG7V,GACX,GAiLP,aAtWoB,SAAS6V,GAC7B,MAAMlV,EAAIwR,GAAS0D,EAAG,GAItB,OAHAgQ,GAAchQ,EAAGlV,GAAKuF,GAAYvF,GAAK4F,EAAY,EAAG,yBACtD0K,EAAW4E,EAAG,GACd9E,EAAiB8E,EAAG,GACb,GAkWP,WA7JkB,SAASA,GAE3B,OADAmQ,GAAcnQ,EAAG,GACVggD,GAAWhgD,EAAG,IA4JrB,aAvVoB,SAASA,GAK7B,OAJAsQ,GAAetQ,EAAG,EAAGpP,GACrBuf,GAAcnQ,EAAG,GACjB5E,EAAW4E,EAAG,GACd1E,EAAiB0E,EAAG,GACb,GAmVP,UA3BiB,SAASA,GAC1B,IAAI2/C,EAASD,GAAU1/C,GACnBkS,EAAKytC,EAAOA,OACZ91C,EAAM81C,EAAO91C,IACbjK,EAAMzD,EAAa6D,EAAG6J,EAAM,GAChC,GAAY,OAARjK,GAAiBhI,EAAgBoI,EAAG6J,EAAM,GAEzC,CACD,IAAIN,EAAQ6H,GAAgBpR,EAAG6J,EAAM,EAAG7J,IAAMkS,EAAK,EAAI,GACvDD,GAAejS,EAAGkS,EAAItS,EAAK2J,QAH3B1P,EAAcmG,EAAG6J,EAAM,GAK3B,OAAO,GAiBP,UAhJiB,SAAS7J,GAC1B,IAAI3U,EAAI40D,GAAWjgD,EAAG,EAAG,GAEzB,OADA1G,EAAsB0G,EAAGxD,GAAcwD,EAAG,EAAG3U,IACtC,GA8IP,YA3ImB,SAAS2U,GAC5B,IAAIqH,EAAK44C,GAAWjgD,EAAG,EAAG,GACtBsH,EAAK24C,GAAWjgD,EAAG,EAAG,GAI1B,OAHAgQ,GAAchQ,GAAI1I,EAAgB0I,EAAG,GAAI,EAAG,yBAC5CgQ,GAAchQ,GAAI1I,EAAgB0I,EAAG,GAAI,EAAG,yBAC5CvD,GAAgBuD,EAAG,EAAGqH,EAAI,EAAGC,GACtB,IAwIX,IAAIw5C,GASyB,oBAAX7xC,SAId6xC,GAAW,WACP,IAAIC,EAAQC,OAAO,aAAc,IACjC,OAAkB,OAAVD,EAAkBA,EAAQ,KAGtCD,KACAP,GAAMU,MAAQ,SAASjhD,GACnB,OAAS,CACL,IAAI+gD,EAAQD,KAEZ,GAAc,SAAVC,EACA,OAAO,EAEX,GAAqB,IAAjBA,EAAM3zD,OACN,SAEJ,IAAIooC,EAAS/oC,GAAas0D,IACtBv0C,GAAgBxM,EAAGw1B,EAAQA,EAAOpoC,OAAQX,GAAa,oBAAoB,KACxEkM,EAAUqH,EAAG,EAAG,EAAG,KACtByS,GAAqB5W,EAAemE,GAAI,GAAI,MAEhD5E,EAAW4E,EAAG,MAU1BrW,EAAOD,QAAQqoC,cALO,SAAS/xB,GAE3B,OADAgR,GAAYhR,EAAGugD,IACR,I,6BC7fX,MAAM,WACFnjD,EAAU,aACVF,EAAY,mBACZM,EAAkB,iBAClBD,EAAgB,cAChBN,EAAa,aACbD,GACA,EAAQ,IACN,OACFvI,EAAM,kBACNlD,EAAiB,SACjBlB,EAAQ,WACRK,EAAU,UACVgF,EAAS,gBACTM,EAAe,aACfM,EAAY,WACZc,EAAU,eACVG,EAAc,UACdG,EAAS,aACTK,EAAY,aACZQ,EAAY,QACZM,EAAO,gBACPC,EAAe,iBACfC,EAAgB,kBAChBC,EAAiB,gBACjBC,EAAe,oBACfC,EAAmB,sBACnBI,EAAqB,gBACrBC,EAAe,gBACfC,EAAe,YACfC,EAAW,eACXE,EAAc,cACdE,EAAa,YACbI,EAAW,YACXC,EAAW,YACXG,EAAW,YACXC,EAAW,WACXE,EAAU,aACVK,EAAY,iBACZK,EAAgB,WAChBE,EAAU,cACVK,EAAa,aACbU,EAAY,eACZE,EAAc,iBACd9H,GACA,EAAQ,IACN,iBACFwU,EAAgB,kBAChBC,EAAiB,YACjBI,EAAW,cACX2G,EAAa,cACbhE,EAAa,iBACbd,EAAgB,WAChBlB,EAAU,iBACVsD,EAAgB,UAChBwD,EAAS,SACTE,GAAQ,cACRtB,GAAa,YACbuB,GAAW,eACX5F,GAAc,gBACde,GAAe,cACfoB,IACA,EAAQ,GACNzgB,GAAS,EAAQ,KACjB,kBACFR,GAAiB,YACjBE,GAAW,aACXC,GAAY,aACZC,IACA,EAAQ,GACNw0D,GAAW,EAAQ,GAEnBhnB,GAI2B,oBAAXjrB,OAEPA,OAC6B,oBAAtBkrB,mBAAqCC,gBAAgBD,kBAE5DC,MAGA,EAAIC,MAAM,QAInB8mB,GAAS10D,GAAa,cAYtB20D,GAAchkD,EACdikD,GAAcjkD,EAGdkkD,GAAU70D,GAAa,YAGvB80D,GAAY90D,GAAa,KAGzB+0D,GAAU/0D,GAAa,KAS7B,IAAIg1D,GAEAA,GAAY,SAASzhD,EAAG6O,EAAM6yC,GAC1B7yC,EAAOniB,GAAamiB,GACpB,IAAIC,EAAM,IAAIC,eAId,GAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAIK,OAEAL,EAAIM,OAAS,KAAON,EAAIM,QAAU,IAElC,OADAzV,EAAeqG,EAAGvT,GAAa,GAAGqiB,EAAIM,WAAWN,EAAIO,eAC9C,KAGX,IAIIqF,EAJAgB,EAAO5G,EAAIQ,SAEV,sBAAsB1K,KAAK8Q,KAC5BA,GAAQ,kBAAoB7G,GAEhC,IACI6F,EAAOkmB,SAAS,UAAWllB,GAC7B,MAAOjW,GAEL,OADA9F,EAAeqG,EAAGvT,GAAa,GAAGgT,EAAEtV,SAASsV,EAAEgL,YACxC,KAEX,IAAIxD,EAAMyN,EAAKwsC,IACf,MAAmB,mBAARj6C,GAAsC,iBAARA,GAA4B,OAARA,EAClDA,OACQ,IAARA,EACAizB,IAEPvgC,EAAeqG,EAAGvT,GAAa,4CAA4Cwa,OACpE,OA4CnB,IAAI06C,GAcAA,GAAW,SAAS9yC,GAChBA,EAAOniB,GAAamiB,GACpB,IAAIC,EAAM,IAAIC,eAKd,OAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAIK,OAEGL,EAAIM,QAAU,KAAON,EAAIM,QAAU,KAMlD,MAcMwyC,GAAc,SAAS5hD,EAAG6O,EAAMgzC,GAClC,IAAI/iC,EAAMgjC,GAAW9hD,EAAG6O,GACxB,GAAY,OAARiQ,EAAc,CAEd,GADAA,EAAM2iC,GAAUzhD,EAAG6O,EAAMgzC,EAAI,KAAO,IAAI7zD,WAAW,IACvC,OAAR8wB,EAAc,OAlBV,EAmBRijC,GAAW/hD,EAAG6O,EAAMiQ,GAExB,GAAI+iC,EAAI,KAAO,IAAI7zD,WAAW,GAE1B,OADA8K,EAAgBkH,EAAG,GACZ,EAEN,CACD,IAAI0C,EA1EK,SAAS1C,EAAG0N,EAAKm0C,GAC9B,IAAIn/C,EAAIgL,EAAIlhB,GAAYq1D,IAExB,OAAIn/C,GAAkB,mBAANA,EACLA,GAEPzJ,EAAgB+G,EAAGvT,GAAa,wBAAyBo1D,GAClD,MAmECG,CAAShiD,EAAG8e,EAAK+iC,GACzB,OAAU,OAANn/C,EA1BI,GA4BR1J,EAAkBgH,EAAG0C,GACd,KAkBTsuC,GAKS9W,GAOT+nB,GAAU,SAASjiD,EAAGkiD,EAAWC,EAASC,GAC5C,IAAIC,EAAO,GAAGF,IAAUr1D,GAAOikC,gBAC/Bp3B,EAAeqG,EAAGvT,GAAa41D,IAC/B,IAAIxzC,EAAOmiC,GAAIqR,QACFC,IAATzzC,IACAA,EAAOmiC,GAAImR,SACFG,IAATzzC,GApGM,SAAS7O,GACnB1J,EAAa0J,EAAGzO,EAAmB9E,GAAa,cAChD,IAAIiC,EAAI+M,EAAcuE,GAAI,GAE1B,OADAnH,EAAQmH,EAAG,GACJtR,EAgGmB6zD,CAAMviD,GAC5BrG,EAAeqG,EAAGoiD,IAGlBvzC,EAAOgC,EACH7Q,EACAvT,GAAaoiB,GACbpiB,GAAauQ,EAAeA,GAAc,GAC1CvQ,GAAauQ,EAAexQ,GAAYg1D,IAAWxkD,GAAc,IAErE6T,EAAU7Q,EAAG6O,EAAM2yC,GAASY,GAC5B5nD,EAAWwF,GAAI,IAEnBnF,EAAamF,GAAI,EAAGkiD,GACpBrpD,EAAQmH,EAAG,IAMT8hD,GAAa,SAAS9hD,EAAG6O,GAC3B3U,EAAY8F,EAAGzO,EAAmB4vD,IAClC7qD,EAAa0J,GAAI,EAAG6O,GACpB,IAAI2zC,EAAOnmD,EAAe2D,GAAI,GAE9B,OADAnH,EAAQmH,EAAG,GACJwiD,GAOLT,GAAa,SAAS/hD,EAAG6O,EAAM2zC,GACjCtoD,EAAY8F,EAAGzO,EAAmB4vD,IAClC7nD,EAAsB0G,EAAGwiD,GACzB3oD,EAAcmG,GAAI,GAClBnF,EAAamF,GAAI,EAAG6O,GACpBxU,EAAY2F,GAAI,EAAG+Q,GAAS/Q,GAAI,GAAK,GACrCnH,EAAQmH,EAAG,IAGTyiD,GAAmB,SAASziD,EAAG6O,GACjC,KAAOA,EAAK,KAAO7R,EAAahP,WAAW,IAAI6gB,EAAOA,EAAK1J,SAAS,GACpE,GAAoB,IAAhB0J,EAAKzhB,OAAc,OAAO,KAC9B,IAAIvD,EAAIyC,GAAkBuiB,EAAM7R,EAAahP,WAAW,IAGxD,OAFInE,EAAI,IAAGA,EAAIglB,EAAKzhB,QACpBoM,EAAgBwG,EAAG6O,EAAMhlB,GAClBglB,EAAK1J,SAAStb,IAGnB64D,GAAa,SAAS1iD,EAAG7V,EAAM0kB,EAAM2pB,EAAKmqB,GAC5C,IAAI/iD,EAAM,IAAIwJ,EAId,IAHA2C,EAAc/L,EAAGJ,GACF,IAAX44B,EAAI,KACJruC,EAAO0mB,EAAU7Q,EAAG7V,EAAMquC,EAAKmqB,IACW,QAAtC9zC,EAAO4zC,GAAiBziD,EAAG6O,KAAiB,CAChD,IAAIb,EAAW6C,EAAU7Q,EAAG7D,EAAa6D,GAAI,GAAIvT,GAAawQ,GAAe,GAAO9S,GAEpF,GADAqQ,EAAWwF,GAAI,GACX2hD,GAAS3zC,GACT,OAAOA,EACX/U,EAAgB+G,EAAGvT,GAAa,oBAAqBuhB,GACrDxT,EAAWwF,GAAI,GACf+P,EAAcnQ,GAGlB,OADAuM,GAAgBvM,GACT,MAmBLgjD,GAAW,SAAS5iD,EAAG7V,EAAM04D,EAAOF,GACtCrsD,EAAa0J,EAAGzL,EAAiB,GAAIsuD,GACrC,IAAIh0C,EAAO1S,EAAa6D,GAAI,GAG5B,OAFa,OAAT6O,GACA9E,EAAW/J,EAAGvT,GAAa,iCAAkCo2D,GAC1DH,GAAW1iD,EAAG7V,EAAM0kB,EAAMpiB,GAAa,KAAMk2D,IAGlDG,GAAY,SAAS9iD,EAAGuK,EAAMyD,GAChC,OAAIzD,GACA5Q,EAAeqG,EAAGgO,GACX,GAEAjE,EAAW/J,EAAGvT,GAAa,mDAC9B0P,EAAa6D,EAAG,GAAIgO,EAAU7R,EAAa6D,GAAI,KAGrD+iD,GAAe,SAAS/iD,GAC1B,IAAI7V,EAAO8gB,EAAiBjL,EAAG,GAC3BgO,EAAW40C,GAAS5iD,EAAG7V,EAAMsC,GAAa,QAAQ,GAAOA,GAAa40D,IAAa,IACvF,OAAiB,OAAbrzC,EAA0B,EACvB80C,GAAU9iD,EAAGyP,GAAczP,EAAGgO,KAAcvZ,EAAQuZ,IAWzDg1C,GAAW,SAAShjD,EAAGgO,EAAU2D,GACnC,IAAIsxC,EACJtxC,EAAUd,EAAU7Q,EAAG2R,EAASllB,GAAa,KAAM80D,IACnD,IAAI2B,EAAO52D,GAAkBqlB,EA1Td,IA0TkC3jB,WAAW,IAC5D,GAAIk1D,GAAQ,EAAG,CACXD,EAAWzpD,EAAgBwG,EAAG2R,EAASuxC,GACvCD,EAAWhqD,EAAgB+G,EAAGvT,GAAa,QAAS60D,GAAS2B,GAC7D,IAAI14C,EAAOq3C,GAAY5hD,EAAGgO,EAAUi1C,GACpC,GA7LQ,IA6LJ14C,EAAkB,OAAOA,EAC7BoH,EAAUuxC,EAAO,EAGrB,OADAD,EAAWhqD,EAAgB+G,EAAGvT,GAAa,QAAS60D,GAAS3vC,GACtDiwC,GAAY5hD,EAAGgO,EAAUi1C,IAG9BE,GAAa,SAASnjD,GACxB,IAAI7V,EAAO8gB,EAAiBjL,EAAG,GAC3BgO,EAAW40C,GAAS5iD,EAAG7V,EAAMsC,GAAa,UAAU,GAAOA,GAAa20D,IAAa,IACzF,OAAiB,OAAbpzC,EAA0B,EACvB80C,GAAU9iD,EAAoC,IAAhCgjD,GAAShjD,EAAGgO,EAAU7jB,GAAc6jB,IAGvDo1C,GAAiB,SAASpjD,GAC5B,IAEIuK,EAFApgB,EAAO8gB,EAAiBjL,EAAG,GAC3BtU,EAAIY,GAAkBnC,EAAM,IAAI6D,WAAW,IAE/C,GAAItC,EAAI,EAAG,OAAO,EAClB8N,EAAgBwG,EAAG7V,EAAMuB,GACzB,IAAIsiB,EAAW40C,GAAS5iD,EAAG7D,EAAa6D,GAAI,GAAIvT,GAAa,UAAU,GAAOA,GAAa20D,IAAa,IACxG,OAAiB,OAAbpzC,EAA0B,EACe,KAAxCzD,EAAOy4C,GAAShjD,EAAGgO,EAAU7jB,IAnNtB,GAoNJogB,EACOu4C,GAAU9iD,EAAG,EAAGgO,IAEvBrU,EAAeqG,EAAGvT,GAAa,mCAAoCtC,EAAM6jB,GAClE,IAGfrU,EAAeqG,EAAGgO,GACX,IAGLq1C,GAAmB,SAASrjD,GAC9B,IAAI7V,EAAO8gB,EAAiBjL,EAAG,GAI/B,OAHA1J,EAAa0J,EAAGzO,EAAmByX,GAC/B1S,EAAa0J,GAAI,EAAG7V,KAAUkG,GAC9B4I,EAAgB+G,EAAGvT,GAAa,sCAAuCtC,GACpE,GAaLm5D,GAAkB,SAAStjD,EAAGoP,EAAQoK,GAExC,KACQpK,IAAW3a,GACPwF,EAAY+F,EAAG,EAAGwZ,EAAI5vB,KAAOyG,IAC7BwI,EAAQmH,EAAG,GACXmM,GAAgBqN,EAAI5Z,KACpBmK,EAAW/J,EAAGvT,GAAa,4BAA6B+sB,EAAIrvB,KAAMgS,EAAa6D,GAAI,KAEvFrG,EAAeqG,EAAGwZ,EAAIrvB,MACtBuL,EAAUsK,EAAG,EAAG,EAAGwZ,EAAK8pC,KAExBl0C,EAAS3a,GAET8C,EAAeyI,GAAI,GAZlBwZ,EAAI5vB,IAcAmO,EAAaiI,GAAI,IACtBnH,EAAQmH,EAAG,GACX+P,EAAcyJ,EAAI5Z,MAGlB/G,EAAQmH,EAAG,GAEnB,OAAOwZ,EAAIC,EAAEzZ,EAAGvL,EAAQ+kB,EAAIA,MAgB1B+pC,GAAkB,SAASvjD,EAAGoP,EAAQoK,GAKxC,OAHA7f,EAAeqG,EADJwZ,GAEXpiB,EAAW4I,GAAI,GACftK,EAAUsK,EAAG,EAAG,EAAGwZ,EAAKgqC,IACjBA,GAAiBxjD,EAAGvL,EAAQ+kB,IAGjCgqC,GAAmB,SAASxjD,EAAGoP,EAAQoK,GACzC,IAAIrvB,EAAOqvB,EAQX,OAPK9hB,EAAUsI,GAAI,IACfnF,EAAamF,EAAG,EAAG7V,GACnBmM,EAAa0J,EAAG,EAAG7V,IAASkG,IAC5ByI,EAAgBkH,EAAG,GACnBnG,EAAcmG,GAAI,GAClBnF,EAAamF,EAAG,EAAG7V,IAEhB,GAGLs5D,GAAW,CACb,QA5Qe,SAASzjD,GACxB,IAAI6O,EAAO5D,EAAiBjL,EAAG,GAC3B0sB,EAAOzhB,EAAiBjL,EAAG,GAC3BuK,EAAOq3C,GAAY5hD,EAAG6O,EAAM6d,GAChC,OAAa,IAATniB,EACO,GAEP9Q,EAAYuG,GACZ5I,EAAW4I,GAAI,GACfzG,EAAgByG,EA3CR,IA2CYuK,EA5JX,OA4JyC,QAC3C,IAmQX,WAzKkB,SAASvK,GAQ3B,OAAU,OAPF0iD,GACJ1iD,EACAiL,EAAiBjL,EAAG,GACpBiL,EAAiBjL,EAAG,GACpBoL,GAAepL,EAAG,EAAG,KACrBoL,GAAepL,EAAG,EAAG5C,IAEF,GAEnB3D,EAAYuG,GACZ5I,EAAW4I,GAAI,GACR,KAgKT0jD,GAAW,CACb,QAvCe,SAAS1jD,GACxB,IAAI7V,EAAO8gB,EAAiBjL,EAAG,GAI/B,OAHA5E,EAAW4E,EAAG,GACd1J,EAAa0J,EAAGzO,EAAmBwX,GACnCzS,EAAa0J,EAAG,EAAG7V,GACfsR,EAAcuE,GAAI,GACX,GAEXnH,EAAQmH,EAAG,GA5CI,SAASA,EAAG7V,EAAMqvB,EAAKC,GACtC,IAAI7Z,EAAM,IAAIwJ,EAMd,OALA2C,EAAc/L,EAAGJ,GAEbtJ,EAAa0J,EAAGzL,EAAiB,GAAI9H,GAAa,aAAa,MAAWiE,GAC1EqZ,EAAW/J,EAAGvT,GAAa,wCAExB62D,GAAgBtjD,EAAGvL,EADf,CAACtK,KAAMA,EAAMP,EAAG,EAAGgW,IAAKA,EAAK4Z,IAAKA,EAAKC,EAAGA,IAwC9CkqC,CAAW3jD,EAAG7V,EADXA,EACsBo5D,OAgFpC55D,EAAOD,QAAQuoC,gBAxBS,SAASjyB,GAqB7B,OA5BsB,SAASA,GAC/BzH,EAAayH,GACbhK,EAAgBgK,EAAG,EAAG,GACtB9E,EAAiB8E,GAAI,GACrB1F,EAAY0F,EAAGzO,EAAmB4vD,IAIlCyC,CAAkB5jD,GAClBgR,GAAYhR,EAAGyjD,IA1BU,SAASzjD,GAClC,IAAI6jD,EAAY,CAACR,GAAkBN,GAAcI,GAAYC,GAAgB,MAE7EptD,EAAgBgK,GAEhB,IAAK,IAAIpW,EAAI,EAAGi6D,EAAUj6D,GAAIA,IAC1BiQ,EAAcmG,GAAI,GAClBjH,EAAiBiH,EAAG6jD,EAAUj6D,GAAI,GAClCyQ,EAAY2F,GAAI,EAAGpW,EAAE,GAEzBiR,EAAamF,GAAI,EAAGvT,GAAa,aAAa,IAiB9Cq3D,CAAqB9jD,GAErBiiD,GAAQjiD,EAAGvT,GAAa,QAAQ,GAvdf,WAudoC8Q,GACrD0kD,GAAQjiD,EAAGvT,GAAa,UAAU,GAvdf,aAudsC+Q,GAEzDjE,EAAgByG,EAAG5C,EAAa,KAAOJ,EAAe,KAAOC,EAAgB,KACzDC,EADDE,SAEnBvC,EAAamF,GAAI,EAAGvT,GAAa,UAAU,IAE3C4gB,EAAiBrN,EAAGzO,EAAmBwX,GACvClO,EAAamF,GAAI,EAAGvT,GAAa,UAAU,IAE3C4gB,EAAiBrN,EAAGzO,EAAmByX,GACvCnO,EAAamF,GAAI,EAAGvT,GAAa,WAAW,IAC5CyM,EAAoB8G,GACpBnG,EAAcmG,GAAI,GAClBuN,GAAcvN,EAAG0jD,GAAU,GAC3B7qD,EAAQmH,EAAG,GACJ,I,gBClkBX,MAAM,gBACF7G,EAAe,gBACfI,EAAe,aACfsB,GACA,EAAQ,IACN,YACFmW,GACA,EAAQ,IACN,gBACFnlB,EAAe,kBACfC,EAAiB,gBACjBC,EAAe,gBACfC,EAAe,sBACfC,EAAqB,sBACrBC,EAAqB,oBACrBC,EAAmB,wBACnBC,EAAuB,aACvBK,GACA,EAAQ,GAuBZ9C,EAAOD,QAAQyoC,gBArBS,SAASnyB,GAkB7B,OAjBAgR,EAAYhR,EAAG,IACfzG,EAAgByG,EAAGnU,GACnBgP,EAAamF,GAAI,EAAGvT,EAAa,YACjC8M,EAAgByG,EAAGlU,GACnB+O,EAAamF,GAAI,EAAGvT,EAAa,cACjC8M,EAAgByG,EAAGjU,GACnB8O,EAAamF,GAAI,EAAGvT,EAAa,YACjC8M,EAAgByG,EAAGhU,GACnB6O,EAAamF,GAAI,EAAGvT,EAAa,YACjC8M,EAAgByG,EAAG/T,GACnB4O,EAAamF,GAAI,EAAGvT,EAAa,kBACjC8M,EAAgByG,EAAG9T,GACnB2O,EAAamF,GAAI,EAAGvT,EAAa,kBACjC0M,EAAgB6G,EAAG7T,GACnB0O,EAAamF,GAAI,EAAGvT,EAAa,gBACjC8M,EAAgByG,EAAG5T,GACnByO,EAAamF,GAAI,EAAGvT,EAAa,oBAC1B,I,6BCtCX,2qCAyBA,MAAM,WACLkI,EAAU,cACVC,EAAa,OACbH,EAAM,kBACN9E,EAAiB,kBACjBC,EAAiB,UACjB2D,EAAS,YACTqD,EAAW,aACXG,EAAY,WACZE,EAAU,WACVG,EAAU,UACVuB,EAAS,QACTE,EAAO,kBACPG,EAAiB,eACjBW,EAAc,WACda,EAAU,cACVM,EAAa,eACbe,GACG,OACE,gBACL2Q,EAAe,cACf2E,EAAa,cACbO,GACG,WACE,QACL4pB,EAAO,WACPiD,EAAU,KACVtD,EAAI,KACJW,GACG,EAyBS57B,EAAImR,IAWV,SAAS4yC,EAAKlwD,EAAQshC,GAC5B,GAAqB,iBAAVthC,EACVA,EAAS,uBAAaA,QAClB,KAAMA,aAAkB7G,YAC5B,MAAM,IAAIoB,UAAU,kDAErB+mC,EAAYA,EAAU,uBAAaA,GAAW,KAC9C,IACIluB,EADA+8C,EAAKx3C,EAAgBxM,EAAGnM,EAAQ,KAAMshC,GAQ1C,GALCluB,EADG+8C,IAAOpvD,EACJ,IAAIqvD,YAAYpoD,EAAemE,GAAI,IAEnC47B,EAAK57B,GAAI,GAEhBnH,EAAQmH,EAAG,GACPgkD,IAAOvvD,EACV,MAAMwS,EAEP,OAAOA,EAGR,GA7BA,SAAOorB,cAAcryB,GACrB0R,EAAc1R,EAAG,uBAAa,MAAOu+B,EAAY,GACjD1lC,EAAQmH,EAAG,GAEXrG,EAAeqG,EAAG,uBAAa,sBAC/BlF,EAAckF,EAAG,uBAAa,eAwBN,oBAAbkkD,UAA4BA,oBAAoBC,aAAc,CAGxE,MAAMC,EAA6B,SAASC,GAC3C,OAAOA,GACN,IAAK,YAAa,MAAO,OACzB,IAAK,kBAAmB,MAAO,UAC/B,QAAS,MAAO,gBAIZC,EAAa,SAAStkD,GAC3B,IAAIyJ,EAAK,IAAIlW,EAWb,OAVIwD,EAAaiJ,EAAG,EAAGyJ,IACtB7S,EAAYoJ,EAAG,uBAAa,MAAOyJ,GACpCwxB,EAAKj7B,EAAG,IAAIukD,WAAW,QAAS,CAC/BC,SAAS,EACTC,YAAY,EACZh6C,QAAS5O,EAAemE,EAAG,GAC3B8N,MAAO8tB,EAAK57B,EAAG,GACfgO,SAAUvE,EAAGpV,UAAY,sBAAYoV,EAAGpV,gBAAa,EACrDqwD,OAAQj7C,EAAG3V,YAAc,EAAI2V,EAAG3V,iBAAc,KAExC,GAGF6wD,EAAiB,SAAS55C,EAAK2K,EAAMyf,GAC1C,IACI11B,EADAukD,EAAKx3C,EAAgBxM,EAAG0V,EAAM,KAAMyf,GAExC,GAAI6uB,IAAOpvD,EAAe,CACzB,IAAIgL,EAAM/D,EAAemE,GAAI,GACzBgO,EAAWjD,EAAIuY,IAAIvY,EAAIuY,IAAI4gC,SAASU,SACpCF,OAAS,EACTG,EAAc,IAAIZ,YAAYrkD,EAAKoO,EAAU02C,GACjDjlD,EAAI,IAAI8kD,WAAW,QAAS,CAC3B95C,QAAS7K,EACTkO,MAAO+2C,EACP72C,SAAUA,EACV02C,OAAQA,SAEH,GAAIV,IAAOvvD,EAAQ,CAEzB,IAAIygB,EAAOje,EAAW+I,GACtBhH,EAAkBgH,EAAGskD,GACrBltD,EAAW4I,EAAGkV,GAGd5qB,OAAOC,eAAe25D,SAAU,gBAAiB,CAChDr5D,MAAOkgB,EACP+5C,cAAc,IAEfd,EAAKrrD,EAAUqH,EAAG,EAAG,EAAGkV,UAEjBgvC,SAASa,cAEhBvqD,EAAWwF,EAAGkV,GAEV8uC,IAAOrvD,IACV8K,EAAI67B,EAAQt7B,GAAI,IAGdgkD,IAAOvvD,SACA,IAANgL,IACHA,EAAI,IAAI8kD,WAAW,QAAS,CAC3B95C,QAAS5O,EAAemE,GAAI,GAC5B8N,MAAO8tB,EAAK57B,GAAI,MAGlBnH,EAAQmH,EAAG,GACPiP,OAAO+1C,cAAcvlD,IACxBiT,QAAQ5E,MAAM,qBAAsBrO,EAAEqO,SAKnCm3C,EAAuB,SAASn2C,EAAK/D,EAAKoqB,GAC/C,GAAIrmB,EAAIM,QAAU,KAAON,EAAIM,OAAS,IAAK,CAC1C,IAAIsG,EAAO5G,EAAIQ,SAEdoG,EADmB,iBAATA,EACH,uBAAa5G,EAAIQ,UAEjB,IAAItiB,WAAW0oB,GAGvBivC,EAAe55C,EAAK2K,EAAMyf,QAE1BpqB,EAAIi6C,cAAc,IAAIE,MAAM,WAIxBC,EAAqB,SAASp6C,GACnC,GAAIA,EAAIuY,IAAK,CACZ,IAAI6R,EAAY,uBAAa,IAAIpqB,EAAIuY,KAErC,GAA4B,aAAxB4gC,SAASkB,YAA6Br6C,EAAIs6C,MAC7C,GAAqB,mBAAVC,MACVA,MAAMv6C,EAAIuY,IAAK,CACd2tB,OAAQ,MACRsU,YAAanB,EAA2Br5C,EAAIs5C,aAC5CmB,SAAU,SACVC,UAAW16C,EAAI06C,YACbC,MAAK,SAASC,GAChB,GAAIA,EAAK3B,GACR,OAAO2B,EAAKC,cAEZ,MAAM,IAAIp4D,MAAM,sBAEfk4D,MAAK,SAASlwB,GAChB,IAAI9f,EAAO,IAAI1oB,WAAWwoC,GAC1BmvB,EAAe55C,EAAK2K,EAAMyf,MACxB0wB,OAAM,SAASC,GACjB/6C,EAAIi6C,cAAc,IAAIE,MAAM,iBAEvB,CACN,IAAIp2C,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOjE,EAAIuY,KAAK,GACzBxU,EAAII,aAAe,cACnBJ,EAAIi3C,mBAAqB,WACD,IAAnBj3C,EAAIs2C,YACPH,EAAqBn2C,EAAK/D,EAAKoqB,IAEjCrmB,EAAIK,WAEC,CAEN,IAAIL,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOjE,EAAIuY,KAAK,GACzBxU,EAAIK,OACJ81C,EAAqBn2C,EAAK/D,EAAKoqB,QAE1B,CACN,IAAIzf,EAAO,uBAAa3K,EAAIi7C,WACxB7wB,EAAYpqB,EAAI3I,GAAK,uBAAa,IAAI2I,EAAI3I,IAAMsT,EACpDivC,EAAe55C,EAAK2K,EAAMyf,KAItB8wB,EAAoB,2BACpBC,EAAkB,iBAClBC,EAAU,SAASp7C,GACxB,GAAoB,WAAhBA,EAAIq7C,QACP,OAGD,IAAIC,EAAmBJ,EAAkBjiD,KAAK+G,EAAIhK,MAClD,IAAKslD,EACJ,OACD,IAAIC,EAAWD,EAAiB,GAChC,GAAiB,oBAAbC,GAA+C,aAAbA,EAAtC,CAGA,GAAIv7C,EAAIw7C,aAAa,eAAgB,CACpC,IAAI7pD,EAAcwpD,EAAgBliD,KAAK+G,EAAIy7C,aAAa,gBACxD,IAAK9pD,GAAeA,EAAY,KAAO/M,GAAqB+M,EAAY,KAAO9M,EAC9E,OAGFu1D,EAAmBp6C,KAGY,oBAArB07C,iBAEV,IAAKA,kBAAiB,SAASC,EAASC,GACvC,IAAK,IAAI/8D,EAAE,EAAGA,EAAE88D,EAAQt5D,OAAQxD,IAAK,CACpC,IAAIg9D,EAASF,EAAQ98D,GACrB,IAAK,IAAIwjB,EAAE,EAAGA,EAAEw5C,EAAOC,WAAWz5D,OAAQggB,IACzC+4C,EAAQS,EAAOC,WAAWz5C,QAGzB05C,QAAQ5C,SAAU,CACrB6C,WAAW,EACXC,SAAS,IAEAt0C,QAAQiiB,MAClBjiB,QAAQiiB,KAAK,0FAKd,MAAMsyB,EAAW,4DAGjB14D,MAAM/C,UAAU4tC,QAAQrvC,KAAKm6D,SAASgD,iBAAiBD,GAAWd,K,6BCnSnE,MAAM,YACFj0D,EAAW,UACXC,EAAS,WACTC,EAAU,WACVC,EAAU,UACVC,EAAS,WACTC,EAAU,UACVC,EAAS,WACTE,EAAU,UACVG,EAAS,UACTG,EAAS,UACTC,EAAS,UACTE,EACAhD,gBAAgB,aACZG,EAAY,mBACZC,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,WACXR,GACH,aACDjE,GACA,EAAQ,IACN,WAAEiT,GAAe,EAAQ,GACzB4d,EAAW,EAAQ,IACnB1K,EAAW,EAAQ,GACnBC,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IACnBrS,EAAW,EAAQ,GACnBC,EAAW,EAAQ,IAEnBkW,EAAW/D,EAAS+D,SACpB9V,EAAW8R,EAAQ9R,OAWnB29B,EAAS,CACXC,QAAc,EACdqB,QAAc,EACdP,QAAc,EACdD,QAAc,EACdK,QAAc,EACdZ,QAAc,EACdI,SAAc,EACdR,SAAc,EACdC,QAAc,EACdC,SAAc,EACde,QAAc,GACdC,QAAc,GACdf,WAAc,GACdE,OAAc,GACdK,OAAc,GACdD,OAAc,GACdI,OAAc,GACdN,OAAc,GACdD,OAAc,GACdP,QAAc,GACdgB,OAAc,GACdD,aAAc,IAGZM,EAAQ,CACVG,UAAc,EACdF,SAAc,EACdG,QAAc,EACdF,QAAc,EACdG,YAAc,GAGZ8mB,EAAW,SAAS1nD,GACtB,OAAOA,EAAE3U,IAAM2U,EAAEiD,GAOf0kD,EAAY,SAAS3nD,EAAG4nD,GAC1B,IAAIC,EAAKx0C,EAAQgwB,QACjB,GAAIqkB,EAAS1nD,GACT,OAAO,EACX,OAAQA,EAAEga,GACN,KAAK6tC,EAAGzjB,MACJ,OAAIwjB,GACO,IAAIvmD,EAAO5P,EAAauO,EAAEhR,EAAE41C,MAG3C,KAAKijB,EAAG1jB,MACJ,OAAIyjB,GACO,IAAIvmD,EAAO7P,EAAawO,EAAEhR,EAAE61C,MAG3C,QAAS,OAAO,IAUlBzC,EAAW,SAASpI,EAAIxsC,EAAM5B,GAChC,IAAI8oB,EACAtqB,EAAIoD,EAAO5B,EAAI,EACnB,GAAIouC,EAAGnb,GAAKmb,EAAGmL,aACXzwB,EAAWslB,EAAG/2B,EAAEgT,KAAK+jB,EAAGnb,GAAG,GACvBnK,EAASwC,SAAWC,EAASsI,YAAY,CACzC,IAAIqoC,EAAQpzC,EAAS8K,EACjBuoC,EAAKD,EAAQpzC,EAAS1I,EAC1B,GAAK87C,GAASt6D,GAAQA,GAAQu6D,EAAK,GAC1Bv6D,GAAQs6D,GAASA,GAAS19D,EAAI,EAKnC,OAJI09D,EAAQt6D,IAAMA,EAAOs6D,GACrBC,EAAK39D,IAAGA,EAAI29D,GAChB30C,EAAS8c,SAASxb,EAAUlnB,QAC5B4lB,EAASgd,SAAS1b,EAAUtqB,EAAIoD,GAK5CwzC,EAAahH,EAAI7iB,EAASsI,WAAYjyB,EAAM5B,EAAI,EAAG,IAGjDk1C,EAAiB,SAAS9G,EAAIh6B,GAChC,OAAOg6B,EAAG/2B,EAAEgT,KAAKjW,EAAEhR,EAAE81C,OAOnBkjB,EAAU,SAAShuB,EAAInb,GACzB,IAAIopC,EAASjuB,EAAG/2B,EAAEgT,KAAK4I,GAAIiB,IAC3B,OAnGY,IAmGRmoC,GAnGQ,EAsGDppC,EAAK,EAAIopC,GAOlBC,EAAU,SAASluB,EAAInb,EAAIgB,GAC7B,IAAIsoC,EAAMnuB,EAAG/2B,EAAEgT,KAAK4I,GAChBopC,EAASpoC,GAAQhB,EAAK,GAC1B5e,GAhHY,IAgHD4f,GACPzwB,KAAKoP,IAAIypD,GAAU70C,EAAS+b,YAC5BtR,EAAK2c,iBAAiBR,EAAG7P,GAAIn9B,EAAa,8BAA8B,IAC5EomB,EAASkd,WAAW63B,EAAKF,IAMvB7mB,EAAc,SAASpH,EAAIouB,EAAIC,GACjC,IA1HY,IA0HRA,EAAgB,OAAOD,EACtB,IA3HO,IA2HHA,EACLA,EAAKC,MACJ,CACD,IAAIC,EAAOF,EACP1xC,EAAOsxC,EAAQhuB,EAAIsuB,GACvB,MAhIQ,IAgID5xC,GACH4xC,EAAO5xC,EACPA,EAAOsxC,EAAQhuB,EAAIsuB,GAEvBJ,EAAQluB,EAAIsuB,EAAMD,GAGtB,OAAOD,GASLlmB,EAAY,SAAUlI,GACxB,IAAIoL,EAAMpL,EAAGoL,IACbpL,EAAGoL,KAlJS,EAmJZ,IAAIz3B,EAAIuzB,GAAclH,EAAI7iB,EAASyI,OAAQ,GAnJ/B,GAqJZ,OADAjS,EAAIyzB,EAAYpH,EAAIrsB,EAAGy3B,GAChBz3B,GAkBL46C,EAAW,SAASvuB,EAAIxzB,EAAIgZ,EAAGxT,EAAGoU,GAEpC,OADA4gB,EAAahH,EAAIxzB,EAAIgZ,EAAGxT,EAAGoU,GACpB8hB,EAAUlI,IAOf4H,EAAgB,SAAS5H,GAE3B,OADAA,EAAGmL,WAAanL,EAAGnb,GACZmb,EAAGnb,IAQR2pC,EAAuB,SAASxuB,EAAInb,GACtC,OAAIA,GAAM,GAAKzL,EAASie,UAAU2I,EAAG/2B,EAAEgT,KAAK4I,EAAK,GAAG3H,QACzC2H,EAAK,EAELA,GAET4pC,EAAiB,SAASzuB,EAAInb,GAChC,OAAOmb,EAAG/2B,EAAEgT,KAAKuyC,EAAqBxuB,EAAInb,KAUxC6pC,EAAe,SAAS1uB,EAAI2uB,EAAMtpC,GACpC,IAAIR,EAAK2pC,EAAqBxuB,EAAI2uB,GAC9Bx+D,EAAI6vC,EAAG/2B,EAAEgT,KAAK4I,GAClB,OAAI10B,EAAE+sB,SAAWC,EAASwR,aAEtBtJ,IAAQjM,EAASic,QAAUhQ,IAAQl1B,EAAE6hB,EACrCoH,EAAS8c,SAAS/lC,EAAGk1B,GAIrB2a,EAAG/2B,EAAEgT,KAAK4I,GAAMzL,EAAS+a,WAAWhX,EAASuR,QAASv+B,EAAE6hB,EAAG,EAAG7hB,EAAEi2B,IAE7D,IAMLwoC,EAAe,SAAS5uB,EAAIsuB,GAC9B,MA9NY,IA8NLA,EAAkBA,EAAON,EAAQhuB,EAAIsuB,GACxCI,EAAa1uB,EAAIsuB,EAAMl1C,EAASic,SAQlCw5B,EAAe,SAAS7uB,EAAIsuB,EAAMQ,EAASzpC,EAAK0pC,GAClD,MAxOY,IAwOLT,GAAkB,CACrB,IAAI5xC,EAAOsxC,EAAQhuB,EAAIsuB,GACnBI,EAAa1uB,EAAIsuB,EAAMjpC,GACvB6oC,EAAQluB,EAAIsuB,EAAMQ,GAElBZ,EAAQluB,EAAIsuB,EAAMS,GACtBT,EAAO5xC,IAkBT6rB,EAAmB,SAASvI,EAAIsuB,GAClC1mB,EAAc5H,GACdA,EAAGoL,IAAMhE,EAAYpH,EAAIA,EAAGoL,IAAKkjB,IAQ/BhmB,EAAiB,SAAStI,EAAIsuB,EAAMltB,GAClCA,IAAWpB,EAAGnb,GACd0jB,EAAiBvI,EAAIsuB,IAErBroD,EAAWm7B,EAASpB,EAAGnb,IACvBgqC,EAAa7uB,EAAIsuB,EAAMltB,EAAQhoB,EAASic,OAAQ+L,KAsBlD4tB,EAAY,SAAShvB,EAAI7vC,GAC3B,IAAI8Y,EAAI+2B,EAAG/2B,EAKX,OApDiB,SAAS+2B,GAC1B6uB,EAAa7uB,EAAIA,EAAGoL,IAAKpL,EAAGnb,GAAIzL,EAASic,OAAQ2K,EAAGnb,IACpDmb,EAAGoL,KAzPS,EAuSZ6jB,CAAajvB,GAEb/2B,EAAEgT,KAAK+jB,EAAGnb,IAAM10B,EAChB8Y,EAAE8a,SAASic,EAAGnb,IAAMmb,EAAG7P,GAAG2P,SACnBE,EAAGnb,MAORmiB,EAAe,SAAShH,EAAIpvC,EAAG6C,EAAGwB,EAAGzE,GAKvC,OAJAyV,EAAWmT,EAAS4d,UAAUpmC,KAAOwoB,EAAS6d,MAC9ChxB,EAAWmT,EAAS0d,SAASlmC,KAAOwoB,EAASmc,QAAgB,IAANtgC,GACvDgR,EAAWmT,EAAS2d,SAASnmC,KAAOwoB,EAASmc,QAAgB,IAAN/kC,GACvDyV,EAAWxS,GAAK2lB,EAAS0b,UAAY7/B,GAAKmkB,EAAS4b,UAAYxkC,GAAK4oB,EAAS8b,UACtE85B,EAAUhvB,EAAI5mB,EAAS+a,WAAWvjC,EAAG6C,EAAGwB,EAAGzE,KAMhDy2C,EAAe,SAASjH,EAAIpvC,EAAG6C,EAAG4gC,GAIpC,OAHApuB,EAAWmT,EAAS4d,UAAUpmC,KAAOwoB,EAAS8d,MAAQ9d,EAAS4d,UAAUpmC,KAAOwoB,EAAS+d,OACzFlxB,EAAWmT,EAAS2d,SAASnmC,KAAOwoB,EAASmc,QAC7CtvB,EAAWxS,GAAK2lB,EAAS0b,UAAYT,GAAMjb,EAAS6b,WAC7C+5B,EAAUhvB,EAAI5mB,EAASgb,WAAWxjC,EAAG6C,EAAG4gC,KAG7C6S,GAAgB,SAASlH,EAAGpvC,EAAE40B,EAAEM,GAClC,OAAOmhB,EAAajH,EAAIpvC,EAAG40B,EAAG,EAAQpM,EAAS+b,aAM7C+5B,GAAe,SAASlvB,EAAIvsC,GAE9B,OADAwS,EAAWxS,GAAK2lB,EAAS2b,WAClBi6B,EAAUhvB,EAAI5mB,EAASkb,UAAUnX,EAAS8Q,YAAax6B,KAQ5D0zC,GAAa,SAASnH,EAAI3a,EAAKrF,GACjC,GAAIA,GAAK5G,EAAS6b,UACd,OAAOgS,EAAajH,EAAI7iB,EAASqJ,SAAUnB,EAAKrF,GAC/C,CACD,IAAI/tB,EAAIg1C,EAAajH,EAAI7iB,EAASsJ,UAAWpB,EAAK,GAElD,OADA6pC,GAAalvB,EAAIhgB,GACV/tB,IAQT80C,GAAkB,SAAS/G,EAAIpuC,GACjC,IAAIu9D,EAAWnvB,EAAGyL,QAAU75C,EACxBu9D,EAAWnvB,EAAG/2B,EAAE0S,eACZwzC,GA5WI,KA6WJtrC,EAAK2c,iBAAiBR,EAAG7P,GAAIn9B,EAAa,mDAAmD,IACjGgtC,EAAG/2B,EAAE0S,aAAewzC,IAOtBzmB,GAAmB,SAAS1I,EAAIpuC,GAClCm1C,GAAgB/G,EAAIpuC,GACpBouC,EAAGyL,SAAW75C,GAOZ65C,GAAU,SAASzL,EAAI3a,IACpBjM,EAAS0L,IAAIO,IAAQA,GAAO2a,EAAG4J,UAChC5J,EAAGyL,UACHxlC,EAAWof,IAAQ2a,EAAGyL,WAOxB2jB,GAAU,SAASpvB,EAAIh6B,GACrBA,EAAEga,IAAM3G,EAAQgwB,QAAQgB,WACxBoB,GAAQzL,EAAIh6B,EAAEhR,EAAE81C,OAOlBukB,GAAW,SAASrvB,EAAIsvB,EAAI1wC,GAC9B,IAAI2wC,EAAMD,EAAGtvC,IAAM3G,EAAQgwB,QAAQgB,UAAailB,EAAGt6D,EAAE81C,MAAQ,EACzD0kB,EAAM5wC,EAAGoB,IAAM3G,EAAQgwB,QAAQgB,UAAazrB,EAAG5pB,EAAE81C,MAAQ,EACzDykB,EAAKC,GACL/jB,GAAQzL,EAAIuvB,GACZ9jB,GAAQzL,EAAIwvB,KAGZ/jB,GAAQzL,EAAIwvB,GACZ/jB,GAAQzL,EAAIuvB,KAYdE,GAAO,SAASzvB,EAAItuC,EAAKkC,GAC3B,IAAIqV,EAAI+2B,EAAG/2B,EACP4K,EAAM7M,EAAO6b,SAASmd,EAAGz5B,EAAGy5B,EAAG7P,GAAGK,EAAG9+B,GACzC,GAAImiB,EAAI3I,cAAe,CACnB,IAAI8U,EAAInM,EAAIziB,MAEZ,GAAI4uB,EAAIggB,EAAGqL,IAAMpiC,EAAE+W,EAAEA,GAAG2P,UAAY/7B,EAAE+7B,SAAW1mB,EAAE+W,EAAEA,GAAG5uB,QAAUwC,EAAExC,MAChE,OAAO4uB,EAGf,IAAIA,EAAIggB,EAAGqL,GAIX,OAHArkC,EAAOic,aAAa+c,EAAGz5B,EAAGy5B,EAAG7P,GAAGK,EAAG9+B,EAAK,IAAIynB,EAAQ9R,OAAO5P,EAAauoB,IACxE/W,EAAE+W,EAAEA,GAAKpsB,EACTosC,EAAGqL,KACIrrB,GAiBLioB,GAAY,SAASjI,EAAIpuC,GAC3B,IAAIouB,EAAI,IAAI3Y,EAAOvQ,EAAoBlF,GACnChB,EAAI,IAAIyW,EAAO5P,EAAa7F,GAChC,OAAO69D,GAAKzvB,EAAIhgB,EAAGpvB,IAMjB8+D,GAAe,SAAS1vB,EAAI/uC,GAC9B,IAAIL,EAAI,IAAIyW,EAAO7P,EAAavG,GAChC,OAAOw+D,GAAKzvB,EAAIpvC,EAAGA,IAOjB++D,GAAQ,SAAS3vB,EAAI/qC,GACvB,IAAIrE,EAAI,IAAIyW,EAAOxQ,EAAc5B,GACjC,OAAOw6D,GAAKzvB,EAAIpvC,EAAGA,IAmBjBo4C,GAAkB,SAAShJ,EAAIh6B,EAAGgV,GACpC,IAAI6yC,EAAKx0C,EAAQgwB,QACjB,GAAIrjC,EAAEga,IAAM6tC,EAAGvkB,MACXlwB,EAASid,SAASyQ,EAAe9G,EAAIh6B,GAAIgV,EAAW,QAEnD,GAAIhV,EAAEga,IAAM6tC,EAAGtkB,QAAS,CACzB,IAAI1kB,EAAKiiB,EAAe9G,EAAIh6B,GAC5BoT,EAASgd,SAASvR,EAAI7J,EAAW,GACjC5B,EAAS8c,SAASrR,EAAImb,EAAGyL,SACzB/C,GAAiB1I,EAAI,QAEpB/5B,EAAW+U,IAAaviB,IAiB3BswC,GAAiB,SAAS/I,EAAIh6B,GAChC,IAAI6nD,EAAKx0C,EAAQgwB,QACbrjC,EAAEga,IAAM6tC,EAAGvkB,OAEXrjC,EAAuC,IAA5B6gC,EAAe9G,EAAIh6B,GAAGogB,GACjCpgB,EAAEga,EAAI6tC,EAAGxjB,UACTrkC,EAAEhR,EAAE81C,KAAOhE,EAAe9G,EAAIh6B,GAAGwf,GAC1Bxf,EAAEga,IAAM6tC,EAAGtkB,UAClBnwB,EAASgd,SAAS0Q,EAAe9G,EAAIh6B,GAAI,GACzCA,EAAEga,EAAI6tC,EAAGnjB,aAOXrD,GAAqB,SAASrH,EAAIh6B,GACpC,IAAI6nD,EAAKx0C,EAAQgwB,QAEjB,OAAQrjC,EAAEga,GACN,KAAK6tC,EAAGvjB,OACJtkC,EAAEga,EAAK6tC,EAAGxjB,UACV,MAEJ,KAAKwjB,EAAGtjB,OACJvkC,EAAEhR,EAAE81C,KAAO9D,EAAahH,EAAI7iB,EAASoJ,YAAa,EAAGvgB,EAAEhR,EAAE81C,KAAM,GAC/D9kC,EAAEga,EAAI6tC,EAAGnjB,WACT,MAEJ,KAAKmjB,EAAGrjB,SAAU,CACd,IAAIh+B,EACJi/B,GAAQzL,EAAIh6B,EAAEhR,EAAE+1C,IAAIl3B,KAChB7N,EAAEhR,EAAE+1C,IAAIC,KAAO6iB,EAAGvjB,QAClBmB,GAAQzL,EAAIh6B,EAAEhR,EAAE+1C,IAAI15C,GACpBmb,EAAK2Q,EAASgJ,cAEdlgB,EAAWD,EAAEhR,EAAE+1C,IAAIC,KAAO6iB,EAAGtjB,QAC7B/9B,EAAK2Q,EAAS+I,aAElBlgB,EAAEhR,EAAE81C,KAAO9D,EAAahH,EAAIxzB,EAAI,EAAGxG,EAAEhR,EAAE+1C,IAAI15C,EAAG2U,EAAEhR,EAAE+1C,IAAIl3B,KACtD7N,EAAEga,EAAI6tC,EAAGnjB,WACT,MAEJ,KAAKmjB,EAAGtkB,QAAS,KAAKskB,EAAGvkB,MACrBP,GAAe/I,EAAIh6B,KAOzB4pD,GAAgB,SAAS5vB,EAAIxa,EAAGvwB,EAAG46D,GAErC,OADAjoB,EAAc5H,GACPgH,EAAahH,EAAI7iB,EAASiR,YAAa5I,EAAGvwB,EAAG46D,IAOlDC,GAAgB,SAAS9vB,EAAIh6B,EAAGqf,GAClC,IAAIwoC,EAAKx0C,EAAQgwB,QAEjB,OADAhC,GAAmBrH,EAAIh6B,GACfA,EAAEga,GACN,KAAK6tC,EAAG9jB,KACJ3B,EAASpI,EAAI3a,EAAK,GAClB,MAEJ,KAAKwoC,EAAG5jB,OAAQ,KAAK4jB,EAAG7jB,MACpBhD,EAAahH,EAAI7iB,EAASiR,YAAa/I,EAAKrf,EAAEga,IAAM6tC,EAAG7jB,MAAO,GAC9D,MAEJ,KAAK6jB,EAAG3jB,GACJ/C,GAAWnH,EAAI3a,EAAKrf,EAAEhR,EAAE81C,MACxB,MAEJ,KAAK+iB,EAAG1jB,MACJhD,GAAWnH,EAAI3a,EAAKqqC,GAAa1vB,EAAIh6B,EAAEhR,EAAE61C,OACzC,MAEJ,KAAKgjB,EAAGzjB,MACJjD,GAAWnH,EAAI3a,EAAK4iB,GAAUjI,EAAIh6B,EAAEhR,EAAE41C,OACtC,MAEJ,KAAKijB,EAAGnjB,WAAY,CAChB,IAAI7lB,EAAKiiB,EAAe9G,EAAIh6B,GAC5BoT,EAAS8c,SAASrR,EAAIQ,GACtB,MAEJ,KAAKwoC,EAAGxjB,UACAhlB,IAAQrf,EAAEhR,EAAE81C,MACZ9D,EAAahH,EAAI7iB,EAAS8I,QAASZ,EAAKrf,EAAEhR,EAAE81C,KAAM,GACtD,MAEJ,QAEI,YADA7kC,EAAWD,EAAEga,IAAM6tC,EAAGpjB,MAI9BzkC,EAAEhR,EAAE81C,KAAOzlB,EACXrf,EAAEga,EAAI6tC,EAAGxjB,WAMP0lB,GAAmB,SAAS/vB,EAAIh6B,GAC9BA,EAAEga,IAAM3G,EAAQgwB,QAAQgB,YACxB3B,GAAiB1I,EAAI,GACrB8vB,GAAc9vB,EAAIh6B,EAAGg6B,EAAGyL,QAAQ,KAQlCukB,GAAa,SAAShwB,EAAIsuB,GAC5B,MAxnBY,IAwnBLA,EAAkBA,EAAON,EAAQhuB,EAAIsuB,GAAO,CAE/C,GADQG,EAAezuB,EAAIsuB,GACrBpxC,SAAWC,EAASwR,WAAY,OAAO,EAEjD,OAAO,GAULshC,GAAU,SAASjwB,EAAIh6B,EAAGqf,GAC5B,IAAIwoC,EAAKx0C,EAAQgwB,QAIjB,GAHAymB,GAAc9vB,EAAIh6B,EAAGqf,GACjBrf,EAAEga,IAAM6tC,EAAGpjB,OACXzkC,EAAE3U,EAAI+1C,EAAYpH,EAAIh6B,EAAE3U,EAAG2U,EAAEhR,EAAE81C,OAC/B4iB,EAAS1nD,GAAI,CACb,IAAIkqD,EACA98C,GA7oBI,EA8oBJ+8C,GA9oBI,EA+oBR,GAAIH,GAAWhwB,EAAIh6B,EAAE3U,IAAM2+D,GAAWhwB,EAAIh6B,EAAEiD,GAAI,CAC5C,IAAImnD,EAAMpqD,EAAEga,IAAM6tC,EAAGpjB,MAhpBjB,EAgpBmCvC,EAAUlI,GACjD5sB,EAAMw8C,GAAc5vB,EAAI3a,EAAK,EAAG,GAChC8qC,EAAMP,GAAc5vB,EAAI3a,EAAK,EAAG,GAChCkjB,EAAiBvI,EAAIowB,GAEzBF,EAAQtoB,EAAc5H,GACtB6uB,EAAa7uB,EAAIh6B,EAAEiD,EAAGinD,EAAO7qC,EAAKjS,GAClCy7C,EAAa7uB,EAAIh6B,EAAE3U,EAAG6+D,EAAO7qC,EAAK8qC,GAEtCnqD,EAAEiD,EAAIjD,EAAE3U,GAzpBI,EA0pBZ2U,EAAEhR,EAAE81C,KAAOzlB,EACXrf,EAAEga,EAAI6tC,EAAGxjB,WAOP5C,GAAmB,SAASzH,EAAIh6B,GAClCqhC,GAAmBrH,EAAIh6B,GACvBopD,GAAQpvB,EAAIh6B,GACZ0iC,GAAiB1I,EAAI,GACrBiwB,GAAQjwB,EAAIh6B,EAAGg6B,EAAGyL,QAAU,IAQ1BlE,GAAkB,SAASvH,EAAIh6B,GAEjC,GADAqhC,GAAmBrH,EAAIh6B,GACnBA,EAAEga,IAAM3G,EAAQgwB,QAAQgB,UAAW,CACnC,IAAKqjB,EAAS1nD,GACV,OAAOA,EAAEhR,EAAE81C,KACf,GAAI9kC,EAAEhR,EAAE81C,MAAQ9K,EAAG4J,QAEf,OADAqmB,GAAQjwB,EAAIh6B,EAAGA,EAAEhR,EAAE81C,MACZ9kC,EAAEhR,EAAE81C,KAInB,OADArD,GAAiBzH,EAAIh6B,GACdA,EAAEhR,EAAE81C,MAgBTpD,GAAe,SAAS1H,EAAIh6B,GAC1B0nD,EAAS1nD,GACTuhC,GAAgBvH,EAAIh6B,GAEpBqhC,GAAmBrH,EAAIh6B,IASzBshC,GAAc,SAAStH,EAAIh6B,GAC7B,IAAI6nD,EAAKx0C,EAAQgwB,QACbgnB,GAAK,EAET,OADA3oB,GAAa1H,EAAIh6B,GACTA,EAAEga,GACN,KAAK6tC,EAAG7jB,MAAOhkC,EAAEhR,EAAE81C,KAAO6kB,GAAM3vB,GAAI,GAAOqwB,GAAK,EAAM,MACtD,KAAKxC,EAAG5jB,OAAQjkC,EAAEhR,EAAE81C,KAAO6kB,GAAM3vB,GAAI,GAAQqwB,GAAK,EAAM,MACxD,KAAKxC,EAAG9jB,KAAM/jC,EAAEhR,EAAE81C,KAnQb,SAAS9K,GAClB,IAAIpsC,EAAI,IAAIyT,EAAOzQ,EAAU,MACzBopB,EAAI,IAAI3Y,EAAOpQ,EAAY+oC,EAAG7P,GAAGK,GAErC,OAAOi/B,GAAKzvB,EAAIhgB,EAAGpsB,GA+PU08D,CAAKtwB,GAAKqwB,GAAK,EAAM,MAC9C,KAAKxC,EAAGzjB,MAAOpkC,EAAEhR,EAAE81C,KAAO7C,GAAUjI,EAAIh6B,EAAEhR,EAAE41C,MAAOylB,GAAK,EAAM,MAC9D,KAAKxC,EAAG1jB,MAAOnkC,EAAEhR,EAAE81C,KAAO4kB,GAAa1vB,EAAIh6B,EAAEhR,EAAE61C,MAAOwlB,GAAK,EAAM,MACjE,KAAKxC,EAAG3jB,GAAImmB,GAAK,EAIrB,OAAIA,IACArqD,EAAEga,EAAI6tC,EAAG3jB,GACLlkC,EAAEhR,EAAE81C,MAAQ1xB,EAASgc,YACdhc,EAAS6c,MAAMjwB,EAAEhR,EAAE81C,MAI3BvD,GAAgBvH,EAAIh6B,IA+CzBuqD,GAAkB,SAASvwB,EAAIh6B,GACjC,IAAI6e,EAAK4pC,EAAezuB,EAAIh6B,EAAEhR,EAAE81C,MAChC7kC,EAAWmT,EAASie,UAAUxS,EAAG3H,SAAW2H,EAAG3H,SAAWC,EAASwR,YAAc9J,EAAG3H,SAAWC,EAASuR,SACxGtV,EAAS8c,SAASrR,GAAMA,EAAI,IAS1B2rC,GAAa,SAASxwB,EAAIh6B,EAAGwQ,GAC/B,GAAIxQ,EAAEga,IAAM3G,EAAQgwB,QAAQqB,WAAY,CACpC,IAAI+lB,EAAK3pB,EAAe9G,EAAIh6B,GAC5B,GAAIyqD,EAAGvzC,SAAWC,EAASmR,OAEvB,OADA0R,EAAGnb,KACI0pC,EAASvuB,EAAI7iB,EAASuR,QAAS+hC,EAAGz+C,EAAG,GAAIwE,GAMxD,OAFAu5C,GAAiB/vB,EAAIh6B,GACrBopD,GAAQpvB,EAAIh6B,GACLuoD,EAASvuB,EAAI7iB,EAASwR,WAAYvV,EAASic,OAAQrvB,EAAEhR,EAAE81C,KAAMt0B,IAMlEsxB,GAAgB,SAAS9H,EAAIh6B,GAC/B,IACI6e,EADAgpC,EAAKx0C,EAAQgwB,QAGjB,OADAhC,GAAmBrH,EAAIh6B,GACfA,EAAEga,GACN,KAAK6tC,EAAGpjB,KACJ8lB,GAAgBvwB,EAAIh6B,GACpB6e,EAAK7e,EAAEhR,EAAE81C,KACT,MAEJ,KAAK+iB,EAAG3jB,GAAI,KAAK2jB,EAAG1jB,MAAO,KAAK0jB,EAAGzjB,MAAO,KAAKyjB,EAAG7jB,MAC9CnlB,GAl0BI,EAm0BJ,MAEJ,QACIA,EAAK2rC,GAAWxwB,EAAIh6B,EAAG,GAI/BA,EAAEiD,EAAIm+B,EAAYpH,EAAIh6B,EAAEiD,EAAG4b,GAC3B0jB,EAAiBvI,EAAIh6B,EAAE3U,GACvB2U,EAAE3U,GA50BU,GAk1BVw2C,GAAiB,SAAS7H,EAAIh6B,GAChC,IACI6e,EADAgpC,EAAKx0C,EAAQgwB,QAGjB,OADAhC,GAAmBrH,EAAIh6B,GACfA,EAAEga,GACN,KAAK6tC,EAAGpjB,KACJ5lB,EAAK7e,EAAEhR,EAAE81C,KACT,MAEJ,KAAK+iB,EAAG9jB,KAAM,KAAK8jB,EAAG5jB,OAClBplB,GA51BI,EA61BJ,MAEJ,QACIA,EAAK2rC,GAAWxwB,EAAIh6B,EAAG,GAI/BA,EAAE3U,EAAI+1C,EAAYpH,EAAIh6B,EAAE3U,EAAGwzB,GAC3B0jB,EAAiBvI,EAAIh6B,EAAEiD,GACvBjD,EAAEiD,GAt2BU,GA66BVynD,GAAe,SAASlkD,EAAI8iD,EAAI1wC,GAClC,IACInS,EAAIC,EADJmhD,EAAKx0C,EAAQgwB,QAEjB,KAAM58B,EAAKkhD,EAAU2B,GAAI,OAAY5iD,EAAKihD,EAAU/uC,GAAI,MAnB5C,SAASpS,EAAIC,EAAIC,GAC7B,OAAQF,GACJ,KAAK7T,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EAAW,KAAKZ,EACjC,OAA8B,IAAtBqO,EAAI0G,UAAUlB,KAAuC,IAAtBxF,EAAI0G,UAAUjB,GAEzD,KAAK3T,EAAW,KAAKE,EAAY,KAAKG,EAClC,OAAqB,IAAbsT,EAAGtb,MACf,QAAS,OAAO,GAW+Cu/D,CAAQnkD,EAAIC,EAAIC,GAC/E,OAAO,EACX,IAAIc,EAAM,IAAInG,EAEd,GADA8R,EAAQ/L,WAAW,KAAMZ,EAAIC,EAAIC,EAAIc,GACjCA,EAAItC,cACJokD,EAAGtvC,EAAI6tC,EAAGzjB,MACVklB,EAAGt6D,EAAE41C,KAAOp9B,EAAIpc,UAEf,CACD,IAAIQ,EAAI4b,EAAIpc,MACZ,GAAIsZ,MAAM9Y,IAAY,IAANA,EACZ,OAAO,EACX09D,EAAGtvC,EAAI6tC,EAAG1jB,MACVmlB,EAAGt6D,EAAE61C,KAAOj5C,EAEhB,OAAO,GAyBLg/D,GAAgB,SAAS5wB,EAAIxzB,EAAI8iD,EAAI1wC,EAAI/B,GAC3C,IAAIg0C,EAAMvpB,GAAYtH,EAAIphB,GACtBkyC,EAAMxpB,GAAYtH,EAAIsvB,GAC1BD,GAASrvB,EAAIsvB,EAAI1wC,GACjB0wC,EAAGt6D,EAAE81C,KAAO9D,EAAahH,EAAIxzB,EAAI,EAAGskD,EAAKD,GACzCvB,EAAGtvC,EAAI3G,EAAQgwB,QAAQqB,WACvB/C,GAAa3H,EAAInjB,IA4Jf8qB,GAAe,SAAS3H,EAAInjB,GAC9BmjB,EAAG/2B,EAAE8a,SAASic,EAAGnb,GAAK,GAAKhI,GA0B/B3sB,EAAOD,QAAQ+0C,OAAqBA,EACpC90C,EAAOD,QAAQ42C,SAtpCC,EAupChB32C,EAAOD,QAAQs2C,MAAqBA,EACpCr2C,EAAOD,QAAQ62C,eAAqBA,EACpC52C,EAAOD,QAAQ82C,gBAAqBA,GACpC72C,EAAOD,QAAQ++D,UAAqBA,EACpC9+D,EAAOD,QAAQ+2C,aAAqBA,EACpC92C,EAAOD,QAAQg3C,aAAqBA,EACpC/2C,EAAOD,QAAQi3C,cAAqBA,GACpCh3C,EAAOD,QAAQk3C,WAAqBA,GACpCj3C,EAAOD,QAAQm3C,YAAqBA,EACpCl3C,EAAOD,QAAQo3C,mBAAqBA,GACpCn3C,EAAOD,QAAQq3C,YAAqBA,GACpCp3C,EAAOD,QAAQs3C,gBAAqBA,GACpCr3C,EAAOD,QAAQu3C,kBAneW,SAASxH,EAAIh6B,IAC/BA,EAAEga,IAAM3G,EAAQgwB,QAAQkB,QAAUmjB,EAAS1nD,KAC3CuhC,GAAgBvH,EAAIh6B,IAke5B9V,EAAOD,QAAQw3C,iBAAqBA,GACpCv3C,EAAOD,QAAQy3C,aAAqBA,GACpCx3C,EAAOD,QAAQ03C,aAAqBA,GACpCz3C,EAAOD,QAAQ23C,cAAqBA,EACpC13C,EAAOD,QAAQ43C,eAAqBA,GACpC33C,EAAOD,QAAQ63C,cAAqBA,GACpC53C,EAAOD,QAAQ83C,aA3RM,SAAS/H,EAAI3uC,EAAG2uB,GACjC,IAAI6tC,EAAKx0C,EAAQgwB,QACjBpjC,GAAYynD,EAASr8D,KAAOgoB,EAAQ68B,UAAU7kD,EAAE2uB,IAAM3uB,EAAE2uB,IAAM6tC,EAAGtjB,SACjEl5C,EAAE2D,EAAE+1C,IAAI15C,EAAIA,EAAE2D,EAAE81C,KAChBz5C,EAAE2D,EAAE+1C,IAAIl3B,IAAMyzB,GAAYtH,EAAIhgB,GAC9B3uB,EAAE2D,EAAE+1C,IAAIC,GAAM35C,EAAE2uB,IAAM6tC,EAAGtjB,OAAUsjB,EAAGtjB,OAASsjB,EAAGvjB,OAClDj5C,EAAE2uB,EAAI6tC,EAAGrjB,UAsRbt6C,EAAOD,QAAQ+3C,WA3II,SAAShI,EAAIxzB,EAAI5Y,GAChC,OAAQ4Y,GACJ,KAAKw4B,EAAOE,QACR4C,GAAc9H,EAAIpsC,GAClB,MAEJ,KAAKoxC,EAAOkB,OACR2B,GAAe7H,EAAIpsC,GACnB,MAEJ,KAAKoxC,EAAOM,WACRmC,GAAiBzH,EAAIpsC,GACrB,MAEJ,KAAKoxC,EAAOC,QAAS,KAAKD,EAAOsB,QACjC,KAAKtB,EAAOe,QAAS,KAAKf,EAAOO,QAAS,KAAKP,EAAOW,SACtD,KAAKX,EAAOc,QAAS,KAAKd,EAAOmB,QACjC,KAAKnB,EAAOG,SAAU,KAAKH,EAAOI,QAAS,KAAKJ,EAAOK,SACvD,KAAKL,EAAOoB,QAAS,KAAKpB,EAAOqB,QACxBsnB,EAAU/5D,GAAG,IACd0zC,GAAYtH,EAAIpsC,GAEpB,MAEJ,QACI0zC,GAAYtH,EAAIpsC,KAmH5B1D,EAAOD,QAAQg4C,UAAqBA,GACpC/3C,EAAOD,QAAQi4C,UAAqBA,EACpCh4C,EAAOD,QAAQk4C,YAthCK,SAASnI,EAAI3uC,GAC7B,OAAOi3C,EAAetI,EAAIkI,EAAUlI,GAAK3uC,IAshC7CnB,EAAOD,QAAQm4C,SAAqBA,EACpCl4C,EAAOD,QAAQy/D,aAAqBA,GACpCx/D,EAAOD,QAAQo4C,gBAz5BS,SAASrI,EAAIsuB,EAAMx+C,GAEvC,IADAA,KAzRY,IA0RLw+C,EAAkBA,EAAON,EAAQhuB,EAAIsuB,GAAO,CAC/C,IAAIr6B,EAAM+L,EAAG/2B,EAAEgT,KAAKqyC,GACpBroD,EAAWguB,EAAI/W,SAAWC,EAASyI,SAAqB,IAAVqO,EAAIzO,GAAWyO,EAAIzO,GAAK1V,IACtEsJ,EAAS8c,SAASjC,EAAKnkB,KAq5B/B5f,EAAOD,QAAQq4C,eAAqBA,EACpCp4C,EAAOD,QAAQs4C,iBAAqBA,EACpCr4C,EAAOD,QAAQu4C,YA/GK,SAASxI,EAAIxzB,EAAI8iD,EAAI1wC,EAAI/B,GACzC,IAAIgxC,EAAKx0C,EAAQgwB,QACjB,OAAQ78B,GACJ,KAAKw4B,EAAOE,QACRj/B,GAzkCI,IAykCOqpD,EAAGj+D,GACdg2C,GAAmBrH,EAAIphB,GACvBA,EAAG3V,EAAIm+B,EAAYpH,EAAIphB,EAAG3V,EAAGqmD,EAAGrmD,GAChCqmD,EAAGp6D,GAAG0pB,GACN,MAEJ,KAAKomB,EAAOkB,OACRjgC,GAhlCI,IAglCOqpD,EAAGrmD,GACdo+B,GAAmBrH,EAAIphB,GACvBA,EAAGvtB,EAAI+1C,EAAYpH,EAAIphB,EAAGvtB,EAAGi+D,EAAGj+D,GAChCi+D,EAAGp6D,GAAG0pB,GACN,MAEJ,KAAKomB,EAAOM,WAAY,CACpBoC,GAAa1H,EAAIphB,GACjB,IAAIqV,EAAM6S,EAAe9G,EAAIphB,GACzBA,EAAGoB,IAAM6tC,EAAGnjB,YAAczW,EAAI/W,SAAWC,EAAS2L,WAClD7iB,EAAWqpD,EAAGt6D,EAAE81C,OAAS7W,EAAIjiB,EAAI,GACjCo9C,GAAQpvB,EAAIsvB,GACZl2C,EAASgd,SAASnC,EAAKq7B,EAAGt6D,EAAE81C,MAC5BwkB,EAAGtvC,EAAI6tC,EAAGnjB,WAAY4kB,EAAGt6D,EAAE81C,KAAOlsB,EAAG5pB,EAAE81C,OAGvCrD,GAAiBzH,EAAIphB,GACrBgyC,GAAc5wB,EAAI7iB,EAAS2L,UAAWwmC,EAAI1wC,EAAI/B,IAElD,MAEJ,KAAKmoB,EAAOC,QAAS,KAAKD,EAAOsB,QAAS,KAAKtB,EAAOe,QAAS,KAAKf,EAAOO,QAC3E,KAAKP,EAAOW,SAAU,KAAKX,EAAOc,QAAS,KAAKd,EAAOmB,QACvD,KAAKnB,EAAOG,SAAU,KAAKH,EAAOI,QAAS,KAAKJ,EAAOK,SACvD,KAAKL,EAAOoB,QAAS,KAAKpB,EAAOqB,QACxBqqB,GAAalkD,EAAK9T,EAAW42D,EAAI1wC,IAClCgyC,GAAc5wB,EAAIxzB,EAAK2Q,EAAS8J,OAAQqoC,EAAI1wC,EAAI/B,GACpD,MAEJ,KAAKmoB,EAAOQ,OAAQ,KAAKR,EAAOa,OAAQ,KAAKb,EAAOY,OACpD,KAAKZ,EAAOgB,OAAQ,KAAKhB,EAAOU,OAAQ,KAAKV,EAAOS,QAxI3C,SAASzF,EAAI+wB,EAAKzB,EAAI1wC,GACnC,IAEIkyC,EAFAjD,EAAKx0C,EAAQgwB,QAGbimB,EAAGtvC,IAAM6tC,EAAG3jB,GACZ4mB,EAAM13C,EAAS6c,MAAMq5B,EAAGt6D,EAAE81C,OAE1B7kC,EAAWqpD,EAAGtvC,IAAM6tC,EAAGxjB,WACvBymB,EAAMxB,EAAGt6D,EAAE81C,MAGf,IAAI+lB,EAAMvpB,GAAYtH,EAAIphB,GAE1B,OADAywC,GAASrvB,EAAIsvB,EAAI1wC,GACTmyC,GACJ,KAAK/rB,EAAOgB,OACRspB,EAAGt6D,EAAE81C,KAAOyjB,EAASvuB,EAAI7iB,EAAS6L,MAAO,EAAG8nC,EAAKD,GACjD,MAEJ,KAAK7rB,EAAOU,OAAQ,KAAKV,EAAOS,OAAQ,CAEpC,IAAIj5B,EAAMukD,EAAM/rB,EAAOgB,OAAU7oB,EAAS6L,MAC1CsmC,EAAGt6D,EAAE81C,KAAOyjB,EAASvuB,EAAIxzB,EAAI,EAAGqkD,EAAKC,GACrC,MAEJ,QAAS,CACL,IAAItkD,EAAMukD,EAAM/rB,EAAOQ,OAAUroB,EAAS6L,MAC1CsmC,EAAGt6D,EAAE81C,KAAOyjB,EAASvuB,EAAIxzB,EAAI,EAAGskD,EAAKD,GACrC,OAGRvB,EAAGtvC,EAAI6tC,EAAGpjB,KA2GFumB,CAAShxB,EAAIxzB,EAAI8iD,EAAI1wC,GAK7B,OAAO0wC,GAiEXp/D,EAAOD,QAAQw4C,YA3KK,SAASzI,EAAIxzB,EAAIxG,EAAG6W,GACpC,IAAIsD,EAAK,IAAI9G,EAAQsxB,QAKrB,OAJAxqB,EAAGH,EAAI3G,EAAQgwB,QAAQe,MACvBjqB,EAAGnrB,EAAE41C,KAAOzqB,EAAGnrB,EAAE61C,KAAO1qB,EAAGnrB,EAAE81C,KAAO,EACpC3qB,EAAG9uB,GA9gCS,EA+gCZ8uB,EAAGlX,GA/gCS,EAghCJuD,GACJ,KAAK+5B,EAAMG,UAAW,KAAKH,EAAMC,SAC7B,GAAIkqB,GAAalkD,EAAK9S,EAAWsM,EAAGma,GAChC,MAER,KAAKomB,EAAME,SA9EE,SAASzG,EAAIxzB,EAAIxG,EAAG6W,GACrC,IAAI5rB,EAAIs2C,GAAgBvH,EAAIh6B,GAC5BopD,GAAQpvB,EAAIh6B,GACZA,EAAEhR,EAAE81C,KAAO9D,EAAahH,EAAIxzB,EAAI,EAAGvb,EAAG,GACtC+U,EAAEga,EAAI3G,EAAQgwB,QAAQqB,WACtB/C,GAAa3H,EAAInjB,GA0ETo0C,CAAajxB,EAAIxzB,EAAK2Q,EAASqL,OAAQxiB,EAAG6W,GAC1C,MACJ,KAAK0pB,EAAMI,SA5KH,SAAS3G,EAAIh6B,GACzB,IAAI6nD,EAAKx0C,EAAQgwB,QAEjB,OADAhC,GAAmBrH,EAAIh6B,GACfA,EAAEga,GACN,KAAK6tC,EAAG9jB,KAAM,KAAK8jB,EAAG5jB,OAClBjkC,EAAEga,EAAI6tC,EAAG7jB,MACT,MAEJ,KAAK6jB,EAAG3jB,GAAI,KAAK2jB,EAAG1jB,MAAO,KAAK0jB,EAAGzjB,MAAO,KAAKyjB,EAAG7jB,MAC9ChkC,EAAEga,EAAI6tC,EAAG5jB,OACT,MAEJ,KAAK4jB,EAAGpjB,KACJ8lB,GAAgBvwB,EAAIh6B,GACpB,MAEJ,KAAK6nD,EAAGnjB,WACR,KAAKmjB,EAAGxjB,UACJ0lB,GAAiB/vB,EAAIh6B,GACrBopD,GAAQpvB,EAAIh6B,GACZA,EAAEhR,EAAE81C,KAAO9D,EAAahH,EAAI7iB,EAASmR,OAAQ,EAAGtoB,EAAEhR,EAAE81C,KAAM,GAC1D9kC,EAAEga,EAAI6tC,EAAGnjB,WAKjB,CAAE,IAAIzmB,EAAOje,EAAEiD,EAAGjD,EAAEiD,EAAIjD,EAAE3U,EAAG2U,EAAE3U,EAAI4yB,EACnC2qC,EAAa5uB,EAAIh6B,EAAEiD,GACnB2lD,EAAa5uB,EAAIh6B,EAAE3U,GAgJK6/D,CAAQlxB,EAAIh6B,KA8JxC9V,EAAOD,QAAQy4C,iBAAqBA,GACpCx4C,EAAOD,QAAQ04C,SAxhCE,SAAS3I,EAAIrB,EAAOiX,GACjC5O,EAAahH,EAAI7iB,EAASoR,UAAWoQ,EAAOiX,EAAO,EAAG,IAwhC1D1lD,EAAOD,QAAQ24C,UA5aG,SAAS5I,EAAIh6B,EAAGtU,GAC9B61C,GAAgBvH,EAAIh6B,GACpB,IAAImrD,EAAOnrD,EAAEhR,EAAE81C,KACfskB,GAAQpvB,EAAIh6B,GACZA,EAAEhR,EAAE81C,KAAO9K,EAAGyL,QACdzlC,EAAEga,EAAI3G,EAAQgwB,QAAQgB,UACtB3B,GAAiB1I,EAAI,GACrBgH,EAAahH,EAAI7iB,EAASyJ,QAAS5gB,EAAEhR,EAAE81C,KAAMqmB,EAAM7pB,GAAYtH,EAAItuC,IACnE09D,GAAQpvB,EAAItuC,IAqahBxB,EAAOD,QAAQ44C,aApDM,SAAS7I,EAAIvkB,EAAM21C,EAAQrhB,GAC5C,IAAIv/C,GAAM4gE,EAAS,GAAGh4C,EAAS2U,kBAAoB,EAC/C94B,EAAK86C,IAAYt3C,EAAe,EAAIs3C,EACxC9pC,EAAuB,IAAZ8pC,GAAiBA,GAAW32B,EAAS2U,mBAC5Cv9B,GAAK4oB,EAAS8b,SACd8R,EAAahH,EAAI7iB,EAASqR,WAAY/S,EAAMxmB,EAAGzE,GAC1CA,GAAK4oB,EAAS2b,WACnBiS,EAAahH,EAAI7iB,EAASqR,WAAY/S,EAAMxmB,EAAG,GAC/Ci6D,GAAalvB,EAAIxvC,IAGjBqzB,EAAK2c,iBAAiBR,EAAG7P,GAAIn9B,EAAa,wBAAwB,IACtEgtC,EAAGyL,QAAUhwB,EAAO,GAyCxBvrB,EAAOD,QAAQ64C,gBAtsBS,SAAS9I,EAAIh6B,GACjCgjC,GAAgBhJ,EAAIh6B,EAAGvN,IAssB3BvI,EAAOD,QAAQ84C,eAAqBA,GACpC74C,EAAOD,QAAQ+4C,gBAAqBA,GACpC94C,EAAOD,QAAQg5C,cA5cO,SAASjJ,EAAIsN,EAAI+jB,GACnC,IAAIxD,EAAKx0C,EAAQgwB,QACjB,OAAQiE,EAAGttB,GACP,KAAK6tC,EAAGvjB,OAGJ,OAFA8kB,GAAQpvB,EAAIqxB,QACZpB,GAAQjwB,EAAIqxB,EAAI/jB,EAAGt4C,EAAE81C,MAGzB,KAAK+iB,EAAGtjB,OAAQ,CACZ,IAAIvkC,EAAIuhC,GAAgBvH,EAAIqxB,GAC5BrqB,EAAahH,EAAI7iB,EAASsR,YAAazoB,EAAGsnC,EAAGt4C,EAAE81C,KAAM,GACrD,MAEJ,KAAK+iB,EAAGrjB,SAAU,CACd,IAAIh+B,EAAM8gC,EAAGt4C,EAAE+1C,IAAIC,KAAO6iB,EAAGvjB,OAAUntB,EAAS4J,YAAc5J,EAAS2J,YACnE9gB,EAAIshC,GAAYtH,EAAIqxB,GACxBrqB,EAAahH,EAAIxzB,EAAI8gC,EAAGt4C,EAAE+1C,IAAI15C,EAAGi8C,EAAGt4C,EAAE+1C,IAAIl3B,IAAK7N,GAC/C,OAGRopD,GAAQpvB,EAAIqxB,IAybhBnhE,EAAOD,QAAQi5C,aA1wBM,SAASlJ,EAAI9tC,GAC9B,IAAItB,EAAI,IAAIyW,EAAO9P,EAAarF,GAChC,OAAOu9D,GAAKzvB,EAAIpvC,EAAGA,K,6BChevB,MAAM,cACFqF,EACAS,gBAAgB,aACZG,EAAY,YACZU,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,GAEJyD,eAAe,cAAEI,GAAe,aAChCjH,EAAY,aACZtB,EAAY,aACZI,GACA,EAAQ,GACN0I,EAAW,EAAQ,GACnBwd,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IACnB,WACFgc,EAAU,MACVQ,EAAK,OACLC,EAAM,MACNC,EAAK,OACLC,EAAM,MACNC,EAAK,OACLC,EAAM,OACNQ,EAAM,QACNC,EAAO,OACPC,EAAM,QACNC,EAAO,OACPC,EAAM,QACNC,GACA,EAAQ,KACN,WAAE5wB,GAAe,EAAQ,IACzB,WAAEa,GAAe,EAAQ,KACzB,UACFi2B,EAAS,IACTjE,GACA,EAAQ,IAEZ,IAAIw4B,EAAY,CAAC,GAAM,IAAM,GAAI,GAAI,GAAM,IAE3C,MAAMC,EAEF,YAAYhrD,EAAGirD,EAAG9gE,GACdqJ,KAAK03D,QAAU,EACf13D,KAAK23D,WAAa,EAClB33D,KAAK43D,gBAAkB,EACvB53D,KAAK63D,YAAc,EACnB73D,KAAK83D,WAAa,EAElB5rD,EAAWurD,aAAa14B,EAAK,yCAC7B7yB,EAAW/R,EAAaxD,IAER,KAAZA,EAAK,IAAmD,KAAZA,EAAK,GACjDqJ,KAAKrJ,KAAOA,EAAKgb,SAAS,GACrBhb,EAAK,IAAMuF,EAAc,GAC9B8D,KAAKrJ,KAAOsC,EAAa,iBAAiB,GAE1C+G,KAAKrJ,KAAOA,EAEhBqJ,KAAKwM,EAAIA,EACTxM,KAAKy3D,EAAIA,EAGTz3D,KAAK+3D,YAAc,IAAIzsD,YACnBjQ,KAAKgd,IAAIrY,KAAK03D,QAAS13D,KAAK23D,WAAY33D,KAAK43D,gBAAiB53D,KAAK63D,YAAa73D,KAAK83D,aAEzF93D,KAAKmmD,GAAK,IAAI96C,SAASrL,KAAK+3D,aAC5B/3D,KAAK+hC,GAAK,IAAIvoC,WAAWwG,KAAK+3D,aAGlC,KAAK1oD,GACD,IAAI0yB,EAAK,IAAIvoC,WAAW6V,GAGxB,OAFsC,IAAnC2zB,EAAUhjC,KAAKy3D,EAAG11B,EAAI,EAAG1yB,IACxBrP,KAAKsa,MAAM,aACRynB,EAGX,WAGI,OAFyC,IAArCiB,EAAUhjC,KAAKy3D,EAAGz3D,KAAK+hC,GAAI,EAAG,IAC9B/hC,KAAKsa,MAAM,aACRta,KAAK+hC,GAAG,GAGnB,UAGI,OAFoD,IAAhDiB,EAAUhjC,KAAKy3D,EAAGz3D,KAAK+hC,GAAI,EAAG/hC,KAAK03D,UACnC13D,KAAKsa,MAAM,aACRta,KAAKmmD,GAAG6R,SAAS,GAAG,GAG/B,aAGI,OAFuD,IAAnDh1B,EAAUhjC,KAAKy3D,EAAGz3D,KAAK+hC,GAAI,EAAG/hC,KAAK83D,aACnC93D,KAAKsa,MAAM,aACRta,KAAKmmD,GAAGG,WAAW,GAAG,GAGjC,cAGI,OAFwD,IAApDtjB,EAAUhjC,KAAKy3D,EAAGz3D,KAAK+hC,GAAI,EAAG/hC,KAAK63D,cACnC73D,KAAKsa,MAAM,aACRta,KAAKmmD,GAAG6R,SAAS,GAAG,GAG/B,aACI,OAAOh4D,KAAKi4D,cAGhB,aACI,IAAI5oD,EAAOrP,KAAKk4D,WAGhB,OAFa,MAAT7oD,IACAA,EAAOrP,KAAKm4D,cACH,IAAT9oD,EACO,KACJtC,EAAW/M,KAAKwM,EAAGxM,KAAKo4D,KAAK/oD,EAAK,IAI7C,aAAaxX,EAAGK,GACZ,SAAW,GAAM,IAAO,EAG5B,SAASgX,GACL,IAAIrX,EAAImI,KAAKq4D,UACTngE,EAAIs/D,EAER,IAAK,IAAIphE,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACoC,IAAxD4sC,EAAUhjC,KAAKy3D,EAAGz3D,KAAK+hC,GAAI,EAAG/hC,KAAK43D,kBACnC53D,KAAKsa,MAAM,aACf,IAAI4f,EAAMl6B,KAAKmmD,GAAG16C,UAAU,GAAG,GAC/ByD,EAAEgT,KAAK9rB,GAAK,CACR8rB,KAAQgY,EACR/W,OAAS+W,GAAO+B,EAAU/jC,EAAE2hC,MAAMiD,EAAS,GAC3CrR,EAASyO,GAAO0B,EAAU1jC,EAAE2hC,MAAM4C,EAAS,GAC3CxkB,EAASiiB,GAAO4B,EAAU5jC,EAAE2hC,MAAM8C,EAAS,GAC3CtQ,EAAS6N,GAAO8B,EAAU9jC,EAAE2hC,MAAMgD,EAAS,GAC3ClQ,GAASuN,GAAO6B,EAAU7jC,EAAE2hC,MAAM+C,EAAS,GAC3ChQ,GAASsN,GAAO2B,EAAU3jC,EAAE2hC,MAAM6C,EAAS,GAC3C3Q,KAAUmO,GAAO6B,EAAU7jC,EAAE2hC,MAAM+C,EAAS,IAAMxB,IAK9D,cAAclsB,GACV,IAAIrX,EAAImI,KAAKq4D,UAEb,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIkB,EAAI0I,KAAKk4D,WAEb,OAAQ5gE,GACJ,KAAKuF,EACDqS,EAAE+W,EAAEwhB,KAAK,IAAIroB,EAAQ9R,OAAOzQ,EAAU,OACtC,MACJ,KAAKC,EACDoS,EAAE+W,EAAEwhB,KAAK,IAAIroB,EAAQ9R,OAAOxQ,EAAkC,IAApBkD,KAAKk4D,aAC/C,MACJ,KAAKz6D,EACDyR,EAAE+W,EAAEwhB,KAAK,IAAIroB,EAAQ9R,OAAO7P,EAAauC,KAAKs4D,eAC9C,MACJ,KAAK56D,EACDwR,EAAE+W,EAAEwhB,KAAK,IAAIroB,EAAQ9R,OAAO5P,EAAasC,KAAKi4D,gBAC9C,MACJ,KAAK16D,EACL,KAAKC,EACD0R,EAAE+W,EAAEwhB,KAAK,IAAIroB,EAAQ9R,OAAO9P,EAAawC,KAAKu4D,eAC9C,MACJ,QACIv4D,KAAKsa,MAAM,0BAA0BhjB,QAKrD,WAAW4X,GACP,IAAIrX,EAAImI,KAAKq4D,UAEb,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB8Y,EAAEhX,EAAE9B,GAAK,IAAI+oB,EAAMsT,MAAMzyB,KAAKwM,GAC9BxM,KAAKw4D,aAAatpD,EAAEhX,EAAE9B,GAAI8Y,EAAE7O,QAIpC,aAAa6O,GACT,IAAIrX,EAAImI,KAAKq4D,UAEb,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB8Y,EAAEiY,SAAS/wB,GAAK,CACZO,KAAS,KACTqgC,QAASh3B,KAAKk4D,WACdp+C,IAAS9Z,KAAKk4D,YAK1B,UAAUhpD,GACN,IAAIrX,EAAImI,KAAKq4D,UACb,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB8Y,EAAE8a,SAAS5zB,GAAK4J,KAAKq4D,UAEzBxgE,EAAImI,KAAKq4D,UACT,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB8Y,EAAEwjB,QAAQt8B,GAAK,CACX8c,QAASlT,KAAKu4D,aACdplD,QAASnT,KAAKq4D,UACdjlD,MAASpT,KAAKq4D,WAItBxgE,EAAImI,KAAKq4D,UACT,IAAK,IAAIjiE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB8Y,EAAEiY,SAAS/wB,GAAGO,KAAOqJ,KAAKu4D,aAIlC,aAAarpD,EAAGupD,GACZvpD,EAAE7O,OAASL,KAAKu4D,aACC,OAAbrpD,EAAE7O,SACF6O,EAAE7O,OAASo4D,GACfvpD,EAAE3O,YAAcP,KAAKq4D,UACrBnpD,EAAE1O,gBAAkBR,KAAKq4D,UACzBnpD,EAAE6S,UAAY/hB,KAAKk4D,WACnBhpD,EAAE2S,UAAgC,IAApB7hB,KAAKk4D,WACnBhpD,EAAE0S,aAAe5hB,KAAKk4D,WACtBl4D,KAAK04D,SAASxpD,GACdlP,KAAK24D,cAAczpD,GACnBlP,KAAK44D,aAAa1pD,GAClBlP,KAAK64D,WAAW3pD,GAChBlP,KAAK84D,UAAU5pD,GAGnB,aAAa/W,EAAGiU,GACZ,IAAIyD,EAAO7P,KAAKo4D,KAAKjgE,EAAEyB,QAClBf,EAAagX,EAAM1X,IACpB6H,KAAKsa,MAAMlO,GAGnB,cACIpM,KAAK+4D,aAAa78D,EAAcyV,SAAS,GAAI,SAErB,KAApB3R,KAAKk4D,YACLl4D,KAAKsa,MAAM,uBAES,IAApBta,KAAKk4D,YACLl4D,KAAKsa,MAAM,sBAEfta,KAAK+4D,aAAaxB,EAAW,aAE7Bv3D,KAAK03D,QAAkB13D,KAAKk4D,WAC5Bl4D,KAAK23D,WAAkB33D,KAAKk4D,WAC5Bl4D,KAAK43D,gBAAkB53D,KAAKk4D,WAC5Bl4D,KAAK63D,YAAkB73D,KAAKk4D,WAC5Bl4D,KAAK83D,WAAkB93D,KAAKk4D,WAE5Bl4D,KAAKg5D,UAAUh5D,KAAK03D,QAAS,EAAG,OAChC13D,KAAKg5D,UAAUh5D,KAAK23D,WAAY,EAAG,UACnC33D,KAAKg5D,UAAUh5D,KAAK43D,gBAAiB,EAAG,eACxC53D,KAAKg5D,UAAUh5D,KAAK63D,YAAa,EAAG,WACpC73D,KAAKg5D,UAAUh5D,KAAK83D,WAAY,EAAG,UAER,QAAvB93D,KAAKi4D,eACLj4D,KAAKsa,MAAM,0BAEW,QAAtBta,KAAKs4D,cACLt4D,KAAKsa,MAAM,4BAInB,MAAM2+C,GACF75C,EAAQxN,iBAAiB5R,KAAKwM,EAAGvT,EAAa,4BAA6B+G,KAAKrJ,KAAMsC,EAAaggE,IACnGt3D,EAAI0e,WAAWrgB,KAAKwM,EAAGpL,GAG3B,UAAU83D,EAAM7pD,EAAMoH,GACdyiD,IAAS7pD,GACTrP,KAAKsa,MAAS7D,EAAH,sBAiBvBtgB,EAAOD,QAAQ+wB,YAbK,SAASza,EAAGirD,EAAG9gE,GAC/B,IAAIwiE,EAAI,IAAI3B,EAAehrD,EAAGirD,EAAG9gE,GACjCwiE,EAAEC,cACF,IAAIryC,EAAK5H,EAAM2T,iBAAiBtmB,EAAG2sD,EAAEjB,YAOrC,OANAv2D,EAAI2P,YAAY9E,GAChBA,EAAE+B,MAAM/B,EAAE+E,IAAI,GAAG4lB,YAAYpQ,GAC7BA,EAAG7uB,EAAI,IAAIinB,EAAMsT,MAAMjmB,GACvB2sD,EAAEX,aAAazxC,EAAG7uB,EAAG,MACrBgU,EAAW6a,EAAGhY,YAAcgY,EAAG7uB,EAAEivB,SAASvtB,QAEnCmtB,I,6BC9RX,MAAM,cACF7qB,EAAa,kBACbC,EAAiB,kBACjBC,EACAO,gBAAgB,aACZG,EAAY,YACZU,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,GACH,aACDxE,GACA,EAAQ,GAENw+D,EAAex+D,EAAa,GAAI,IAAK,GAAI,GAAI,GAAI,IAGjDsgE,EAA2C,GAA5BxtD,OAAO1P,GAA0B0P,OAAOzP,GAG7D,MAAMk9D,EACF,cACIt5D,KAAKwM,EAAI,KACTxM,KAAKu5D,MAAQ,KACbv5D,KAAKoL,KAAO,KACZpL,KAAKkhC,MAAQhhC,IACbF,KAAK4b,OAAS1b,KAItB,MAAMs5D,EAAY,SAASt+D,EAAGmU,EAAMiyC,GACf,IAAbA,EAAE1lC,QAAgBvM,EAAO,IACzBiyC,EAAE1lC,OAAS0lC,EAAErgB,OAAOqgB,EAAE90C,EAAGtR,EAAGmU,EAAMiyC,EAAEl2C,QAGtCquD,EAAW,SAAS5iC,EAAGyqB,GACzBkY,EAAUzgE,EAAa89B,GAAI,EAAGyqB,IAG5BoY,EAAU,SAAS7rD,EAAGyzC,GACxB,IAAIqY,EAAK,IAAIruD,YAAY,GAChB,IAAID,SAASsuD,GACnBC,SAAS,EAAG/rD,GAAG,GAClB,IAAIvW,EAAI,IAAIkC,WAAWmgE,GACvBH,EAAUliE,EAAG,EAAGgqD,IAGduY,EAAc,SAAShsD,EAAGyzC,GAC5B,IAAIqY,EAAK,IAAIruD,YAAY,GAChB,IAAID,SAASsuD,GACnBC,SAAS,EAAG/rD,GAAG,GAClB,IAAIvW,EAAI,IAAIkC,WAAWmgE,GACvBH,EAAUliE,EAAG,EAAGgqD,IAGdwY,EAAa,SAASjsD,EAAGyzC,GAC3B,IAAIqY,EAAK,IAAIruD,YAAY,GAChB,IAAID,SAASsuD,GACnBpuD,WAAW,EAAGsC,GAAG,GACpB,IAAIvW,EAAI,IAAIkC,WAAWmgE,GACvBH,EAAUliE,EAAG,EAAGgqD,IAGdyY,EAAa,SAAS5hE,EAAGmpD,GAC3B,GAAU,OAANnpD,EACAshE,EAAS,EAAGnY,OACX,CACD,IAAIjyC,EAAOlX,EAAE+V,SAAW,EACpBxT,EAAMvC,EAAE8V,SACRoB,EAAO,IACPoqD,EAASpqD,EAAMiyC,IAEfmY,EAAS,IAAMnY,GACfuY,EAAYxqD,EAAMiyC,IAEtBkY,EAAU9+D,EAAK2U,EAAO,EAAGiyC,KAwE3B0Y,EAAe,SAAS9qD,EAAGupD,EAASnX,GAClCA,EAAEpgB,OAAShyB,EAAE7O,SAAWo4D,EACxBsB,EAAW,KAAMzY,GAEjByY,EAAW7qD,EAAE7O,OAAQihD,GACzBoY,EAAQxqD,EAAE3O,YAAa+gD,GACvBoY,EAAQxqD,EAAE1O,gBAAiB8gD,GAC3BmY,EAASvqD,EAAE6S,UAAWu/B,GACtBmY,EAASvqD,EAAE2S,UAAU,EAAE,EAAGy/B,GAC1BmY,EAASvqD,EAAE0S,aAAc0/B,GA7EZ,SAASpyC,EAAGoyC,GACzB,IAAInpD,EAAI+W,EAAEgT,KAAK8Q,IAAI/mB,GAAKA,EAAEiW,MAC1Bw3C,EAAQvhE,EAAEyB,OAAQ0nD,GAElB,IAAK,IAAIlrD,EAAI,EAAGA,EAAI+B,EAAEyB,OAAQxD,IAC1BsjE,EAAQvhE,EAAE/B,GAAIkrD,GAyElB2Y,CAAS/qD,EAAGoyC,GAtEM,SAASpyC,EAAGoyC,GAC9B,IAAIzpD,EAAIqX,EAAE+W,EAAErsB,OACZ8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIS,EAAIqY,EAAE+W,EAAE7vB,GAEZ,OADAqjE,EAAS5iE,EAAE++B,QAAS0rB,GACZzqD,EAAE++B,SACN,KAAK/4B,EACD,MACJ,KAAKC,EACD28D,EAAS5iE,EAAEQ,MAAQ,EAAI,EAAGiqD,GAC1B,MACJ,KAAK7jD,EACDq8D,EAAWjjE,EAAEQ,MAAOiqD,GACpB,MACJ,KAAK5jD,EACDm8D,EAAYhjE,EAAEQ,MAAOiqD,GACrB,MACJ,KAAK/jD,EACL,KAAKC,EACDu8D,EAAWljE,EAAEmX,UAAWszC,KAmDpC4Y,CAAchrD,EAAGoyC,GAtCA,SAASpyC,EAAGoyC,GAC7B,IAAIzpD,EAAIqX,EAAEiY,SAASvtB,OACnB8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBqjE,EAASvqD,EAAEiY,SAAS/wB,GAAG4gC,QAAU,EAAI,EAAGsqB,GACxCmY,EAASvqD,EAAEiY,SAAS/wB,GAAG0jB,IAAKwnC,GAkChC6Y,CAAajrD,EAAGoyC,GA9CD,SAASpyC,EAAGoyC,GAC3B,IAAIzpD,EAAIqX,EAAEhX,EAAE0B,OACZ8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB4jE,EAAa9qD,EAAEhX,EAAE9B,GAAI8Y,EAAE7O,OAAQihD,GA2CnC8Y,CAAWlrD,EAAGoyC,GA/BA,SAASpyC,EAAGoyC,GAC1B,IAAIzpD,EAAIypD,EAAEpgB,MAAQ,EAAIhyB,EAAE8a,SAASpwB,OACjC8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBsjE,EAAQxqD,EAAE8a,SAAS5zB,GAAIkrD,GAC3BzpD,EAAIypD,EAAEpgB,MAAQ,EAAIhyB,EAAEwjB,QAAQ94B,OAC5B8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB2jE,EAAW7qD,EAAEwjB,QAAQt8B,GAAG8c,QAASouC,GACjCoY,EAAQxqD,EAAEwjB,QAAQt8B,GAAG+c,QAASmuC,GAC9BoY,EAAQxqD,EAAEwjB,QAAQt8B,GAAGgd,MAAOkuC,GAEhCzpD,EAAIypD,EAAEpgB,MAAQ,EAAIhyB,EAAEiY,SAASvtB,OAC7B8/D,EAAQ7hE,EAAGypD,GACX,IAAK,IAAIlrD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB2jE,EAAW7qD,EAAEiY,SAAS/wB,GAAGO,KAAM2qD,GAiBnC+Y,CAAUnrD,EAAGoyC,IAiCjBnrD,EAAOD,QAAQ4oC,UAbG,SAAStyB,EAAG0C,EAAGk3B,EAAGh7B,EAAM81B,GACtC,IAAIogB,EAAI,IAAIgY,EASZ,OARAhY,EAAE90C,EAAIA,EACN80C,EAAErgB,OAASmF,EACXkb,EAAEl2C,KAAOA,EACTk2C,EAAEpgB,MAAQA,EACVogB,EAAE1lC,OAAS,EAvBI,SAAS0lC,GACxBkY,EAAUt9D,EAAeA,EAActC,OAAQ0nD,GAC/CmY,EAASJ,EAAc/X,GACvBmY,EArJiB,EAqJKnY,GACtBkY,EAAUjC,EAAWA,EAAU39D,OAAQ0nD,GACvCmY,EAAS,EAAGnY,GACZmY,EAAS,EAAGnY,GACZmY,EAAS,EAAGnY,GACZmY,EAAS,EAAGnY,GACZmY,EAAS,EAAGnY,GACZuY,EA/JiB,MA+JKvY,GACtBwY,EA/JiB,MA+JIxY,GAarBgZ,CAAWhZ,GACXmY,EAASvqD,EAAEiY,SAASvtB,OAAQ0nD,GAC5B0Y,EAAa9qD,EAAG,KAAMoyC,GACfA,EAAE1lC,S,gBClMb,OAEC,WACG,aAEA,IAAI2+C,EAAK,CACLC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,cAAe,OACfC,OAAQ,UACRC,YAAa,eACbC,KAAM,MACNC,SAAU,OACVC,KAAM,YACNC,OAAQ,WACRC,YAAa,2FACbvjE,IAAK,sBACLwjE,WAAY,wBACZC,aAAc,aACdC,KAAM,SAGV,SAAStY,EAAQprD,GAEb,OAAO2jE,EAAeC,EAAc5jE,GAAMuC,WAG9C,SAASshE,EAAS/pD,EAAKgqD,GACnB,OAAO1Y,EAAQjc,MAAM,KAAM,CAACr1B,GAAKi2B,OAAO+zB,GAAQ,KAGpD,SAASH,EAAeI,EAAYD,GAChC,IAAiDplD,EAAkBjgB,EAAG6vB,EAAG01C,EAAI3Z,EAAK4Z,EAAeC,EAAYC,EAAaT,EAAtHU,EAAS,EAAGC,EAAcN,EAAW9hE,OAAaqiE,EAAS,GAC/D,IAAK7lE,EAAI,EAAGA,EAAI4lE,EAAa5lE,IACzB,GAA6B,iBAAlBslE,EAAWtlE,GAClB6lE,GAAUP,EAAWtlE,QAEpB,GAA6B,iBAAlBslE,EAAWtlE,GAAiB,CAExC,IADAulE,EAAKD,EAAWtlE,IACTq0C,KAEH,IADAp0B,EAAMolD,EAAKM,GACN91C,EAAI,EAAGA,EAAI01C,EAAGlxB,KAAK7wC,OAAQqsB,IAAK,CACjC,GAAW6oC,MAAPz4C,EACA,MAAM,IAAIrc,MAAM+oD,EAAQ,gEAAiE4Y,EAAGlxB,KAAKxkB,GAAI01C,EAAGlxB,KAAKxkB,EAAE,KAEnH5P,EAAMA,EAAIslD,EAAGlxB,KAAKxkB,SAItB5P,EADKslD,EAAGO,SACFT,EAAKE,EAAGO,UAGRT,EAAKM,KAOf,GAJIxB,EAAGG,SAAStpD,KAAKuqD,EAAGpuD,OAASgtD,EAAGI,cAAcvpD,KAAKuqD,EAAGpuD,OAAS8I,aAAe+wB,WAC9E/wB,EAAMA,KAGNkkD,EAAGM,YAAYzpD,KAAKuqD,EAAGpuD,OAAyB,iBAAR8I,GAAoB1F,MAAM0F,GAClE,MAAM,IAAIzb,UAAUmoD,EAAQ,0CAA2C1sC,IAO3E,OAJIkkD,EAAGK,OAAOxpD,KAAKuqD,EAAGpuD,QAClBuuD,EAAczlD,GAAO,GAGjBslD,EAAGpuD,MACP,IAAK,IACD8I,EAAMunC,SAASvnC,EAAK,IAAIra,SAAS,GACjC,MACJ,IAAK,IACDqa,EAAM7a,OAAOC,aAAamiD,SAASvnC,EAAK,KACxC,MACJ,IAAK,IACL,IAAK,IACDA,EAAMunC,SAASvnC,EAAK,IACpB,MACJ,IAAK,IACDA,EAAMpE,KAAKC,UAAUmE,EAAK,KAAMslD,EAAGQ,MAAQve,SAAS+d,EAAGQ,OAAS,GAChE,MACJ,IAAK,IACD9lD,EAAMslD,EAAGS,UAAY1rD,WAAW2F,GAAKgmD,cAAcV,EAAGS,WAAa1rD,WAAW2F,GAAKgmD,gBACnF,MACJ,IAAK,IACDhmD,EAAMslD,EAAGS,UAAY1rD,WAAW2F,GAAKimD,QAAQX,EAAGS,WAAa1rD,WAAW2F,GACxE,MACJ,IAAK,IACDA,EAAMslD,EAAGS,UAAY5gE,OAAOqQ,OAAOwK,EAAIvK,YAAY6vD,EAAGS,aAAe1rD,WAAW2F,GAChF,MACJ,IAAK,IACDA,GAAOunC,SAASvnC,EAAK,MAAQ,GAAGra,SAAS,GACzC,MACJ,IAAK,IACDqa,EAAM7a,OAAO6a,GACbA,EAAOslD,EAAGS,UAAY/lD,EAAIkmD,UAAU,EAAGZ,EAAGS,WAAa/lD,EACvD,MACJ,IAAK,IACDA,EAAM7a,SAAS6a,GACfA,EAAOslD,EAAGS,UAAY/lD,EAAIkmD,UAAU,EAAGZ,EAAGS,WAAa/lD,EACvD,MACJ,IAAK,IACDA,EAAMvf,OAAOkB,UAAUgE,SAASzF,KAAK8f,GAAKmmD,MAAM,GAAI,GAAGC,cACvDpmD,EAAOslD,EAAGS,UAAY/lD,EAAIkmD,UAAU,EAAGZ,EAAGS,WAAa/lD,EACvD,MACJ,IAAK,IACDA,EAAMunC,SAASvnC,EAAK,MAAQ,EAC5B,MACJ,IAAK,IACDA,EAAMA,EAAIqmD,UACVrmD,EAAOslD,EAAGS,UAAY/lD,EAAIkmD,UAAU,EAAGZ,EAAGS,WAAa/lD,EACvD,MACJ,IAAK,IACDA,GAAOunC,SAASvnC,EAAK,MAAQ,GAAGra,SAAS,IACzC,MACJ,IAAK,IACDqa,GAAOunC,SAASvnC,EAAK,MAAQ,GAAGra,SAAS,IAAI2gE,cAGjDpC,EAAGO,KAAK1pD,KAAKuqD,EAAGpuD,MAChB0uD,GAAU5lD,IAGNkkD,EAAGK,OAAOxpD,KAAKuqD,EAAGpuD,OAAWuuD,IAAeH,EAAGN,KAK/CA,EAAO,IAJPA,EAAOS,EAAc,IAAM,IAC3BzlD,EAAMA,EAAIra,WAAW4gE,QAAQrC,EAAGc,KAAM,KAK1CO,EAAgBD,EAAGkB,SAA2B,MAAhBlB,EAAGkB,SAAmB,IAAMlB,EAAGkB,SAASC,OAAO,GAAK,IAClFjB,EAAaF,EAAGQ,OAASd,EAAOhlD,GAAKzc,OACrCooD,EAAM2Z,EAAGQ,OAASN,EAAa,EAAID,EAActX,OAAOuX,GAAoB,GAC5EI,GAAUN,EAAG7V,MAAQuV,EAAOhlD,EAAM2rC,EAAyB,MAAlB4Z,EAAwBP,EAAOrZ,EAAM3rC,EAAM2rC,EAAMqZ,EAAOhlD,GAI7G,OAAO4lD,EAGX,IAAIc,EAAgBjmE,OAAOY,OAAO,MAElC,SAAS6jE,EAAc9pD,GACnB,GAAIsrD,EAActrD,GACd,OAAOsrD,EAActrD,GAIzB,IADA,IAAgB2wC,EAAZ4a,EAAOvrD,EAAYiqD,EAAa,GAAIuB,EAAY,EAC7CD,GAAM,CACT,GAAqC,QAAhC5a,EAAQmY,EAAGS,KAAKxqD,KAAKwsD,IACtBtB,EAAWj0B,KAAK2a,EAAM,SAErB,GAAuC,QAAlCA,EAAQmY,EAAGU,OAAOzqD,KAAKwsD,IAC7BtB,EAAWj0B,KAAK,SAEf,IAA4C,QAAvC2a,EAAQmY,EAAGW,YAAY1qD,KAAKwsD,IA6ClC,MAAM,IAAIvM,YAAY,oCA5CtB,GAAIrO,EAAM,GAAI,CACV6a,GAAa,EACb,IAAIC,EAAa,GAAIC,EAAoB/a,EAAM,GAAIgb,EAAc,GACjE,GAAuD,QAAlDA,EAAc7C,EAAG5iE,IAAI6Y,KAAK2sD,IAe3B,MAAM,IAAI1M,YAAY,gDAbtB,IADAyM,EAAWz1B,KAAK21B,EAAY,IACwD,MAA5ED,EAAoBA,EAAkBZ,UAAUa,EAAY,GAAGxjE,UACnE,GAA8D,QAAzDwjE,EAAc7C,EAAGY,WAAW3qD,KAAK2sD,IAClCD,EAAWz1B,KAAK21B,EAAY,QAE3B,IAAgE,QAA3DA,EAAc7C,EAAGa,aAAa5qD,KAAK2sD,IAIzC,MAAM,IAAI1M,YAAY,gDAHtByM,EAAWz1B,KAAK21B,EAAY,IAUxChb,EAAM,GAAK8a,OAGXD,GAAa,EAEjB,GAAkB,IAAdA,EACA,MAAM,IAAIjjE,MAAM,6EAGpB0hE,EAAWj0B,KACP,CACIyzB,YAAa9Y,EAAM,GACnB8Z,SAAa9Z,EAAM,GACnB3X,KAAa2X,EAAM,GACnBiZ,KAAajZ,EAAM,GACnBya,SAAaza,EAAM,GACnB0D,MAAa1D,EAAM,GACnB+Z,MAAa/Z,EAAM,GACnBga,UAAaha,EAAM,GACnB70C,KAAa60C,EAAM,KAO/B4a,EAAOA,EAAKT,UAAUna,EAAM,GAAGxoD,QAEnC,OAAOmjE,EAActrD,GAAOiqD,EAQ5BxlE,EAAiB,QAAI6sD,EACrB7sD,EAAkB,SAAIslE,EAEJ,oBAAX//C,SACPA,OAAgB,QAAIsnC,EACpBtnC,OAAiB,SAAI+/C,OAQhB,KALD,aACI,MAAO,CACH,QAAWzY,EACX,SAAYyY,IAEnB,+BAhOZ,I,6BCAD,MAAM,QAAEn2D,GAAY,EAAQ,IACtB,cAAE6Y,GAAkB,EAAQ,IAC5B,aAAEjlB,GAAiB,EAAQ,GAE3BokE,EAAa,GAUnBlnE,EAAOD,QAAQ2oC,cAPO,SAASryB,GAE3B,IAAK,IAAI0N,KAAOmjD,EACZn/C,EAAc1R,EAAGvT,EAAaihB,GAAMmjD,EAAWnjD,GAAM,GACrD7U,EAAQmH,EAAG,IAKnB,MAAMlT,EAAS,EAAQ,KACjB,aAAEkkC,GAAsB,EAAQ,KAChC,kBAAEE,GAAsB,EAAQ,KAChC,cAAEa,GAAsB,EAAQ,KAChC,aAAEF,GAAsB,EAAQ,KAChC,gBAAEI,GAAsB,EAAQ,KAChC,WAAEX,GAAsB,EAAQ,KAChC,eAAEE,GAAsB,EAAQ,KAChC,cAAEJ,GAAsB,EAAQ,KAChC,aAAEM,GAAsB,EAAQ,IAEtCm/B,EAAe,GAAI7/B,EACnB6/B,EAAW/jE,EAAOklC,iBAAmBC,EACrC4+B,EAAW/jE,EAAOmkC,eAAiBC,EACnC2/B,EAAW/jE,EAAOqkC,gBAAkBC,EACpCy/B,EAAW/jE,EAAOukC,eAAiBC,EACnCu/B,EAAW/jE,EAAOykC,gBAAkBC,EACpCq/B,EAAW/jE,EAAO8kC,iBAAmBC,EACrCg/B,EAAW/jE,EAAO2kC,iBAAmBC,EACrCm/B,EAAW/jE,EAAOglC,eAAiBC,EAKnC,MAAM,gBAAEI,GAAoB,EAAQ,IACpC0+B,EAAW/jE,EAAOolC,oBAAsBC","file":"fengari-web.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/**\n@license MIT\n\nCopyright © 2017-2018 Benoit Giannangeli\nCopyright © 2017-2018 Daurnimator\nCopyright © 1994–2017 Lua.org, PUC-Rio.\n*/\n\n\"use strict\";\n\nconst core = require(\"./fengaricore.js\");\n\nmodule.exports.FENGARI_AUTHORS         = core.FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = core.FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = core.FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = core.FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = core.FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = core.FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = core.FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = core.FENGARI_VERSION_RELEASE;\n\nmodule.exports.luastring_eq      = core.luastring_eq;\nmodule.exports.luastring_indexOf = core.luastring_indexOf;\nmodule.exports.luastring_of      = core.luastring_of;\nmodule.exports.to_jsstring       = core.to_jsstring;\nmodule.exports.to_luastring      = core.to_luastring;\nmodule.exports.to_uristring      = core.to_uristring;\n\nconst luaconf = require('./luaconf.js');\nconst lua     = require('./lua.js');\nconst lauxlib = require('./lauxlib.js');\nconst lualib  = require('./lualib.js');\n\nmodule.exports.luaconf = luaconf;\nmodule.exports.lua     = lua;\nmodule.exports.lauxlib = lauxlib;\nmodule.exports.lualib  = lualib;\n","\"use strict\";\n\n/*\n * Fengari specific string conversion functions\n */\n\nlet luastring_from;\nif (typeof Uint8Array.from === \"function\") {\n    luastring_from = Uint8Array.from.bind(Uint8Array);\n} else {\n    luastring_from = function(a) {\n        let i = 0;\n        let len = a.length;\n        let r = new Uint8Array(len);\n        while (len > i) r[i] = a[i++];\n        return r;\n    };\n}\n\nlet luastring_indexOf;\nif (typeof (new Uint8Array().indexOf) === \"function\") {\n    luastring_indexOf = function(s, v, i) {\n        return s.indexOf(v, i);\n    };\n} else {\n    /* Browsers that don't support Uint8Array.indexOf seem to allow using Array.indexOf on Uint8Array objects e.g. IE11 */\n    let array_indexOf = [].indexOf;\n    if (array_indexOf.call(new Uint8Array(1), 0) !== 0) throw Error(\"missing .indexOf\");\n    luastring_indexOf = function(s, v, i) {\n        return array_indexOf.call(s, v, i);\n    };\n}\n\nlet luastring_of;\nif (typeof Uint8Array.of === \"function\") {\n    luastring_of = Uint8Array.of.bind(Uint8Array);\n} else {\n    luastring_of = function() {\n        return luastring_from(arguments);\n    };\n}\n\nconst is_luastring = function(s) {\n    return s instanceof Uint8Array;\n};\n\n/* test two lua strings for equality */\nconst luastring_eq = function(a, b) {\n    if (a !== b) {\n        let len = a.length;\n        if (len !== b.length) return false;\n        /* XXX: Should this be a constant time algorithm? */\n        for (let i=0; i<len; i++)\n            if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst unicode_error_message = \"cannot convert invalid utf8 to javascript string\";\nconst to_jsstring = function(value, from, to, replacement_char) {\n    if (!is_luastring(value)) throw new TypeError(\"to_jsstring expects a Uint8Array\");\n\n    if (to === void 0) {\n        to = value.length;\n    } else {\n        to = Math.min(value.length, to);\n    }\n\n    let str = \"\";\n    for (let i = (from!==void 0?from:0); i < to;) {\n        let u0 = value[i++];\n        if (u0 < 0x80) {\n            /* single byte sequence */\n            str += String.fromCharCode(u0);\n        } else if (u0 < 0xC2 || u0 > 0xF4) {\n            if (!replacement_char) throw RangeError(unicode_error_message);\n            str += \"�\";\n        } else if (u0 <= 0xDF) {\n            /* two byte sequence */\n            if (i >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            str += String.fromCharCode(((u0 & 0x1F) << 6) + (u1 & 0x3F));\n        } else if (u0 <= 0xEF) {\n            /* three byte sequence */\n            if (i+1 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u = ((u0 & 0x0F) << 12) + ((u1 & 0x3F) << 6) + (u2 & 0x3F);\n            if (u <= 0xFFFF) { /* BMP codepoint */\n                str += String.fromCharCode(u);\n            } else { /* Astral codepoint */\n                u -= 0x10000;\n                let s1 = (u >> 10) + 0xD800;\n                let s2 = (u % 0x400) + 0xDC00;\n                str += String.fromCharCode(s1, s2);\n            }\n        } else {\n            /* four byte sequence */\n            if (i+2 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u3 = value[i++];\n            if ((u3&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            /* Has to be astral codepoint */\n            let u = ((u0 & 0x07) << 18) + ((u1 & 0x3F) << 12) + ((u2 & 0x3F) << 6) + (u3 & 0x3F);\n            u -= 0x10000;\n            let s1 = (u >> 10) + 0xD800;\n            let s2 = (u % 0x400) + 0xDC00;\n            str += String.fromCharCode(s1, s2);\n        }\n    }\n    return str;\n};\n\n/* bytes allowed unescaped in a uri */\nconst uri_allowed = (\";,/?:@&=+$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,-_.!~*'()#\").split('').reduce(function(uri_allowed, c) {\n    uri_allowed[c.charCodeAt(0)] = true;\n    return uri_allowed;\n}, {});\n\n/* utility function to convert a lua string to a js string with uri escaping */\nconst to_uristring = function(a) {\n    if (!is_luastring(a)) throw new TypeError(\"to_uristring expects a Uint8Array\");\n    let s = \"\";\n    for (let i=0; i<a.length; i++) {\n        let v = a[i];\n        if (uri_allowed[v]) {\n            s += String.fromCharCode(v);\n        } else {\n            s += \"%\" + (v<0x10?\"0\":\"\") + v.toString(16);\n        }\n    }\n    return s;\n};\n\nconst to_luastring_cache = {};\n\nconst to_luastring = function(str, cache) {\n    if (typeof str !== \"string\") throw new TypeError(\"to_luastring expects a javascript string\");\n\n    if (cache) {\n        let cached = to_luastring_cache[str];\n        if (is_luastring(cached)) return cached;\n    }\n\n    let len = str.length;\n    let outU8Array = Array(len); /* array is at *least* going to be length of string */\n    let outIdx = 0;\n    for (let i = 0; i < len; ++i) {\n        let u = str.charCodeAt(i);\n        if (u <= 0x7F) {\n            outU8Array[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n            outU8Array[outIdx++] = 0xC0 | (u >> 6);\n            outU8Array[outIdx++] = 0x80 | (u & 63);\n        } else {\n            /* This part is to work around possible lack of String.codePointAt */\n            if (u >= 0xD800 && u <= 0xDBFF && (i+1) < len) {\n                /* is first half of surrogate pair */\n                let v = str.charCodeAt(i+1);\n                if (v >= 0xDC00 && v <= 0xDFFF) {\n                    /* is valid low surrogate */\n                    i++;\n                    u = (u - 0xD800) * 0x400 + v + 0x2400;\n                }\n            }\n            if (u <= 0xFFFF) {\n                outU8Array[outIdx++] = 0xE0 | (u >> 12);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            } else {\n                outU8Array[outIdx++] = 0xF0 | (u >> 18);\n                outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            }\n        }\n    }\n    outU8Array = luastring_from(outU8Array);\n\n    if (cache) to_luastring_cache[str] = outU8Array;\n\n    return outU8Array;\n};\n\nconst from_userstring = function(str) {\n    if (!is_luastring(str)) {\n        if (typeof str === \"string\") {\n            str = to_luastring(str);\n        } else {\n            throw new TypeError(\"expects an array of bytes or javascript string\");\n        }\n    }\n    return str;\n};\n\nmodule.exports.luastring_from    = luastring_from;\nmodule.exports.luastring_indexOf = luastring_indexOf;\nmodule.exports.luastring_of      = luastring_of;\nmodule.exports.is_luastring      = is_luastring;\nmodule.exports.luastring_eq      = luastring_eq;\nmodule.exports.to_jsstring       = to_jsstring;\nmodule.exports.to_uristring      = to_uristring;\nmodule.exports.to_luastring      = to_luastring;\nmodule.exports.from_userstring   = from_userstring;\n\n\n/* mark for precompiled code ('<esc>Lua') */\nconst LUA_SIGNATURE = to_luastring(\"\\x1bLua\");\n\nconst LUA_VERSION_MAJOR   = \"5\";\nconst LUA_VERSION_MINOR   = \"3\";\nconst LUA_VERSION_NUM     = 503;\nconst LUA_VERSION_RELEASE = \"4\";\n\nconst LUA_VERSION         = \"Lua \" + LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nconst LUA_RELEASE         = LUA_VERSION + \".\" + LUA_VERSION_RELEASE;\nconst LUA_COPYRIGHT       = LUA_RELEASE + \"  Copyright (C) 1994-2017 Lua.org, PUC-Rio\";\nconst LUA_AUTHORS         = \"R. Ierusalimschy, L. H. de Figueiredo, W. Celes\";\n\nmodule.exports.LUA_SIGNATURE       = LUA_SIGNATURE;\nmodule.exports.LUA_VERSION_MAJOR   = LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR   = LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM     = LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE = LUA_VERSION_RELEASE;\nmodule.exports.LUA_VERSION         = LUA_VERSION;\nmodule.exports.LUA_RELEASE         = LUA_RELEASE;\nmodule.exports.LUA_COPYRIGHT       = LUA_COPYRIGHT;\nmodule.exports.LUA_AUTHORS         = LUA_AUTHORS;\n\n\nconst thread_status = {\n    LUA_OK:        0,\n    LUA_YIELD:     1,\n    LUA_ERRRUN:    2,\n    LUA_ERRSYNTAX: 3,\n    LUA_ERRMEM:    4,\n    LUA_ERRGCMM:   5,\n    LUA_ERRERR:    6\n};\n\nconst constant_types = {\n    LUA_TNONE:          -1,\n    LUA_TNIL:           0,\n    LUA_TBOOLEAN:       1,\n    LUA_TLIGHTUSERDATA: 2,\n    LUA_TNUMBER:        3,\n    LUA_TSTRING:        4,\n    LUA_TTABLE:         5,\n    LUA_TFUNCTION:      6,\n    LUA_TUSERDATA:      7,\n    LUA_TTHREAD:        8,\n    LUA_NUMTAGS:        9\n};\n\nconstant_types.LUA_TSHRSTR = constant_types.LUA_TSTRING | (0 << 4);  /* short strings */\nconstant_types.LUA_TLNGSTR = constant_types.LUA_TSTRING | (1 << 4);  /* long strings */\n\nconstant_types.LUA_TNUMFLT = constant_types.LUA_TNUMBER | (0 << 4);  /* float numbers */\nconstant_types.LUA_TNUMINT = constant_types.LUA_TNUMBER | (1 << 4);  /* integer numbers */\n\nconstant_types.LUA_TLCL = constant_types.LUA_TFUNCTION | (0 << 4);  /* Lua closure */\nconstant_types.LUA_TLCF = constant_types.LUA_TFUNCTION | (1 << 4);  /* light C function */\nconstant_types.LUA_TCCL = constant_types.LUA_TFUNCTION | (2 << 4);  /* C closure */\n\n/*\n** Comparison and arithmetic functions\n*/\n\nconst LUA_OPADD  = 0;   /* ORDER TM, ORDER OP */\nconst LUA_OPSUB  = 1;\nconst LUA_OPMUL  = 2;\nconst LUA_OPMOD  = 3;\nconst LUA_OPPOW  = 4;\nconst LUA_OPDIV  = 5;\nconst LUA_OPIDIV = 6;\nconst LUA_OPBAND = 7;\nconst LUA_OPBOR  = 8;\nconst LUA_OPBXOR = 9;\nconst LUA_OPSHL  = 10;\nconst LUA_OPSHR  = 11;\nconst LUA_OPUNM  = 12;\nconst LUA_OPBNOT = 13;\n\nconst LUA_OPEQ = 0;\nconst LUA_OPLT = 1;\nconst LUA_OPLE = 2;\n\nconst LUA_MINSTACK = 20;\n\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;\n\nconst lua_upvalueindex = function(i) {\n    return LUA_REGISTRYINDEX - i;\n};\n\n/* predefined values in the registry */\nconst LUA_RIDX_MAINTHREAD = 1;\nconst LUA_RIDX_GLOBALS    = 2;\nconst LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;\n\nclass lua_Debug {\n    constructor() {\n        this.event = NaN;\n        this.name = null;           /* (n) */\n        this.namewhat = null;       /* (n) 'global', 'local', 'field', 'method' */\n        this.what = null;           /* (S) 'Lua', 'C', 'main', 'tail' */\n        this.source = null;         /* (S) */\n        this.currentline = NaN;     /* (l) */\n        this.linedefined = NaN;     /* (S) */\n        this.lastlinedefined = NaN; /* (S) */\n        this.nups = NaN;            /* (u) number of upvalues */\n        this.nparams = NaN;         /* (u) number of parameters */\n        this.isvararg = NaN;        /* (u) */\n        this.istailcall = NaN;      /* (t) */\n        this.short_src = null;      /* (S) */\n        /* private part */\n        this.i_ci = null;           /* active function */\n    }\n}\n\n/*\n** Event codes\n*/\nconst LUA_HOOKCALL     = 0;\nconst LUA_HOOKRET      = 1;\nconst LUA_HOOKLINE     = 2;\nconst LUA_HOOKCOUNT    = 3;\nconst LUA_HOOKTAILCALL = 4;\n\n\n/*\n** Event masks\n*/\nconst LUA_MASKCALL  = (1 << LUA_HOOKCALL);\nconst LUA_MASKRET   = (1 << LUA_HOOKRET);\nconst LUA_MASKLINE  = (1 << LUA_HOOKLINE);\nconst LUA_MASKCOUNT = (1 << LUA_HOOKCOUNT);\n\nmodule.exports.LUA_HOOKCALL            = LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = -1;\nmodule.exports.LUA_OPADD               = LUA_OPADD;\nmodule.exports.LUA_OPBAND              = LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = LUA_OPLE;\nmodule.exports.LUA_OPLT                = LUA_OPLT;\nmodule.exports.LUA_OPMOD               = LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = LUA_REGISTRYINDEX;\nmodule.exports.LUA_RIDX_GLOBALS        = LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = LUA_RIDX_MAINTHREAD;\nmodule.exports.constant_types          = constant_types;\nmodule.exports.lua_Debug               = lua_Debug;\nmodule.exports.lua_upvalueindex        = lua_upvalueindex;\nmodule.exports.thread_status           = thread_status;\n","\"use strict\";\n\nconst defs   = require(\"./defs.js\");\nconst lapi   = require(\"./lapi.js\");\nconst ldebug = require(\"./ldebug.js\");\nconst ldo    = require(\"./ldo.js\");\nconst lstate = require(\"./lstate.js\");\n\nmodule.exports.LUA_AUTHORS             = defs.LUA_AUTHORS;\nmodule.exports.LUA_COPYRIGHT           = defs.LUA_COPYRIGHT;\nmodule.exports.LUA_ERRERR              = defs.thread_status.LUA_ERRERR;\nmodule.exports.LUA_ERRGCMM             = defs.thread_status.LUA_ERRGCMM;\nmodule.exports.LUA_ERRMEM              = defs.thread_status.LUA_ERRMEM;\nmodule.exports.LUA_ERRRUN              = defs.thread_status.LUA_ERRRUN;\nmodule.exports.LUA_ERRSYNTAX           = defs.thread_status.LUA_ERRSYNTAX;\nmodule.exports.LUA_HOOKCALL            = defs.LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = defs.LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = defs.LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = defs.LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = defs.LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = defs.LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = defs.LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = defs.LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = defs.LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = defs.LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = defs.LUA_MULTRET;\nmodule.exports.LUA_NUMTAGS             = defs.constant_types.LUA_NUMTAGS;\nmodule.exports.LUA_OK                  = defs.thread_status.LUA_OK;\nmodule.exports.LUA_OPADD               = defs.LUA_OPADD;\nmodule.exports.LUA_OPBAND              = defs.LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = defs.LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = defs.LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = defs.LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = defs.LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = defs.LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = defs.LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = defs.LUA_OPLE;\nmodule.exports.LUA_OPLT                = defs.LUA_OPLT;\nmodule.exports.LUA_OPMOD               = defs.LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = defs.LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = defs.LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = defs.LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = defs.LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = defs.LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = defs.LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = defs.LUA_REGISTRYINDEX;\nmodule.exports.LUA_RELEASE             = defs.LUA_RELEASE;\nmodule.exports.LUA_RIDX_GLOBALS        = defs.LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = defs.LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = defs.LUA_RIDX_MAINTHREAD;\nmodule.exports.LUA_SIGNATURE           = defs.LUA_SIGNATURE;\nmodule.exports.LUA_TNONE               = defs.constant_types.LUA_TNONE;\nmodule.exports.LUA_TNIL                = defs.constant_types.LUA_TNIL;\nmodule.exports.LUA_TBOOLEAN            = defs.constant_types.LUA_TBOOLEAN;\nmodule.exports.LUA_TLIGHTUSERDATA      = defs.constant_types.LUA_TLIGHTUSERDATA;\nmodule.exports.LUA_TNUMBER             = defs.constant_types.LUA_TNUMBER;\nmodule.exports.LUA_TSTRING             = defs.constant_types.LUA_TSTRING;\nmodule.exports.LUA_TTABLE              = defs.constant_types.LUA_TTABLE;\nmodule.exports.LUA_TFUNCTION           = defs.constant_types.LUA_TFUNCTION;\nmodule.exports.LUA_TUSERDATA           = defs.constant_types.LUA_TUSERDATA;\nmodule.exports.LUA_TTHREAD             = defs.constant_types.LUA_TTHREAD;\nmodule.exports.LUA_VERSION             = defs.LUA_VERSION;\nmodule.exports.LUA_VERSION_MAJOR       = defs.LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR       = defs.LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM         = defs.LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE     = defs.LUA_VERSION_RELEASE;\nmodule.exports.LUA_YIELD               = defs.thread_status.LUA_YIELD;\nmodule.exports.lua_Debug               = defs.lua_Debug;\nmodule.exports.lua_upvalueindex        = defs.lua_upvalueindex;\nmodule.exports.lua_absindex            = lapi.lua_absindex;\nmodule.exports.lua_arith               = lapi.lua_arith;\nmodule.exports.lua_atpanic             = lapi.lua_atpanic;\nmodule.exports.lua_atnativeerror       = lapi.lua_atnativeerror;\nmodule.exports.lua_call                = lapi.lua_call;\nmodule.exports.lua_callk               = lapi.lua_callk;\nmodule.exports.lua_checkstack          = lapi.lua_checkstack;\nmodule.exports.lua_close               = lstate.lua_close;\nmodule.exports.lua_compare             = lapi.lua_compare;\nmodule.exports.lua_concat              = lapi.lua_concat;\nmodule.exports.lua_copy                = lapi.lua_copy;\nmodule.exports.lua_createtable         = lapi.lua_createtable;\nmodule.exports.lua_dump                = lapi.lua_dump;\nmodule.exports.lua_error               = lapi.lua_error;\nmodule.exports.lua_gc                  = lapi.lua_gc;\nmodule.exports.lua_getallocf           = lapi.lua_getallocf;\nmodule.exports.lua_getextraspace       = lapi.lua_getextraspace;\nmodule.exports.lua_getfield            = lapi.lua_getfield;\nmodule.exports.lua_getglobal           = lapi.lua_getglobal;\nmodule.exports.lua_gethook             = ldebug.lua_gethook;\nmodule.exports.lua_gethookcount        = ldebug.lua_gethookcount;\nmodule.exports.lua_gethookmask         = ldebug.lua_gethookmask;\nmodule.exports.lua_geti                = lapi.lua_geti;\nmodule.exports.lua_getinfo             = ldebug.lua_getinfo;\nmodule.exports.lua_getlocal            = ldebug.lua_getlocal;\nmodule.exports.lua_getmetatable        = lapi.lua_getmetatable;\nmodule.exports.lua_getstack            = ldebug.lua_getstack;\nmodule.exports.lua_gettable            = lapi.lua_gettable;\nmodule.exports.lua_gettop              = lapi.lua_gettop;\nmodule.exports.lua_getupvalue          = lapi.lua_getupvalue;\nmodule.exports.lua_getuservalue        = lapi.lua_getuservalue;\nmodule.exports.lua_insert              = lapi.lua_insert;\nmodule.exports.lua_isboolean           = lapi.lua_isboolean;\nmodule.exports.lua_iscfunction         = lapi.lua_iscfunction;\nmodule.exports.lua_isfunction          = lapi.lua_isfunction;\nmodule.exports.lua_isinteger           = lapi.lua_isinteger;\nmodule.exports.lua_islightuserdata     = lapi.lua_islightuserdata;\nmodule.exports.lua_isnil               = lapi.lua_isnil;\nmodule.exports.lua_isnone              = lapi.lua_isnone;\nmodule.exports.lua_isnoneornil         = lapi.lua_isnoneornil;\nmodule.exports.lua_isnumber            = lapi.lua_isnumber;\nmodule.exports.lua_isproxy             = lapi.lua_isproxy;\nmodule.exports.lua_isstring            = lapi.lua_isstring;\nmodule.exports.lua_istable             = lapi.lua_istable;\nmodule.exports.lua_isthread            = lapi.lua_isthread;\nmodule.exports.lua_isuserdata          = lapi.lua_isuserdata;\nmodule.exports.lua_isyieldable         = ldo.lua_isyieldable;\nmodule.exports.lua_len                 = lapi.lua_len;\nmodule.exports.lua_load                = lapi.lua_load;\nmodule.exports.lua_newstate            = lstate.lua_newstate;\nmodule.exports.lua_newtable            = lapi.lua_newtable;\nmodule.exports.lua_newthread           = lstate.lua_newthread;\nmodule.exports.lua_newuserdata         = lapi.lua_newuserdata;\nmodule.exports.lua_next                = lapi.lua_next;\nmodule.exports.lua_pcall               = lapi.lua_pcall;\nmodule.exports.lua_pcallk              = lapi.lua_pcallk;\nmodule.exports.lua_pop                 = lapi.lua_pop;\nmodule.exports.lua_pushboolean         = lapi.lua_pushboolean;\nmodule.exports.lua_pushcclosure        = lapi.lua_pushcclosure;\nmodule.exports.lua_pushcfunction       = lapi.lua_pushcfunction;\nmodule.exports.lua_pushfstring         = lapi.lua_pushfstring;\nmodule.exports.lua_pushglobaltable     = lapi.lua_pushglobaltable;\nmodule.exports.lua_pushinteger         = lapi.lua_pushinteger;\nmodule.exports.lua_pushjsclosure       = lapi.lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction      = lapi.lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata   = lapi.lua_pushlightuserdata;\nmodule.exports.lua_pushliteral         = lapi.lua_pushliteral;\nmodule.exports.lua_pushlstring         = lapi.lua_pushlstring;\nmodule.exports.lua_pushnil             = lapi.lua_pushnil;\nmodule.exports.lua_pushnumber          = lapi.lua_pushnumber;\nmodule.exports.lua_pushstring          = lapi.lua_pushstring;\nmodule.exports.lua_pushthread          = lapi.lua_pushthread;\nmodule.exports.lua_pushvalue           = lapi.lua_pushvalue;\nmodule.exports.lua_pushvfstring        = lapi.lua_pushvfstring;\nmodule.exports.lua_rawequal            = lapi.lua_rawequal;\nmodule.exports.lua_rawget              = lapi.lua_rawget;\nmodule.exports.lua_rawgeti             = lapi.lua_rawgeti;\nmodule.exports.lua_rawgetp             = lapi.lua_rawgetp;\nmodule.exports.lua_rawlen              = lapi.lua_rawlen;\nmodule.exports.lua_rawset              = lapi.lua_rawset;\nmodule.exports.lua_rawseti             = lapi.lua_rawseti;\nmodule.exports.lua_rawsetp             = lapi.lua_rawsetp;\nmodule.exports.lua_register            = lapi.lua_register;\nmodule.exports.lua_remove              = lapi.lua_remove;\nmodule.exports.lua_replace             = lapi.lua_replace;\nmodule.exports.lua_resume              = ldo.lua_resume;\nmodule.exports.lua_rotate              = lapi.lua_rotate;\nmodule.exports.lua_setallof            = ldo.lua_setallof;\nmodule.exports.lua_setfield            = lapi.lua_setfield;\nmodule.exports.lua_setglobal           = lapi.lua_setglobal;\nmodule.exports.lua_sethook             = ldebug.lua_sethook;\nmodule.exports.lua_seti                = lapi.lua_seti;\nmodule.exports.lua_setlocal            = ldebug.lua_setlocal;\nmodule.exports.lua_setmetatable        = lapi.lua_setmetatable;\nmodule.exports.lua_settable            = lapi.lua_settable;\nmodule.exports.lua_settop              = lapi.lua_settop;\nmodule.exports.lua_setupvalue          = lapi.lua_setupvalue;\nmodule.exports.lua_setuservalue        = lapi.lua_setuservalue;\nmodule.exports.lua_status              = lapi.lua_status;\nmodule.exports.lua_stringtonumber      = lapi.lua_stringtonumber;\nmodule.exports.lua_toboolean           = lapi.lua_toboolean;\nmodule.exports.lua_todataview          = lapi.lua_todataview;\nmodule.exports.lua_tointeger           = lapi.lua_tointeger;\nmodule.exports.lua_tointegerx          = lapi.lua_tointegerx;\nmodule.exports.lua_tojsstring          = lapi.lua_tojsstring;\nmodule.exports.lua_tolstring           = lapi.lua_tolstring;\nmodule.exports.lua_tonumber            = lapi.lua_tonumber;\nmodule.exports.lua_tonumberx           = lapi.lua_tonumberx;\nmodule.exports.lua_topointer           = lapi.lua_topointer;\nmodule.exports.lua_toproxy             = lapi.lua_toproxy;\nmodule.exports.lua_tostring            = lapi.lua_tostring;\nmodule.exports.lua_tothread            = lapi.lua_tothread;\nmodule.exports.lua_touserdata          = lapi.lua_touserdata;\nmodule.exports.lua_type                = lapi.lua_type;\nmodule.exports.lua_typename            = lapi.lua_typename;\nmodule.exports.lua_upvalueid           = lapi.lua_upvalueid;\nmodule.exports.lua_upvaluejoin         = lapi.lua_upvaluejoin;\nmodule.exports.lua_version             = lapi.lua_version;\nmodule.exports.lua_xmove               = lapi.lua_xmove;\nmodule.exports.lua_yield               = ldo.lua_yield;\nmodule.exports.lua_yieldk              = ldo.lua_yieldk;\nmodule.exports.lua_tocfunction         = lapi.lua_tocfunction;\n","\"use strict\";\n\nconst conf = (process.env.FENGARICONF ? JSON.parse(process.env.FENGARICONF) : {});\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    to_luastring\n} = require('./defs.js');\n\n/*\n** LUA_PATH_SEP is the character that separates templates in a path.\n** LUA_PATH_MARK is the string that marks the substitution points in a\n** template.\n** LUA_EXEC_DIR in a Windows path is replaced by the executable's\n** directory.\n*/\nconst LUA_PATH_SEP  = \";\";\nmodule.exports.LUA_PATH_SEP = LUA_PATH_SEP;\n\nconst LUA_PATH_MARK = \"?\";\nmodule.exports.LUA_PATH_MARK = LUA_PATH_MARK;\n\nconst LUA_EXEC_DIR  = \"!\";\nmodule.exports.LUA_EXEC_DIR = LUA_EXEC_DIR;\n\n/*\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n** Lua libraries.\n@@ LUA_JSPATH_DEFAULT is the default path that Lua uses to look for\n** JS libraries.\n** CHANGE them if your machine has a non-conventional directory\n** hierarchy or if you want to install your libraries in\n** non-conventional directories.\n*/\nconst LUA_VDIR = LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VDIR = LUA_VDIR;\n\nif (typeof process === \"undefined\") {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_LDIR = \"./lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        /* LUA_JSDIR excluded as it is equal to LUA_LDIR */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else if (require('os').platform() === 'win32') {\n    const LUA_DIRSEP = \"\\\\\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    /*\n    ** In Windows, any exclamation mark ('!') in the path is replaced by the\n    ** path of the directory of the executable file of the current process.\n    */\n    const LUA_LDIR = \"!\\\\lua\\\\\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = \"!\\\\\";\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_SHRDIR = \"!\\\\..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\\";\n    module.exports.LUA_SHRDIR = LUA_SHRDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?\\\\init.lua;\" +\n        LUA_JSDIR + \"?.lua;\" + LUA_JSDIR + \"?\\\\init.lua;\" +\n        LUA_SHRDIR + \"?.lua;\" + LUA_SHRDIR + \"?\\\\init.lua;\" +\n        \".\\\\?.lua;.\\\\?\\\\init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" +\n        LUA_JSDIR + \"..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\?.js;\" +\n        LUA_JSDIR + \"loadall.js;.\\\\?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_ROOT = \"/usr/local/\";\n    module.exports.LUA_ROOT = LUA_ROOT;\n    const LUA_ROOT2 = \"/usr/\";\n\n    const LUA_LDIR = LUA_ROOT + \"share/lua/\" + LUA_VDIR + \"/\";\n    const LUA_LDIR2 = LUA_ROOT2 + \"share/lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n    const LUA_JSDIR2 = LUA_LDIR2;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        LUA_LDIR2 + \"?.lua;\" + LUA_LDIR2 + \"?/init.lua;\" +\n        /* LUA_JSDIR(2) excluded as it is equal to LUA_LDIR(2) */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;\" +\n        LUA_JSDIR2 + \"?.js;\" + LUA_JSDIR2 + \"loadall.js;\" +\n        \"./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n}\n\n/*\n@@ LUA_COMPAT_FLOATSTRING makes Lua format integral floats without a\n@@ a float mark ('.0').\n** This macro is not on by default even in compatibility mode,\n** because this is not really an incompatibility.\n*/\nconst LUA_COMPAT_FLOATSTRING = conf.LUA_COMPAT_FLOATSTRING || false;\n\nconst LUA_MAXINTEGER = 2147483647;\nconst LUA_MININTEGER = -2147483648;\n\n/*\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n** CHANGE it if you need a different limit. This limit is arbitrary;\n** its only purpose is to stop Lua from consuming unlimited stack\n** space (and to reserve some numbers for pseudo-indices).\n*/\nconst LUAI_MAXSTACK = conf.LUAI_MAXSTACK || 1000000;\n\n/*\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ of a function in debug information.\n** CHANGE it if you want a different size.\n*/\nconst LUA_IDSIZE = conf.LUA_IDSIZE || (60-1); /* fengari uses 1 less than lua as we don't embed the null byte */\n\nconst lua_integer2str = function(n) {\n    return String(n); /* should match behaviour of LUA_INTEGER_FMT */\n};\n\nconst lua_number2str = function(n) {\n    return String(Number(n.toPrecision(14))); /* should match behaviour of LUA_NUMBER_FMT */\n};\n\nconst lua_numbertointeger = function(n) {\n    return n >= LUA_MININTEGER && n < -LUA_MININTEGER ? n : false;\n};\n\nconst LUA_INTEGER_FRMLEN = \"\";\nconst LUA_NUMBER_FRMLEN = \"\";\n\nconst LUA_INTEGER_FMT = `%${LUA_INTEGER_FRMLEN}d`;\nconst LUA_NUMBER_FMT  = \"%.14g\";\n\nconst lua_getlocaledecpoint = function() {\n    /* we hard-code the decimal point to '.' as a user cannot change the\n       locale in most JS environments, and in that you can, a multi-byte\n       locale is common.\n    */\n    return 46 /* '.'.charCodeAt(0) */;\n};\n\nconst luai_apicheck = function(l, e) {\n    if (!e) throw Error(e);\n};\n\n/*\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n*/\nconst LUAL_BUFFERSIZE = conf.LUAL_BUFFERSIZE || 8192;\n\n// See: http://croquetweak.blogspot.fr/2014/08/deconstructing-floats-frexp-and-ldexp.html\nconst frexp = function(value) {\n    if (value === 0) return [value, 0];\n    var data = new DataView(new ArrayBuffer(8));\n    data.setFloat64(0, value);\n    var bits = (data.getUint32(0) >>> 20) & 0x7FF;\n    if (bits === 0) { // denormal\n        data.setFloat64(0, value * Math.pow(2, 64));  // exp + 64\n        bits = ((data.getUint32(0) >>> 20) & 0x7FF) - 64;\n    }\n    var exponent = bits - 1022;\n    var mantissa = ldexp(value, -exponent);\n    return [mantissa, exponent];\n};\n\nconst ldexp = function(mantissa, exponent) {\n    var steps = Math.min(3, Math.ceil(Math.abs(exponent) / 1023));\n    var result = mantissa;\n    for (var i = 0; i < steps; i++)\n        result *= Math.pow(2, Math.floor((exponent + i) / steps));\n    return result;\n};\n\nmodule.exports.LUAI_MAXSTACK          = LUAI_MAXSTACK;\nmodule.exports.LUA_COMPAT_FLOATSTRING = LUA_COMPAT_FLOATSTRING;\nmodule.exports.LUA_IDSIZE             = LUA_IDSIZE;\nmodule.exports.LUA_INTEGER_FMT        = LUA_INTEGER_FMT;\nmodule.exports.LUA_INTEGER_FRMLEN     = LUA_INTEGER_FRMLEN;\nmodule.exports.LUA_MAXINTEGER         = LUA_MAXINTEGER;\nmodule.exports.LUA_MININTEGER         = LUA_MININTEGER;\nmodule.exports.LUA_NUMBER_FMT         = LUA_NUMBER_FMT;\nmodule.exports.LUA_NUMBER_FRMLEN      = LUA_NUMBER_FRMLEN;\nmodule.exports.LUAL_BUFFERSIZE        = LUAL_BUFFERSIZE;\nmodule.exports.frexp                  = frexp;\nmodule.exports.ldexp                  = ldexp;\nmodule.exports.lua_getlocaledecpoint  = lua_getlocaledecpoint;\nmodule.exports.lua_integer2str        = lua_integer2str;\nmodule.exports.lua_number2str         = lua_number2str;\nmodule.exports.lua_numbertointeger    = lua_numbertointeger;\nmodule.exports.luai_apicheck          = luai_apicheck;\n","\"use strict\";\n\nconst { luai_apicheck } = require(\"./luaconf.js\");\n\nconst lua_assert = function(c) {\n    if (!c) throw Error(\"assertion failed\");\n};\nmodule.exports.lua_assert = lua_assert;\n\nmodule.exports.luai_apicheck = luai_apicheck || function(l, e) { return lua_assert(e); };\n\nconst api_check = function(l, e, msg) {\n    return luai_apicheck(l, e && msg);\n};\nmodule.exports.api_check = api_check;\n\nconst LUAI_MAXCCALLS = 200;\nmodule.exports.LUAI_MAXCCALLS = LUAI_MAXCCALLS;\n\n/* minimum size for string buffer */\nconst LUA_MINBUFFER = 32;\nmodule.exports.LUA_MINBUFFER = LUA_MINBUFFER;\n\nconst luai_nummod = function(L, a, b) {\n    let m = a % b;\n    if ((m*b) < 0)\n        m += b;\n    return m;\n};\nmodule.exports.luai_nummod = luai_nummod;\n\n// If later integers are more than 32bit, LUA_MAXINTEGER will then be != MAX_INT\nconst MAX_INT = 2147483647;\nmodule.exports.MAX_INT = MAX_INT;\nconst MIN_INT = -2147483648;\nmodule.exports.MIN_INT = MIN_INT;\n","/* Fengari specific functions\n *\n * This file includes fengari-specific data or and functionality for users to\n * manipulate fengari's string type.\n * The fields are exposed to the user on the 'fengari' entry point; however to\n * avoid a dependency on defs.js from lauxlib.js they are defined in this file.\n */\n\nconst defs = require(\"./defs.js\");\n\nconst FENGARI_VERSION_MAJOR   = \"0\";\nconst FENGARI_VERSION_MINOR   = \"1\";\nconst FENGARI_VERSION_NUM     = 1;\nconst FENGARI_VERSION_RELEASE = \"4\";\nconst FENGARI_VERSION         = \"Fengari \" + FENGARI_VERSION_MAJOR + \".\" + FENGARI_VERSION_MINOR;\nconst FENGARI_RELEASE         = FENGARI_VERSION + \".\" + FENGARI_VERSION_RELEASE;\nconst FENGARI_AUTHORS         = \"B. Giannangeli, Daurnimator\";\nconst FENGARI_COPYRIGHT       = FENGARI_RELEASE + \"  Copyright (C) 2017-2018 \" + FENGARI_AUTHORS + \"\\nBased on: \" + defs.LUA_COPYRIGHT;\n\nmodule.exports.FENGARI_AUTHORS         = FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = FENGARI_VERSION_RELEASE;\nmodule.exports.is_luastring            = defs.is_luastring;\nmodule.exports.luastring_eq            = defs.luastring_eq;\nmodule.exports.luastring_from          = defs.luastring_from;\nmodule.exports.luastring_indexOf       = defs.luastring_indexOf;\nmodule.exports.luastring_of            = defs.luastring_of;\nmodule.exports.to_jsstring             = defs.to_jsstring;\nmodule.exports.to_luastring            = defs.to_luastring;\nmodule.exports.to_uristring            = defs.to_uristring;\nmodule.exports.from_userstring         = defs.from_userstring;\n","\"use strict\";\n\nconst {\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPMUL,\n    LUA_OPPOW,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPSUB,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TSTRING,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    from_userstring,\n    luastring_indexOf,\n    luastring_of,\n    to_jsstring,\n    to_luastring\n} = require('./defs.js');\nconst {\n    lisdigit,\n    lisprint,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst ldebug  = require('./ldebug.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst {\n    LUA_COMPAT_FLOATSTRING,\n    ldexp,\n    lua_integer2str,\n    lua_number2str\n} = require('./luaconf.js');\nconst lvm     = require('./lvm.js');\nconst {\n    MAX_INT,\n    luai_nummod,\n    lua_assert\n} = require(\"./llimits.js\");\nconst ltm     = require('./ltm.js');\n\nconst LUA_TPROTO = LUA_NUMTAGS;\nconst LUA_TDEADKEY = LUA_NUMTAGS+1;\n\nclass TValue {\n\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    /* type tag of a TValue (bits 0-3 for tags + variant bits 4-5) */\n    ttype() {\n        return this.type & 0x3F;\n    }\n\n    /* type tag of a TValue with no variants (bits 0-3) */\n    ttnov() {\n        return this.type & 0x0F;\n    }\n\n    checktag(t) {\n        return this.type === t;\n    }\n\n    checktype(t) {\n        return this.ttnov() === t;\n    }\n\n    ttisnumber() {\n        return this.checktype(LUA_TNUMBER);\n    }\n\n    ttisfloat() {\n        return this.checktag(LUA_TNUMFLT);\n    }\n\n    ttisinteger() {\n        return this.checktag(LUA_TNUMINT);\n    }\n\n    ttisnil() {\n        return this.checktag(LUA_TNIL);\n    }\n\n    ttisboolean() {\n        return this.checktag(LUA_TBOOLEAN);\n    }\n\n    ttislightuserdata() {\n        return this.checktag(LUA_TLIGHTUSERDATA);\n    }\n\n    ttisstring() {\n        return this.checktype(LUA_TSTRING);\n    }\n\n    ttisshrstring() {\n        return this.checktag(LUA_TSHRSTR);\n    }\n\n    ttislngstring() {\n        return this.checktag(LUA_TLNGSTR);\n    }\n\n    ttistable() {\n        return this.checktag(LUA_TTABLE);\n    }\n\n    ttisfunction() {\n        return this.checktype(LUA_TFUNCTION);\n    }\n\n    ttisclosure() {\n        return (this.type & 0x1F) === LUA_TFUNCTION;\n    }\n\n    ttisCclosure() {\n        return this.checktag(LUA_TCCL);\n    }\n\n    ttisLclosure() {\n        return this.checktag(LUA_TLCL);\n    }\n\n    ttislcf() {\n        return this.checktag(LUA_TLCF);\n    }\n\n    ttisfulluserdata() {\n        return this.checktag(LUA_TUSERDATA);\n    }\n\n    ttisthread() {\n        return this.checktag(LUA_TTHREAD);\n    }\n\n    ttisdeadkey() {\n        return this.checktag(LUA_TDEADKEY);\n    }\n\n    l_isfalse() {\n        return this.ttisnil() || (this.ttisboolean() && this.value === false);\n    }\n\n    setfltvalue(x) {\n        this.type = LUA_TNUMFLT;\n        this.value = x;\n    }\n\n    chgfltvalue(x) {\n        lua_assert(this.type == LUA_TNUMFLT);\n        this.value = x;\n    }\n\n    setivalue(x) {\n        this.type = LUA_TNUMINT;\n        this.value = x;\n    }\n\n    chgivalue(x) {\n        lua_assert(this.type == LUA_TNUMINT);\n        this.value = x;\n    }\n\n    setnilvalue() {\n        this.type = LUA_TNIL;\n        this.value = null;\n    }\n\n    setfvalue(x) {\n        this.type = LUA_TLCF;\n        this.value = x;\n    }\n\n    setpvalue(x) {\n        this.type = LUA_TLIGHTUSERDATA;\n        this.value = x;\n    }\n\n    setbvalue(x) {\n        this.type = LUA_TBOOLEAN;\n        this.value = x;\n    }\n\n    setsvalue(x) {\n        this.type = LUA_TLNGSTR; /* LUA_TSHRSTR? */\n        this.value = x;\n    }\n\n    setuvalue(x) {\n        this.type = LUA_TUSERDATA;\n        this.value = x;\n    }\n\n    setthvalue(x) {\n        this.type = LUA_TTHREAD;\n        this.value = x;\n    }\n\n    setclLvalue(x) {\n        this.type = LUA_TLCL;\n        this.value = x;\n    }\n\n    setclCvalue(x) {\n        this.type = LUA_TCCL;\n        this.value = x;\n    }\n\n    sethvalue(x) {\n        this.type = LUA_TTABLE;\n        this.value = x;\n    }\n\n    setdeadvalue() {\n        this.type = LUA_TDEADKEY;\n        this.value = null;\n    }\n\n    setfrom(tv) { /* in lua C source setobj2t is often used for this */\n        this.type = tv.type;\n        this.value = tv.value;\n    }\n\n    tsvalue() {\n        lua_assert(this.ttisstring());\n        return this.value;\n    }\n\n    svalue() {\n        return this.tsvalue().getstr();\n    }\n\n    vslen() {\n        return this.tsvalue().tsslen();\n    }\n\n    jsstring(from, to) {\n        return to_jsstring(this.svalue(), from, to, true);\n    }\n}\n\nconst pushobj2s = function(L, tv) {\n    L.stack[L.top++] = new TValue(tv.type, tv.value);\n};\nconst pushsvalue2s = function(L, ts) {\n    L.stack[L.top++] = new TValue(LUA_TLNGSTR, ts);\n};\n/* from stack to (same) stack */\nconst setobjs2s = function(L, newidx, oldidx) {\n    L.stack[newidx].setfrom(L.stack[oldidx]);\n};\n/* to stack (not from same stack) */\nconst setobj2s = function(L, newidx, oldtv) {\n    L.stack[newidx].setfrom(oldtv);\n};\nconst setsvalue2s = function(L, newidx, ts) {\n    L.stack[newidx].setsvalue(ts);\n};\n\nconst luaO_nilobject = new TValue(LUA_TNIL, null);\nObject.freeze(luaO_nilobject);\nmodule.exports.luaO_nilobject = luaO_nilobject;\n\nclass LClosure {\n\n    constructor(L, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.p = null;\n        this.nupvalues = n;\n        this.upvals = new Array(n); /* list of upvalues. initialised in luaF_initupvals */\n    }\n\n}\n\nclass CClosure {\n\n    constructor(L, f, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.f = f;\n        this.nupvalues = n;\n        this.upvalue = new Array(n); /* list of upvalues as TValues */\n        while (n--) {\n            this.upvalue[n] = new TValue(LUA_TNIL, null);\n        }\n    }\n\n}\n\nclass Udata {\n\n    constructor(L, size) {\n        this.id = L.l_G.id_counter++;\n\n        this.metatable = null;\n        this.uservalue = new TValue(LUA_TNIL, null);\n        this.len = size;\n        this.data = Object.create(null); // ignores size argument\n    }\n\n}\n\n/*\n** Description of a local variable for function prototypes\n** (used for debug information)\n*/\nclass LocVar {\n    constructor() {\n        this.varname = null;\n        this.startpc = NaN;  /* first point where variable is active */\n        this.endpc = NaN;    /* first point where variable is dead */\n    }\n}\n\nconst RETS = to_luastring(\"...\");\nconst PRE  = to_luastring(\"[string \\\"\");\nconst POS  = to_luastring(\"\\\"]\");\n\nconst luaO_chunkid = function(source, bufflen) {\n    let l = source.length;\n    let out;\n    if (source[0] === 61 /* ('=').charCodeAt(0) */) {  /* 'literal' source */\n        if (l < bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* truncate it */\n            out = new Uint8Array(bufflen);\n            out.set(source.subarray(1, bufflen+1));\n        }\n    } else if (source[0] === 64 /* ('@').charCodeAt(0) */) {  /* file name */\n        if (l <= bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* add '...' before rest of name */\n            out = new Uint8Array(bufflen);\n            out.set(RETS);\n            bufflen -= RETS.length;\n            out.set(source.subarray(l - bufflen), RETS.length);\n        }\n    } else {  /* string; format as [string \"source\"] */\n        out = new Uint8Array(bufflen);\n        let nli = luastring_indexOf(source, 10 /* ('\\n').charCodeAt(0) */);  /* find first new line (if any) */\n        out.set(PRE);  /* add prefix */\n        let out_i = PRE.length;\n        bufflen -= PRE.length + RETS.length + POS.length;  /* save space for prefix+suffix */\n        if (l < bufflen && nli === -1) {  /* small one-line source? */\n            out.set(source, out_i);  /* keep it */\n            out_i += source.length;\n        } else {\n            if (nli !== -1) l = nli;  /* stop at first newline */\n            if (l > bufflen) l = bufflen;\n            out.set(source.subarray(0, l), out_i);\n            out_i += l;\n            out.set(RETS, out_i);\n            out_i += RETS.length;\n        }\n        out.set(POS, out_i);\n        out_i += POS.length;\n        out = out.subarray(0, out_i);\n    }\n    return out;\n};\n\nconst luaO_hexavalue = function(c) {\n    if (lisdigit(c)) return c - 48;\n    else return (c & 0xdf) - 55;\n};\n\nconst UTF8BUFFSZ = 8;\n\nconst luaO_utf8esc = function(buff, x) {\n    let n = 1;  /* number of bytes put in buffer (backwards) */\n    lua_assert(x <= 0x10FFFF);\n    if (x < 0x80)  /* ascii? */\n        buff[UTF8BUFFSZ - 1] = x;\n    else {  /* need continuation bytes */\n        let mfb = 0x3f;  /* maximum that fits in first byte */\n        do {\n            buff[UTF8BUFFSZ - (n++)] = 0x80 | (x & 0x3f);\n            x >>= 6;  /* remove added bits */\n            mfb >>= 1;  /* now there is one less bit available in first byte */\n        } while (x > mfb);  /* still needs continuation byte? */\n        buff[UTF8BUFFSZ - n] = (~mfb << 1) | x;  /* add first byte */\n    }\n    return n;\n};\n\n/* maximum number of significant digits to read (to avoid overflows\n   even with single floats) */\nconst MAXSIGDIG = 30;\n\n/*\n** convert an hexadecimal numeric string to a number, following\n** C99 specification for 'strtod'\n*/\nconst lua_strx2number = function(s) {\n    let i = 0;\n    let r = 0.0;  /* result (accumulator) */\n    let sigdig = 0;  /* number of significant digits */\n    let nosigdig = 0;  /* number of non-significant digits */\n    let e = 0;  /* exponent correction */\n    let neg;  /* 1 if number is negative */\n    let hasdot = false;  /* true after seen a dot */\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* check signal */\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (!(s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)))  /* check '0x' */\n        return null;  /* invalid format (no '0x') */\n    for (i += 2; ; i++) {  /* skip '0x' and read numeral */\n        if (s[i] === 46 /* ('.').charCodeAt(0) i.e. dot/lua_getlocaledecpoint(); */) {\n            if (hasdot) break;  /* second dot? stop loop */\n            else hasdot = true;\n        } else if (lisxdigit(s[i])) {\n            if (sigdig === 0 && s[i] === 48 /* ('0').charCodeAt(0) */)  /* non-significant digit (zero)? */\n                nosigdig++;\n            else if (++sigdig <= MAXSIGDIG)  /* can read it without overflow? */\n                r = (r * 16) + luaO_hexavalue(s[i]);\n            else e++; /* too many digits; ignore, but still count for exponent */\n            if (hasdot) e--;  /* decimal digit? correct exponent */\n        } else break;  /* neither a dot nor a digit */\n    }\n\n    if (nosigdig + sigdig === 0)  /* no digits? */\n        return null;  /* invalid format */\n    e *= 4;  /* each digit multiplies/divides value by 2^4 */\n    if (s[i] === 112 /* ('p').charCodeAt(0) */ || s[i] === 80 /* ('P').charCodeAt(0) */) {  /* exponent part? */\n        let exp1 = 0;  /* exponent value */\n        let neg1;  /* exponent signal */\n        i++;  /* skip 'p' */\n        if ((neg1 = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* signal */\n        else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n        if (!lisdigit(s[i]))\n            return null;  /* invalid; must have at least one digit */\n        while (lisdigit(s[i]))  /* read exponent */\n            exp1 = exp1 * 10 + s[i++] - 48 /* ('0').charCodeAt(0) */;\n        if (neg1) exp1 = -exp1;\n        e += exp1;\n    }\n    if (neg) r = -r;\n    return {\n        n: ldexp(r, e),\n        i: i\n    };\n};\n\nconst lua_str2number = function(s) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    /* use a regex to validate number and also to get length\n       parseFloat ignores trailing junk */\n    let r = /^[\\t\\v\\f \\n\\r]*[+-]?(?:[0-9]+\\.?[0-9]*|\\.[0-9]*)(?:[eE][+-]?[0-9]+)?/.exec(s);\n    if (!r)\n        return null;\n    let flt = parseFloat(r[0]);\n    return !isNaN(flt) ? { n: flt, i: r[0].length } : null;\n};\n\nconst l_str2dloc = function(s, mode) {\n    let result = mode === 'x' ? lua_strx2number(s) : lua_str2number(s); /* try to convert */\n    if (result === null) return null;\n    while (lisspace(s[result.i])) result.i++;  /* skip trailing spaces */\n    return (result.i === s.length || s[result.i] === 0) ? result : null;  /* OK if no trailing characters */\n};\n\nconst SIGILS = [\n    46  /* (\".\").charCodeAt(0) */,\n    120 /* (\"x\").charCodeAt(0) */,\n    88  /* (\"X\").charCodeAt(0) */,\n    110 /* (\"n\").charCodeAt(0) */,\n    78  /* (\"N\").charCodeAt(0) */\n];\nconst modes = {\n    [ 46]: \".\",\n    [120]: \"x\",\n    [ 88]: \"x\",\n    [110]: \"n\",\n    [ 78]: \"n\"\n};\nconst l_str2d = function(s) {\n    let l = s.length;\n    let pmode = 0;\n    for (let i=0; i<l; i++) {\n        let v = s[i];\n        if (SIGILS.indexOf(v) !== -1) {\n            pmode = v;\n            break;\n        }\n    }\n    let mode = modes[pmode];\n    if (mode === 'n')  /* reject 'inf' and 'nan' */\n        return null;\n    let end = l_str2dloc(s, mode);  /* try to convert */\n    // if (end === null) {   /* failed? may be a different locale */\n    //     throw new Error(\"Locale not available to handle number\"); // TODO\n    // }\n    return end;\n};\n\nconst MAXBY10  = Math.floor(MAX_INT / 10);\nconst MAXLASTD = MAX_INT % 10;\n\nconst l_str2int = function(s) {\n    let i = 0;\n    let a = 0;\n    let empty = true;\n    let neg;\n\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)) {  /* hex? */\n        i += 2;  /* skip '0x' */\n        for (; i < s.length && lisxdigit(s[i]); i++) {\n            a = (a * 16 + luaO_hexavalue(s[i]))|0;\n            empty = false;\n        }\n    } else {  /* decimal */\n        for (; i < s.length && lisdigit(s[i]); i++) {\n            let d = s[i] - 48 /* ('0').charCodeAt(0) */;\n            if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */\n                return null;  /* do not accept it (as integer) */\n            a = (a * 10 + d)|0;\n            empty = false;\n        }\n    }\n    while (i < s.length && lisspace(s[i])) i++;  /* skip trailing spaces */\n    if (empty || (i !== s.length && s[i] !== 0)) return null;  /* something wrong in the numeral */\n    else {\n        return {\n            n: (neg ? -a : a)|0,\n            i: i\n        };\n    }\n};\n\nconst luaO_str2num = function(s, o) {\n    let s2i = l_str2int(s);\n    if (s2i !== null) {   /* try as an integer */\n        o.setivalue(s2i.n);\n        return s2i.i+1;\n    } else {   /* else try as a float */\n        s2i = l_str2d(s);\n        if (s2i !== null) {\n            o.setfltvalue(s2i.n);\n            return s2i.i+1;\n        } else\n            return 0;  /* conversion failed */\n    }\n};\n\nconst luaO_tostring = function(L, obj) {\n    let buff;\n    if (obj.ttisinteger())\n        buff = to_luastring(lua_integer2str(obj.value));\n    else {\n        let str = lua_number2str(obj.value);\n        if (!LUA_COMPAT_FLOATSTRING && /^[-0123456789]+$/.test(str)) {  /* looks like an int? */\n            str += '.0'; /* adds '.0' to result: lua_getlocaledecpoint removed as optimisation */\n        }\n        buff = to_luastring(str);\n    }\n    obj.setsvalue(luaS_bless(L, buff));\n};\n\nconst pushstr = function(L, str) {\n    ldo.luaD_inctop(L);\n    setsvalue2s(L, L.top-1, luaS_new(L, str));\n};\n\nconst luaO_pushvfstring = function(L, fmt, argp) {\n    let n = 0;\n    let i = 0;\n    let a = 0;\n    let e;\n    for (;;) {\n        e = luastring_indexOf(fmt, 37 /* ('%').charCodeAt(0) */, i);\n        if (e == -1) break;\n        pushstr(L, fmt.subarray(i, e));\n        switch(fmt[e+1]) {\n            case 115 /* ('s').charCodeAt(0) */: {\n                let s = argp[a++];\n                if (s === null) s = to_luastring(\"(null)\", true);\n                else {\n                    s = from_userstring(s);\n                    /* respect null terminator */\n                    let i = luastring_indexOf(s, 0);\n                    if (i !== -1)\n                        s = s.subarray(0, i);\n                }\n                pushstr(L, s);\n                break;\n            }\n            case 99 /* ('c').charCodeAt(0) */: {\n                let buff = argp[a++];\n                if (lisprint(buff))\n                    pushstr(L, luastring_of(buff));\n                else\n                    luaO_pushfstring(L, to_luastring(\"<\\\\%d>\", true), buff);\n                break;\n            }\n            case 100 /* ('d').charCodeAt(0) */:\n            case 73 /* ('I').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setivalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 102 /* ('f').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setfltvalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 112 /* ('p').charCodeAt(0) */: {\n                let v = argp[a++];\n                if (v instanceof lstate.lua_State ||\n                    v instanceof ltable.Table ||\n                    v instanceof Udata ||\n                    v instanceof LClosure ||\n                    v instanceof CClosure) {\n                    pushstr(L, to_luastring(\"0x\"+v.id.toString(16)));\n                } else {\n                    switch(typeof v) {\n                        case \"undefined\":\n                            pushstr(L, to_luastring(\"undefined\"));\n                            break;\n                        case \"number\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"Number(\"+v+\")\"));\n                            break;\n                        case \"string\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"String(\"+JSON.stringify(v)+\")\"));\n                            break;\n                        case \"boolean\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(v?\"Boolean(true)\":\"Boolean(false)\"));\n                            break;\n                        case \"object\":\n                            if (v === null) { /* null is special */\n                                pushstr(L, to_luastring(\"null\"));\n                                break;\n                            }\n                            /* fall through */\n                        case \"function\": {\n                            let id = L.l_G.ids.get(v);\n                            if (!id) {\n                                id = L.l_G.id_counter++;\n                                L.l_G.ids.set(v, id);\n                            }\n                            pushstr(L, to_luastring(\"0x\"+id.toString(16)));\n                            break;\n                        }\n                        default:\n                            /* user provided object. no id available */\n                            pushstr(L, to_luastring(\"<id NYI>\"));\n                    }\n                }\n                break;\n            }\n            case 85 /* ('U').charCodeAt(0) */: {\n                let buff = new Uint8Array(UTF8BUFFSZ);\n                let l = luaO_utf8esc(buff, argp[a++]);\n                pushstr(L, buff.subarray(UTF8BUFFSZ - l));\n                break;\n            }\n            case 37 /* ('%').charCodeAt(0) */:\n                pushstr(L, to_luastring(\"%\", true));\n                break;\n            default:\n                ldebug.luaG_runerror(L, to_luastring(\"invalid option '%%%c' to 'lua_pushfstring'\"), fmt[e + 1]);\n        }\n        n += 2;\n        i = e + 2;\n    }\n    ldo.luaD_checkstack(L, 1);\n    pushstr(L, fmt.subarray(i));\n    if (n > 0) lvm.luaV_concat(L, n+1);\n    return L.stack[L.top-1].svalue();\n};\n\nconst luaO_pushfstring = function(L, fmt, ...argp) {\n    return luaO_pushvfstring(L, fmt, argp);\n};\n\n\n/*\n** converts an integer to a \"floating point byte\", represented as\n** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if\n** eeeee !== 0 and (xxx) otherwise.\n*/\nconst luaO_int2fb = function(x) {\n    let e = 0;  /* exponent */\n    if (x < 8) return x;\n    while (x >= (8 << 4)) {  /* coarse steps */\n        x = (x + 0xf) >> 4;  /* x = ceil(x / 16) */\n        e += 4;\n    }\n    while (x >= (8 << 1)) {  /* fine steps */\n        x = (x + 1) >> 1;  /* x = ceil(x / 2) */\n        e++;\n    }\n    return ((e+1) << 3) | (x - 8);\n};\n\nconst intarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return (v1 + v2)|0;\n        case LUA_OPSUB:  return (v1 - v2)|0;\n        case LUA_OPMUL:  return lvm.luaV_imul(v1, v2);\n        case LUA_OPMOD:  return lvm.luaV_mod(L, v1, v2);\n        case LUA_OPIDIV: return lvm.luaV_div(L, v1, v2);\n        case LUA_OPBAND: return (v1 & v2);\n        case LUA_OPBOR:  return (v1 | v2);\n        case LUA_OPBXOR: return (v1 ^ v2);\n        case LUA_OPSHL:  return lvm.luaV_shiftl(v1, v2);\n        case LUA_OPSHR:  return lvm.luaV_shiftl(v1, -v2);\n        case LUA_OPUNM:  return (0 - v1)|0;\n        case LUA_OPBNOT: return (~0 ^ v1);\n        default: lua_assert(0);\n    }\n};\n\n\nconst numarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return v1 + v2;\n        case LUA_OPSUB:  return v1 - v2;\n        case LUA_OPMUL:  return v1 * v2;\n        case LUA_OPDIV:  return v1 / v2;\n        case LUA_OPPOW:  return Math.pow(v1, v2);\n        case LUA_OPIDIV: return Math.floor(v1 / v2);\n        case LUA_OPUNM:  return -v1;\n        case LUA_OPMOD:  return luai_nummod(L, v1, v2);\n        default: lua_assert(0);\n    }\n};\n\nconst luaO_arith = function(L, op, p1, p2, p3) {\n    let res = (typeof p3 === \"number\") ? L.stack[p3] : p3;  /* FIXME */\n\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR:\n        case LUA_OPBNOT: {  /* operate only on integers */\n            let i1, i2;\n            if ((i1 = lvm.tointeger(p1)) !== false && (i2 = lvm.tointeger(p2)) !== false) {\n                res.setivalue(intarith(L, op, i1, i2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        case LUA_OPDIV: case LUA_OPPOW: {  /* operate only on floats */\n            let n1, n2;\n            if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        default: {  /* other operations */\n            let n1, n2;\n            if (p1.ttisinteger() && p2.ttisinteger()) {\n                res.setivalue(intarith(L, op, p1.value, p2.value));\n                return;\n            }\n            else if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n    }\n    /* could not perform raw operation; try metamethod */\n    lua_assert(L !== null);  /* should not fail when folding (compile time) */\n    ltm.luaT_trybinTM(L, p1, p2, p3, (op - LUA_OPADD) + ltm.TMS.TM_ADD);\n};\n\n\nmodule.exports.CClosure          = CClosure;\nmodule.exports.LClosure          = LClosure;\nmodule.exports.LUA_TDEADKEY      = LUA_TDEADKEY;\nmodule.exports.LUA_TPROTO        = LUA_TPROTO;\nmodule.exports.LocVar            = LocVar;\nmodule.exports.TValue            = TValue;\nmodule.exports.Udata             = Udata;\nmodule.exports.UTF8BUFFSZ        = UTF8BUFFSZ;\nmodule.exports.luaO_arith        = luaO_arith;\nmodule.exports.luaO_chunkid      = luaO_chunkid;\nmodule.exports.luaO_hexavalue    = luaO_hexavalue;\nmodule.exports.luaO_int2fb       = luaO_int2fb;\nmodule.exports.luaO_pushfstring  = luaO_pushfstring;\nmodule.exports.luaO_pushvfstring = luaO_pushvfstring;\nmodule.exports.luaO_str2num      = luaO_str2num;\nmodule.exports.luaO_tostring     = luaO_tostring;\nmodule.exports.luaO_utf8esc      = luaO_utf8esc;\nmodule.exports.numarith          = numarith;\nmodule.exports.pushobj2s         = pushobj2s;\nmodule.exports.pushsvalue2s      = pushsvalue2s;\nmodule.exports.setobjs2s         = setobjs2s;\nmodule.exports.setobj2s          = setobj2s;\nmodule.exports.setsvalue2s       = setsvalue2s;\n","\"use strict\";\n\nconst {\n    LUAL_BUFFERSIZE\n} = require('./luaconf.js');\nconst {\n    LUA_ERRERR,\n    LUA_MULTRET,\n    LUA_REGISTRYINDEX,\n    LUA_SIGNATURE,\n    LUA_TBOOLEAN,\n    LUA_TLIGHTUSERDATA,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION_NUM,\n    lua_Debug,\n    lua_absindex,\n    lua_atpanic,\n    lua_call,\n    lua_checkstack,\n    lua_concat,\n    lua_copy,\n    lua_createtable,\n    lua_error,\n    lua_getfield,\n    lua_getinfo,\n    lua_getmetatable,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isinteger,\n    lua_isnil,\n    lua_isnumber,\n    lua_isstring,\n    lua_istable,\n    lua_len,\n    lua_load,\n    lua_newstate,\n    lua_newtable,\n    lua_next,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_pushvfstring,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawgeti,\n    lua_rawlen,\n    lua_rawseti,\n    lua_remove,\n    lua_setfield,\n    lua_setglobal,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_tojsstring,\n    lua_tolstring,\n    lua_tonumber,\n    lua_tonumberx,\n    lua_topointer,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_typename,\n    lua_version\n} = require('./lua.js');\nconst {\n    from_userstring,\n    luastring_eq,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\n\n/* extra error code for 'luaL_loadfilex' */\nconst LUA_ERRFILE = LUA_ERRERR+1;\n\n/* key, in the registry, for table of loaded modules */\nconst LUA_LOADED_TABLE = to_luastring(\"_LOADED\");\n\n/* key, in the registry, for table of preloaded loaders */\nconst LUA_PRELOAD_TABLE = to_luastring(\"_PRELOAD\");\n\nconst LUA_FILEHANDLE = to_luastring(\"FILE*\");\n\nconst LUAL_NUMSIZES  = 4*16 + 8;\n\nconst __name = to_luastring(\"__name\");\nconst __tostring = to_luastring(\"__tostring\");\n\nconst empty = new Uint8Array(0);\n\nclass luaL_Buffer {\n    constructor() {\n        this.L = null;\n        this.b = empty;\n        this.n = 0;\n    }\n}\n\nconst LEVELS1 = 10;  /* size of the first part of the stack */\nconst LEVELS2 = 11;  /* size of the second part of the stack */\n\n/*\n** search for 'objidx' in table at index -1.\n** return 1 + string at top if find a good name.\n*/\nconst findfield = function(L, objidx, level) {\n    if (level === 0 || !lua_istable(L, -1))\n        return 0;  /* not found */\n\n    lua_pushnil(L);  /* start 'next' loop */\n\n    while (lua_next(L, -2)) {  /* for each pair in table */\n        if (lua_type(L, -2) === LUA_TSTRING) {  /* ignore non-string keys */\n            if (lua_rawequal(L, objidx, -1)) {  /* found object? */\n                lua_pop(L, 1);  /* remove value (but keep name) */\n                return 1;\n            } else if (findfield(L, objidx, level - 1)) {  /* try recursively */\n                lua_remove(L, -2);  /* remove table (but keep name) */\n                lua_pushliteral(L, \".\");\n                lua_insert(L, -2);  /* place '.' between the two names */\n                lua_concat(L, 3);\n                return 1;\n            }\n        }\n        lua_pop(L, 1);  /* remove value */\n    }\n\n    return 0;  /* not found */\n};\n\n/*\n** Search for a name for a function in all loaded modules\n*/\nconst pushglobalfuncname = function(L, ar) {\n    let top = lua_gettop(L);\n    lua_getinfo(L, to_luastring(\"f\"), ar);  /* push function */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    if (findfield(L, top + 1, 2)) {\n        let name = lua_tostring(L, -1);\n        if (name[0] === 95 /* '_'.charCodeAt(0) */ &&\n            name[1] === 71 /* 'G'.charCodeAt(0) */ &&\n            name[2] === 46 /* '.'.charCodeAt(0) */\n        ) {  /* name start with '_G.'? */\n            lua_pushstring(L, name.subarray(3));  /* push name without prefix */\n            lua_remove(L, -2);  /* remove original name */\n        }\n        lua_copy(L, -1, top + 1);  /* move name to proper place */\n        lua_pop(L, 2);  /* remove pushed values */\n        return 1;\n    } else {\n        lua_settop(L, top);  /* remove function and global table */\n        return 0;\n    }\n};\n\nconst pushfuncname = function(L, ar) {\n    if (pushglobalfuncname(L, ar)) {  /* try first a global name */\n        lua_pushfstring(L, to_luastring(\"function '%s'\"), lua_tostring(L, -1));\n        lua_remove(L, -2);  /* remove name */\n    }\n    else if (ar.namewhat.length !== 0)  /* is there a name from code? */\n        lua_pushfstring(L, to_luastring(\"%s '%s'\"), ar.namewhat, ar.name);  /* use it */\n    else if (ar.what && ar.what[0] === 109 /* 'm'.charCodeAt(0) */)  /* main? */\n        lua_pushliteral(L, \"main chunk\");\n    else if (ar.what && ar.what[0] === 76 /* 'L'.charCodeAt(0) */)  /* for Lua functions, use <file:line> */\n        lua_pushfstring(L, to_luastring(\"function <%s:%d>\"), ar.short_src, ar.linedefined);\n    else  /* nothing left... */\n        lua_pushliteral(L, \"?\");\n};\n\nconst lastlevel = function(L) {\n    let ar = new lua_Debug();\n    let li = 1;\n    let le = 1;\n    /* find an upper bound */\n    while (lua_getstack(L, le, ar)) { li = le; le *= 2; }\n    /* do a binary search */\n    while (li < le) {\n        let m = Math.floor((li + le)/2);\n        if (lua_getstack(L, m, ar)) li = m + 1;\n        else le = m;\n    }\n    return le - 1;\n};\n\nconst luaL_traceback = function(L, L1, msg, level) {\n    let ar = new lua_Debug();\n    let top = lua_gettop(L);\n    let last = lastlevel(L1);\n    let n1 = last - level > LEVELS1 + LEVELS2 ? LEVELS1 : -1;\n    if (msg)\n        lua_pushfstring(L, to_luastring(\"%s\\n\"), msg);\n    luaL_checkstack(L, 10, null);\n    lua_pushliteral(L, \"stack traceback:\");\n    while (lua_getstack(L1, level++, ar)) {\n        if (n1-- === 0) {  /* too many levels? */\n            lua_pushliteral(L, \"\\n\\t...\");  /* add a '...' */\n            level = last - LEVELS2 + 1;  /* and skip to last ones */\n        } else {\n            lua_getinfo(L1, to_luastring(\"Slnt\", true), ar);\n            lua_pushfstring(L, to_luastring(\"\\n\\t%s:\"), ar.short_src);\n            if (ar.currentline > 0)\n                lua_pushliteral(L, `${ar.currentline}:`);\n            lua_pushliteral(L, \" in \");\n            pushfuncname(L, ar);\n            if (ar.istailcall)\n                lua_pushliteral(L, \"\\n\\t(...tail calls..)\");\n            lua_concat(L, lua_gettop(L) - top);\n        }\n    }\n    lua_concat(L, lua_gettop(L) - top);\n};\n\nconst panic = function(L) {\n    let msg = \"PANIC: unprotected error in call to Lua API (\" + lua_tojsstring(L, -1) + \")\";\n    throw new Error(msg);\n};\n\nconst luaL_argerror = function(L, arg, extramsg) {\n    let ar = new lua_Debug();\n\n    if (!lua_getstack(L, 0, ar))  /* no stack frame? */\n        return luaL_error(L, to_luastring(\"bad argument #%d (%s)\"), arg, extramsg);\n\n    lua_getinfo(L, to_luastring(\"n\"), ar);\n\n    if (luastring_eq(ar.namewhat, to_luastring(\"method\"))) {\n        arg--;  /* do not count 'self' */\n        if (arg === 0)  /* error is in the self argument itself? */\n            return luaL_error(L, to_luastring(\"calling '%s' on bad self (%s)\"), ar.name, extramsg);\n    }\n\n    if (ar.name === null)\n        ar.name = pushglobalfuncname(L, ar) ? lua_tostring(L, -1) : to_luastring(\"?\");\n\n    return luaL_error(L, to_luastring(\"bad argument #%d to '%s' (%s)\"), arg, ar.name, extramsg);\n};\n\nconst typeerror = function(L, arg, tname) {\n    let typearg;\n    if (luaL_getmetafield(L, arg, __name) === LUA_TSTRING)\n        typearg = lua_tostring(L, -1);\n    else if (lua_type(L, arg) === LUA_TLIGHTUSERDATA)\n        typearg = to_luastring(\"light userdata\", true);\n    else\n        typearg = luaL_typename(L, arg);\n\n    let msg = lua_pushfstring(L, to_luastring(\"%s expected, got %s\"), tname, typearg);\n    return luaL_argerror(L, arg, msg);\n};\n\nconst luaL_where = function(L, level) {\n    let ar = new lua_Debug();\n    if (lua_getstack(L, level, ar)) {\n        lua_getinfo(L, to_luastring(\"Sl\", true), ar);\n        if (ar.currentline > 0) {\n            lua_pushfstring(L, to_luastring(\"%s:%d: \"), ar.short_src, ar.currentline);\n            return;\n        }\n    }\n    lua_pushstring(L, to_luastring(\"\"));\n};\n\nconst luaL_error = function(L, fmt, ...argp) {\n    luaL_where(L, 1);\n    lua_pushvfstring(L, fmt, argp);\n    lua_concat(L, 2);\n    return lua_error(L);\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_fileresult = function(L, stat, fname, e) {\n    if (stat) {\n        lua_pushboolean(L, 1);\n        return 1;\n    } else {\n        lua_pushnil(L);\n        let message, errno;\n        if (e) {\n            message = e.message;\n            errno = -e.errno;\n        } else {\n            message = \"Success\"; /* what strerror(0) returns */\n            errno = 0;\n        }\n        if (fname)\n            lua_pushfstring(L, to_luastring(\"%s: %s\"), fname, to_luastring(message));\n        else\n            lua_pushstring(L, to_luastring(message));\n        lua_pushinteger(L, errno);\n        return 3;\n    }\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_execresult = function(L, e) {\n    let what, stat;\n    if (e === null) {\n        lua_pushboolean(L, 1);\n        lua_pushliteral(L, \"exit\");\n        lua_pushinteger(L, 0);\n        return 3;\n    } else if (e.status) {\n        what = \"exit\";\n        stat = e.status;\n    } else if (e.signal) {\n        what = \"signal\";\n        stat = e.signal;\n    } else {\n        /* XXX: node seems to have e.errno as a string instead of a number */\n        return luaL_fileresult(L, 0, null, e);\n    }\n    lua_pushnil(L);\n    lua_pushliteral(L, what);\n    lua_pushinteger(L, stat);\n    return 3;\n};\n\nconst luaL_getmetatable = function(L, n) {\n    return lua_getfield(L, LUA_REGISTRYINDEX, n);\n};\n\nconst luaL_newmetatable = function(L, tname) {\n    if (luaL_getmetatable(L, tname) !== LUA_TNIL)  /* name already in use? */\n        return 0;  /* leave previous value on top, but return 0 */\n    lua_pop(L, 1);\n    lua_createtable(L, 0, 2);  /* create metatable */\n    lua_pushstring(L, tname);\n    lua_setfield(L, -2, __name);  /* metatable.__name = tname */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, LUA_REGISTRYINDEX, tname);  /* registry.name = metatable */\n    return 1;\n\n};\n\nconst luaL_setmetatable = function(L, tname) {\n    luaL_getmetatable(L, tname);\n    lua_setmetatable(L, -2);\n};\n\nconst luaL_testudata = function(L, ud, tname) {\n    let p = lua_touserdata(L, ud);\n    if (p !== null) {  /* value is a userdata? */\n        if (lua_getmetatable(L, ud)) {  /* does it have a metatable? */\n            luaL_getmetatable(L, tname);  /* get correct metatable */\n            if (!lua_rawequal(L, -1, -2))  /* not the same? */\n                p = null;  /* value is a userdata with wrong metatable */\n            lua_pop(L, 2);  /* remove both metatables */\n            return p;\n        }\n    }\n    return null;  /* value is not a userdata with a metatable */\n};\n\nconst luaL_checkudata = function(L, ud, tname) {\n    let p = luaL_testudata(L, ud, tname);\n    if (p === null) typeerror(L, ud, tname);\n    return p;\n};\n\nconst luaL_checkoption = function(L, arg, def, lst) {\n    let name = def !== null ? luaL_optstring(L, arg, def) : luaL_checkstring(L, arg);\n    for (let i = 0; lst[i]; i++)\n        if (luastring_eq(lst[i], name))\n            return i;\n    return luaL_argerror(L, arg, lua_pushfstring(L, to_luastring(\"invalid option '%s'\"), name));\n};\n\nconst tag_error = function(L, arg, tag) {\n    typeerror(L, arg, lua_typename(L, tag));\n};\n\nconst luaL_newstate = function() {\n    let L = lua_newstate();\n    if (L) lua_atpanic(L, panic);\n    return L;\n};\n\n\nconst luaL_typename = function(L, i) {\n    return lua_typename(L, lua_type(L, i));\n};\n\nconst luaL_argcheck = function(L, cond, arg, extramsg) {\n    if (!cond) luaL_argerror(L, arg, extramsg);\n};\n\nconst luaL_checkany = function(L, arg) {\n    if (lua_type(L, arg) === LUA_TNONE)\n        luaL_argerror(L, arg, to_luastring(\"value expected\", true));\n};\n\nconst luaL_checktype = function(L, arg, t) {\n    if (lua_type(L, arg) !== t)\n        tag_error(L, arg, t);\n};\n\nconst luaL_checklstring = function(L, arg) {\n    let s = lua_tolstring(L, arg);\n    if (s === null || s === undefined) tag_error(L, arg, LUA_TSTRING);\n    return s;\n};\n\nconst luaL_checkstring = luaL_checklstring;\n\nconst luaL_optlstring = function(L, arg, def) {\n    if (lua_type(L, arg) <= 0) {\n        return def === null ? null : from_userstring(def);\n    } else return luaL_checklstring(L, arg);\n};\n\nconst luaL_optstring = luaL_optlstring;\n\nconst interror = function(L, arg) {\n    if (lua_isnumber(L, arg))\n        luaL_argerror(L, arg, to_luastring(\"number has no integer representation\", true));\n    else\n        tag_error(L, arg, LUA_TNUMBER);\n};\n\nconst luaL_checknumber = function(L, arg) {\n    let d = lua_tonumberx(L, arg);\n    if (d === false)\n        tag_error(L, arg, LUA_TNUMBER);\n    return d;\n};\n\nconst luaL_optnumber = function(L, arg, def) {\n    return luaL_opt(L, luaL_checknumber, arg, def);\n};\n\nconst luaL_checkinteger = function(L, arg) {\n    let d = lua_tointegerx(L, arg);\n    if (d === false)\n        interror(L, arg);\n    return d;\n};\n\nconst luaL_optinteger = function(L, arg, def) {\n    return luaL_opt(L, luaL_checkinteger, arg, def);\n};\n\nconst luaL_prepbuffsize = function(B, sz) {\n    let newend = B.n + sz;\n    if (B.b.length < newend) {\n        let newsize = Math.max(B.b.length * 2, newend);  /* double buffer size */\n        let newbuff = new Uint8Array(newsize);  /* create larger buffer */\n        newbuff.set(B.b);  /* copy original content */\n        B.b = newbuff;\n    }\n    return B.b.subarray(B.n, newend);\n};\n\nconst luaL_buffinit = function(L, B) {\n    B.L = L;\n    B.b = empty;\n};\n\nconst luaL_buffinitsize = function(L, B, sz) {\n    luaL_buffinit(L, B);\n    return luaL_prepbuffsize(B, sz);\n};\n\nconst luaL_prepbuffer = function(B) {\n    return luaL_prepbuffsize(B, LUAL_BUFFERSIZE);\n};\n\nconst luaL_addlstring = function(B, s, l) {\n    if (l > 0) {\n        s = from_userstring(s);\n        let b = luaL_prepbuffsize(B, l);\n        b.set(s.subarray(0, l));\n        luaL_addsize(B, l);\n    }\n};\n\nconst luaL_addstring = function(B, s) {\n    s = from_userstring(s);\n    luaL_addlstring(B, s, s.length);\n};\n\nconst luaL_pushresult = function(B) {\n    lua_pushlstring(B.L, B.b, B.n);\n    /* delete old buffer */\n    B.n = 0;\n    B.b = empty;\n};\n\nconst luaL_addchar = function(B, c) {\n    luaL_prepbuffsize(B, 1);\n    B.b[B.n++] = c;\n};\n\nconst luaL_addsize = function(B, s) {\n    B.n += s;\n};\n\nconst luaL_pushresultsize = function(B, sz) {\n    luaL_addsize(B, sz);\n    luaL_pushresult(B);\n};\n\nconst luaL_addvalue = function(B) {\n    let L = B.L;\n    let s = lua_tostring(L, -1);\n    luaL_addlstring(B, s, s.length);\n    lua_pop(L, 1);  /* remove value */\n};\n\nconst luaL_opt = function(L, f, n, d) {\n    return lua_type(L, n) <= 0 ? d : f(L, n);\n};\n\nconst getS = function(L, ud) {\n    let s = ud.string;\n    ud.string = null;\n    return s;\n};\n\nconst luaL_loadbufferx = function(L, buff, size, name, mode) {\n    return lua_load(L, getS, {string: buff}, name, mode);\n};\n\nconst luaL_loadbuffer = function(L, s, sz, n) {\n    return luaL_loadbufferx(L, s, sz, n, null);\n};\n\nconst luaL_loadstring = function(L, s) {\n    return luaL_loadbuffer(L, s, s.length, s);\n};\n\nconst luaL_dostring = function(L, s) {\n    return (luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst luaL_getmetafield = function(L, obj, event) {\n    if (!lua_getmetatable(L, obj))  /* no metatable? */\n        return LUA_TNIL;\n    else {\n        lua_pushstring(L, event);\n        let tt = lua_rawget(L, -2);\n        if (tt === LUA_TNIL)  /* is metafield nil? */\n            lua_pop(L, 2);  /* remove metatable and metafield */\n        else\n            lua_remove(L, -2);  /* remove only metatable */\n        return tt;  /* return metafield type */\n    }\n};\n\nconst luaL_callmeta = function(L, obj, event) {\n    obj = lua_absindex(L, obj);\n    if (luaL_getmetafield(L, obj, event) === LUA_TNIL)\n        return false;\n\n    lua_pushvalue(L, obj);\n    lua_call(L, 1, 1);\n\n    return true;\n};\n\nconst luaL_len = function(L, idx) {\n    lua_len(L, idx);\n    let l = lua_tointegerx(L, -1);\n    if (l === false)\n        luaL_error(L, to_luastring(\"object length is not an integer\", true));\n    lua_pop(L, 1);  /* remove object */\n    return l;\n};\n\nconst p_I = to_luastring(\"%I\");\nconst p_f = to_luastring(\"%f\");\nconst luaL_tolstring = function(L, idx) {\n    if (luaL_callmeta(L, idx, __tostring)) {\n        if (!lua_isstring(L, -1))\n            luaL_error(L, to_luastring(\"'__tostring' must return a string\"));\n    } else {\n        let t = lua_type(L, idx);\n        switch(t) {\n            case LUA_TNUMBER: {\n                if (lua_isinteger(L, idx))\n                    lua_pushfstring(L, p_I, lua_tointeger(L, idx));\n                else\n                    lua_pushfstring(L, p_f, lua_tonumber(L, idx));\n                break;\n            }\n            case LUA_TSTRING:\n                lua_pushvalue(L, idx);\n                break;\n            case LUA_TBOOLEAN:\n                lua_pushliteral(L, (lua_toboolean(L, idx) ? \"true\" : \"false\"));\n                break;\n            case LUA_TNIL:\n                lua_pushliteral(L, \"nil\");\n                break;\n            default: {\n                let tt = luaL_getmetafield(L, idx, __name);\n                let kind = tt === LUA_TSTRING ? lua_tostring(L, -1) : luaL_typename(L, idx);\n                lua_pushfstring(L, to_luastring(\"%s: %p\"), kind, lua_topointer(L, idx));\n                if (tt !== LUA_TNIL)\n                    lua_remove(L, -2);\n                break;\n            }\n        }\n    }\n\n    return lua_tolstring(L, -1);\n};\n\n/*\n** Stripped-down 'require': After checking \"loaded\" table, calls 'openf'\n** to open a module, registers the result in 'package.loaded' table and,\n** if 'glb' is true, also registers the result in the global table.\n** Leaves resulting module on the top.\n*/\nconst luaL_requiref = function(L, modname, openf, glb) {\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, -1, modname); /* LOADED[modname] */\n    if (!lua_toboolean(L, -1)) {  /* package not already loaded? */\n        lua_pop(L, 1);  /* remove field */\n        lua_pushcfunction(L, openf);\n        lua_pushstring(L, modname);  /* argument to open function */\n        lua_call(L, 1, 1);  /* call 'openf' to open module */\n        lua_pushvalue(L, -1);  /* make copy of module (call result) */\n        lua_setfield(L, -3, modname);  /* LOADED[modname] = module */\n    }\n    lua_remove(L, -2);  /* remove LOADED table */\n    if (glb) {\n        lua_pushvalue(L, -1);  /* copy of module */\n        lua_setglobal(L, modname);  /* _G[modname] = module */\n    }\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i < l; i++) {\n        for (let j = 0; j < sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\nconst luaL_gsub = function(L, s, p, r) {\n    let wild;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while ((wild = find_subarray(s, p)) >= 0) {\n        luaL_addlstring(b, s, wild);  /* push prefix */\n        luaL_addstring(b, r);  /* push replacement in place of pattern */\n        s = s.subarray(wild + p.length);  /* continue after 'p' */\n    }\n    luaL_addstring(b, s);  /* push last suffix */\n    luaL_pushresult(b);\n    return lua_tostring(L, -1);\n};\n\n/*\n** ensure that stack[idx][fname] has a table and push that table\n** into the stack\n*/\nconst luaL_getsubtable = function(L, idx, fname) {\n    if (lua_getfield(L, idx, fname) === LUA_TTABLE)\n        return true;  /* table already there */\n    else {\n        lua_pop(L, 1);  /* remove previous result */\n        idx = lua_absindex(L, idx);\n        lua_newtable(L);\n        lua_pushvalue(L, -1);  /* copy to be left at top */\n        lua_setfield(L, idx, fname);  /* assign new table to field */\n        return false;  /* false, because did not find table there */\n    }\n};\n\n/*\n** set functions from list 'l' into table at top - 'nup'; each\n** function gets the 'nup' elements at the top as upvalues.\n** Returns with only the table at the stack.\n*/\nconst luaL_setfuncs = function(L, l, nup) {\n    luaL_checkstack(L, nup, to_luastring(\"too many upvalues\", true));\n    for (let lib in l) {  /* fill the table with given functions */\n        for (let i = 0; i < nup; i++)  /* copy upvalues to the top */\n            lua_pushvalue(L, -nup);\n        lua_pushcclosure(L, l[lib], nup);  /* closure with those upvalues */\n        lua_setfield(L, -(nup + 2), to_luastring(lib));\n    }\n    lua_pop(L, nup);  /* remove upvalues */\n};\n\n/*\n** Ensures the stack has at least 'space' extra slots, raising an error\n** if it cannot fulfill the request. (The error handling needs a few\n** extra slots to format the error message. In case of an error without\n** this extra space, Lua will generate the same 'stack overflow' error,\n** but without 'msg'.)\n*/\nconst luaL_checkstack = function(L, space, msg) {\n    if (!lua_checkstack(L, space)) {\n        if (msg)\n            luaL_error(L, to_luastring(\"stack overflow (%s)\"), msg);\n        else\n            luaL_error(L, to_luastring('stack overflow', true));\n    }\n};\n\nconst luaL_newlibtable = function(L) {\n    lua_createtable(L);\n};\n\nconst luaL_newlib = function(L, l) {\n    lua_createtable(L);\n    luaL_setfuncs(L, l, 0);\n};\n\n/* predefined references */\nconst LUA_NOREF  = -2;\nconst LUA_REFNIL = -1;\n\nconst luaL_ref = function(L, t) {\n    let ref;\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* remove from stack */\n        return LUA_REFNIL;  /* 'nil' has a unique fixed reference */\n    }\n    t = lua_absindex(L, t);\n    lua_rawgeti(L, t, 0);  /* get first free element */\n    ref = lua_tointeger(L, -1);  /* ref = t[freelist] */\n    lua_pop(L, 1);  /* remove it from stack */\n    if (ref !== 0) {  /* any free element? */\n        lua_rawgeti(L, t, ref);  /* remove it from list */\n        lua_rawseti(L, t, 0);  /* (t[freelist] = t[ref]) */\n    }\n    else  /* no free elements */\n        ref = lua_rawlen(L, t) + 1;  /* get a new reference */\n    lua_rawseti(L, t, ref);\n    return ref;\n};\n\n\nconst luaL_unref = function(L, t, ref) {\n    if (ref >= 0) {\n        t = lua_absindex(L, t);\n        lua_rawgeti(L, t, 0);\n        lua_rawseti(L, t, ref);  /* t[ref] = t[freelist] */\n        lua_pushinteger(L, ref);\n        lua_rawseti(L, t, 0);  /* t[freelist] = ref */\n    }\n};\n\n\nconst errfile = function(L, what, fnameindex, error) {\n    let serr = error.message;\n    let filename = lua_tostring(L, fnameindex).subarray(1);\n    lua_pushfstring(L, to_luastring(\"cannot %s %s: %s\"), to_luastring(what), filename, to_luastring(serr));\n    lua_remove(L, fnameindex);\n    return LUA_ERRFILE;\n};\n\nlet getc;\n\nconst utf8_bom = [0XEF, 0XBB, 0XBF];  /* UTF-8 BOM mark */\nconst skipBOM = function(lf) {\n    lf.n = 0;\n    let c;\n    let p = 0;\n    do {\n        c = getc(lf);\n        if (c === null || c !== utf8_bom[p]) return c;\n        p++;\n        lf.buff[lf.n++] = c;  /* to be read by the parser */\n    } while (p < utf8_bom.length);\n    lf.n = 0;  /* prefix matched; discard it */\n    return getc(lf);  /* return next character */\n};\n\n/*\n** reads the first character of file 'f' and skips an optional BOM mark\n** in its beginning plus its first line if it starts with '#'. Returns\n** true if it skipped the first line.  In any case, '*cp' has the\n** first \"valid\" character of the file (after the optional BOM and\n** a first-line comment).\n*/\nconst skipcomment = function(lf) {\n    let c = skipBOM(lf);\n    if (c === 35 /* '#'.charCodeAt(0) */) {  /* first line is a comment (Unix exec. file)? */\n        do {  /* skip first line */\n            c = getc(lf);\n        } while (c && c !== 10 /* '\\n'.charCodeAt(0) */);\n\n        return {\n            skipped: true,\n            c: getc(lf)  /* skip end-of-line, if present */\n        };\n    } else {\n        return {\n            skipped: false,\n            c: c\n        };\n    }\n};\n\nlet luaL_loadfilex;\n\nif (typeof process === \"undefined\") {\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = new Uint8Array(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n\n        if (lf.f !== null && lf.n > 0) {  /* are there pre-read characters to be read? */\n            let bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n            lf.f = lf.f.subarray(lf.pos);  /* we won't use lf.buff anymore */\n            return lf.buff.subarray(0, bytes);\n        }\n\n        let f = lf.f;\n        lf.f = null;\n        return f;\n    };\n\n    getc = function(lf) {\n        return lf.pos < lf.f.length ? lf.f[lf.pos++] : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            throw new Error(\"Can't read stdin in the browser\");\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            let path = to_uristring(filename);\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", path, false);\n            /*\n            Synchronous xhr in main thread always returns a js string.\n            Some browsers make console noise if you even attempt to set responseType\n            */\n            if (typeof window === \"undefined\") {\n                xhr.responseType = \"arraybuffer\";\n            }\n            xhr.send();\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                if (typeof xhr.response === \"string\") {\n                    lf.f = to_luastring(xhr.response);\n                } else {\n                    lf.f = new Uint8Array(xhr.response);\n                }\n            } else {\n                lf.err = xhr.status;\n                return errfile(L, \"open\", fnameindex, { message: `${xhr.status}: ${xhr.statusText}` });\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n} else {\n    const fs = require('fs');\n\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = Buffer.alloc(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n        let bytes = 0;\n        if (lf.n > 0) {  /* are there pre-read characters to be read? */\n            bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n        } else {  /* read a block from file */\n            try {\n                bytes = fs.readSync(lf.f, lf.buff, 0, lf.buff.length, lf.pos); /* read block */\n            } catch(e) {\n                lf.err = e;\n                bytes = 0;\n            }\n            lf.pos += bytes;\n        }\n        if (bytes > 0)\n            return lf.buff.subarray(0, bytes);\n        else return null;\n    };\n\n    getc = function(lf) {\n        let b = Buffer.alloc(1);\n        let bytes;\n        try {\n            bytes = fs.readSync(lf.f, b, 0, 1, lf.pos);\n        } catch(e) {\n            lf.err = e;\n            return null;\n        }\n        lf.pos += bytes;\n        return bytes > 0 ? b.readUInt8() : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            lua_pushliteral(L, \"=stdin\");\n            lf.f = process.stdin.fd;\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            try {\n                lf.f = fs.openSync(filename, \"r\");\n            } catch (e) {\n                return errfile(L, \"open\", fnameindex, e);\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (filename) try { fs.closeSync(lf.f); } catch(e) {}  /* close file (even in case of errors) */\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n}\n\nconst luaL_loadfile = function(L, filename) {\n    return luaL_loadfilex(L, filename, null);\n};\n\nconst luaL_dofile = function(L, filename) {\n    return (luaL_loadfile(L, filename) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst lua_writestringerror = function() {\n    for (let i=0; i<arguments.length; i++) {\n        let a = arguments[i];\n        if (typeof process === \"undefined\") {\n            /* split along new lines for separate console.error invocations */\n            do {\n                /* regexp uses [\\d\\D] to work around matching new lines\n                   the 's' flag is non-standard */\n                let r = /([^\\n]*)\\n?([\\d\\D]*)/.exec(a);\n                console.error(r[1]);\n                a = r[2];\n            } while (a !== \"\");\n        } else {\n            process.stderr.write(a);\n        }\n    }\n};\n\nconst luaL_checkversion_ = function(L, ver, sz) {\n    let v = lua_version(L);\n    if (sz != LUAL_NUMSIZES)  /* check numeric types */\n        luaL_error(L, to_luastring(\"core and library have incompatible numeric types\"));\n    if (v != lua_version(null))\n        luaL_error(L, to_luastring(\"multiple Lua VMs detected\"));\n    else if (v !== ver)\n        luaL_error(L, to_luastring(\"version mismatch: app. needs %f, Lua core provides %f\"), ver, v);\n};\n\n/* There is no point in providing this function... */\nconst luaL_checkversion = function(L) {\n    luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES);\n};\n\nmodule.exports.LUA_ERRFILE          = LUA_ERRFILE;\nmodule.exports.LUA_FILEHANDLE       = LUA_FILEHANDLE;\nmodule.exports.LUA_LOADED_TABLE     = LUA_LOADED_TABLE;\nmodule.exports.LUA_NOREF            = LUA_NOREF;\nmodule.exports.LUA_PRELOAD_TABLE    = LUA_PRELOAD_TABLE;\nmodule.exports.LUA_REFNIL           = LUA_REFNIL;\nmodule.exports.luaL_Buffer          = luaL_Buffer;\nmodule.exports.luaL_addchar         = luaL_addchar;\nmodule.exports.luaL_addlstring      = luaL_addlstring;\nmodule.exports.luaL_addsize         = luaL_addsize;\nmodule.exports.luaL_addstring       = luaL_addstring;\nmodule.exports.luaL_addvalue        = luaL_addvalue;\nmodule.exports.luaL_argcheck        = luaL_argcheck;\nmodule.exports.luaL_argerror        = luaL_argerror;\nmodule.exports.luaL_buffinit        = luaL_buffinit;\nmodule.exports.luaL_buffinitsize    = luaL_buffinitsize;\nmodule.exports.luaL_callmeta        = luaL_callmeta;\nmodule.exports.luaL_checkany        = luaL_checkany;\nmodule.exports.luaL_checkinteger    = luaL_checkinteger;\nmodule.exports.luaL_checklstring    = luaL_checklstring;\nmodule.exports.luaL_checknumber     = luaL_checknumber;\nmodule.exports.luaL_checkoption     = luaL_checkoption;\nmodule.exports.luaL_checkstack      = luaL_checkstack;\nmodule.exports.luaL_checkstring     = luaL_checkstring;\nmodule.exports.luaL_checktype       = luaL_checktype;\nmodule.exports.luaL_checkudata      = luaL_checkudata;\nmodule.exports.luaL_checkversion    = luaL_checkversion;\nmodule.exports.luaL_checkversion_   = luaL_checkversion_;\nmodule.exports.luaL_dofile          = luaL_dofile;\nmodule.exports.luaL_dostring        = luaL_dostring;\nmodule.exports.luaL_error           = luaL_error;\nmodule.exports.luaL_execresult      = luaL_execresult;\nmodule.exports.luaL_fileresult      = luaL_fileresult;\nmodule.exports.luaL_getmetafield    = luaL_getmetafield;\nmodule.exports.luaL_getmetatable    = luaL_getmetatable;\nmodule.exports.luaL_getsubtable     = luaL_getsubtable;\nmodule.exports.luaL_gsub            = luaL_gsub;\nmodule.exports.luaL_len             = luaL_len;\nmodule.exports.luaL_loadbuffer      = luaL_loadbuffer;\nmodule.exports.luaL_loadbufferx     = luaL_loadbufferx;\nmodule.exports.luaL_loadfile        = luaL_loadfile;\nmodule.exports.luaL_loadfilex       = luaL_loadfilex;\nmodule.exports.luaL_loadstring      = luaL_loadstring;\nmodule.exports.luaL_newlib          = luaL_newlib;\nmodule.exports.luaL_newlibtable     = luaL_newlibtable;\nmodule.exports.luaL_newmetatable    = luaL_newmetatable;\nmodule.exports.luaL_newstate        = luaL_newstate;\nmodule.exports.luaL_opt             = luaL_opt;\nmodule.exports.luaL_optinteger      = luaL_optinteger;\nmodule.exports.luaL_optlstring      = luaL_optlstring;\nmodule.exports.luaL_optnumber       = luaL_optnumber;\nmodule.exports.luaL_optstring       = luaL_optstring;\nmodule.exports.luaL_prepbuffer      = luaL_prepbuffer;\nmodule.exports.luaL_prepbuffsize    = luaL_prepbuffsize;\nmodule.exports.luaL_pushresult      = luaL_pushresult;\nmodule.exports.luaL_pushresultsize  = luaL_pushresultsize;\nmodule.exports.luaL_ref             = luaL_ref;\nmodule.exports.luaL_requiref        = luaL_requiref;\nmodule.exports.luaL_setfuncs        = luaL_setfuncs;\nmodule.exports.luaL_setmetatable    = luaL_setmetatable;\nmodule.exports.luaL_testudata       = luaL_testudata;\nmodule.exports.luaL_tolstring       = luaL_tolstring;\nmodule.exports.luaL_traceback       = luaL_traceback;\nmodule.exports.luaL_typename        = luaL_typename;\nmodule.exports.luaL_unref           = luaL_unref;\nmodule.exports.luaL_where           = luaL_where;\nmodule.exports.lua_writestringerror = lua_writestringerror;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCALL,\n    LUA_HOOKRET,\n    LUA_HOOKTAILCALL,\n    LUA_MASKCALL,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_MINSTACK,\n    LUA_MULTRET,\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TNIL\n    },\n    thread_status: {\n        LUA_ERRMEM,\n        LUA_ERRERR,\n        LUA_ERRRUN,\n        LUA_ERRSYNTAX,\n        LUA_OK,\n        LUA_YIELD\n    },\n    lua_Debug,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst lapi     = require('./lapi.js');\nconst ldebug   = require('./ldebug.js');\nconst lfunc    = require('./lfunc.js');\nconst {\n    api_check,\n    lua_assert,\n    LUAI_MAXCCALLS\n} = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst lstate   = require('./lstate.js');\nconst { luaS_newliteral } = require('./lstring.js');\nconst ltm      = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lundump  = require('./lundump.js');\nconst lvm      = require('./lvm.js');\nconst { MBuffer } = require('./lzio.js');\n\nconst adjust_top = function(L, newtop) {\n    if (L.top < newtop) {\n        while (L.top < newtop)\n            L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n    } else {\n        while (L.top > newtop)\n            delete L.stack[--L.top];\n    }\n};\n\nconst seterrorobj = function(L, errcode, oldtop) {\n    let current_top = L.top;\n\n    /* extend stack so that L.stack[oldtop] is sure to exist */\n    while (L.top < oldtop + 1)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    switch (errcode) {\n        case LUA_ERRMEM: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"not enough memory\"));\n            break;\n        }\n        case LUA_ERRERR: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"error in error handling\"));\n            break;\n        }\n        default: {\n            lobject.setobjs2s(L, oldtop, current_top - 1);\n        }\n    }\n\n    while (L.top > oldtop + 1)\n        delete L.stack[--L.top];\n};\n\nconst ERRORSTACKSIZE = LUAI_MAXSTACK + 200;\n\nconst luaD_reallocstack = function(L, newsize) {\n    lua_assert(newsize <= LUAI_MAXSTACK || newsize == ERRORSTACKSIZE);\n    lua_assert(L.stack_last == L.stack.length - lstate.EXTRA_STACK);\n    L.stack.length = newsize;\n    L.stack_last = newsize - lstate.EXTRA_STACK;\n};\n\nconst luaD_growstack = function(L, n) {\n    let size = L.stack.length;\n    if (size > LUAI_MAXSTACK)\n        luaD_throw(L, LUA_ERRERR);\n    else {\n        let needed = L.top + n + lstate.EXTRA_STACK;\n        let newsize = 2 * size;\n        if (newsize > LUAI_MAXSTACK) newsize = LUAI_MAXSTACK;\n        if (newsize < needed) newsize = needed;\n        if (newsize > LUAI_MAXSTACK) {  /* stack overflow? */\n            luaD_reallocstack(L, ERRORSTACKSIZE);\n            ldebug.luaG_runerror(L, to_luastring(\"stack overflow\", true));\n        }\n        else\n            luaD_reallocstack(L, newsize);\n    }\n};\n\nconst luaD_checkstack = function(L, n) {\n    if (L.stack_last - L.top <= n)\n        luaD_growstack(L, n);\n};\n\nconst stackinuse = function(L) {\n    let lim = L.top;\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {\n        if (lim < ci.top) lim = ci.top;\n    }\n    lua_assert(lim <= L.stack_last);\n    return lim + 1; /* part of stack in use */\n};\n\nconst luaD_shrinkstack = function(L) {\n    let inuse = stackinuse(L);\n    let goodsize = inuse + Math.floor(inuse / 8) + 2*lstate.EXTRA_STACK;\n    if (goodsize > LUAI_MAXSTACK)\n        goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n    if (L.stack.length > LUAI_MAXSTACK)  /* had been handling stack overflow? */\n        lstate.luaE_freeCI(L);  /* free all CIs (list grew because of an error) */\n    /* if thread is currently not handling a stack overflow and its\n     good size is smaller than current size, shrink its stack */\n    if (inuse <= (LUAI_MAXSTACK - lstate.EXTRA_STACK) && goodsize < L.stack.length)\n        luaD_reallocstack(L, goodsize);\n};\n\nconst luaD_inctop = function(L) {\n    luaD_checkstack(L, 1);\n    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Prepares a function call: checks the stack, creates a new CallInfo\n** entry, fills in the relevant information, calls hook if needed.\n** If function is a JS function, does the call, too. (Otherwise, leave\n** the execution ('luaV_execute') to the caller, to allow stackless\n** calls.) Returns true iff function has been executed (JS function).\n*/\nconst luaD_precall = function(L, off, nresults) {\n    let func = L.stack[off];\n\n    switch(func.type) {\n        case LUA_TCCL:\n        case LUA_TLCF: {\n            let f = func.type === LUA_TCCL ? func.value.f : func.value;\n\n            luaD_checkstack(L, LUA_MINSTACK);\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.top = L.top + LUA_MINSTACK;\n            lua_assert(ci.top <= L.stack_last);\n            ci.callstatus = 0;\n            if (L.hookmask & LUA_MASKCALL)\n                luaD_hook(L, LUA_HOOKCALL, -1);\n            let n = f(L); /* do the actual call */\n            if (typeof n !== \"number\" || n < 0 || (n|0) !== n)\n                throw Error(\"invalid return value from JS function (expected integer)\");\n            lapi.api_checknelems(L, n);\n\n            luaD_poscall(L, ci, L.top - n, n);\n\n            return true;\n        }\n        case LUA_TLCL: {\n            let base;\n            let p = func.value.p;\n            let n = L.top - off - 1;\n            let fsize = p.maxstacksize;\n            luaD_checkstack(L, fsize);\n            if (p.is_vararg) {\n                base = adjust_varargs(L, p, n);\n            } else {\n                for (; n < p.numparams; n++)\n                    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null); // complete missing arguments\n                base = off + 1;\n            }\n\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.l_base = base;\n            ci.top = base + fsize;\n            adjust_top(L, ci.top);\n            ci.l_code = p.code;\n            ci.l_savedpc = 0;\n            ci.callstatus = lstate.CIST_LUA;\n            if (L.hookmask & LUA_MASKCALL)\n                callhook(L, ci);\n            return false;\n        }\n        default:\n            luaD_checkstack(L, 1);\n            tryfuncTM(L, off, func);\n            return luaD_precall(L, off, nresults);\n    }\n};\n\nconst luaD_poscall = function(L, ci, firstResult, nres) {\n    let wanted = ci.nresults;\n\n    if (L.hookmask & (LUA_MASKRET | LUA_MASKLINE)) {\n        if (L.hookmask & LUA_MASKRET)\n            luaD_hook(L, LUA_HOOKRET, -1);\n        L.oldpc = ci.previous.l_savedpc;  /* 'oldpc' for caller function */\n    }\n\n    let res = ci.funcOff;\n    L.ci = ci.previous;\n    L.ci.next = null;\n    return moveresults(L, firstResult, res, nres, wanted);\n};\n\nconst moveresults = function(L, firstResult, res, nres, wanted) {\n    switch (wanted) {\n        case 0:\n            break;\n        case 1: {\n            if (nres === 0)\n                L.stack[res].setnilvalue();\n            else {\n                lobject.setobjs2s(L, res, firstResult); /* move it to proper place */\n            }\n            break;\n        }\n        case LUA_MULTRET: {\n            for (let i = 0; i < nres; i++)\n                lobject.setobjs2s(L, res + i, firstResult + i);\n            for (let i=L.top; i>=(res + nres); i--)\n                delete L.stack[i];\n            L.top = res + nres;\n            return false;\n        }\n        default: {\n            let i;\n            if (wanted <= nres) {\n                for (i = 0; i < wanted; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n            } else {\n                for (i = 0; i < nres; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n                for (; i < wanted; i++) {\n                    if (res+i >= L.top)\n                        L.stack[res + i] = new lobject.TValue(LUA_TNIL, null);\n                    else\n                        L.stack[res + i].setnilvalue();\n                }\n            }\n            break;\n        }\n    }\n    let newtop = res + wanted; /* top points after the last result */\n    for (let i=L.top; i>=newtop; i--)\n        delete L.stack[i];\n    L.top = newtop;\n    return true;\n};\n\n/*\n** Call a hook for the given event. Make sure there is a hook to be\n** called. (Both 'L->hook' and 'L->hookmask', which triggers this\n** function, can be changed asynchronously by signals.)\n*/\nconst luaD_hook = function(L, event, line) {\n    let hook = L.hook;\n    if (hook && L.allowhook) {  /* make sure there is a hook */\n        let ci = L.ci;\n        let top = L.top;\n        let ci_top = ci.top;\n        let ar = new lua_Debug();\n        ar.event = event;\n        ar.currentline = line;\n        ar.i_ci = ci;\n        luaD_checkstack(L, LUA_MINSTACK);  /* ensure minimum stack size */\n        ci.top = L.top + LUA_MINSTACK;\n        lua_assert(ci.top <= L.stack_last);\n        L.allowhook = 0;  /* cannot call hooks inside a hook */\n        ci.callstatus |= lstate.CIST_HOOKED;\n        hook(L, ar);\n        lua_assert(!L.allowhook);\n        L.allowhook = 1;\n        ci.top = ci_top;\n        adjust_top(L, top);\n        ci.callstatus &= ~lstate.CIST_HOOKED;\n    }\n};\n\nconst callhook = function(L, ci) {\n    let hook = LUA_HOOKCALL;\n    ci.l_savedpc++;  /* hooks assume 'pc' is already incremented */\n    if ((ci.previous.callstatus & lstate.CIST_LUA) &&\n      ci.previous.l_code[ci.previous.l_savedpc - 1].opcode == lopcodes.OpCodesI.OP_TAILCALL) {\n        ci.callstatus |= lstate.CIST_TAIL;\n        hook = LUA_HOOKTAILCALL;\n    }\n    luaD_hook(L, hook, -1);\n    ci.l_savedpc--;  /* correct 'pc' */\n};\n\nconst adjust_varargs = function(L, p, actual) {\n    let nfixargs = p.numparams;\n    /* move fixed parameters to final position */\n    let fixed = L.top - actual; /* first fixed argument */\n    let base = L.top; /* final position of first argument */\n\n    let i;\n    for (i = 0; i < nfixargs && i < actual; i++) {\n        lobject.pushobj2s(L, L.stack[fixed + i]);\n        L.stack[fixed + i].setnilvalue();\n    }\n\n    for (; i < nfixargs; i++)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    return base;\n};\n\nconst tryfuncTM = function(L, off, func) {\n    let tm = ltm.luaT_gettmbyobj(L, func, ltm.TMS.TM_CALL);\n    if (!tm.ttisfunction(tm))\n        ldebug.luaG_typeerror(L, func, to_luastring(\"call\", true));\n    /* Open a hole inside the stack at 'func' */\n    lobject.pushobj2s(L, L.stack[L.top-1]); /* push top of stack again */\n    for (let p = L.top-2; p > off; p--)\n        lobject.setobjs2s(L, p, p-1); /* move other items up one */\n    lobject.setobj2s(L, off, tm); /* tag method is the new function to be called */\n};\n\n/*\n** Check appropriate error for stack overflow (\"regular\" overflow or\n** overflow while handling stack overflow). If 'nCalls' is larger than\n** LUAI_MAXCCALLS (which means it is handling a \"regular\" overflow) but\n** smaller than 9/8 of LUAI_MAXCCALLS, does not report an error (to\n** allow overflow handling to work)\n*/\nconst stackerror = function(L) {\n    if (L.nCcalls === LUAI_MAXCCALLS)\n        ldebug.luaG_runerror(L, to_luastring(\"JS stack overflow\", true));\n    else if (L.nCcalls >= LUAI_MAXCCALLS + (LUAI_MAXCCALLS >> 3))\n        luaD_throw(L, LUA_ERRERR);  /* error while handing stack error */\n};\n\n/*\n** Call a function (JS or Lua). The function to be called is at func.\n** The arguments are on the stack, right after the function.\n** When returns, all the results are on the stack, starting at the original\n** function position.\n*/\nconst luaD_call = function(L, off, nResults) {\n    if (++L.nCcalls >= LUAI_MAXCCALLS)\n        stackerror(L);\n    if (!luaD_precall(L, off, nResults))\n        lvm.luaV_execute(L);\n    L.nCcalls--;\n};\n\nconst luaD_throw = function(L, errcode) {\n    if (L.errorJmp) {  /* thread has an error handler? */\n        L.errorJmp.status = errcode;  /* set status */\n        throw L.errorJmp;\n    } else {  /* thread has no error handler */\n        let g = L.l_G;\n        L.status = errcode;  /* mark it as dead */\n        if (g.mainthread.errorJmp) {  /* main thread has a handler? */\n            g.mainthread.stack[g.mainthread.top++] = L.stack[L.top - 1];  /* copy error obj. */\n            luaD_throw(g.mainthread, errcode);  /* re-throw in main thread */\n        } else {  /* no handler at all; abort */\n            let panic = g.panic;\n            if (panic) {  /* panic function? */\n                seterrorobj(L, errcode, L.top);  /* assume EXTRA_STACK */\n                if (L.ci.top < L.top)\n                    L.ci.top = L.top;  /* pushing msg. can break this invariant */\n                panic(L);  /* call panic function (last chance to jump out) */\n            }\n            throw new Error(`Aborted ${errcode}`);\n        }\n    }\n};\n\nconst luaD_rawrunprotected = function(L, f, ud) {\n    let oldnCcalls = L.nCcalls;\n    let lj = {\n        status: LUA_OK,\n        previous: L.errorJmp /* chain new error handler */\n    };\n    L.errorJmp = lj;\n\n    try {\n        f(L, ud);\n    } catch (e) {\n        if (lj.status === LUA_OK) {\n            /* error was not thrown via luaD_throw, i.e. it is a JS error */\n            /* run user error handler (if it exists) */\n            let atnativeerror = L.l_G.atnativeerror;\n            if (atnativeerror) {\n                try {\n                    lj.status = LUA_OK;\n\n                    lapi.lua_pushcfunction(L, atnativeerror);\n                    lapi.lua_pushlightuserdata(L, e);\n                    luaD_callnoyield(L, L.top - 2, 1);\n\n                    /* Now run the message handler (if it exists) */\n                    /* copy of luaG_errormsg without the throw */\n                    if (L.errfunc !== 0) {  /* is there an error handling function? */\n                        let errfunc = L.errfunc;\n                        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n                        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n                        luaD_callnoyield(L, L.top - 2, 1);\n                    }\n\n                    lj.status = LUA_ERRRUN;\n                } catch(e2) {\n                    if (lj.status === LUA_OK) {\n                        /* also failed */\n                        lj.status = -1;\n                    }\n                }\n            } else {\n                lj.status = -1;\n            }\n        }\n    }\n\n    L.errorJmp = lj.previous;\n    L.nCcalls = oldnCcalls;\n\n    return lj.status;\n\n};\n\n/*\n** Completes the execution of an interrupted C function, calling its\n** continuation function.\n*/\nconst finishCcall = function(L, status) {\n    let ci = L.ci;\n\n    /* must have a continuation and must be able to call it */\n    lua_assert(ci.c_k !== null && L.nny === 0);\n    /* error status can only happen in a protected call */\n    lua_assert(ci.callstatus & lstate.CIST_YPCALL || status === LUA_YIELD);\n\n    if (ci.callstatus & lstate.CIST_YPCALL) {  /* was inside a pcall? */\n        ci.callstatus &= ~lstate.CIST_YPCALL;  /* continuation is also inside it */\n        L.errfunc = ci.c_old_errfunc;  /* with the same error function */\n    }\n\n    /* finish 'lua_callk'/'lua_pcall'; CIST_YPCALL and 'errfunc' already\n       handled */\n    if (ci.nresults === LUA_MULTRET && L.ci.top < L.top) L.ci.top = L.top;\n    let c_k = ci.c_k; /* don't want to call as method */\n    let n = c_k(L, status, ci.c_ctx);  /* call continuation function */\n    lapi.api_checknelems(L, n);\n    luaD_poscall(L, ci, L.top - n, n);  /* finish 'luaD_precall' */\n};\n\n/*\n** Executes \"full continuation\" (everything in the stack) of a\n** previously interrupted coroutine until the stack is empty (or another\n** interruption long-jumps out of the loop). If the coroutine is\n** recovering from an error, 'ud' points to the error status, which must\n** be passed to the first continuation function (otherwise the default\n** status is LUA_YIELD).\n*/\nconst unroll = function(L, ud) {\n    if (ud !== null)  /* error status? */\n        finishCcall(L, ud);  /* finish 'lua_pcallk' callee */\n\n    while (L.ci !== L.base_ci) {  /* something in the stack */\n        if (!(L.ci.callstatus & lstate.CIST_LUA))  /* C function? */\n            finishCcall(L, LUA_YIELD);  /* complete its execution */\n        else {  /* Lua function */\n            lvm.luaV_finishOp(L);  /* finish interrupted instruction */\n            lvm.luaV_execute(L);  /* execute down to higher C 'boundary' */\n        }\n    }\n};\n\n/*\n** Try to find a suspended protected call (a \"recover point\") for the\n** given thread.\n*/\nconst findpcall = function(L) {\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {  /* search for a pcall */\n        if (ci.callstatus & lstate.CIST_YPCALL)\n            return ci;\n    }\n\n    return null;  /* no pending pcall */\n};\n\n/*\n** Recovers from an error in a coroutine. Finds a recover point (if\n** there is one) and completes the execution of the interrupted\n** 'luaD_pcall'. If there is no recover point, returns zero.\n*/\nconst recover = function(L, status) {\n    let ci = findpcall(L);\n    if (ci === null) return 0;  /* no recovery point */\n    /* \"finish\" luaD_pcall */\n    let oldtop = ci.extra;\n    lfunc.luaF_close(L, oldtop);\n    seterrorobj(L, status, oldtop);\n    L.ci = ci;\n    L.allowhook = ci.callstatus & lstate.CIST_OAH;  /* restore original 'allowhook' */\n    L.nny = 0;  /* should be zero to be yieldable */\n    luaD_shrinkstack(L);\n    L.errfunc = ci.c_old_errfunc;\n    return 1;  /* continue running the coroutine */\n};\n\n/*\n** Signal an error in the call to 'lua_resume', not in the execution\n** of the coroutine itself. (Such errors should not be handled by any\n** coroutine error handler and should not kill the coroutine.)\n*/\nconst resume_error = function(L, msg, narg) {\n    let ts = luaS_newliteral(L, msg);\n    if (narg === 0) {\n        lobject.pushsvalue2s(L, ts);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    } else {\n        /* remove args from the stack */\n        for (let i=1; i<narg; i++)\n            delete L.stack[--L.top];\n        lobject.setsvalue2s(L, L.top-1, ts);  /* push error message */\n    }\n    return LUA_ERRRUN;\n};\n\n/*\n** Do the work for 'lua_resume' in protected mode. Most of the work\n** depends on the status of the coroutine: initial state, suspended\n** inside a hook, or regularly suspended (optionally with a continuation\n** function), plus erroneous cases: non-suspended coroutine or dead\n** coroutine.\n*/\nconst resume = function(L, n) {\n    let firstArg = L.top - n;  /* first argument */\n    let ci = L.ci;\n    if (L.status === LUA_OK) {  /* starting a coroutine? */\n        if (!luaD_precall(L, firstArg - 1, LUA_MULTRET))  /* Lua function? */\n            lvm.luaV_execute(L);  /* call it */\n    } else {  /* resuming from previous yield */\n        lua_assert(L.status === LUA_YIELD);\n        L.status = LUA_OK;  /* mark that it is running (again) */\n        ci.funcOff = ci.extra;\n        ci.func = L.stack[ci.funcOff];\n\n        if (ci.callstatus & lstate.CIST_LUA)  /* yielded inside a hook? */\n            lvm.luaV_execute(L);  /* just continue running Lua code */\n        else {  /* 'common' yield */\n            if (ci.c_k !== null) {  /* does it have a continuation function? */\n                n = ci.c_k(L, LUA_YIELD, ci.c_ctx); /* call continuation */\n                lapi.api_checknelems(L, n);\n                firstArg = L.top - n;  /* yield results come from continuation */\n            }\n\n            luaD_poscall(L, ci, firstArg, n);  /* finish 'luaD_precall' */\n        }\n\n        unroll(L, null);  /* run continuation */\n    }\n};\n\nconst lua_resume = function(L, from, nargs) {\n    let oldnny = L.nny;  /* save \"number of non-yieldable\" calls */\n\n    if (L.status === LUA_OK) {  /* may be starting a coroutine */\n        if (L.ci !== L.base_ci)  /* not in base level? */\n            return resume_error(L, \"cannot resume non-suspended coroutine\", nargs);\n    } else if (L.status !== LUA_YIELD)\n        return resume_error(L, \"cannot resume dead coroutine\", nargs);\n\n    L.nCcalls = from ? from.nCcalls + 1 : 1;\n    if (L.nCcalls >= LUAI_MAXCCALLS)\n        return resume_error(L, \"JS stack overflow\", nargs);\n\n    L.nny = 0;  /* allow yields */\n\n    lapi.api_checknelems(L, L.status === LUA_OK ? nargs + 1: nargs);\n\n    let status = luaD_rawrunprotected(L, resume, nargs);\n    if (status === -1)  /* error calling 'lua_resume'? */\n        status = LUA_ERRRUN;\n    else {  /* continue running after recoverable errors */\n        while (status > LUA_YIELD && recover(L, status)) {\n            /* unroll continuation */\n            status = luaD_rawrunprotected(L, unroll, status);\n        }\n\n        if (status > LUA_YIELD) {  /* unrecoverable error? */\n            L.status = status;  /* mark thread as 'dead' */\n            seterrorobj(L, status, L.top);  /* push error message */\n            L.ci.top = L.top;\n        } else\n            lua_assert(status === L.status);  /* normal end or yield */\n    }\n\n    L.nny = oldnny;  /* restore 'nny' */\n    L.nCcalls--;\n    lua_assert(L.nCcalls === (from ? from.nCcalls : 0));\n    return status;\n};\n\nconst lua_isyieldable = function(L) {\n    return L.nny === 0;\n};\n\nconst lua_yieldk = function(L, nresults, ctx, k) {\n    let ci = L.ci;\n    lapi.api_checknelems(L, nresults);\n\n    if (L.nny > 0) {\n        if (L !== L.l_G.mainthread)\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield across a JS-call boundary\", true));\n        else\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield from outside a coroutine\", true));\n    }\n\n    L.status = LUA_YIELD;\n    ci.extra = ci.funcOff;  /* save current 'func' */\n    if (ci.callstatus & lstate.CIST_LUA)  /* inside a hook? */\n        api_check(L, k === null, \"hooks cannot continue after yielding\");\n    else {\n        ci.c_k = k;\n        if (k !== null)  /* is there a continuation? */\n            ci.c_ctx = ctx;  /* save context */\n        ci.funcOff = L.top - nresults - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        luaD_throw(L, LUA_YIELD);\n    }\n\n    lua_assert(ci.callstatus & lstate.CIST_HOOKED);  /* must be inside a hook */\n    return 0;  /* return to 'luaD_hook' */\n};\n\nconst lua_yield = function(L, n) {\n    lua_yieldk(L, n, 0, null);\n};\n\nconst luaD_pcall = function(L, func, u, old_top, ef) {\n    let old_ci = L.ci;\n    let old_allowhooks = L.allowhook;\n    let old_nny = L.nny;\n    let old_errfunc = L.errfunc;\n    L.errfunc = ef;\n\n    let status = luaD_rawrunprotected(L, func, u);\n\n    if (status !== LUA_OK) {\n        lfunc.luaF_close(L, old_top);\n        seterrorobj(L, status, old_top);\n        L.ci = old_ci;\n        L.allowhook = old_allowhooks;\n        L.nny = old_nny;\n        luaD_shrinkstack(L);\n    }\n\n    L.errfunc = old_errfunc;\n\n    return status;\n};\n\n/*\n** Similar to 'luaD_call', but does not allow yields during the call\n*/\nconst luaD_callnoyield = function(L, off, nResults) {\n    L.nny++;\n    luaD_call(L, off, nResults);\n    L.nny--;\n};\n\n/*\n** Execute a protected parser.\n*/\nclass SParser {\n    constructor(z, name, mode) {  /* data to 'f_parser' */\n        this.z = z;\n        this.buff = new MBuffer();  /* dynamic structure used by the scanner */\n        this.dyd = new lparser.Dyndata();  /* dynamic structures used by the parser */\n        this.mode = mode;\n        this.name = name;\n    }\n}\n\nconst checkmode = function(L, mode, x) {\n    if (mode && luastring_indexOf(mode, x[0]) === -1) {\n        lobject.luaO_pushfstring(L,\n            to_luastring(\"attempt to load a %s chunk (mode is '%s')\"), x, mode);\n        luaD_throw(L, LUA_ERRSYNTAX);\n    }\n};\n\nconst f_parser = function(L, p) {\n    let cl;\n    let c = p.z.zgetc();  /* read first character */\n    if (c === LUA_SIGNATURE[0]) {\n        checkmode(L, p.mode, to_luastring(\"binary\", true));\n        cl = lundump.luaU_undump(L, p.z, p.name);\n    } else {\n        checkmode(L, p.mode, to_luastring(\"text\", true));\n        cl = lparser.luaY_parser(L, p.z, p.buff, p.dyd, p.name, c);\n    }\n\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    lfunc.luaF_initupvals(L, cl);\n};\n\nconst luaD_protectedparser = function(L, z, name, mode) {\n    let p = new SParser(z, name, mode);\n    L.nny++;  /* cannot yield during parsing */\n    let status = luaD_pcall(L, f_parser, p, L.top, L.errfunc);\n    L.nny--;\n    return status;\n};\n\nmodule.exports.adjust_top           = adjust_top;\nmodule.exports.luaD_call            = luaD_call;\nmodule.exports.luaD_callnoyield     = luaD_callnoyield;\nmodule.exports.luaD_checkstack      = luaD_checkstack;\nmodule.exports.luaD_growstack       = luaD_growstack;\nmodule.exports.luaD_hook            = luaD_hook;\nmodule.exports.luaD_inctop          = luaD_inctop;\nmodule.exports.luaD_pcall           = luaD_pcall;\nmodule.exports.luaD_poscall         = luaD_poscall;\nmodule.exports.luaD_precall         = luaD_precall;\nmodule.exports.luaD_protectedparser = luaD_protectedparser;\nmodule.exports.luaD_rawrunprotected = luaD_rawrunprotected;\nmodule.exports.luaD_reallocstack    = luaD_reallocstack;\nmodule.exports.luaD_throw           = luaD_throw;\nmodule.exports.lua_isyieldable      = lua_isyieldable;\nmodule.exports.lua_resume           = lua_resume;\nmodule.exports.lua_yield            = lua_yield;\nmodule.exports.lua_yieldk           = lua_yieldk;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst ldebug  = require('./ldebug.js');\nconst lobject = require('./lobject.js');\nconst {\n    luaS_hashlongstr,\n    TString\n} = require('./lstring.js');\nconst lstate  = require('./lstate.js');\n\n/* used to prevent conflicts with lightuserdata keys */\nlet lightuserdata_hashes = new WeakMap();\nconst get_lightuserdata_hash = function(v) {\n    let hash = lightuserdata_hashes.get(v);\n    if (!hash) {\n        /* Hash should be something unique that is a valid WeakMap key\n           so that it ends up in dead_weak when removed from a table */\n        hash = {};\n        lightuserdata_hashes.set(v, hash);\n    }\n    return hash;\n};\n\nconst table_hash = function(L, key) {\n    switch(key.type) {\n        case LUA_TNIL:\n            return ldebug.luaG_runerror(L, to_luastring(\"table index is nil\", true));\n        case LUA_TNUMFLT:\n            if (isNaN(key.value))\n                return ldebug.luaG_runerror(L, to_luastring(\"table index is NaN\", true));\n            /* fall through */\n        case LUA_TNUMINT: /* takes advantage of floats and integers being same in JS */\n        case LUA_TBOOLEAN:\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TLCF:\n        case LUA_TCCL:\n        case LUA_TUSERDATA:\n        case LUA_TTHREAD:\n            return key.value;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return luaS_hashlongstr(key.tsvalue());\n        case LUA_TLIGHTUSERDATA: {\n            let v = key.value;\n            switch(typeof v) {\n                case \"string\":\n                    /* possible conflict with LUA_TSTRING.\n                       prefix this string with \"*\" so they don't clash */\n                    return \"*\" + v;\n                case \"number\":\n                    /* possible conflict with LUA_TNUMBER.\n                       turn into string and prefix with \"#\" to avoid clash with other strings */\n                    return \"#\" + v;\n                case \"boolean\":\n                    /* possible conflict with LUA_TBOOLEAN. use strings ?true and ?false instead */\n                    return v?\"?true\":\"?false\";\n                case \"function\":\n                    /* possible conflict with LUA_TLCF.\n                       indirect via a weakmap */\n                    return get_lightuserdata_hash(v);\n                case \"object\":\n                    /* v could be a lua_State, CClosure, LClosure, Table or Userdata from this state as returned by lua_topointer */\n                    if ((v instanceof lstate.lua_State && v.l_G === L.l_G) ||\n                        v instanceof Table ||\n                        v instanceof lobject.Udata ||\n                        v instanceof lobject.LClosure ||\n                        v instanceof lobject.CClosure) {\n                        /* indirect via a weakmap */\n                        return get_lightuserdata_hash(v);\n                    }\n                    /* fall through */\n                default:\n                    return v;\n            }\n        }\n        default:\n            throw new Error(\"unknown key type: \" + key.type);\n    }\n};\n\nclass Table {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.strong = new Map();\n        this.dead_strong = new Map();\n        this.dead_weak = void 0; /* initialised when needed */\n        this.f = void 0; /* first entry */\n        this.l = void 0; /* last entry */\n        this.metatable = null;\n        this.flags = ~0;\n    }\n}\n\nconst invalidateTMcache = function(t) {\n    t.flags = 0;\n};\n\nconst add = function(t, hash, key, value) {\n    t.dead_strong.clear();\n    t.dead_weak = void 0;\n    let prev = null;\n    let entry = {\n        key: key,\n        value: value,\n        p: prev = t.l,\n        n: void 0\n    };\n    if (!t.f) t.f = entry;\n    if (prev) prev.n = entry;\n    t.strong.set(hash, entry);\n    t.l = entry;\n};\n\nconst is_valid_weakmap_key = function(k) {\n    return typeof k === 'object' ? k !== null : typeof k === 'function';\n};\n\n/* Move out of 'strong' part and into 'dead' part. */\nconst mark_dead = function(t, hash) {\n    let e = t.strong.get(hash);\n    if (e) {\n        e.key.setdeadvalue();\n        e.value = void 0;\n        let next = e.n;\n        let prev = e.p;\n        e.p = void 0; /* no need to know previous item any more */\n        if(prev) prev.n = next;\n        if(next) next.p = prev;\n        if(t.f === e) t.f = next;\n        if(t.l === e) t.l = prev;\n        t.strong.delete(hash);\n        if (is_valid_weakmap_key(hash)) {\n            if (!t.dead_weak) t.dead_weak = new WeakMap();\n            t.dead_weak.set(hash, e);\n        } else {\n            /* can't be used as key in weakmap */\n            t.dead_strong.set(hash, e);\n        }\n    }\n};\n\nconst luaH_new = function(L) {\n    return new Table(L);\n};\n\nconst getgeneric = function(t, hash) {\n    let v = t.strong.get(hash);\n    return v ? v.value : lobject.luaO_nilobject;\n};\n\nconst luaH_getint = function(t, key) {\n    lua_assert(typeof key == \"number\" && (key|0) === key);\n    return getgeneric(t, key);\n};\n\nconst luaH_getstr = function(t, key) {\n    lua_assert(key instanceof TString);\n    return getgeneric(t, luaS_hashlongstr(key));\n};\n\nconst luaH_get = function(L, t, key) {\n    lua_assert(key instanceof lobject.TValue);\n    if (key.ttisnil() || (key.ttisfloat() && isNaN(key.value)))\n        return lobject.luaO_nilobject;\n    return getgeneric(t, table_hash(L, key));\n};\n\nconst luaH_setint = function(t, key, value) {\n    lua_assert(typeof key == \"number\" && (key|0) === key && value instanceof lobject.TValue);\n    let hash = key; /* table_hash known result */\n    if (value.ttisnil()) {\n        mark_dead(t, hash);\n        return;\n    }\n    let e = t.strong.get(hash);\n    if (e) {\n        let tv = e.value;\n        tv.setfrom(value);\n    } else {\n        let k = new lobject.TValue(LUA_TNUMINT, key);\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\nconst luaH_setfrom = function(L, t, key, value) {\n    lua_assert(key instanceof lobject.TValue);\n    let hash = table_hash(L, key);\n    if (value.ttisnil()) { /* delete */\n        mark_dead(t, hash);\n        return;\n    }\n\n    let e = t.strong.get(hash);\n    if (e) {\n        e.value.setfrom(value);\n    } else {\n        let k;\n        let kv = key.value;\n        if ((key.ttisfloat() && (kv|0) === kv)) { /* does index fit in an integer? */\n            /* insert it as an integer */\n            k = new lobject.TValue(LUA_TNUMINT, kv);\n        } else {\n            k = new lobject.TValue(key.type, kv);\n        }\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\n/*\n** Try to find a boundary in table 't'. A 'boundary' is an integer index\n** such that t[i] is non-nil and t[i+1] is nil (and 0 if t[1] is nil).\n*/\nconst luaH_getn = function(t) {\n    let i = 0;\n    let j = t.strong.size + 1; /* use known size of Map to bound search */\n    /* now do a binary search between them */\n    while (j - i > 1) {\n        let m = Math.floor((i+j)/2);\n        if (luaH_getint(t, m).ttisnil()) j = m;\n        else i = m;\n    }\n    return i;\n};\n\nconst luaH_next = function(L, table, keyI) {\n    let keyO = L.stack[keyI];\n\n    let entry;\n    if (keyO.type === LUA_TNIL) {\n        entry = table.f;\n        if (!entry)\n            return false;\n    } else {\n        /* First find current key */\n        let hash = table_hash(L, keyO);\n        /* Look in main part of table */\n        entry = table.strong.get(hash);\n        if (entry) {\n            entry = entry.n;\n            if (!entry)\n                return false;\n        } else {\n            /* Try dead keys */\n            entry = (table.dead_weak && table.dead_weak.get(hash)) || table.dead_strong.get(hash);\n            if (!entry)\n                /* item not in table */\n                return ldebug.luaG_runerror(L, to_luastring(\"invalid key to 'next'\"));\n            /* Iterate until either out of keys, or until finding a non-dead key */\n            do {\n                entry = entry.n;\n                if (!entry)\n                    return false;\n            } while (entry.key.ttisdeadkey());\n        }\n    }\n    lobject.setobj2s(L, keyI, entry.key);\n    lobject.setobj2s(L, keyI+1, entry.value);\n    return true;\n};\n\nmodule.exports.invalidateTMcache = invalidateTMcache;\nmodule.exports.luaH_get     = luaH_get;\nmodule.exports.luaH_getint  = luaH_getint;\nmodule.exports.luaH_getn    = luaH_getn;\nmodule.exports.luaH_getstr  = luaH_getstr;\nmodule.exports.luaH_setfrom = luaH_setfrom;\nmodule.exports.luaH_setint  = luaH_setint;\nmodule.exports.luaH_new     = luaH_new;\nmodule.exports.luaH_next    = luaH_next;\nmodule.exports.Table        = Table;\n","\"use strict\";\n\nconst {\n    is_luastring,\n    luastring_eq,\n    luastring_from,\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass TString {\n\n    constructor(L, str) {\n        this.hash = null;\n        this.realstring = str;\n    }\n\n    getstr() {\n        return this.realstring;\n    }\n\n    tsslen() {\n        return this.realstring.length;\n    }\n\n}\n\nconst luaS_eqlngstr = function(a, b) {\n    lua_assert(a instanceof TString);\n    lua_assert(b instanceof TString);\n    return a == b || luastring_eq(a.realstring, b.realstring);\n};\n\n/* converts strings (arrays) to a consistent map key\n   make sure this doesn't conflict with any of the anti-collision strategies in ltable */\nconst luaS_hash = function(str) {\n    lua_assert(is_luastring(str));\n    let len = str.length;\n    let s = \"|\";\n    for (let i=0; i<len; i++)\n        s += str[i].toString(16);\n    return s;\n};\n\nconst luaS_hashlongstr = function(ts) {\n    lua_assert(ts instanceof TString);\n    if(ts.hash === null) {\n        ts.hash = luaS_hash(ts.getstr());\n    }\n    return ts.hash;\n};\n\n/* variant that takes ownership of array */\nconst luaS_bless = function(L, str) {\n    lua_assert(str instanceof Uint8Array);\n    return new TString(L, str);\n};\n\n/* makes a copy */\nconst luaS_new = function(L, str) {\n    return luaS_bless(L, luastring_from(str));\n};\n\n/* takes a js string */\nconst luaS_newliteral = function(L, str) {\n    return luaS_bless(L, to_luastring(str));\n};\n\nmodule.exports.luaS_eqlngstr    = luaS_eqlngstr;\nmodule.exports.luaS_hash        = luaS_hash;\nmodule.exports.luaS_hashlongstr = luaS_hashlongstr;\nmodule.exports.luaS_bless       = luaS_bless;\nmodule.exports.luaS_new         = luaS_new;\nmodule.exports.luaS_newliteral  = luaS_newliteral;\nmodule.exports.TString          = TString;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCOUNT,\n    LUA_HOOKLINE,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TNIL,\n        LUA_TTABLE\n    },\n    thread_status: {\n        LUA_ERRRUN,\n        LUA_YIELD\n    },\n    from_userstring,\n    luastring_eq,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst {\n    api_check,\n    lua_assert\n} = require('./llimits.js');\nconst { LUA_IDSIZE } = require('./luaconf.js');\nconst lapi     = require('./lapi.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lstate   = require('./lstate.js');\nconst ltable   = require('./ltable.js');\nconst ltm      = require('./ltm.js');\nconst lvm      = require('./lvm.js');\n\nconst currentpc = function(ci) {\n    lua_assert(ci.callstatus & lstate.CIST_LUA);\n    return ci.l_savedpc - 1;\n};\n\nconst currentline = function(ci) {\n    return ci.func.value.p.lineinfo.length !== 0 ? ci.func.value.p.lineinfo[currentpc(ci)] : -1;\n};\n\n/*\n** If function yielded, its 'func' can be in the 'extra' field. The\n** next function restores 'func' to its correct value for debugging\n** purposes. (It exchanges 'func' and 'extra'; so, when called again,\n** after debugging, it also \"re-restores\" ** 'func' to its altered value.\n*/\nconst swapextra = function(L) {\n    if (L.status === LUA_YIELD) {\n        let ci = L.ci;  /* get function that yielded */\n        let temp = ci.funcOff;  /* exchange its 'func' and 'extra' values */\n        ci.func = L.stack[ci.extra];\n        ci.funcOff = ci.extra;\n        ci.extra = temp;\n    }\n};\n\nconst lua_sethook = function(L, func, mask, count) {\n    if (func === null || mask === 0) {  /* turn off hooks? */\n        mask = 0;\n        func = null;\n    }\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        L.oldpc = L.ci.l_savedpc;\n    L.hook = func;\n    L.basehookcount = count;\n    L.hookcount = L.basehookcount;\n    L.hookmask = mask;\n};\n\nconst lua_gethook = function(L) {\n    return L.hook;\n};\n\n\nconst lua_gethookmask = function(L) {\n    return L.hookmask;\n};\n\n\nconst lua_gethookcount = function(L) {\n    return L.basehookcount;\n};\n\nconst lua_getstack = function(L, level, ar) {\n    let ci;\n    let status;\n    if (level < 0) return 0;  /* invalid (negative) level */\n    for (ci = L.ci; level > 0 && ci !== L.base_ci; ci = ci.previous)\n        level--;\n    if (level === 0 && ci !== L.base_ci) {  /* level found? */\n        status = 1;\n        ar.i_ci = ci;\n    } else\n        status = 0;  /* no such level */\n    return status;\n};\n\nconst upvalname = function(p, uv) {\n    lua_assert(uv < p.upvalues.length);\n    let s = p.upvalues[uv].name;\n    if (s === null) return to_luastring(\"?\", true);\n    return s.getstr();\n};\n\nconst findvararg = function(ci, n) {\n    let nparams = ci.func.value.p.numparams;\n    if (n >= ci.l_base - ci.funcOff - nparams)\n        return null;  /* no such vararg */\n    else {\n        return {\n            pos: ci.funcOff + nparams + n,\n            name: to_luastring(\"(*vararg)\", true)  /* generic name for any vararg */\n        };\n    }\n};\n\nconst findlocal = function(L, ci, n) {\n    let base, name = null;\n\n    if (ci.callstatus & lstate.CIST_LUA) {\n        if (n < 0)  /* access to vararg values? */\n            return findvararg(ci, -n);\n        else {\n            base = ci.l_base;\n            name = lfunc.luaF_getlocalname(ci.func.value.p, n, currentpc(ci));\n        }\n    } else\n        base = ci.funcOff + 1;\n\n    if (name === null) {  /* no 'standard' name? */\n        let limit = ci === L.ci ? L.top : ci.next.funcOff;\n        if (limit - base >= n && n > 0)  /* is 'n' inside 'ci' stack? */\n            name = to_luastring(\"(*temporary)\", true);  /* generic name for any valid slot */\n        else\n            return null;  /* no name */\n    }\n    return {\n        pos: base + (n - 1),\n        name: name\n    };\n};\n\nconst lua_getlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    if (ar === null) {  /* information about non-active function? */\n        if (!L.stack[L.top - 1].ttisLclosure())  /* not a Lua function? */\n            name = null;\n        else  /* consider live variables at function start (parameters) */\n            name = lfunc.luaF_getlocalname(L.stack[L.top - 1].value.p, n, 0);\n    } else {  /* active function; get information through 'ar' */\n        let local = findlocal(L, ar.i_ci, n);\n        if (local) {\n            name = local.name;\n            lobject.pushobj2s(L, L.stack[local.pos]);\n            api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        } else {\n            name = null;\n        }\n    }\n    swapextra(L);\n    return name;\n};\n\nconst lua_setlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    let local = findlocal(L, ar.i_ci, n);\n    if (local) {\n        name = local.name;\n        lobject.setobjs2s(L, local.pos, L.top - 1);\n        delete L.stack[--L.top];  /* pop value */\n    } else {\n        name = null;\n    }\n    swapextra(L);\n    return name;\n};\n\nconst funcinfo = function(ar, cl) {\n    if (cl === null || cl instanceof lobject.CClosure) {\n        ar.source = to_luastring(\"=[JS]\", true);\n        ar.linedefined = -1;\n        ar.lastlinedefined = -1;\n        ar.what = to_luastring(\"J\", true);\n    } else {\n        let p = cl.p;\n        ar.source = p.source ? p.source.getstr() : to_luastring(\"=?\", true);\n        ar.linedefined = p.linedefined;\n        ar.lastlinedefined = p.lastlinedefined;\n        ar.what = ar.linedefined === 0 ? to_luastring(\"main\", true) : to_luastring(\"Lua\", true);\n    }\n\n    ar.short_src = lobject.luaO_chunkid(ar.source, LUA_IDSIZE);\n};\n\nconst collectvalidlines = function(L, f) {\n    if (f === null || f instanceof lobject.CClosure) {\n        L.stack[L.top] = new lobject.TValue(LUA_TNIL, null);\n        lapi.api_incr_top(L);\n    } else {\n        let lineinfo = f.p.lineinfo;\n        let t = ltable.luaH_new(L);\n        L.stack[L.top] = new lobject.TValue(LUA_TTABLE, t);\n        lapi.api_incr_top(L);\n        let v = new lobject.TValue(LUA_TBOOLEAN, true);\n        for (let i = 0; i < lineinfo.length; i++)\n            ltable.luaH_setint(t, lineinfo[i], v);\n    }\n};\n\nconst getfuncname = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n    if (ci === null)\n        return null;\n    else if (ci.callstatus & lstate.CIST_FIN) {  /* is this a finalizer? */\n        r.name = to_luastring(\"__gc\", true);\n        r.funcname = to_luastring(\"metamethod\", true);  /* report it as such */\n        return r;\n    }\n    /* calling function is a known Lua function? */\n    else if (!(ci.callstatus & lstate.CIST_TAIL) && ci.previous.callstatus & lstate.CIST_LUA)\n        return funcnamefromcode(L, ci.previous);\n    else return null;  /* no way to find a name */\n};\n\nconst auxgetinfo = function(L, what, ar, f, ci) {\n    let status = 1;\n    for (; what.length > 0; what = what.subarray(1)) {\n        switch (what[0]) {\n            case 83 /* ('S').charCodeAt(0) */: {\n                funcinfo(ar, f);\n                break;\n            }\n            case 108 /* ('l').charCodeAt(0) */: {\n                ar.currentline = ci && ci.callstatus & lstate.CIST_LUA ? currentline(ci) : -1;\n                break;\n            }\n            case 117 /* ('u').charCodeAt(0) */: {\n                ar.nups = f === null ? 0 : f.nupvalues;\n                if (f === null || f instanceof lobject.CClosure) {\n                    ar.isvararg = true;\n                    ar.nparams = 0;\n                } else {\n                    ar.isvararg = f.p.is_vararg;\n                    ar.nparams = f.p.numparams;\n                }\n                break;\n            }\n            case 116 /* ('t').charCodeAt(0) */: {\n                ar.istailcall = ci ? ci.callstatus & lstate.CIST_TAIL : 0;\n                break;\n            }\n            case 110 /* ('n').charCodeAt(0) */: {\n                let r = getfuncname(L, ci);\n                if (r === null) {\n                    ar.namewhat = to_luastring(\"\", true);\n                    ar.name = null;\n                } else {\n                    ar.namewhat = r.funcname;\n                    ar.name = r.name;\n                }\n                break;\n            }\n            case 76 /* ('L').charCodeAt(0) */:\n            case 102 /* ('f').charCodeAt(0) */:  /* handled by lua_getinfo */\n                break;\n            default: status = 0;  /* invalid option */\n        }\n    }\n\n    return status;\n};\n\nconst lua_getinfo = function(L, what, ar) {\n    what = from_userstring(what);\n    let status, cl, ci, func;\n    swapextra(L);\n    if (what[0] === 62 /* ('>').charCodeAt(0) */) {\n        ci = null;\n        func = L.stack[L.top - 1];\n        api_check(L, func.ttisfunction(), \"function expected\");\n        what = what.subarray(1);  /* skip the '>' */\n        L.top--;  /* pop function */\n    } else {\n        ci = ar.i_ci;\n        func = ci.func;\n        lua_assert(ci.func.ttisfunction());\n    }\n\n    cl = func.ttisclosure() ? func.value : null;\n    status = auxgetinfo(L, what, ar, cl, ci);\n    if (luastring_indexOf(what, 102 /* ('f').charCodeAt(0) */) >= 0) {\n        lobject.pushobj2s(L, func);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n\n    swapextra(L);\n    if (luastring_indexOf(what, 76 /* ('L').charCodeAt(0) */) >= 0)\n        collectvalidlines(L, cl);\n\n    return status;\n};\n\nconst kname = function(p, pc, c) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    if (lopcodes.ISK(c)) {  /* is 'c' a constant? */\n        let kvalue = p.k[lopcodes.INDEXK(c)];\n        if (kvalue.ttisstring()) {  /* literal constant? */\n            r.name = kvalue.svalue();  /* it is its own name */\n            return r;\n        }\n        /* else no reasonable name found */\n    } else {  /* 'c' is a register */\n        let what = getobjname(p, pc, c); /* search for 'c' */\n        if (what && what.funcname[0] === 99 /* ('c').charCodeAt(0) */) {  /* found a constant name? */\n            return what;  /* 'name' already filled */\n        }\n        /* else no reasonable name found */\n    }\n    r.name = to_luastring(\"?\", true);\n    return r;  /* no reasonable name found */\n};\n\nconst filterpc = function(pc, jmptarget) {\n    if (pc < jmptarget)  /* is code conditional (inside a jump)? */\n        return -1;  /* cannot know who sets that register */\n    else return pc;  /* current position sets that register */\n};\n\n/*\n** try to find last instruction before 'lastpc' that modified register 'reg'\n*/\nconst findsetreg = function(p, lastpc, reg) {\n    let setreg = -1;  /* keep last instruction that changed 'reg' */\n    let jmptarget = 0;  /* any code before this address is conditional */\n    let OCi = lopcodes.OpCodesI;\n    for (let pc = 0; pc < lastpc; pc++) {\n        let i = p.code[pc];\n        let a = i.A;\n        switch (i.opcode) {\n            case OCi.OP_LOADNIL: {\n                let b = i.B;\n                if (a <= reg && reg <= a + b)  /* set registers from 'a' to 'a+b' */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_TFORCALL: {\n                if (reg >= a + 2)  /* affect all regs above its base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_CALL:\n            case OCi.OP_TAILCALL: {\n                if (reg >= a)  /* affect all registers above base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_JMP: {\n                let b = i.sBx;\n                let dest = pc + 1 + b;\n                /* jump is forward and do not skip 'lastpc'? */\n                if (pc < dest && dest <= lastpc) {\n                    if (dest > jmptarget)\n                        jmptarget = dest;  /* update 'jmptarget' */\n                }\n                break;\n            }\n            default:\n                if (lopcodes.testAMode(i.opcode) && reg === a)\n                    setreg = filterpc(pc, jmptarget);\n                break;\n        }\n    }\n\n    return setreg;\n};\n\n\nconst getobjname = function(p, lastpc, reg) {\n    let r = {\n        name: lfunc.luaF_getlocalname(p, reg + 1, lastpc),\n        funcname: null\n    };\n\n    if (r.name) {  /* is a local? */\n        r.funcname = to_luastring(\"local\", true);\n        return r;\n    }\n\n    /* else try symbolic execution */\n    let pc = findsetreg(p, lastpc, reg);\n    let OCi = lopcodes.OpCodesI;\n    if (pc !== -1) {  /* could find instruction? */\n        let i = p.code[pc];\n        switch (i.opcode) {\n            case OCi.OP_MOVE: {\n                let b = i.B;  /* move from 'b' to 'a' */\n                if (b < i.A)\n                    return getobjname(p, pc, b);  /* get name for 'b' */\n                break;\n            }\n            case OCi.OP_GETTABUP:\n            case OCi.OP_GETTABLE: {\n                let k = i.C;  /* key index */\n                let t = i.B;  /* table index */\n                let vn = i.opcode === OCi.OP_GETTABLE ? lfunc.luaF_getlocalname(p, t + 1, pc) : upvalname(p, t);\n                r.name = kname(p, pc, k).name;\n                r.funcname = (vn && luastring_eq(vn, llex.LUA_ENV)) ? to_luastring(\"global\", true) : to_luastring(\"field\", true);\n                return r;\n            }\n            case OCi.OP_GETUPVAL: {\n                r.name = upvalname(p, i.B);\n                r.funcname = to_luastring(\"upvalue\", true);\n                return r;\n            }\n            case OCi.OP_LOADK:\n            case OCi.OP_LOADKX: {\n                let b = i.opcode === OCi.OP_LOADK ? i.Bx : p.code[pc + 1].Ax;\n                if (p.k[b].ttisstring()) {\n                    r.name = p.k[b].svalue();\n                    r.funcname = to_luastring(\"constant\", true);\n                    return r;\n                }\n                break;\n            }\n            case OCi.OP_SELF: {\n                let k = i.C;\n                r.name = kname(p, pc, k).name;\n                r.funcname = to_luastring(\"method\", true);\n                return r;\n            }\n            default: break;\n        }\n    }\n\n    return null;\n};\n\n/*\n** Try to find a name for a function based on the code that called it.\n** (Only works when function was called by a Lua function.)\n** Returns what the name is (e.g., \"for iterator\", \"method\",\n** \"metamethod\") and sets '*name' to point to the name.\n*/\nconst funcnamefromcode = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    let tm = 0;  /* (initial value avoids warnings) */\n    let p = ci.func.value.p;  /* calling function */\n    let pc = currentpc(ci);  /* calling instruction index */\n    let i = p.code[pc];  /* calling instruction */\n    let OCi = lopcodes.OpCodesI;\n\n    if (ci.callstatus & lstate.CIST_HOOKED) {\n        r.name = to_luastring(\"?\", true);\n        r.funcname = to_luastring(\"hook\", true);\n        return r;\n    }\n\n    switch (i.opcode) {\n        case OCi.OP_CALL:\n        case OCi.OP_TAILCALL:\n            return getobjname(p, pc, i.A);  /* get function name */\n        case OCi.OP_TFORCALL:\n            r.name = to_luastring(\"for iterator\", true);\n            r.funcname = to_luastring(\"for iterator\", true);\n            return r;\n        /* other instructions can do calls through metamethods */\n        case OCi.OP_SELF:\n        case OCi.OP_GETTABUP:\n        case OCi.OP_GETTABLE:\n            tm = ltm.TMS.TM_INDEX;\n            break;\n        case OCi.OP_SETTABUP:\n        case OCi.OP_SETTABLE:\n            tm = ltm.TMS.TM_NEWINDEX;\n            break;\n        case OCi.OP_ADD:    tm = ltm.TMS.TM_ADD;    break;\n        case OCi.OP_SUB:    tm = ltm.TMS.TM_SUB;    break;\n        case OCi.OP_MUL:    tm = ltm.TMS.TM_MUL;    break;\n        case OCi.OP_MOD:    tm = ltm.TMS.TM_MOD;    break;\n        case OCi.OP_POW:    tm = ltm.TMS.TM_POW;    break;\n        case OCi.OP_DIV:    tm = ltm.TMS.TM_DIV;    break;\n        case OCi.OP_IDIV:   tm = ltm.TMS.TM_IDIV;   break;\n        case OCi.OP_BAND:   tm = ltm.TMS.TM_BAND;   break;\n        case OCi.OP_BOR:    tm = ltm.TMS.TM_BOR;    break;\n        case OCi.OP_BXOR:   tm = ltm.TMS.TM_BXOR;   break;\n        case OCi.OP_SHL:    tm = ltm.TMS.TM_SHL;    break;\n        case OCi.OP_SHR:    tm = ltm.TMS.TM_SHR;    break;\n        case OCi.OP_UNM:    tm = ltm.TMS.TM_UNM;    break;\n        case OCi.OP_BNOT:   tm = ltm.TMS.TM_BNOT;   break;\n        case OCi.OP_LEN:    tm = ltm.TMS.TM_LEN;    break;\n        case OCi.OP_CONCAT: tm = ltm.TMS.TM_CONCAT; break;\n        case OCi.OP_EQ:     tm = ltm.TMS.TM_EQ;     break;\n        case OCi.OP_LT:     tm = ltm.TMS.TM_LT;     break;\n        case OCi.OP_LE:     tm = ltm.TMS.TM_LE;     break;\n        default:\n            return null;  /* cannot find a reasonable name */\n    }\n\n    r.name = L.l_G.tmname[tm].getstr();\n    r.funcname = to_luastring(\"metamethod\", true);\n    return r;\n};\n\nconst isinstack = function(L, ci, o) {\n    for (let i = ci.l_base; i < ci.top; i++) {\n        if (L.stack[i] === o)\n            return i;\n    }\n\n    return false;\n};\n\n/*\n** Checks whether value 'o' came from an upvalue. (That can only happen\n** with instructions OP_GETTABUP/OP_SETTABUP, which operate directly on\n** upvalues.)\n*/\nconst getupvalname = function(L, ci, o) {\n    let c = ci.func.value;\n    for (let i = 0; i < c.nupvalues; i++) {\n        if (c.upvals[i] === o) {\n            return {\n                name: upvalname(c.p, i),\n                funcname: to_luastring('upvalue', true)\n            };\n        }\n    }\n\n    return null;\n};\n\nconst varinfo = function(L, o) {\n    let ci = L.ci;\n    let kind = null;\n    if (ci.callstatus & lstate.CIST_LUA) {\n        kind = getupvalname(L, ci, o);  /* check whether 'o' is an upvalue */\n        let stkid = isinstack(L, ci, o);\n        if (!kind && stkid)  /* no? try a register */\n            kind = getobjname(ci.func.value.p, currentpc(ci), stkid - ci.l_base);\n    }\n\n    return kind ? lobject.luaO_pushfstring(L, to_luastring(\" (%s '%s')\", true), kind.funcname, kind.name) : to_luastring(\"\", true);\n};\n\nconst luaG_typeerror = function(L, o, op) {\n    let t = ltm.luaT_objtypename(L, o);\n    luaG_runerror(L, to_luastring(\"attempt to %s a %s value%s\", true), op, t, varinfo(L, o));\n};\n\nconst luaG_concaterror = function(L, p1, p2) {\n    if (p1.ttisstring() || lvm.cvt2str(p1)) p1 = p2;\n    luaG_typeerror(L, p1, to_luastring('concatenate', true));\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_opinterror = function(L, p1, p2, msg) {\n    if (lvm.tonumber(p1) === false)\n        p2 = p1;\n    luaG_typeerror(L, p2, msg);\n};\n\nconst luaG_ordererror = function(L, p1, p2) {\n    let t1 = ltm.luaT_objtypename(L, p1);\n    let t2 = ltm.luaT_objtypename(L, p2);\n    if (luastring_eq(t1, t2))\n        luaG_runerror(L, to_luastring(\"attempt to compare two %s values\", true), t1);\n    else\n        luaG_runerror(L, to_luastring(\"attempt to compare %s with %s\", true), t1, t2);\n};\n\n/* add src:line information to 'msg' */\nconst luaG_addinfo = function(L, msg, src, line) {\n    let buff;\n    if (src)\n        buff = lobject.luaO_chunkid(src.getstr(), LUA_IDSIZE);\n    else\n        buff = to_luastring(\"?\", true);\n\n    return lobject.luaO_pushfstring(L, to_luastring(\"%s:%d: %s\", true), buff, line, msg);\n};\n\nconst luaG_runerror = function(L, fmt, ...argp) {\n    let ci = L.ci;\n    let msg = lobject.luaO_pushvfstring(L, fmt, argp);\n    if (ci.callstatus & lstate.CIST_LUA)  /* if Lua function, add source:line information */\n        luaG_addinfo(L, msg, ci.func.value.p.source, currentline(ci));\n    luaG_errormsg(L);\n};\n\nconst luaG_errormsg = function(L) {\n    if (L.errfunc !== 0) {  /* is there an error handling function? */\n        let errfunc = L.errfunc;\n        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n        ldo.luaD_callnoyield(L, L.top - 2, 1);\n    }\n\n    ldo.luaD_throw(L, LUA_ERRRUN);\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_tointerror = function(L, p1, p2) {\n    let temp = lvm.tointeger(p1);\n    if (temp === false)\n        p2 = p1;\n    luaG_runerror(L, to_luastring(\"number%s has no integer representation\", true), varinfo(L, p2));\n};\n\nconst luaG_traceexec = function(L) {\n    let ci = L.ci;\n    let mask = L.hookmask;\n    let counthook = (--L.hookcount === 0 && (mask & LUA_MASKCOUNT));\n    if (counthook)\n        L.hookcount = L.basehookcount;  /* reset count */\n    else if (!(mask & LUA_MASKLINE))\n        return;  /* no line hook and count != 0; nothing to be done */\n    if (ci.callstatus & lstate.CIST_HOOKYIELD) {  /* called hook last time? */\n        ci.callstatus &= ~lstate.CIST_HOOKYIELD;  /* erase mark */\n        return;  /* do not call hook again (VM yielded, so it did not move) */\n    }\n    if (counthook)\n        ldo.luaD_hook(L, LUA_HOOKCOUNT, -1);  /* call count hook */\n    if (mask & LUA_MASKLINE) {\n        let p = ci.func.value.p;\n        let npc = ci.l_savedpc - 1; // pcRel(ci.u.l.savedpc, p);\n        let newline = p.lineinfo.length !== 0 ? p.lineinfo[npc] : -1;\n        if (npc === 0 ||  /* call linehook when enter a new function, */\n            ci.l_savedpc <= L.oldpc ||  /* when jump back (loop), or when */\n            newline !== (p.lineinfo.length !== 0 ? p.lineinfo[L.oldpc - 1] : -1))  /* enter a new line */\n            ldo.luaD_hook(L, LUA_HOOKLINE, newline);  /* call line hook */\n    }\n    L.oldpc = ci.l_savedpc;\n    if (L.status === LUA_YIELD) {  /* did hook yield? */\n        if (counthook)\n            L.hookcount = 1;  /* undo decrement to zero */\n        ci.l_savedpc--;  /* undo increment (resume will increment it again) */\n        ci.callstatus |= lstate.CIST_HOOKYIELD;  /* mark that it yielded */\n        ci.funcOff = L.top - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        ldo.luaD_throw(L, LUA_YIELD);\n    }\n};\n\nmodule.exports.luaG_addinfo     = luaG_addinfo;\nmodule.exports.luaG_concaterror = luaG_concaterror;\nmodule.exports.luaG_errormsg    = luaG_errormsg;\nmodule.exports.luaG_opinterror  = luaG_opinterror;\nmodule.exports.luaG_ordererror  = luaG_ordererror;\nmodule.exports.luaG_runerror    = luaG_runerror;\nmodule.exports.luaG_tointerror  = luaG_tointerror;\nmodule.exports.luaG_traceexec   = luaG_traceexec;\nmodule.exports.luaG_typeerror   = luaG_typeerror;\nmodule.exports.lua_gethook      = lua_gethook;\nmodule.exports.lua_gethookcount = lua_gethookcount;\nmodule.exports.lua_gethookmask  = lua_gethookmask;\nmodule.exports.lua_getinfo      = lua_getinfo;\nmodule.exports.lua_getlocal     = lua_getlocal;\nmodule.exports.lua_getstack     = lua_getstack;\nmodule.exports.lua_sethook      = lua_sethook;\nmodule.exports.lua_setlocal     = lua_setlocal;\n","\"use strict\";\n\nconst {\n    LUA_MINSTACK,\n    LUA_RIDX_GLOBALS,\n    LUA_RIDX_MAINTHREAD,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TNIL,\n        LUA_TTABLE,\n        LUA_TTHREAD\n    },\n    thread_status: {\n        LUA_OK\n    }\n} = require('./defs.js');\nconst lobject              = require('./lobject.js');\nconst ldo                  = require('./ldo.js');\nconst lapi                 = require('./lapi.js');\nconst ltable               = require('./ltable.js');\nconst ltm                  = require('./ltm.js');\n\nconst EXTRA_STACK = 5;\n\nconst BASIC_STACK_SIZE = 2 * LUA_MINSTACK;\n\nclass CallInfo {\n\n    constructor() {\n        this.func = null;\n        this.funcOff = NaN;\n        this.top = NaN;\n        this.previous = null;\n        this.next = null;\n\n        /* only for Lua functions */\n        this.l_base = NaN; /* base for this function */\n        this.l_code = null; /* reference to this.func.p.code */\n        this.l_savedpc = NaN; /* offset into l_code */\n        /* only for JS functions */\n        this.c_k = null;  /* continuation in case of yields */\n        this.c_old_errfunc = null;\n        this.c_ctx = null;  /* context info. in case of yields */\n\n        this.nresults = NaN;\n        this.callstatus = NaN;\n    }\n\n}\n\nclass lua_State {\n\n    constructor(g) {\n        this.id = g.id_counter++;\n\n        this.base_ci = new CallInfo(); /* CallInfo for first level (C calling Lua) */\n        this.top = NaN; /* first free slot in the stack */\n        this.stack_last = NaN; /* last free slot in the stack */\n        this.oldpc = NaN; /* last pc traced */\n\n        /* preinit_thread */\n        this.l_G = g;\n        this.stack = null;\n        this.ci = null;\n        this.errorJmp = null;\n        this.nCcalls = 0;\n        this.hook = null;\n        this.hookmask = 0;\n        this.basehookcount = 0;\n        this.allowhook = 1;\n        this.hookcount = this.basehookcount;\n        this.nny = 1;\n        this.status = LUA_OK;\n        this.errfunc = 0;\n    }\n\n}\n\nclass global_State {\n\n    constructor() {\n        this.id_counter = 1; /* used to give objects unique ids */\n        this.ids = new WeakMap();\n\n        this.mainthread = null;\n        this.l_registry = new lobject.TValue(LUA_TNIL, null);\n        this.panic = null;\n        this.atnativeerror = null;\n        this.version = null;\n        this.tmname = new Array(ltm.TMS.TM_N);\n        this.mt = new Array(LUA_NUMTAGS);\n    }\n\n}\n\nconst luaE_extendCI = function(L) {\n    let ci = new CallInfo();\n    L.ci.next = ci;\n    ci.previous = L.ci;\n    ci.next = null;\n    L.ci = ci;\n    return ci;\n};\n\nconst luaE_freeCI = function(L) {\n    let ci = L.ci;\n    ci.next = null;\n};\n\nconst stack_init = function(L1, L) {\n    L1.stack = new Array(BASIC_STACK_SIZE);\n    L1.top = 0;\n    L1.stack_last = BASIC_STACK_SIZE - EXTRA_STACK;\n    /* initialize first ci */\n    let ci = L1.base_ci;\n    ci.next = ci.previous = null;\n    ci.callstatus = 0;\n    ci.funcOff = L1.top;\n    ci.func = L1.stack[L1.top];\n    L1.stack[L1.top++] = new lobject.TValue(LUA_TNIL, null);\n    ci.top = L1.top + LUA_MINSTACK;\n    L1.ci = ci;\n};\n\nconst freestack = function(L) {\n    L.ci = L.base_ci;\n    luaE_freeCI(L);\n    L.stack = null;\n};\n\n/*\n** Create registry table and its predefined values\n*/\nconst init_registry = function(L, g) {\n    let registry = ltable.luaH_new(L);\n    g.l_registry.sethvalue(registry);\n    ltable.luaH_setint(registry, LUA_RIDX_MAINTHREAD, new lobject.TValue(LUA_TTHREAD, L));\n    ltable.luaH_setint(registry, LUA_RIDX_GLOBALS, new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L)));\n};\n\n/*\n** open parts of the state that may cause memory-allocation errors.\n** ('g->version' !== NULL flags that the state was completely build)\n*/\nconst f_luaopen = function(L) {\n    let g = L.l_G;\n    stack_init(L, L);\n    init_registry(L, g);\n    ltm.luaT_init(L);\n    g.version = lapi.lua_version(null);\n};\n\nconst lua_newthread = function(L) {\n    let g = L.l_G;\n    let L1 = new lua_State(g);\n    L.stack[L.top] = new lobject.TValue(LUA_TTHREAD, L1);\n    lapi.api_incr_top(L);\n    L1.hookmask = L.hookmask;\n    L1.basehookcount = L.basehookcount;\n    L1.hook = L.hook;\n    L1.hookcount = L1.basehookcount;\n    stack_init(L1, L);\n    return L1;\n};\n\nconst luaE_freethread = function(L, L1) {\n    freestack(L1);\n};\n\nconst lua_newstate = function() {\n    let g = new global_State();\n    let L = new lua_State(g);\n    g.mainthread = L;\n\n    if (ldo.luaD_rawrunprotected(L, f_luaopen, null) !== LUA_OK) {\n        L = null;\n    }\n\n    return L;\n};\n\nconst close_state = function(L) {\n    freestack(L);\n};\n\nconst lua_close = function(L) {\n    L = L.l_G.mainthread;  /* only the main thread can be closed */\n    close_state(L);\n};\n\nmodule.exports.lua_State       = lua_State;\nmodule.exports.CallInfo        = CallInfo;\nmodule.exports.CIST_OAH        = (1<<0);  /* original value of 'allowhook' */\nmodule.exports.CIST_LUA        = (1<<1);  /* call is running a Lua function */\nmodule.exports.CIST_HOOKED     = (1<<2);  /* call is running a debug hook */\nmodule.exports.CIST_FRESH      = (1<<3);  /* call is running on a fresh invocation of luaV_execute */\nmodule.exports.CIST_YPCALL     = (1<<4);  /* call is a yieldable protected call */\nmodule.exports.CIST_TAIL       = (1<<5);  /* call was tail called */\nmodule.exports.CIST_HOOKYIELD  = (1<<6);  /* last hook called yielded */\nmodule.exports.CIST_LEQ        = (1<<7);  /* using __lt for __le */\nmodule.exports.CIST_FIN        = (1<<8);   /* call is running a finalizer */\nmodule.exports.EXTRA_STACK     = EXTRA_STACK;\nmodule.exports.lua_close       = lua_close;\nmodule.exports.lua_newstate    = lua_newstate;\nmodule.exports.lua_newthread   = lua_newthread;\nmodule.exports.luaE_extendCI   = luaE_extendCI;\nmodule.exports.luaE_freeCI     = luaE_freeCI;\nmodule.exports.luaE_freethread = luaE_freethread;\n","\"use strict\";\n\nconst { constant_types: { LUA_TNIL } } = require('./defs.js');\nconst lobject = require('./lobject.js');\n\nclass Proto {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.k = [];              // constants used by the function\n        this.p = [];              // functions defined inside the function\n        this.code = [];           // opcodes\n        this.cache = null;        // last-created closure with this prototype\n        this.lineinfo = [];       // map from opcodes to source lines (debug information)\n        this.upvalues = [];       // upvalue information\n        this.numparams = 0;       // number of fixed parameters\n        this.is_vararg = false;\n        this.maxstacksize = 0;    // number of registers needed by this function\n        this.locvars = [];        // information about local variables (debug information)\n        this.linedefined = 0;     // debug information\n        this.lastlinedefined = 0; // debug information\n        this.source = null;       // used for debug information\n    }\n}\n\nconst luaF_newLclosure = function(L, n) {\n    return new lobject.LClosure(L, n);\n};\n\n\nconst luaF_findupval = function(L, level) {\n    return L.stack[level];\n};\n\nconst luaF_close = function(L, level) {\n    /* Create new TValues on stack;\n     * any closures will keep referencing old TValues */\n    for (let i=level; i<L.top; i++) {\n        let old = L.stack[i];\n        L.stack[i] = new lobject.TValue(old.type, old.value);\n    }\n};\n\n/*\n** fill a closure with new upvalues\n*/\nconst luaF_initupvals = function(L, cl) {\n    for (let i = 0; i < cl.nupvalues; i++)\n        cl.upvals[i] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Look for n-th local variable at line 'line' in function 'func'.\n** Returns null if not found.\n*/\nconst luaF_getlocalname = function(f, local_number, pc) {\n    for (let i = 0; i < f.locvars.length && f.locvars[i].startpc <= pc; i++) {\n        if (pc < f.locvars[i].endpc) {  /* is variable active? */\n            local_number--;\n            if (local_number === 0)\n                return f.locvars[i].varname.getstr();\n        }\n    }\n    return null;  /* not found */\n};\n\nmodule.exports.MAXUPVAL          = 255;\nmodule.exports.Proto             = Proto;\nmodule.exports.luaF_findupval    = luaF_findupval;\nmodule.exports.luaF_close        = luaF_close;\nmodule.exports.luaF_getlocalname = luaF_getlocalname;\nmodule.exports.luaF_initupvals   = luaF_initupvals;\nmodule.exports.luaF_newLclosure  = luaF_newLclosure;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\nconst lvm     = require('./lvm.js');\n\nconst luaT_typenames_ = [\n    \"no value\",\n    \"nil\",\n    \"boolean\",\n    \"userdata\",\n    \"number\",\n    \"string\",\n    \"table\",\n    \"function\",\n    \"userdata\",\n    \"thread\",\n    \"proto\" /* this last case is used for tests only */\n].map(e => to_luastring(e));\n\nconst ttypename = function(t) {\n    return luaT_typenames_[t + 1];\n};\n\n\n/*\n* WARNING: if you change the order of this enumeration,\n* grep \"ORDER TM\" and \"ORDER OP\"\n*/\nconst TMS = {\n    TM_INDEX:    0,\n    TM_NEWINDEX: 1,\n    TM_GC:       2,\n    TM_MODE:     3,\n    TM_LEN:      4,\n    TM_EQ:       5,  /* last tag method with fast access */\n    TM_ADD:      6,\n    TM_SUB:      7,\n    TM_MUL:      8,\n    TM_MOD:      9,\n    TM_POW:     10,\n    TM_DIV:     11,\n    TM_IDIV:    12,\n    TM_BAND:    13 ,\n    TM_BOR:     14,\n    TM_BXOR:    15,\n    TM_SHL:     16,\n    TM_SHR:     17,\n    TM_UNM:     18,\n    TM_BNOT:    19,\n    TM_LT:      20,\n    TM_LE:      21,\n    TM_CONCAT:  22,\n    TM_CALL:    23,\n    TM_N:       24  /* number of elements in the enum */\n};\n\nconst luaT_init = function(L) {\n    L.l_G.tmname[TMS.TM_INDEX]    = new luaS_new(L, to_luastring(\"__index\", true));\n    L.l_G.tmname[TMS.TM_NEWINDEX] = new luaS_new(L, to_luastring(\"__newindex\", true));\n    L.l_G.tmname[TMS.TM_GC]       = new luaS_new(L, to_luastring(\"__gc\", true));\n    L.l_G.tmname[TMS.TM_MODE]     = new luaS_new(L, to_luastring(\"__mode\", true));\n    L.l_G.tmname[TMS.TM_LEN]      = new luaS_new(L, to_luastring(\"__len\", true));\n    L.l_G.tmname[TMS.TM_EQ]       = new luaS_new(L, to_luastring(\"__eq\", true));\n    L.l_G.tmname[TMS.TM_ADD]      = new luaS_new(L, to_luastring(\"__add\", true));\n    L.l_G.tmname[TMS.TM_SUB]      = new luaS_new(L, to_luastring(\"__sub\", true));\n    L.l_G.tmname[TMS.TM_MUL]      = new luaS_new(L, to_luastring(\"__mul\", true));\n    L.l_G.tmname[TMS.TM_MOD]      = new luaS_new(L, to_luastring(\"__mod\", true));\n    L.l_G.tmname[TMS.TM_POW]      = new luaS_new(L, to_luastring(\"__pow\", true));\n    L.l_G.tmname[TMS.TM_DIV]      = new luaS_new(L, to_luastring(\"__div\", true));\n    L.l_G.tmname[TMS.TM_IDIV]     = new luaS_new(L, to_luastring(\"__idiv\", true));\n    L.l_G.tmname[TMS.TM_BAND]     = new luaS_new(L, to_luastring(\"__band\", true));\n    L.l_G.tmname[TMS.TM_BOR]      = new luaS_new(L, to_luastring(\"__bor\", true));\n    L.l_G.tmname[TMS.TM_BXOR]     = new luaS_new(L, to_luastring(\"__bxor\", true));\n    L.l_G.tmname[TMS.TM_SHL]      = new luaS_new(L, to_luastring(\"__shl\", true));\n    L.l_G.tmname[TMS.TM_SHR]      = new luaS_new(L, to_luastring(\"__shr\", true));\n    L.l_G.tmname[TMS.TM_UNM]      = new luaS_new(L, to_luastring(\"__unm\", true));\n    L.l_G.tmname[TMS.TM_BNOT]     = new luaS_new(L, to_luastring(\"__bnot\", true));\n    L.l_G.tmname[TMS.TM_LT]       = new luaS_new(L, to_luastring(\"__lt\", true));\n    L.l_G.tmname[TMS.TM_LE]       = new luaS_new(L, to_luastring(\"__le\", true));\n    L.l_G.tmname[TMS.TM_CONCAT]   = new luaS_new(L, to_luastring(\"__concat\", true));\n    L.l_G.tmname[TMS.TM_CALL]     = new luaS_new(L, to_luastring(\"__call\", true));\n};\n\n/*\n** Return the name of the type of an object. For tables and userdata\n** with metatable, use their '__name' metafield, if present.\n*/\nconst __name = to_luastring('__name', true);\nconst luaT_objtypename = function(L, o) {\n    let mt;\n    if ((o.ttistable() && (mt = o.value.metatable) !== null) ||\n        (o.ttisfulluserdata() && (mt = o.value.metatable) !== null)) {\n        let name = ltable.luaH_getstr(mt, luaS_bless(L, __name));\n        if (name.ttisstring())\n            return name.svalue();\n    }\n    return ttypename(o.ttnov());\n};\n\nconst luaT_callTM = function(L, f, p1, p2, p3, hasres) {\n    let func = L.top;\n\n    lobject.pushobj2s(L, f); /* push function (assume EXTRA_STACK) */\n    lobject.pushobj2s(L, p1); /* 1st argument */\n    lobject.pushobj2s(L, p2); /* 2nd argument */\n\n    if (!hasres)  /* no result? 'p3' is third argument */\n        lobject.pushobj2s(L, p3); /* 3rd argument */\n\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        ldo.luaD_call(L, func, hasres);\n    else\n        ldo.luaD_callnoyield(L, func, hasres);\n\n    if (hasres) {  /* if has result, move it to its place */\n        let tv = L.stack[L.top-1];\n        delete L.stack[--L.top];\n        p3.setfrom(tv);\n    }\n};\n\nconst luaT_callbinTM = function(L, p1, p2, res, event) {\n    let tm = luaT_gettmbyobj(L, p1, event);\n    if (tm.ttisnil())\n        tm = luaT_gettmbyobj(L, p2, event);\n    if (tm.ttisnil()) return false;\n    luaT_callTM(L, tm, p1, p2, res, 1);\n    return true;\n};\n\nconst luaT_trybinTM = function(L, p1, p2, res, event) {\n    if (!luaT_callbinTM(L, p1, p2, res, event)) {\n        switch (event) {\n            case TMS.TM_CONCAT:\n                return ldebug.luaG_concaterror(L, p1, p2);\n            case TMS.TM_BAND: case TMS.TM_BOR: case TMS.TM_BXOR:\n            case TMS.TM_SHL: case TMS.TM_SHR: case TMS.TM_BNOT: {\n                let n1 = lvm.tonumber(p1);\n                let n2 = lvm.tonumber(p2);\n                if (n1 !== false && n2 !== false)\n                    return ldebug.luaG_tointerror(L, p1, p2);\n                else\n                    return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform bitwise operation on\", true));\n            }\n            default:\n                return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform arithmetic on\", true));\n        }\n    }\n};\n\nconst luaT_callorderTM = function(L, p1, p2, event) {\n    let res = new lobject.TValue();\n    if (!luaT_callbinTM(L, p1, p2, res, event))\n        return null;\n    else\n        return !res.l_isfalse();\n};\n\nconst fasttm = function(l, et, e) {\n    return et === null ? null :\n        (et.flags & (1 << e)) ? null : luaT_gettm(et, e, l.l_G.tmname[e]);\n};\n\nconst luaT_gettm = function(events, event, ename) {\n    const tm = ltable.luaH_getstr(events, ename);\n    lua_assert(event <= TMS.TM_EQ);\n    if (tm.ttisnil()) {  /* no tag method? */\n        events.flags |= 1<<event;  /* cache this fact */\n        return null;\n    }\n    else return tm;\n};\n\nconst luaT_gettmbyobj = function(L, o, event) {\n    let mt;\n    switch(o.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = o.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[o.ttnov()];\n    }\n\n    return mt ? ltable.luaH_getstr(mt, L.l_G.tmname[event]) : lobject.luaO_nilobject;\n};\n\nmodule.exports.fasttm           = fasttm;\nmodule.exports.TMS              = TMS;\nmodule.exports.luaT_callTM      = luaT_callTM;\nmodule.exports.luaT_callbinTM   = luaT_callbinTM;\nmodule.exports.luaT_trybinTM    = luaT_trybinTM;\nmodule.exports.luaT_callorderTM = luaT_callorderTM;\nmodule.exports.luaT_gettm       = luaT_gettm;\nmodule.exports.luaT_gettmbyobj  = luaT_gettmbyobj;\nmodule.exports.luaT_init        = luaT_init;\nmodule.exports.luaT_objtypename = luaT_objtypename;\nmodule.exports.ttypename        = ttypename;\n","\"use strict\";\n\nconst {\n    LUA_MASKLINE,\n    LUA_MASKCOUNT,\n    LUA_MULTRET,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLCF,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst {\n    INDEXK,\n    ISK,\n    LFIELDS_PER_FLUSH,\n    OpCodesI: {\n        OP_ADD,\n        OP_BAND,\n        OP_BNOT,\n        OP_BOR,\n        OP_BXOR,\n        OP_CALL,\n        OP_CLOSURE,\n        OP_CONCAT,\n        OP_DIV,\n        OP_EQ,\n        OP_EXTRAARG,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETTABLE,\n        OP_GETTABUP,\n        OP_GETUPVAL,\n        OP_IDIV,\n        OP_JMP,\n        OP_LE,\n        OP_LEN,\n        OP_LOADBOOL,\n        OP_LOADK,\n        OP_LOADKX,\n        OP_LOADNIL,\n        OP_LT,\n        OP_MOD,\n        OP_MOVE,\n        OP_MUL,\n        OP_NEWTABLE,\n        OP_NOT,\n        OP_POW,\n        OP_RETURN,\n        OP_SELF,\n        OP_SETLIST,\n        OP_SETTABLE,\n        OP_SETTABUP,\n        OP_SETUPVAL,\n        OP_SHL,\n        OP_SHR,\n        OP_SUB,\n        OP_TAILCALL,\n        OP_TEST,\n        OP_TESTSET,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_UNM,\n        OP_VARARG\n    }\n} = require('./lopcodes.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst {\n    lua_assert,\n    luai_nummod\n} = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst lfunc   = require('./lfunc.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_eqlngstr,\n    luaS_hashlongstr\n} = require('./lstring.js');\nconst ldo     = require('./ldo.js');\nconst ltm     = require('./ltm.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\n\n/*\n** finish execution of an opcode interrupted by an yield\n*/\nconst luaV_finishOp = function(L) {\n    let ci = L.ci;\n    let base = ci.l_base;\n    let inst = ci.l_code[ci.l_savedpc - 1];  /* interrupted instruction */\n    let op = inst.opcode;\n\n    switch (op) {  /* finish its execution */\n        case OP_ADD: case OP_SUB: case OP_MUL: case OP_DIV: case OP_IDIV:\n        case OP_BAND: case OP_BOR: case OP_BXOR: case OP_SHL: case OP_SHR:\n        case OP_MOD: case OP_POW:\n        case OP_UNM: case OP_BNOT: case OP_LEN:\n        case OP_GETTABUP: case OP_GETTABLE: case OP_SELF: {\n            lobject.setobjs2s(L, base + inst.A, L.top-1);\n            delete L.stack[--L.top];\n            break;\n        }\n        case OP_LE: case OP_LT: case OP_EQ: {\n            let res = !L.stack[L.top - 1].l_isfalse();\n            delete L.stack[--L.top];\n            if (ci.callstatus & lstate.CIST_LEQ) {  /* \"<=\" using \"<\" instead? */\n                lua_assert(op === OP_LE);\n                ci.callstatus ^= lstate.CIST_LEQ;  /* clear mark */\n                res = !res;  /* negate result */\n            }\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_JMP);\n            if (res !== (inst.A ? true : false))  /* condition failed? */\n                ci.l_savedpc++;  /* skip jump instruction */\n            break;\n        }\n        case OP_CONCAT: {\n            let top = L.top - 1;  /* top when 'luaT_trybinTM' was called */\n            let b = inst.B;  /* first element to concatenate */\n            let total = top - 1 - (base + b);  /* yet to concatenate */\n            lobject.setobjs2s(L, top - 2, top);  /* put TM result in proper position */\n            if (total > 1) {  /* are there elements to concat? */\n                L.top = top - 1;  /* top is one after last element (at top-2) */\n                luaV_concat(L, total);  /* concat them (may yield again) */\n            }\n            /* move final result to final position */\n            lobject.setobjs2s(L, ci.l_base + inst.A, L.top - 1);\n            ldo.adjust_top(L, ci.top);  /* restore top */\n            break;\n        }\n        case OP_TFORCALL: {\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_TFORLOOP);\n            ldo.adjust_top(L, ci.top);  /* correct top */\n            break;\n        }\n        case OP_CALL: {\n            if (inst.C - 1 >= 0)  /* nresults >= 0? */\n                ldo.adjust_top(L, ci.top);  /* adjust results */\n            break;\n        }\n    }\n};\n\nconst RA = function(L, base, i) {\n    return base + i.A;\n};\n\nconst RB = function(L, base, i) {\n    return base + i.B;\n};\n\n// const RC = function(L, base, i) {\n//     return base + i.C;\n// };\n\nconst RKB = function(L, base, k, i) {\n    return ISK(i.B) ? k[INDEXK(i.B)] : L.stack[base + i.B];\n};\n\nconst RKC = function(L, base, k, i) {\n    return ISK(i.C) ? k[INDEXK(i.C)] : L.stack[base + i.C];\n};\n\nconst luaV_execute = function(L) {\n    let ci = L.ci;\n\n    ci.callstatus |= lstate.CIST_FRESH;\n    newframe:\n    for (;;) {\n        lua_assert(ci === L.ci);\n        let cl = ci.func.value;\n        let k = cl.p.k;\n        let base = ci.l_base;\n\n        let i = ci.l_code[ci.l_savedpc++];\n\n        if (L.hookmask & (LUA_MASKLINE | LUA_MASKCOUNT)) {\n            ldebug.luaG_traceexec(L);\n        }\n\n        let ra = RA(L, base, i);\n        let opcode = i.opcode;\n\n        switch (opcode) {\n            case OP_MOVE: {\n                lobject.setobjs2s(L, ra, RB(L, base, i));\n                break;\n            }\n            case OP_LOADK: {\n                let konst = k[i.Bx];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADKX: {\n                lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                let konst = k[ci.l_code[ci.l_savedpc++].Ax];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADBOOL: {\n                L.stack[ra].setbvalue(i.B !== 0);\n\n                if (i.C !== 0)\n                    ci.l_savedpc++; /* skip next instruction (if C) */\n\n                break;\n            }\n            case OP_LOADNIL: {\n                for (let j = 0; j <= i.B; j++)\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_GETUPVAL: {\n                let b = i.B;\n                lobject.setobj2s(L, ra, cl.upvals[b]);\n                break;\n            }\n            case OP_GETTABUP: {\n                let upval = cl.upvals[i.B];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, upval, rc, ra);\n                break;\n            }\n            case OP_GETTABLE: {\n                let rb = L.stack[RB(L, base, i)];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, rb, rc, ra);\n                break;\n            }\n            case OP_SETTABUP: {\n                let upval = cl.upvals[i.A];\n                let rb = RKB(L, base, k, i);\n                let rc = RKC(L, base, k, i);\n                settable(L, upval, rb, rc);\n                break;\n            }\n            case OP_SETUPVAL: {\n                let uv = cl.upvals[i.B];\n                uv.setfrom(L.stack[ra]);\n                break;\n            }\n            case OP_SETTABLE: {\n                let table = L.stack[ra];\n                let key = RKB(L, base, k, i);\n                let v = RKC(L, base, k, i);\n\n                settable(L, table, key, v);\n                break;\n            }\n            case OP_NEWTABLE: {\n                L.stack[ra].sethvalue(ltable.luaH_new(L));\n                break;\n            }\n            case OP_SELF: {\n                let rb = RB(L, base, i);\n                let rc = RKC(L, base, k, i);\n                lobject.setobjs2s(L, ra + 1, rb);\n                luaV_gettable(L, L.stack[rb], rc, ra);\n                break;\n            }\n            case OP_ADD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value + op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 + numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_ADD);\n                }\n                break;\n            }\n            case OP_SUB: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value - op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 - numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SUB);\n                }\n                break;\n            }\n            case OP_MUL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_imul(op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 * numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MUL);\n                }\n                break;\n            }\n            case OP_MOD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_mod(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(luai_nummod(L, numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MOD);\n                }\n                break;\n            }\n            case OP_POW: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.pow(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_POW);\n                }\n                break;\n            }\n            case OP_DIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 / numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_DIV);\n                }\n                break;\n            }\n            case OP_IDIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_div(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.floor(numberop1 / numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_IDIV);\n                }\n                break;\n            }\n            case OP_BAND: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 & numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BAND);\n                }\n                break;\n            }\n            case OP_BOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 | numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BOR);\n                }\n                break;\n            }\n            case OP_BXOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 ^ numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BXOR);\n                }\n                break;\n            }\n            case OP_SHL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHL);\n                }\n                break;\n            }\n            case OP_SHR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, -numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHR);\n                }\n                break;\n            }\n            case OP_UNM: {\n                let op = L.stack[RB(L, base, i)];\n                let numberop;\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue((-op.value)|0);\n                } else if ((numberop = tonumber(op)) !== false) {\n                    L.stack[ra].setfltvalue(-numberop);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_UNM);\n                }\n                break;\n            }\n            case OP_BNOT: {\n                let op = L.stack[RB(L, base, i)];\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue(~op.value);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_BNOT);\n                }\n                break;\n            }\n            case OP_NOT: {\n                let op = L.stack[RB(L, base, i)];\n                L.stack[ra].setbvalue(op.l_isfalse());\n                break;\n            }\n            case OP_LEN: {\n                luaV_objlen(L, L.stack[ra], L.stack[RB(L, base, i)]);\n                break;\n            }\n            case OP_CONCAT: {\n                let b = i.B;\n                let c = i.C;\n                L.top = base + c + 1; /* mark the end of concat operands */\n                luaV_concat(L, c - b + 1);\n                let rb = base + b;\n                lobject.setobjs2s(L, ra, rb);\n                ldo.adjust_top(L, ci.top); /* restore top */\n                break;\n            }\n            case OP_JMP: {\n                dojump(L, ci, i, 0);\n                break;\n            }\n            case OP_EQ: {\n                if (luaV_equalobj(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LT: {\n                if (luaV_lessthan(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LE: {\n                if (luaV_lessequal(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TEST: {\n                if (i.C ? L.stack[ra].l_isfalse() : !L.stack[ra].l_isfalse())\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TESTSET: {\n                let rbIdx = RB(L, base, i);\n                let rb = L.stack[rbIdx];\n                if (i.C ? rb.l_isfalse() : !rb.l_isfalse())\n                    ci.l_savedpc++;\n                else {\n                    lobject.setobjs2s(L, ra, rbIdx);\n                    donextjump(L, ci);\n                }\n                break;\n            }\n            case OP_CALL: {\n                let b = i.B;\n                let nresults = i.C - 1;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, nresults)) {\n                    if (nresults >= 0)\n                        ldo.adjust_top(L, ci.top);  /* adjust results */\n                } else {\n                    ci = L.ci;\n                    continue newframe;\n                }\n\n                break;\n            }\n            case OP_TAILCALL: {\n                let b = i.B;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, LUA_MULTRET)) { // JS function\n                } else {\n                    /* tail call: put called frame (n) in place of caller one (o) */\n                    let nci = L.ci;\n                    let oci = nci.previous;\n                    let nfunc = nci.func;\n                    let nfuncOff = nci.funcOff;\n                    let ofuncOff = oci.funcOff;\n                    let lim = nci.l_base + nfunc.value.p.numparams;\n                    if (cl.p.p.length > 0) lfunc.luaF_close(L, oci.l_base);\n                    for (let aux = 0; nfuncOff + aux < lim; aux++)\n                        lobject.setobjs2s(L, ofuncOff + aux, nfuncOff + aux);\n                    oci.l_base = ofuncOff + (nci.l_base - nfuncOff);\n                    oci.top = ofuncOff + (L.top - nfuncOff);\n                    ldo.adjust_top(L, oci.top);  /* correct top */\n                    oci.l_code = nci.l_code;\n                    oci.l_savedpc = nci.l_savedpc;\n                    oci.callstatus |= lstate.CIST_TAIL;\n                    oci.next = null;\n                    ci = L.ci = oci;\n\n                    lua_assert(L.top === oci.l_base + L.stack[ofuncOff].value.p.maxstacksize);\n\n                    continue newframe;\n                }\n                break;\n            }\n            case OP_RETURN: {\n                if (cl.p.p.length > 0) lfunc.luaF_close(L, base);\n                let b = ldo.luaD_poscall(L, ci, ra, (i.B !== 0 ? i.B - 1 : L.top - ra));\n\n                if (ci.callstatus & lstate.CIST_FRESH)\n                    return; /* external invocation: return */\n                /* invocation via reentry: continue execution */\n                ci = L.ci;\n                if (b) ldo.adjust_top(L, ci.top);\n                lua_assert(ci.callstatus & lstate.CIST_LUA);\n                lua_assert(ci.l_code[ci.l_savedpc - 1].opcode === OP_CALL);\n                continue newframe;\n            }\n            case OP_FORLOOP: {\n                if (L.stack[ra].ttisinteger()) { /* integer loop? */\n                    let step = L.stack[ra + 2].value;\n                    let idx = (L.stack[ra].value + step)|0;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgivalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setivalue(idx);\n                    }\n                } else { /* floating loop */\n                    let step = L.stack[ra + 2].value;\n                    let idx = L.stack[ra].value + step;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgfltvalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setfltvalue(idx);\n                    }\n                }\n                break;\n            }\n            case OP_FORPREP: {\n                let init = L.stack[ra];\n                let plimit = L.stack[ra + 1];\n                let pstep = L.stack[ra + 2];\n                let forlim;\n\n                if (init.ttisinteger() && pstep.ttisinteger() && (forlim = forlimit(plimit, pstep.value))) {\n                    /* all values are integer */\n                    let initv = forlim.stopnow ? 0 : init.value;\n                    plimit.value = forlim.ilimit;\n                    init.value = (initv - pstep.value)|0;\n                } else { /* try making all values floats */\n                    let nlimit, nstep, ninit;\n                    if ((nlimit = tonumber(plimit)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' limit must be a number\", true));\n                    L.stack[ra + 1].setfltvalue(nlimit);\n                    if ((nstep = tonumber(pstep)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' step must be a number\", true));\n                    L.stack[ra + 2].setfltvalue(nstep);\n                    if ((ninit = tonumber(init)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' initial value must be a number\", true));\n                    L.stack[ra].setfltvalue(ninit - nstep);\n                }\n\n                ci.l_savedpc += i.sBx;\n                break;\n            }\n            case OP_TFORCALL: {\n                let cb = ra + 3; /* call base */\n                lobject.setobjs2s(L, cb+2, ra+2);\n                lobject.setobjs2s(L, cb+1, ra+1);\n                lobject.setobjs2s(L, cb, ra);\n                ldo.adjust_top(L, cb+3);  /* func. + 2 args (state and index) */\n                ldo.luaD_call(L, cb, i.C);\n                ldo.adjust_top(L, ci.top);\n                /* go straight to OP_TFORLOOP */\n                i = ci.l_code[ci.l_savedpc++];\n                ra = RA(L, base, i);\n                lua_assert(i.opcode === OP_TFORLOOP);\n            }\n            /* fall through */\n            case OP_TFORLOOP: {\n                if (!L.stack[ra + 1].ttisnil()) { /* continue loop? */\n                    lobject.setobjs2s(L, ra, ra + 1); /* save control variable */\n                    ci.l_savedpc += i.sBx; /* jump back */\n                }\n                break;\n            }\n            case OP_SETLIST: {\n                let n = i.B;\n                let c = i.C;\n\n                if (n === 0) n = L.top - ra - 1;\n\n                if (c === 0) {\n                    lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                    c = ci.l_code[ci.l_savedpc++].Ax;\n                }\n\n                let h = L.stack[ra].value;\n                let last = ((c - 1) * LFIELDS_PER_FLUSH) + n;\n\n                for (; n > 0; n--) {\n                    ltable.luaH_setint(h, last--, L.stack[ra + n]);\n                }\n                ldo.adjust_top(L, ci.top);  /* correct top (in case of previous open call) */\n                break;\n            }\n            case OP_CLOSURE: {\n                let p = cl.p.p[i.Bx];\n                let ncl = getcached(p, cl.upvals, L.stack, base);  /* cached closure */\n                if (ncl === null)  /* no match? */\n                    pushclosure(L, p, cl.upvals, base, ra);  /* create a new one */\n                else\n                    L.stack[ra].setclLvalue(ncl);\n                break;\n            }\n            case OP_VARARG: {\n                let b = i.B - 1;\n                let n = base - ci.funcOff - cl.p.numparams - 1;\n                let j;\n\n                if (n < 0) /* less arguments than parameters? */\n                    n = 0; /* no vararg arguments */\n\n                if (b < 0) {\n                    b = n;  /* get all var. arguments */\n                    ldo.luaD_checkstack(L, n);\n                    ldo.adjust_top(L, ra + n);\n                }\n\n                for (j = 0; j < b && j < n; j++)\n                    lobject.setobjs2s(L, ra + j, base - n + j);\n\n                for (; j < b; j++) /* complete required results with nil */\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_EXTRAARG: {\n                throw Error(\"invalid opcode\");\n            }\n        }\n    }\n};\n\nconst dojump = function(L, ci, i, e) {\n    let a = i.A;\n    if (a !== 0) lfunc.luaF_close(L, ci.l_base + a - 1);\n    ci.l_savedpc += i.sBx + e;\n};\n\nconst donextjump = function(L, ci) {\n    dojump(L, ci, ci.l_code[ci.l_savedpc], 1);\n};\n\n\nconst luaV_lessthan = function(L, l, r) {\n    if (l.ttisnumber() && r.ttisnumber())\n        return LTnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) < 0 ? 1 : 0;\n    else {\n        let res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LT);\n        if (res === null)\n            ldebug.luaG_ordererror(L, l, r);\n        return res ? 1 : 0;\n    }\n};\n\nconst luaV_lessequal = function(L, l, r) {\n    let res;\n\n    if (l.ttisnumber() && r.ttisnumber())\n        return LEnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) <= 0 ? 1 : 0;\n    else {\n        res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LE);\n        if (res !== null)\n            return res ? 1 : 0;\n    }\n    /* try 'lt': */\n    L.ci.callstatus |= lstate.CIST_LEQ; /* mark it is doing 'lt' for 'le' */\n    res = ltm.luaT_callorderTM(L, r, l, ltm.TMS.TM_LT);\n    L.ci.callstatus ^= lstate.CIST_LEQ; /* clear mark */\n    if (res === null)\n        ldebug.luaG_ordererror(L, l, r);\n    return res ? 0 : 1; /* result is negated */\n};\n\nconst luaV_equalobj = function(L, t1, t2) {\n    if (t1.ttype() !== t2.ttype()) { /* not the same variant? */\n        if (t1.ttnov() !== t2.ttnov() || t1.ttnov() !== LUA_TNUMBER)\n            return 0; /* only numbers can be equal with different variants */\n        else { /* two numbers with different variants */\n            /* OPTIMIZATION: instead of calling luaV_tointeger we can just let JS do the comparison */\n            return (t1.value === t2.value) ? 1 : 0;\n        }\n    }\n\n    let tm;\n\n    /* values have same type and same variant */\n    switch(t1.ttype()) {\n        case LUA_TNIL:\n            return 1;\n        case LUA_TBOOLEAN:\n            return t1.value == t2.value ? 1 : 0; // Might be 1 or true\n        case LUA_TLIGHTUSERDATA:\n        case LUA_TNUMINT:\n        case LUA_TNUMFLT:\n        case LUA_TLCF:\n            return t1.value === t2.value ? 1 : 0;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR: {\n            return luaS_eqlngstr(t1.tsvalue(), t2.tsvalue()) ? 1 : 0;\n        }\n        case LUA_TUSERDATA:\n        case LUA_TTABLE:\n            if (t1.value === t2.value) return 1;\n            else if (L === null) return 0;\n\n            tm = ltm.fasttm(L, t1.value.metatable, ltm.TMS.TM_EQ);\n            if (tm === null)\n                tm = ltm.fasttm(L, t2.value.metatable, ltm.TMS.TM_EQ);\n            break;\n        default:\n            return t1.value === t2.value ? 1 : 0;\n    }\n\n    if (tm === null) /* no TM? */\n        return 0;\n\n    let tv = new lobject.TValue(); /* doesn't use the stack */\n    ltm.luaT_callTM(L, tm, t1, t2, tv, 1);\n    return tv.l_isfalse() ? 0 : 1;\n};\n\nconst luaV_rawequalobj = function(t1, t2) {\n    return luaV_equalobj(null, t1, t2);\n};\n\nconst forlimit = function(obj, step) {\n    let stopnow = false;\n    let ilimit = luaV_tointeger(obj, step < 0 ? 2 : 1);\n    if (ilimit === false) {\n        let n = tonumber(obj);\n        if (n === false)\n            return false;\n\n        if (0 < n) {\n            ilimit = LUA_MAXINTEGER;\n            if (step < 0) stopnow = true;\n        } else {\n            ilimit = LUA_MININTEGER;\n            if (step >= 0) stopnow = true;\n        }\n    }\n\n    return {\n        stopnow: stopnow,\n        ilimit: ilimit\n    };\n};\n\n/*\n** try to convert a value to an integer, rounding according to 'mode':\n** mode === 0: accepts only integral values\n** mode === 1: takes the floor of the number\n** mode === 2: takes the ceil of the number\n*/\nconst luaV_tointeger = function(obj, mode) {\n    if (obj.ttisfloat()) {\n        let n = obj.value;\n        let f = Math.floor(n);\n\n        if (n !== f) { /* not an integral value? */\n            if (mode === 0)\n                return false;  /* fails if mode demands integral value */\n            else if (mode > 1)  /* needs ceil? */\n                f += 1;  /* convert floor to ceil (remember: n !== f) */\n        }\n\n        return lua_numbertointeger(f);\n    } else if (obj.ttisinteger()) {\n        return obj.value;\n    } else if (cvt2num(obj)) {\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(obj.svalue(), v) === (obj.vslen() + 1))\n            return luaV_tointeger(v, mode);\n    }\n\n    return false;\n};\n\nconst tointeger = function(o) {\n    return o.ttisinteger() ? o.value : luaV_tointeger(o, 0);\n};\n\nconst tonumber = function(o) {\n    if (o.ttnov() === LUA_TNUMBER)\n        return o.value;\n\n    if (cvt2num(o)) {  /* string convertible to number? */\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(o.svalue(), v) === (o.vslen() + 1))\n            return v.value;\n    }\n\n    return false;\n};\n\n/*\n** Return 'l < r', for numbers.\n** As fengari uses javascript numbers for both floats and integers and has\n** correct semantics, we can just compare values.\n*/\nconst LTnum = function(l, r) {\n    return l.value < r.value;\n};\n\n/*\n** Return 'l <= r', for numbers.\n*/\nconst LEnum = function(l, r) {\n    return l.value <= r.value;\n};\n\n/*\n** Compare two strings 'ls' x 'rs', returning an integer smaller-equal-\n** -larger than zero if 'ls' is smaller-equal-larger than 'rs'.\n*/\nconst l_strcmp = function(ls, rs) {\n    let l = luaS_hashlongstr(ls);\n    let r = luaS_hashlongstr(rs);\n    /* In fengari we assume string hash has same collation as byte values */\n    if (l === r)\n        return 0;\n    else if (l < r)\n        return -1;\n    else\n        return 1;\n};\n\n/*\n** Main operation 'ra' = #rb'.\n*/\nconst luaV_objlen = function(L, ra, rb) {\n    let tm;\n    switch(rb.ttype()) {\n        case LUA_TTABLE: {\n            let h = rb.value;\n            tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_LEN);\n            if (tm !== null) break; /* metamethod? break switch to call it */\n            ra.setivalue(ltable.luaH_getn(h)); /* else primitive len */\n            return;\n        }\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            ra.setivalue(rb.vslen());\n            return;\n        default: {\n            tm = ltm.luaT_gettmbyobj(L, rb, ltm.TMS.TM_LEN);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, rb, to_luastring(\"get length of\", true));\n            break;\n        }\n    }\n\n    ltm.luaT_callTM(L, tm, rb, rb, ra, 1);\n};\n\n/* Shim taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul */\nconst luaV_imul = Math.imul || function(a, b) {\n    let aHi = (a >>> 16) & 0xffff;\n    let aLo = a & 0xffff;\n    let bHi = (b >>> 16) & 0xffff;\n    let bLo = b & 0xffff;\n    /*\n    ** the shift by 0 fixes the sign on the high part\n    ** the final |0 converts the unsigned value into a signed value\n    */\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n};\n\nconst luaV_div = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to divide by zero\"));\n    return Math.floor(m / n)|0;\n};\n\n// % semantic on negative numbers is different in js\nconst luaV_mod = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to perform 'n%%0'\"));\n    return (m - Math.floor(m / n) * n)|0;\n};\n\nconst NBITS = 32;\n\nconst luaV_shiftl = function(x, y) {\n    if (y < 0) {  /* shift right? */\n        if (y <= -NBITS) return 0;\n        else return x >>> -y;\n    }\n    else {  /* shift left */\n        if (y >= NBITS) return 0;\n        else return x << y;\n    }\n};\n\n/*\n** check whether cached closure in prototype 'p' may be reused, that is,\n** whether there is a cached closure with the same upvalues needed by\n** new closure to be created.\n*/\nconst getcached = function(p, encup, stack, base) {\n    let c = p.cache;\n    if (c !== null) {  /* is there a cached closure? */\n        let uv = p.upvalues;\n        let nup = uv.length;\n        for (let i = 0; i < nup; i++) {  /* check whether it has right upvalues */\n            let v = uv[i].instack ? stack[base + uv[i].idx] : encup[uv[i].idx];\n            if (c.upvals[i] !== v)\n                return null;  /* wrong upvalue; cannot reuse closure */\n        }\n    }\n    return c;  /* return cached closure (or NULL if no cached closure) */\n};\n\n/*\n** create a new Lua closure, push it in the stack, and initialize\n** its upvalues.\n*/\nconst pushclosure = function(L, p, encup, base, ra) {\n    let nup = p.upvalues.length;\n    let uv = p.upvalues;\n    let ncl = new lobject.LClosure(L, nup);\n    ncl.p = p;\n    L.stack[ra].setclLvalue(ncl);\n    for (let i = 0; i < nup; i++) {\n        if (uv[i].instack)\n            ncl.upvals[i] = lfunc.luaF_findupval(L, base + uv[i].idx);\n        else\n            ncl.upvals[i] = encup[uv[i].idx];\n    }\n    p.cache = ncl;  /* save it on cache for reuse */\n};\n\nconst cvt2str = function(o) {\n    return o.ttisnumber();\n};\n\nconst cvt2num = function(o) {\n    return o.ttisstring();\n};\n\nconst tostring = function(L, i) {\n    let o = L.stack[i];\n\n    if (o.ttisstring()) return true;\n\n    if (cvt2str(o)) {\n        lobject.luaO_tostring(L, o);\n        return true;\n    }\n\n    return false;\n};\n\nconst isemptystr = function(o) {\n    return o.ttisstring() && o.vslen() === 0;\n};\n\n/* copy strings in stack from top - n up to top - 1 to buffer */\nconst copy2buff = function(L, top, n, buff) {\n    let tl = 0;  /* size already copied */\n    do {\n        let tv = L.stack[top-n];\n        let l = tv.vslen();  /* length of string being copied */\n        let s = tv.svalue();\n        buff.set(s, tl);\n        tl += l;\n    } while (--n > 0);\n};\n\n/*\n** Main operation for concatenation: concat 'total' values in the stack,\n** from 'L->top - total' up to 'L->top - 1'.\n*/\nconst luaV_concat = function(L, total) {\n    lua_assert(total >= 2);\n    do {\n        let top = L.top;\n        let n = 2; /* number of elements handled in this pass (at least 2) */\n\n        if (!(L.stack[top-2].ttisstring() || cvt2str(L.stack[top-2])) || !tostring(L, top - 1)) {\n            ltm.luaT_trybinTM(L, L.stack[top-2], L.stack[top-1], L.stack[top-2], ltm.TMS.TM_CONCAT);\n        } else if (isemptystr(L.stack[top-1])) {\n            tostring(L, top - 2);\n        } else if (isemptystr(L.stack[top-2])) {\n            lobject.setobjs2s(L, top - 2, top - 1);\n        } else {\n            /* at least two non-empty string values; get as many as possible */\n            let tl = L.stack[top-1].vslen();\n            /* collect total length and number of strings */\n            for (n = 1; n < total && tostring(L, top - n - 1); n++) {\n                let l = L.stack[top - n - 1].vslen();\n                tl += l;\n            }\n            let buff = new Uint8Array(tl);\n            copy2buff(L, top, n, buff);\n            let ts = luaS_bless(L, buff);\n            lobject.setsvalue2s(L, top - n, ts);\n        }\n        total -= n - 1; /* got 'n' strings to create 1 new */\n        /* popped 'n' strings and pushed one */\n        for (; L.top > top-(n-1);)\n            delete L.stack[--L.top];\n    } while (total > 1); /* repeat until only 1 result left */\n};\n\nconst MAXTAGLOOP = 2000;\n\nconst luaV_gettable = function(L, t, key, ra) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n\n        if (!t.ttistable()) {\n            tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_INDEX);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true)); /* no metamethod */\n            /* else will try the metamethod */\n        } else {\n            let slot = ltable.luaH_get(L, t.value, key);\n            if (!slot.ttisnil()) {\n                lobject.setobj2s(L, ra, slot);\n                return;\n            } else { /* 't' is a table */\n                tm = ltm.fasttm(L, t.value.metatable, ltm.TMS.TM_INDEX);  /* table's metamethod */\n                if (tm === null) { /* no metamethod? */\n                    L.stack[ra].setnilvalue(); /* result is nil */\n                    return;\n                }\n            }\n            /* else will try the metamethod */\n        }\n        if (tm.ttisfunction()) { /* is metamethod a function? */\n            ltm.luaT_callTM(L, tm, t, key, L.stack[ra], 1); /* call it */\n            return;\n        }\n        t = tm;  /* else try to access 'tm[key]' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__index' chain too long; possible loop\", true));\n};\n\nconst settable = function(L, t, key, val) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n        if (t.ttistable()) {\n            let h = t.value; /* save 't' table */\n            let slot = ltable.luaH_get(L, h, key);\n            if (!slot.ttisnil() || (tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_NEWINDEX)) === null) {\n                ltable.luaH_setfrom(L, h, key, val);\n                ltable.invalidateTMcache(h);\n                return;\n            }\n            /* else will try the metamethod */\n        } else { /* not a table; check metamethod */\n            if ((tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_NEWINDEX)).ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true));\n        }\n        /* try the metamethod */\n        if (tm.ttisfunction()) {\n            ltm.luaT_callTM(L, tm, t, key, val, 0);\n            return;\n        }\n        t = tm;  /* else repeat assignment over 'tm' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__newindex' chain too long; possible loop\", true));\n};\n\n\nmodule.exports.cvt2str          = cvt2str;\nmodule.exports.cvt2num          = cvt2num;\nmodule.exports.luaV_gettable    = luaV_gettable;\nmodule.exports.luaV_concat      = luaV_concat;\nmodule.exports.luaV_div         = luaV_div;\nmodule.exports.luaV_equalobj    = luaV_equalobj;\nmodule.exports.luaV_execute     = luaV_execute;\nmodule.exports.luaV_finishOp    = luaV_finishOp;\nmodule.exports.luaV_imul        = luaV_imul;\nmodule.exports.luaV_lessequal   = luaV_lessequal;\nmodule.exports.luaV_lessthan    = luaV_lessthan;\nmodule.exports.luaV_mod         = luaV_mod;\nmodule.exports.luaV_objlen      = luaV_objlen;\nmodule.exports.luaV_rawequalobj = luaV_rawequalobj;\nmodule.exports.luaV_shiftl      = luaV_shiftl;\nmodule.exports.luaV_tointeger   = luaV_tointeger;\nmodule.exports.settable         = settable;\nmodule.exports.tointeger        = tointeger;\nmodule.exports.tonumber         = tonumber;\n","\"use strict\";\n\nconst OpCodes = [\n    \"MOVE\",\n    \"LOADK\",\n    \"LOADKX\",\n    \"LOADBOOL\",\n    \"LOADNIL\",\n    \"GETUPVAL\",\n    \"GETTABUP\",\n    \"GETTABLE\",\n    \"SETTABUP\",\n    \"SETUPVAL\",\n    \"SETTABLE\",\n    \"NEWTABLE\",\n    \"SELF\",\n    \"ADD\",\n    \"SUB\",\n    \"MUL\",\n    \"MOD\",\n    \"POW\",\n    \"DIV\",\n    \"IDIV\",\n    \"BAND\",\n    \"BOR\",\n    \"BXOR\",\n    \"SHL\",\n    \"SHR\",\n    \"UNM\",\n    \"BNOT\",\n    \"NOT\",\n    \"LEN\",\n    \"CONCAT\",\n    \"JMP\",\n    \"EQ\",\n    \"LT\",\n    \"LE\",\n    \"TEST\",\n    \"TESTSET\",\n    \"CALL\",\n    \"TAILCALL\",\n    \"RETURN\",\n    \"FORLOOP\",\n    \"FORPREP\",\n    \"TFORCALL\",\n    \"TFORLOOP\",\n    \"SETLIST\",\n    \"CLOSURE\",\n    \"VARARG\",\n    \"EXTRAARG\"\n];\n\nconst OpCodesI = {\n    OP_MOVE:     0,\n    OP_LOADK:    1,\n    OP_LOADKX:   2,\n    OP_LOADBOOL: 3,\n    OP_LOADNIL:  4,\n    OP_GETUPVAL: 5,\n    OP_GETTABUP: 6,\n    OP_GETTABLE: 7,\n    OP_SETTABUP: 8,\n    OP_SETUPVAL: 9,\n    OP_SETTABLE: 10,\n    OP_NEWTABLE: 11,\n    OP_SELF:     12,\n    OP_ADD:      13,\n    OP_SUB:      14,\n    OP_MUL:      15,\n    OP_MOD:      16,\n    OP_POW:      17,\n    OP_DIV:      18,\n    OP_IDIV:     19,\n    OP_BAND:     20,\n    OP_BOR:      21,\n    OP_BXOR:     22,\n    OP_SHL:      23,\n    OP_SHR:      24,\n    OP_UNM:      25,\n    OP_BNOT:     26,\n    OP_NOT:      27,\n    OP_LEN:      28,\n    OP_CONCAT:   29,\n    OP_JMP:      30,\n    OP_EQ:       31,\n    OP_LT:       32,\n    OP_LE:       33,\n    OP_TEST:     34,\n    OP_TESTSET:  35,\n    OP_CALL:     36,\n    OP_TAILCALL: 37,\n    OP_RETURN:   38,\n    OP_FORLOOP:  39,\n    OP_FORPREP:  40,\n    OP_TFORCALL: 41,\n    OP_TFORLOOP: 42,\n    OP_SETLIST:  43,\n    OP_CLOSURE:  44,\n    OP_VARARG:   45,\n    OP_EXTRAARG: 46\n};\n\n/*\n** masks for instruction properties. The format is:\n** bits 0-1: op mode\n** bits 2-3: C arg mode\n** bits 4-5: B arg mode\n** bit 6: instruction set register A\n** bit 7: operator is a test (next instruction must be a jump)\n*/\nconst OpArgN = 0;  /* argument is not used */\nconst OpArgU = 1;  /* argument is used */\nconst OpArgR = 2;  /* argument is a register or a jump offset */\nconst OpArgK = 3;  /* argument is a constant or register/constant */\n\n/* basic instruction format */\nconst iABC  = 0;\nconst iABx  = 1;\nconst iAsBx = 2;\nconst iAx   = 3;\n\nconst luaP_opmodes = [\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_MOVE */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgN << 2 | iABx,   /* OP_LOADK */\n    0 << 7 | 1 << 6 | OpArgN << 4 | OpArgN << 2 | iABx,   /* OP_LOADKX */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_LOADBOOL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_LOADNIL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_GETUPVAL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgK << 2 | iABC,   /* OP_GETTABUP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_GETTABLE */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABUP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_SETUPVAL */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABLE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_NEWTABLE */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_SELF */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_ADD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SUB */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MUL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MOD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_POW */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_DIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_IDIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BAND */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BXOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHR */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_UNM */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_BNOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_NOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_LEN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgR << 2 | iABC,   /* OP_CONCAT */\n    0 << 7 | 0 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_JMP */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_EQ */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LT */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LE */\n    1 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TEST */\n    1 << 7 | 1 << 6 | OpArgR << 4 | OpArgU << 2 | iABC,   /* OP_TESTSET */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_CALL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_TAILCALL */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_RETURN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORLOOP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORPREP */\n    0 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TFORCALL */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_TFORLOOP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_SETLIST */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABx,   /* OP_CLOSURE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_VARARG */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iAx     /* OP_EXTRAARG */\n];\n\nconst getOpMode = function(m) {\n    return luaP_opmodes[m] & 3;\n};\n\nconst getBMode = function(m) {\n    return (luaP_opmodes[m] >> 4) & 3;\n};\n\nconst getCMode = function(m) {\n    return (luaP_opmodes[m] >> 2) & 3;\n};\n\nconst testAMode = function(m) {\n    return luaP_opmodes[m] & (1 << 6);\n};\n\nconst testTMode = function(m) {\n    return luaP_opmodes[m] & (1 << 7);\n};\n\nconst SIZE_C     = 9;\nconst SIZE_B     = 9;\nconst SIZE_Bx    = (SIZE_C + SIZE_B);\nconst SIZE_A     = 8;\nconst SIZE_Ax    = (SIZE_C + SIZE_B + SIZE_A);\nconst SIZE_OP    = 6;\nconst POS_OP     = 0;\nconst POS_A      = (POS_OP + SIZE_OP);\nconst POS_C      = (POS_A + SIZE_A);\nconst POS_B      = (POS_C + SIZE_C);\nconst POS_Bx     = POS_C;\nconst POS_Ax     = POS_A;\nconst MAXARG_Bx  = ((1 << SIZE_Bx) - 1);\nconst MAXARG_sBx = (MAXARG_Bx >> 1); /* 'sBx' is signed */\nconst MAXARG_Ax  = ((1<<SIZE_Ax)-1);\nconst MAXARG_A   = ((1 << SIZE_A) - 1);\nconst MAXARG_B   = ((1 << SIZE_B) - 1);\nconst MAXARG_C   = ((1 << SIZE_C) - 1);\n\n/* this bit 1 means constant (0 means register) */\nconst BITRK      = (1 << (SIZE_B - 1));\n\nconst MAXINDEXRK = (BITRK - 1);\n\n/*\n** invalid register that fits in 8 bits\n*/\nconst NO_REG     = MAXARG_A;\n\n/* test whether value is a constant */\nconst ISK = function (x) {\n    return x & BITRK;\n};\n\n/* gets the index of the constant */\nconst INDEXK = function (r) {\n    return r & ~BITRK;\n};\n\n/* code a constant index as a RK value */\nconst RKASK = function(x) {\n    return x | BITRK;\n};\n\n\n/* creates a mask with 'n' 1 bits at position 'p' */\nconst MASK1 = function(n, p) {\n    return ((~((~0)<<(n)))<<(p));\n};\n\n/* creates a mask with 'n' 0 bits at position 'p' */\nconst MASK0 = function(n, p) {\n    return (~MASK1(n, p));\n};\n\nconst GET_OPCODE = function(i) {\n    return i.opcode;\n};\n\nconst SET_OPCODE = function(i, o) {\n    i.code = (i.code & MASK0(SIZE_OP, POS_OP)) | ((o << POS_OP) & MASK1(SIZE_OP, POS_OP));\n    return fullins(i);\n};\n\nconst setarg = function(i, v, pos, size) {\n    i.code = (i.code & MASK0(size, pos)) | ((v << pos) & MASK1(size, pos));\n    return fullins(i);\n};\n\nconst GETARG_A = function(i) {\n    return i.A;\n};\n\nconst SETARG_A = function(i,v) {\n    return setarg(i, v, POS_A, SIZE_A);\n};\n\nconst GETARG_B = function(i) {\n    return i.B;\n};\n\nconst SETARG_B = function(i,v) {\n    return setarg(i, v, POS_B, SIZE_B);\n};\n\nconst GETARG_C = function(i) {\n    return i.C;\n};\n\nconst SETARG_C = function(i,v) {\n    return setarg(i, v, POS_C, SIZE_C);\n};\n\nconst GETARG_Bx = function(i) {\n    return i.Bx;\n};\n\nconst SETARG_Bx = function(i,v) {\n    return setarg(i, v, POS_Bx, SIZE_Bx);\n};\n\nconst GETARG_Ax = function(i) {\n    return i.Ax;\n};\n\nconst SETARG_Ax = function(i,v) {\n    return setarg(i, v, POS_Ax, SIZE_Ax);\n};\n\nconst GETARG_sBx = function(i) {\n    return i.sBx;\n};\n\nconst SETARG_sBx = function(i, b) {\n    return SETARG_Bx(i, b + MAXARG_sBx);\n};\n\n/*\n** Pre-calculate all possible part of the instruction\n*/\nconst fullins = function(ins) {\n    if (typeof ins === \"number\") {\n        return {\n            code:   ins,\n            opcode: (ins >> POS_OP) & MASK1(SIZE_OP, 0),\n            A:      (ins >> POS_A)  & MASK1(SIZE_A,  0),\n            B:      (ins >> POS_B)  & MASK1(SIZE_B,  0),\n            C:      (ins >> POS_C)  & MASK1(SIZE_C,  0),\n            Bx:     (ins >> POS_Bx) & MASK1(SIZE_Bx, 0),\n            Ax:     (ins >> POS_Ax) & MASK1(SIZE_Ax, 0),\n            sBx:    ((ins >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n        };\n    } else {\n        let i = ins.code;\n        ins.opcode = (i >> POS_OP) & MASK1(SIZE_OP, 0);\n        ins.A      = (i >> POS_A)  & MASK1(SIZE_A,  0);\n        ins.B      = (i >> POS_B)  & MASK1(SIZE_B,  0);\n        ins.C      = (i >> POS_C)  & MASK1(SIZE_C,  0);\n        ins.Bx     = (i >> POS_Bx) & MASK1(SIZE_Bx, 0);\n        ins.Ax     = (i >> POS_Ax) & MASK1(SIZE_Ax, 0);\n        ins.sBx    = ((i >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx;\n        return ins;\n    }\n};\n\nconst CREATE_ABC = function(o, a, b, c) {\n    return fullins(o << POS_OP | a << POS_A | b << POS_B | c << POS_C);\n};\n\nconst CREATE_ABx = function(o, a, bc) {\n    return fullins(o << POS_OP | a << POS_A | bc << POS_Bx);\n};\n\nconst CREATE_Ax = function(o, a) {\n    return fullins(o << POS_OP | a << POS_Ax);\n};\n\n/* number of list items to accumulate before a SETLIST instruction */\nconst LFIELDS_PER_FLUSH = 50;\n\nmodule.exports.BITRK               = BITRK;\nmodule.exports.CREATE_ABC          = CREATE_ABC;\nmodule.exports.CREATE_ABx          = CREATE_ABx;\nmodule.exports.CREATE_Ax           = CREATE_Ax;\nmodule.exports.GET_OPCODE          = GET_OPCODE;\nmodule.exports.GETARG_A            = GETARG_A;\nmodule.exports.GETARG_B            = GETARG_B;\nmodule.exports.GETARG_C            = GETARG_C;\nmodule.exports.GETARG_Bx           = GETARG_Bx;\nmodule.exports.GETARG_Ax           = GETARG_Ax;\nmodule.exports.GETARG_sBx          = GETARG_sBx;\nmodule.exports.INDEXK              = INDEXK;\nmodule.exports.ISK                 = ISK;\nmodule.exports.LFIELDS_PER_FLUSH   = LFIELDS_PER_FLUSH;\nmodule.exports.MAXARG_A            = MAXARG_A;\nmodule.exports.MAXARG_Ax           = MAXARG_Ax;\nmodule.exports.MAXARG_B            = MAXARG_B;\nmodule.exports.MAXARG_Bx           = MAXARG_Bx;\nmodule.exports.MAXARG_C            = MAXARG_C;\nmodule.exports.MAXARG_sBx          = MAXARG_sBx;\nmodule.exports.MAXINDEXRK          = MAXINDEXRK;\nmodule.exports.NO_REG              = NO_REG;\nmodule.exports.OpArgK              = OpArgK;\nmodule.exports.OpArgN              = OpArgN;\nmodule.exports.OpArgR              = OpArgR;\nmodule.exports.OpArgU              = OpArgU;\nmodule.exports.OpCodes             = OpCodes;\nmodule.exports.OpCodesI            = OpCodesI;\nmodule.exports.POS_A               = POS_A;\nmodule.exports.POS_Ax              = POS_Ax;\nmodule.exports.POS_B               = POS_B;\nmodule.exports.POS_Bx              = POS_Bx;\nmodule.exports.POS_C               = POS_C;\nmodule.exports.POS_OP              = POS_OP;\nmodule.exports.RKASK               = RKASK;\nmodule.exports.SETARG_A            = SETARG_A;\nmodule.exports.SETARG_Ax           = SETARG_Ax;\nmodule.exports.SETARG_B            = SETARG_B;\nmodule.exports.SETARG_Bx           = SETARG_Bx;\nmodule.exports.SETARG_C            = SETARG_C;\nmodule.exports.SETARG_sBx          = SETARG_sBx;\nmodule.exports.SET_OPCODE          = SET_OPCODE;\nmodule.exports.SIZE_A              = SIZE_A;\nmodule.exports.SIZE_Ax             = SIZE_Ax;\nmodule.exports.SIZE_B              = SIZE_B;\nmodule.exports.SIZE_Bx             = SIZE_Bx;\nmodule.exports.SIZE_C              = SIZE_C;\nmodule.exports.SIZE_OP             = SIZE_OP;\nmodule.exports.fullins             = fullins;\nmodule.exports.getBMode            = getBMode;\nmodule.exports.getCMode            = getCMode;\nmodule.exports.getOpMode           = getOpMode;\nmodule.exports.iABC                = iABC;\nmodule.exports.iABx                = iABx;\nmodule.exports.iAsBx               = iAsBx;\nmodule.exports.iAx                 = iAx;\nmodule.exports.testAMode           = testAMode;\nmodule.exports.testTMode           = testTMode;\n","\"use strict\";\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR\n} = require(\"./lua.js\");\n\nconst LUA_VERSUFFIX = \"_\" + LUA_VERSION_MAJOR + \"_\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSUFFIX = LUA_VERSUFFIX;\n\nmodule.exports.lua_assert = function(c) {};\n\nmodule.exports.luaopen_base = require(\"./lbaselib.js\").luaopen_base;\n\nconst LUA_COLIBNAME = \"coroutine\";\nmodule.exports.LUA_COLIBNAME = LUA_COLIBNAME;\nmodule.exports.luaopen_coroutine = require(\"./lcorolib.js\").luaopen_coroutine;\n\nconst LUA_TABLIBNAME = \"table\";\nmodule.exports.LUA_TABLIBNAME = LUA_TABLIBNAME;\nmodule.exports.luaopen_table = require(\"./ltablib.js\").luaopen_table;\n\nif (typeof process !== \"undefined\") {\n    const LUA_IOLIBNAME = \"io\";\n    module.exports.LUA_IOLIBNAME = LUA_IOLIBNAME;\n    module.exports.luaopen_io = require(\"./liolib.js\").luaopen_io;\n}\n\nconst LUA_OSLIBNAME = \"os\";\nmodule.exports.LUA_OSLIBNAME = LUA_OSLIBNAME;\nmodule.exports.luaopen_os = require(\"./loslib.js\").luaopen_os;\n\nconst LUA_STRLIBNAME = \"string\";\nmodule.exports.LUA_STRLIBNAME = LUA_STRLIBNAME;\nmodule.exports.luaopen_string = require(\"./lstrlib.js\").luaopen_string;\n\nconst LUA_UTF8LIBNAME = \"utf8\";\nmodule.exports.LUA_UTF8LIBNAME = LUA_UTF8LIBNAME;\nmodule.exports.luaopen_utf8 = require(\"./lutf8lib.js\").luaopen_utf8;\n\nconst LUA_BITLIBNAME = \"bit32\";\nmodule.exports.LUA_BITLIBNAME = LUA_BITLIBNAME;\n// module.exports.luaopen_bit32 = require(\"./lbitlib.js\").luaopen_bit32;\n\nconst LUA_MATHLIBNAME = \"math\";\nmodule.exports.LUA_MATHLIBNAME = LUA_MATHLIBNAME;\nmodule.exports.luaopen_math = require(\"./lmathlib.js\").luaopen_math;\n\nconst LUA_DBLIBNAME = \"debug\";\nmodule.exports.LUA_DBLIBNAME = LUA_DBLIBNAME;\nmodule.exports.luaopen_debug = require(\"./ldblib.js\").luaopen_debug;\n\nconst LUA_LOADLIBNAME = \"package\";\nmodule.exports.LUA_LOADLIBNAME = LUA_LOADLIBNAME;\nmodule.exports.luaopen_package = require(\"./loadlib.js\").luaopen_package;\n\nconst LUA_FENGARILIBNAME = \"fengari\";\nmodule.exports.LUA_FENGARILIBNAME = LUA_FENGARILIBNAME;\nmodule.exports.luaopen_fengari = require(\"./fengarilib.js\").luaopen_fengari;\n\nconst linit = require('./linit.js');\nmodule.exports.luaL_openlibs = linit.luaL_openlibs;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPBNOT,\n    LUA_OPEQ,\n    LUA_OPLE,\n    LUA_OPLT,\n    LUA_OPUNM,\n    LUA_REGISTRYINDEX,\n    LUA_RIDX_GLOBALS,\n    LUA_VERSION_NUM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNONE,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    thread_status: { LUA_OK },\n    from_userstring,\n    to_luastring,\n} = require('./defs.js');\nconst { api_check } = require('./llimits.js');\nconst ldebug    = require('./ldebug.js');\nconst ldo       = require('./ldo.js');\nconst { luaU_dump } = require('./ldump.js');\nconst lfunc     = require('./lfunc.js');\nconst lobject   = require('./lobject.js');\nconst lstate    = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltm       = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lvm       = require('./lvm.js');\nconst ltable    = require('./ltable.js');\nconst { ZIO } = require('./lzio.js');\nconst TValue    = lobject.TValue;\nconst CClosure  = lobject.CClosure;\n\nconst api_incr_top = function(L) {\n    L.top++;\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst api_checknelems = function(L, n) {\n    api_check(L, n < (L.top - L.ci.funcOff), \"not enough elements in the stack\");\n};\n\nconst fengari_argcheck = function(c) {\n    if (!c) throw TypeError(\"invalid argument\");\n};\n\nconst fengari_argcheckinteger = function(n) {\n    fengari_argcheck(typeof n === \"number\" && (n|0) === n);\n};\n\nconst isvalid = function(o) {\n    return o !== lobject.luaO_nilobject;\n};\n\nconst lua_version = function(L) {\n    if (L === null) return LUA_VERSION_NUM;\n    else return L.l_G.version;\n};\n\nconst lua_atpanic = function(L, panicf) {\n    let old = L.l_G.panic;\n    L.l_G.panic = panicf;\n    return old;\n};\n\nconst lua_atnativeerror = function(L, errorf) {\n    let old = L.l_G.atnativeerror;\n    L.l_G.atnativeerror = errorf;\n    return old;\n};\n\n// Return value for idx on stack\nconst index2addr = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return lobject.luaO_nilobject;\n        else return L.stack[o];\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.stack[L.top + idx];\n    } else if (idx === LUA_REGISTRYINDEX) {\n        return L.l_G.l_registry;\n    } else { /* upvalues */\n        idx = LUA_REGISTRYINDEX - idx;\n        api_check(L, idx <= lfunc.MAXUPVAL + 1, \"upvalue index too large\");\n        if (ci.func.ttislcf()) /* light C function? */\n            return lobject.luaO_nilobject; /* it has no upvalues */\n        else {\n            return idx <= ci.func.value.nupvalues ? ci.func.value.upvalue[idx - 1] : lobject.luaO_nilobject;\n        }\n    }\n};\n\n// Like index2addr but returns the index on stack; doesn't allow pseudo indices\nconst index2addr_ = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return null;\n        else return o;\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.top + idx;\n    } else { /* registry or upvalue */\n        throw Error(\"attempt to use pseudo-index\");\n    }\n};\n\nconst lua_checkstack = function(L, n) {\n    let res;\n    let ci = L.ci;\n    api_check(L, n >= 0, \"negative 'n'\");\n    if (L.stack_last - L.top > n) /* stack large enough? */\n        res = true;\n    else { /* no; need to grow stack */\n        let inuse = L.top + lstate.EXTRA_STACK;\n        if (inuse > LUAI_MAXSTACK - n)  /* can grow without overflow? */\n            res = false;  /* no */\n        else { /* try to grow stack */\n            ldo.luaD_growstack(L, n);\n            res = true;\n        }\n    }\n\n    if (res && ci.top < L.top + n)\n        ci.top = L.top + n;  /* adjust frame top */\n\n    return res;\n};\n\nconst lua_xmove = function(from, to, n) {\n    if (from === to) return;\n    api_checknelems(from, n);\n    api_check(from, from.l_G === to.l_G, \"moving among independent states\");\n    api_check(from, to.ci.top - to.top >= n, \"stack overflow\");\n    from.top -= n;\n    for (let i = 0; i < n; i++) {\n        to.stack[to.top] = new lobject.TValue();\n        lobject.setobj2s(to, to.top, from.stack[from.top + i]);\n        delete from.stack[from.top + i];\n        to.top++;\n    }\n};\n\n/*\n** basic stack manipulation\n*/\n\n/*\n** convert an acceptable stack index into an absolute index\n*/\nconst lua_absindex = function(L, idx) {\n    return (idx > 0 || idx <= LUA_REGISTRYINDEX)\n        ? idx\n        : (L.top - L.ci.funcOff) + idx;\n};\n\nconst lua_gettop = function(L) {\n    return L.top - (L.ci.funcOff + 1);\n};\n\nconst lua_pushvalue = function(L, idx) {\n    lobject.pushobj2s(L, index2addr(L, idx));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst lua_settop = function(L, idx) {\n    let func = L.ci.funcOff;\n    let newtop;\n    if (idx >= 0) {\n        api_check(L, idx <= L.stack_last - (func + 1), \"new top too large\");\n        newtop = func + 1 + idx;\n    } else {\n        api_check(L, -(idx + 1) <= L.top - (func + 1), \"invalid new top\");\n        newtop = L.top + idx + 1; /* 'subtract' index (index is negative) */\n    }\n    ldo.adjust_top(L, newtop);\n};\n\nconst lua_pop = function(L, n) {\n    lua_settop(L, -n - 1);\n};\n\nconst reverse = function(L, from, to) {\n    for (; from < to; from++, to--) {\n        let fromtv = L.stack[from];\n        let temp = new TValue(fromtv.type, fromtv.value);\n        lobject.setobjs2s(L, from, to);\n        lobject.setobj2s(L, to, temp);\n    }\n};\n\n/*\n** Let x = AB, where A is a prefix of length 'n'. Then,\n** rotate x n === BA. But BA === (A^r . B^r)^r.\n*/\nconst lua_rotate = function(L, idx, n) {\n    let t = L.top - 1;\n    let pIdx = index2addr_(L, idx);\n    let p = L.stack[pIdx];\n    api_check(L, isvalid(p) && idx > LUA_REGISTRYINDEX, \"index not in the stack\");\n    api_check(L, (n >= 0 ? n : -n) <= (t - pIdx + 1), \"invalid 'n'\");\n    let m = n >= 0 ? t - n : pIdx - n - 1;  /* end of prefix */\n    reverse(L, pIdx, m);\n    reverse(L, m + 1, L.top - 1);\n    reverse(L, pIdx, L.top - 1);\n};\n\nconst lua_copy = function(L, fromidx, toidx) {\n    let from = index2addr(L, fromidx);\n    index2addr(L, toidx).setfrom(from);\n};\n\nconst lua_remove = function(L, idx) {\n    lua_rotate(L, idx, -1);\n    lua_pop(L, 1);\n};\n\nconst lua_insert = function(L, idx) {\n    lua_rotate(L, idx, 1);\n};\n\nconst lua_replace = function(L, idx) {\n    lua_copy(L, -1, idx);\n    lua_pop(L, 1);\n};\n\n/*\n** push functions (JS -> stack)\n*/\n\nconst lua_pushnil = function(L) {\n    L.stack[L.top] = new TValue(LUA_TNIL, null);\n    api_incr_top(L);\n};\n\nconst lua_pushnumber = function(L, n) {\n    fengari_argcheck(typeof n === \"number\");\n    L.stack[L.top] = new TValue(LUA_TNUMFLT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushinteger = function(L, n) {\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushlstring = function(L, s, len) {\n    fengari_argcheckinteger(len);\n    let ts;\n    if (len === 0) {\n        s = to_luastring(\"\", true);\n        ts = luaS_bless(L, s);\n    } else {\n        s = from_userstring(s);\n        api_check(L, s.length >= len, \"invalid length to lua_pushlstring\");\n        ts = luaS_new(L, s.subarray(0, len));\n    }\n    lobject.pushsvalue2s(L, ts);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return ts.value;\n};\n\nconst lua_pushstring = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        let ts = luaS_new(L, from_userstring(s));\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return s;\n};\n\nconst lua_pushvfstring = function (L, fmt, argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\nconst lua_pushfstring = function (L, fmt, ...argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\n/* Similar to lua_pushstring, but takes a JS string */\nconst lua_pushliteral = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        fengari_argcheck(typeof s === \"string\");\n        let ts = luaS_newliteral(L, s);\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n\n    return s;\n};\n\nconst lua_pushcclosure = function(L, fn, n) {\n    fengari_argcheck(typeof fn === \"function\");\n    fengari_argcheckinteger(n);\n    if (n === 0)\n        L.stack[L.top] = new TValue(LUA_TLCF, fn);\n    else {\n        api_checknelems(L, n);\n        api_check(L, n <= lfunc.MAXUPVAL, \"upvalue index too large\");\n        let cl = new CClosure(L, fn, n);\n        for (let i=0; i<n; i++)\n            cl.upvalue[i].setfrom(L.stack[L.top - n + i]);\n        for (let i=1; i<n; i++)\n            delete L.stack[--L.top];\n        if (n>0)\n            --L.top;\n        L.stack[L.top].setclCvalue(cl);\n    }\n    api_incr_top(L);\n};\n\nconst lua_pushjsclosure = lua_pushcclosure;\n\nconst lua_pushcfunction = function(L, fn) {\n    lua_pushcclosure(L, fn, 0);\n};\n\nconst lua_pushjsfunction = lua_pushcfunction;\n\nconst lua_pushboolean = function(L, b) {\n    L.stack[L.top] = new TValue(LUA_TBOOLEAN, !!b);\n    api_incr_top(L);\n};\n\nconst lua_pushlightuserdata = function(L, p) {\n    L.stack[L.top] = new TValue(LUA_TLIGHTUSERDATA, p);\n    api_incr_top(L);\n};\n\nconst lua_pushthread = function(L) {\n    L.stack[L.top] = new TValue(LUA_TTHREAD, L);\n    api_incr_top(L);\n    return L.l_G.mainthread === L;\n};\n\nconst lua_pushglobaltable = function(L) {\n    lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS);\n};\n\n/*\n** set functions (stack -> Lua)\n*/\n\n/*\n** t[k] = value at the top of the stack (where 'k' is a string)\n*/\nconst auxsetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    api_checknelems(L, 1);\n    lobject.pushsvalue2s(L, str); /* push 'str' (to make it a TValue) */\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setglobal = function(L, name) {\n    auxsetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\nconst lua_setmetatable = function(L, objindex) {\n    api_checknelems(L, 1);\n    let mt;\n    let obj = index2addr(L, objindex);\n    if (L.stack[L.top - 1].ttisnil())\n        mt = null;\n    else {\n        api_check(L, L.stack[L.top - 1].ttistable(), \"table expected\");\n        mt = L.stack[L.top - 1].value;\n    }\n\n    switch (obj.ttnov()) {\n        case LUA_TUSERDATA:\n        case LUA_TTABLE: {\n            obj.value.metatable = mt;\n            break;\n        }\n        default: {\n            L.l_G.mt[obj.ttnov()] = mt;\n            break;\n        }\n    }\n\n    delete L.stack[--L.top];\n    return true;\n};\n\nconst lua_settable = function(L, idx) {\n    api_checknelems(L, 2);\n    let t = index2addr(L, idx);\n    lvm.settable(L, t, L.stack[L.top - 2], L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setfield = function(L, idx, k) {\n    auxsetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_seti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let t = index2addr(L, idx);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawset = function(L, idx) {\n    api_checknelems(L, 2);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = L.stack[L.top - 2];\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    ltable.invalidateTMcache(o.value);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawseti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    ltable.luaH_setint(o.value, n, L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst lua_rawsetp = function(L, idx, p) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    delete L.stack[--L.top];\n};\n\n/*\n** get functions (Lua -> stack)\n*/\n\nconst auxgetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    lobject.pushsvalue2s(L, str);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgeti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    api_check(L, t.ttistable(), \"table expected\");\n    lobject.pushobj2s(L, ltable.luaH_getint(t.value, n));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgetp = function(L, idx, p) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    lobject.pushobj2s(L, ltable.luaH_get(L, t.value, k));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawget = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(t), \"table expected\");\n    lobject.setobj2s(L, L.top - 1, ltable.luaH_get(L, t.value, L.stack[L.top - 1]));\n    return L.stack[L.top - 1].ttnov();\n};\n\n// narray and nrec are mostly useless for this implementation\nconst lua_createtable = function(L, narray, nrec) {\n    let t = new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L));\n    L.stack[L.top] = t;\n    api_incr_top(L);\n};\n\nconst luaS_newudata = function(L, size) {\n    return new lobject.Udata(L, size);\n};\n\nconst lua_newuserdata = function(L, size) {\n    let u = luaS_newudata(L, size);\n    L.stack[L.top] = new lobject.TValue(LUA_TUSERDATA, u);\n    api_incr_top(L);\n    return u.data;\n};\n\nconst aux_upvalue = function(L, fi, n) {\n    fengari_argcheckinteger(n);\n    switch(fi.ttype()) {\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            if (!(1 <= n && n <= f.nupvalues)) return null;\n            return {\n                name: to_luastring(\"\", true),\n                val: f.upvalue[n-1]\n            };\n        }\n        case LUA_TLCL: {  /* Lua closure */\n            let f = fi.value;\n            let p = f.p;\n            if (!(1 <= n && n <= p.upvalues.length)) return null;\n            let name = p.upvalues[n-1].name;\n            return {\n                name: name ? name.getstr() : to_luastring(\"(*no name)\", true),\n                val: f.upvals[n-1]\n            };\n        }\n        default: return null;  /* not a closure */\n    }\n};\n\nconst lua_getupvalue = function(L, funcindex, n) {\n    let up = aux_upvalue(L, index2addr(L, funcindex), n);\n    if (up) {\n        let name = up.name;\n        let val = up.val;\n        lobject.pushobj2s(L, val);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        return name;\n    }\n    return null;\n};\n\nconst lua_setupvalue = function(L, funcindex, n) {\n    let fi = index2addr(L, funcindex);\n    api_checknelems(L, 1);\n    let aux = aux_upvalue(L, fi, n);\n    if (aux) {\n        let name = aux.name;\n        let val = aux.val;\n        val.setfrom(L.stack[L.top-1]);\n        delete L.stack[--L.top];\n        return name;\n    }\n    return null;\n};\n\nconst lua_newtable = function(L) {\n    lua_createtable(L, 0, 0);\n};\n\nconst lua_register = function(L, n, f) {\n    lua_pushcfunction(L, f);\n    lua_setglobal(L, n);\n};\n\nconst lua_getmetatable = function(L, objindex) {\n    let obj = index2addr(L, objindex);\n    let mt;\n    let res = false;\n    switch (obj.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = obj.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[obj.ttnov()];\n            break;\n    }\n\n    if (mt !== null && mt !== undefined) {\n        L.stack[L.top] = new TValue(LUA_TTABLE, mt);\n        api_incr_top(L);\n        res = true;\n    }\n\n    return res;\n};\n\nconst lua_getuservalue = function(L, idx) {\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    let uv = o.value.uservalue;\n    L.stack[L.top] = new TValue(uv.type, uv.value);\n    api_incr_top(L);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_gettable = function(L, idx) {\n    let t = index2addr(L, idx);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getfield = function(L, idx, k) {\n    return auxgetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_geti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getglobal = function(L, name) {\n    return auxgetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\n/*\n** access functions (stack -> JS)\n*/\n\nconst lua_toboolean = function(L, idx) {\n    let o = index2addr(L, idx);\n    return !o.l_isfalse();\n};\n\nconst lua_tolstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.svalue();\n};\n\nconst lua_tostring =  lua_tolstring;\n\nconst lua_tojsstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.jsstring();\n};\n\nconst lua_todataview = function(L, idx) {\n    let u8 = lua_tolstring(L, idx);\n    return new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n};\n\nconst lua_rawlen = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return o.vslen();\n        case LUA_TUSERDATA:\n            return o.value.len;\n        case LUA_TTABLE:\n            return ltable.luaH_getn(o.value);\n        default:\n            return 0;\n    }\n};\n\nconst lua_tocfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    if (o.ttislcf() || o.ttisCclosure()) return o.value;\n    else return null;  /* not a C function */\n};\n\nconst lua_tointeger = function(L, idx) {\n    let n = lua_tointegerx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tointegerx = function(L, idx) {\n    return lvm.tointeger(index2addr(L, idx));\n};\n\nconst lua_tonumber = function(L, idx) {\n    let n = lua_tonumberx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tonumberx = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx));\n};\n\nconst lua_touserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttnov()) {\n        case LUA_TUSERDATA:\n            return o.value.data;\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default: return null;\n    }\n};\n\nconst lua_tothread = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisthread() ? o.value : null;\n};\n\nconst lua_topointer = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TCCL:\n        case LUA_TLCF:\n        case LUA_TTHREAD:\n        case LUA_TUSERDATA: /* note: this differs in behaviour to reference lua implementation */\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default:\n            return null;\n    }\n};\n\n\n/* A proxy is a function that the same lua value to the given lua state. */\n\n/* Having a weakmap of created proxies was only way I could think of to provide an 'isproxy' function */\nconst seen = new WeakMap();\n\n/* is the passed object a proxy? is it from the given state? (if passed) */\nconst lua_isproxy = function(p, L) {\n    let G = seen.get(p);\n    if (!G)\n        return false;\n    return (L === null) || (L.l_G === G);\n};\n\n/* Use 'create_proxy' helper function so that 'L' is not in scope */\nconst create_proxy = function(G, type, value) {\n    let proxy = function(L) {\n        api_check(L, L instanceof lstate.lua_State && G === L.l_G, \"must be from same global state\");\n        L.stack[L.top] = new TValue(type, value);\n        api_incr_top(L);\n    };\n    seen.set(proxy, G);\n    return proxy;\n};\n\nconst lua_toproxy = function(L, idx) {\n    let tv = index2addr(L, idx);\n    /* pass broken down tv incase it is an upvalue index */\n    return create_proxy(L.l_G, tv.type, tv.value);\n};\n\n\nconst lua_compare = function(L, index1, index2, op) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n\n    let i = 0;\n\n    if (isvalid(o1) && isvalid(o2)) {\n        switch (op) {\n            case LUA_OPEQ: i = lvm.luaV_equalobj(L, o1, o2); break;\n            case LUA_OPLT: i = lvm.luaV_lessthan(L, o1, o2); break;\n            case LUA_OPLE: i = lvm.luaV_lessequal(L, o1, o2); break;\n            default: api_check(L, false, \"invalid option\");\n        }\n    }\n\n    return i;\n};\n\nconst lua_stringtonumber = function(L, s) {\n    let tv = new TValue();\n    let sz = lobject.luaO_str2num(s, tv);\n    if (sz !== 0) {\n        L.stack[L.top] = tv;\n        api_incr_top(L);\n    }\n    return sz;\n};\n\nconst f_call = function(L, ud) {\n    ldo.luaD_callnoyield(L, ud.funcOff, ud.nresults);\n};\n\nconst lua_type = function(L, idx) {\n    let o = index2addr(L, idx);\n    return isvalid(o) ?  o.ttnov() : LUA_TNONE;\n};\n\nconst lua_typename = function(L, t) {\n    api_check(L, LUA_TNONE <= t && t < LUA_NUMTAGS, \"invalid tag\");\n    return ltm.ttypename(t);\n};\n\nconst lua_iscfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttislcf(o) || o.ttisCclosure();\n};\n\nconst lua_isnil = function(L, n) {\n    return lua_type(L, n) === LUA_TNIL;\n};\n\nconst lua_isboolean = function(L, n) {\n    return lua_type(L, n) === LUA_TBOOLEAN;\n};\n\nconst lua_isnone = function(L, n) {\n    return lua_type(L, n) === LUA_TNONE;\n};\n\nconst lua_isnoneornil = function(L, n) {\n    return lua_type(L, n) <= 0;\n};\n\nconst lua_istable = function(L, idx) {\n    return index2addr(L, idx).ttistable();\n};\n\nconst lua_isinteger = function(L, idx) {\n    return index2addr(L, idx).ttisinteger();\n};\n\nconst lua_isnumber = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx)) !== false;\n};\n\nconst lua_isstring = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisstring() || lvm.cvt2str(o);\n};\n\nconst lua_isuserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisfulluserdata(o) || o.ttislightuserdata();\n};\n\nconst lua_isthread = function(L, idx) {\n    return lua_type(L, idx) === LUA_TTHREAD;\n};\n\nconst lua_isfunction = function(L, idx) {\n    return lua_type(L, idx) === LUA_TFUNCTION;\n};\n\nconst lua_islightuserdata = function(L, idx) {\n    return lua_type(L, idx) === LUA_TLIGHTUSERDATA;\n};\n\nconst lua_rawequal = function(L, index1, index2) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n    return isvalid(o1) && isvalid(o2) ? lvm.luaV_equalobj(null, o1, o2) : 0;\n};\n\nconst lua_arith = function(L, op) {\n    if (op !== LUA_OPUNM && op !== LUA_OPBNOT)\n        api_checknelems(L, 2);  /* all other operations expect two operands */\n    else {  /* for unary operations, add fake 2nd operand */\n        api_checknelems(L, 1);\n        lobject.pushobj2s(L, L.stack[L.top-1]);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n    /* first operand at top - 2, second at top - 1; result go to top - 2 */\n    lobject.luaO_arith(L, op, L.stack[L.top - 2], L.stack[L.top - 1], L.stack[L.top - 2]);\n    delete L.stack[--L.top];  /* remove second operand */\n};\n\n/*\n** 'load' and 'call' functions (run Lua code)\n*/\n\nconst default_chunkname = to_luastring(\"?\");\nconst lua_load = function(L, reader, data, chunkname, mode) {\n    if (!chunkname) chunkname = default_chunkname;\n    else chunkname = from_userstring(chunkname);\n    if (mode !== null) mode = from_userstring(mode);\n    let z = new ZIO(L, reader, data);\n    let status = ldo.luaD_protectedparser(L, z, chunkname, mode);\n    if (status === LUA_OK) {  /* no errors? */\n        let f = L.stack[L.top - 1].value; /* get newly created function */\n        if (f.nupvalues >= 1) {  /* does it have an upvalue? */\n            /* get global table from registry */\n            let gt = ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS);\n            /* set global table as 1st upvalue of 'f' (may be LUA_ENV) */\n            f.upvals[0].setfrom(gt);\n        }\n    }\n    return status;\n};\n\nconst lua_dump = function(L, writer, data, strip) {\n    api_checknelems(L, 1);\n    let o = L.stack[L.top -1];\n    if (o.ttisLclosure())\n        return luaU_dump(L, o.value.p, writer, data, strip);\n    return 1;\n};\n\nconst lua_status = function(L) {\n    return L.status;\n};\n\nconst lua_setuservalue = function(L, idx) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    o.value.uservalue.setfrom(L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst checkresults = function(L,na,nr) {\n    api_check(L, nr === LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)),\n        \"results from function overflow current stack size\");\n};\n\nconst lua_callk = function(L, nargs, nresults, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let func = L.top - (nargs + 1);\n    if (k !== null && L.nny === 0) { /* need to prepare continuation? */\n        L.ci.c_k = k;\n        L.ci.c_ctx = ctx;\n        ldo.luaD_call(L, func, nresults);\n    } else { /* no continuation or no yieldable */\n        ldo.luaD_callnoyield(L, func, nresults);\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n};\n\nconst lua_call = function(L, n, r) {\n    lua_callk(L, n, r, 0, null);\n};\n\nconst lua_pcallk = function(L, nargs, nresults, errfunc, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let status;\n    let func;\n    if (errfunc === 0)\n        func = 0;\n    else {\n        func = index2addr_(L, errfunc);\n    }\n    let funcOff = L.top - (nargs + 1); /* function to be called */\n    if (k === null || L.nny > 0) { /* no continuation or no yieldable? */\n        let c = {\n            funcOff: funcOff,\n            nresults: nresults /* do a 'conventional' protected call */\n        };\n        status = ldo.luaD_pcall(L, f_call, c, funcOff, func);\n    } else { /* prepare continuation (call is already protected by 'resume') */\n        let ci = L.ci;\n        ci.c_k = k;  /* prepare continuation (call is already protected by 'resume') */\n        ci.c_ctx = ctx;  /* prepare continuation (call is already protected by 'resume') */\n        /* save information for error recovery */\n        ci.extra = funcOff;\n        ci.c_old_errfunc = L.errfunc;\n        L.errfunc = func;\n        ci.callstatus &= ~lstate.CIST_OAH | L.allowhook;\n        ci.callstatus |= lstate.CIST_YPCALL;  /* function can do error recovery */\n        ldo.luaD_call(L, funcOff, nresults);  /* do the call */\n        ci.callstatus &= ~lstate.CIST_YPCALL;\n        L.errfunc = ci.c_old_errfunc;\n        status = LUA_OK;\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n\n    return status;\n};\n\nconst lua_pcall = function(L, n, r, f) {\n    return lua_pcallk(L, n, r, f, 0, null);\n};\n\n/*\n** miscellaneous functions\n*/\n\nconst lua_error = function(L) {\n    api_checknelems(L, 1);\n    ldebug.luaG_errormsg(L);\n};\n\nconst lua_next = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    L.stack[L.top] = new TValue();\n    let more = ltable.luaH_next(L, t.value, L.top - 1);\n    if (more) {\n        api_incr_top(L);\n        return 1;\n    } else {\n        delete L.stack[L.top];\n        delete L.stack[--L.top];\n        return 0;\n    }\n};\n\nconst lua_concat = function(L, n) {\n    api_checknelems(L, n);\n    if (n >= 2)\n        lvm.luaV_concat(L, n);\n    else if (n === 0) {\n        lobject.pushsvalue2s(L, luaS_bless(L, to_luastring(\"\", true)));\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n};\n\nconst lua_len = function(L, idx) {\n    let t = index2addr(L, idx);\n    let tv = new TValue();\n    lvm.luaV_objlen(L, tv, t);\n    L.stack[L.top] = tv;\n    api_incr_top(L);\n};\n\nconst getupvalref = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    api_check(L, fi.ttisLclosure(), \"Lua function expected\");\n    let f = fi.value;\n    fengari_argcheckinteger(n);\n    api_check(L, 1 <= n && n <= f.p.upvalues.length, \"invalid upvalue index\");\n    return {\n        f: f,\n        i: n - 1\n    };\n};\n\nconst lua_upvalueid = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    switch (fi.ttype()) {\n        case LUA_TLCL: {  /* lua closure */\n            let ref = getupvalref(L, fidx, n);\n            return ref.f.upvals[ref.i];\n        }\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            api_check(L, (n|0) === n && n > 0 && n <= f.nupvalues, \"invalid upvalue index\");\n            return f.upvalue[n - 1];\n        }\n        default: {\n            api_check(L, false, \"closure expected\");\n            return null;\n        }\n    }\n};\n\nconst lua_upvaluejoin = function(L, fidx1, n1, fidx2, n2) {\n    let ref1 = getupvalref(L, fidx1, n1);\n    let ref2 = getupvalref(L, fidx2, n2);\n    let up2 = ref2.f.upvals[ref2.i];\n    ref1.f.upvals[ref1.i] = up2;\n};\n\n// This functions are only there for compatibility purposes\nconst lua_gc = function () {};\n\nconst lua_getallocf = function () {\n    console.warn(\"lua_getallocf is not available\");\n    return 0;\n};\n\nconst lua_setallocf = function () {\n    console.warn(\"lua_setallocf is not available\");\n    return 0;\n};\n\nconst lua_getextraspace = function () {\n    console.warn(\"lua_getextraspace is not available\");\n    return 0;\n};\n\nmodule.exports.api_incr_top          = api_incr_top;\nmodule.exports.api_checknelems       = api_checknelems;\nmodule.exports.lua_absindex          = lua_absindex;\nmodule.exports.lua_arith             = lua_arith;\nmodule.exports.lua_atpanic           = lua_atpanic;\nmodule.exports.lua_atnativeerror     = lua_atnativeerror;\nmodule.exports.lua_call              = lua_call;\nmodule.exports.lua_callk             = lua_callk;\nmodule.exports.lua_checkstack        = lua_checkstack;\nmodule.exports.lua_compare           = lua_compare;\nmodule.exports.lua_concat            = lua_concat;\nmodule.exports.lua_copy              = lua_copy;\nmodule.exports.lua_createtable       = lua_createtable;\nmodule.exports.lua_dump              = lua_dump;\nmodule.exports.lua_error             = lua_error;\nmodule.exports.lua_gc                = lua_gc;\nmodule.exports.lua_getallocf         = lua_getallocf;\nmodule.exports.lua_getextraspace     = lua_getextraspace;\nmodule.exports.lua_getfield          = lua_getfield;\nmodule.exports.lua_getglobal         = lua_getglobal;\nmodule.exports.lua_geti              = lua_geti;\nmodule.exports.lua_getmetatable      = lua_getmetatable;\nmodule.exports.lua_gettable          = lua_gettable;\nmodule.exports.lua_gettop            = lua_gettop;\nmodule.exports.lua_getupvalue        = lua_getupvalue;\nmodule.exports.lua_getuservalue      = lua_getuservalue;\nmodule.exports.lua_insert            = lua_insert;\nmodule.exports.lua_isboolean         = lua_isboolean;\nmodule.exports.lua_iscfunction       = lua_iscfunction;\nmodule.exports.lua_isfunction        = lua_isfunction;\nmodule.exports.lua_isinteger         = lua_isinteger;\nmodule.exports.lua_islightuserdata   = lua_islightuserdata;\nmodule.exports.lua_isnil             = lua_isnil;\nmodule.exports.lua_isnone            = lua_isnone;\nmodule.exports.lua_isnoneornil       = lua_isnoneornil;\nmodule.exports.lua_isnumber          = lua_isnumber;\nmodule.exports.lua_isproxy           = lua_isproxy;\nmodule.exports.lua_isstring          = lua_isstring;\nmodule.exports.lua_istable           = lua_istable;\nmodule.exports.lua_isthread          = lua_isthread;\nmodule.exports.lua_isuserdata        = lua_isuserdata;\nmodule.exports.lua_len               = lua_len;\nmodule.exports.lua_load              = lua_load;\nmodule.exports.lua_newtable          = lua_newtable;\nmodule.exports.lua_newuserdata       = lua_newuserdata;\nmodule.exports.lua_next              = lua_next;\nmodule.exports.lua_pcall             = lua_pcall;\nmodule.exports.lua_pcallk            = lua_pcallk;\nmodule.exports.lua_pop               = lua_pop;\nmodule.exports.lua_pushboolean       = lua_pushboolean;\nmodule.exports.lua_pushcclosure      = lua_pushcclosure;\nmodule.exports.lua_pushcfunction     = lua_pushcfunction;\nmodule.exports.lua_pushfstring       = lua_pushfstring;\nmodule.exports.lua_pushglobaltable   = lua_pushglobaltable;\nmodule.exports.lua_pushinteger       = lua_pushinteger;\nmodule.exports.lua_pushjsclosure     = lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction    = lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata = lua_pushlightuserdata;\nmodule.exports.lua_pushliteral       = lua_pushliteral;\nmodule.exports.lua_pushlstring       = lua_pushlstring;\nmodule.exports.lua_pushnil           = lua_pushnil;\nmodule.exports.lua_pushnumber        = lua_pushnumber;\nmodule.exports.lua_pushstring        = lua_pushstring;\nmodule.exports.lua_pushthread        = lua_pushthread;\nmodule.exports.lua_pushvalue         = lua_pushvalue;\nmodule.exports.lua_pushvfstring      = lua_pushvfstring;\nmodule.exports.lua_rawequal          = lua_rawequal;\nmodule.exports.lua_rawget            = lua_rawget;\nmodule.exports.lua_rawgeti           = lua_rawgeti;\nmodule.exports.lua_rawgetp           = lua_rawgetp;\nmodule.exports.lua_rawlen            = lua_rawlen;\nmodule.exports.lua_rawset            = lua_rawset;\nmodule.exports.lua_rawseti           = lua_rawseti;\nmodule.exports.lua_rawsetp           = lua_rawsetp;\nmodule.exports.lua_register          = lua_register;\nmodule.exports.lua_remove            = lua_remove;\nmodule.exports.lua_replace           = lua_replace;\nmodule.exports.lua_rotate            = lua_rotate;\nmodule.exports.lua_setallocf         = lua_setallocf;\nmodule.exports.lua_setfield          = lua_setfield;\nmodule.exports.lua_setglobal         = lua_setglobal;\nmodule.exports.lua_seti              = lua_seti;\nmodule.exports.lua_setmetatable      = lua_setmetatable;\nmodule.exports.lua_settable          = lua_settable;\nmodule.exports.lua_settop            = lua_settop;\nmodule.exports.lua_setupvalue        = lua_setupvalue;\nmodule.exports.lua_setuservalue      = lua_setuservalue;\nmodule.exports.lua_status            = lua_status;\nmodule.exports.lua_stringtonumber    = lua_stringtonumber;\nmodule.exports.lua_toboolean         = lua_toboolean;\nmodule.exports.lua_tocfunction       = lua_tocfunction;\nmodule.exports.lua_todataview        = lua_todataview;\nmodule.exports.lua_tointeger         = lua_tointeger;\nmodule.exports.lua_tointegerx        = lua_tointegerx;\nmodule.exports.lua_tojsstring        = lua_tojsstring;\nmodule.exports.lua_tolstring         = lua_tolstring;\nmodule.exports.lua_tonumber          = lua_tonumber;\nmodule.exports.lua_tonumberx         = lua_tonumberx;\nmodule.exports.lua_topointer         = lua_topointer;\nmodule.exports.lua_toproxy           = lua_toproxy;\nmodule.exports.lua_tostring          = lua_tostring;\nmodule.exports.lua_tothread          = lua_tothread;\nmodule.exports.lua_touserdata        = lua_touserdata;\nmodule.exports.lua_type              = lua_type;\nmodule.exports.lua_typename          = lua_typename;\nmodule.exports.lua_upvalueid         = lua_upvalueid;\nmodule.exports.lua_upvaluejoin       = lua_upvaluejoin;\nmodule.exports.lua_version           = lua_version;\nmodule.exports.lua_xmove             = lua_xmove;\n","\"use strict\";\n\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass MBuffer {\n    constructor() {\n        this.buffer = null;\n        this.n = 0;\n    }\n}\n\nconst luaZ_buffer = function(buff) {\n    return buff.buffer.subarray(0, buff.n);\n};\n\nconst luaZ_buffremove = function(buff, i) {\n    buff.n -= i;\n};\n\nconst luaZ_resetbuffer = function(buff) {\n    buff.n = 0;\n};\n\nconst luaZ_resizebuffer = function(L, buff, size) {\n    let newbuff = new Uint8Array(size);\n    if (buff.buffer)\n        newbuff.set(buff.buffer);\n    buff.buffer = newbuff;\n};\n\nclass ZIO {\n    constructor(L, reader, data) {\n        this.L = L;           /* Lua state (for reader) */\n        lua_assert(typeof reader == \"function\", \"ZIO requires a reader\");\n        this.reader = reader; /* reader function */\n        this.data = data;     /* additional data */\n        this.n = 0;           /* bytes still unread */\n        this.buffer = null;\n        this.off = 0;         /* current position in buffer */\n    }\n\n    zgetc () {\n        return ((this.n--) > 0) ? this.buffer[this.off++] : luaZ_fill(this);\n    }\n}\n\nconst EOZ = -1;\n\nconst luaZ_fill = function(z) {\n    let buff = z.reader(z.L, z.data);\n    if (buff === null)\n        return EOZ;\n    lua_assert(buff instanceof Uint8Array, \"Should only load binary of array of bytes\");\n    let size = buff.length;\n    if (size === 0)\n        return EOZ;\n    z.buffer = buff;\n    z.off = 0;\n    z.n = size - 1;\n    return z.buffer[z.off++];\n};\n\n/* b should be an array-like that will be set to bytes\n * b_offset is the offset at which to start filling */\nconst luaZ_read = function(z, b, b_offset, n) {\n    while (n) {\n        if (z.n === 0) { /* no bytes in buffer? */\n            if (luaZ_fill(z) === EOZ)\n                return n; /* no more input; return number of missing bytes */\n            else {\n                z.n++;  /* luaZ_fill consumed first byte; put it back */\n                z.off--;\n            }\n        }\n        let m = (n <= z.n) ? n : z.n; /* min. between n and z->n */\n        for (let i=0; i<m; i++) {\n            b[b_offset++] = z.buffer[z.off++];\n        }\n        z.n -= m;\n        if (z.n === 0) // remove reference to input so it can get freed\n            z.buffer = null;\n        n -= m;\n    }\n\n    return 0;\n};\n\nmodule.exports.EOZ               = EOZ;\nmodule.exports.luaZ_buffer       = luaZ_buffer;\nmodule.exports.luaZ_buffremove   = luaZ_buffremove;\nmodule.exports.luaZ_fill         = luaZ_fill;\nmodule.exports.luaZ_read         = luaZ_read;\nmodule.exports.luaZ_resetbuffer  = luaZ_resetbuffer;\nmodule.exports.luaZ_resizebuffer = luaZ_resizebuffer;\nmodule.exports.MBuffer           = MBuffer;\nmodule.exports.ZIO               = ZIO;\n","\"use strict\";\n\nconst {\n    constant_types: { LUA_TBOOLEAN, LUA_TLNGSTR },\n    thread_status: { LUA_ERRSYNTAX },\n    to_luastring\n} = require('./defs.js');\nconst {\n    LUA_MINBUFFER,\n    MAX_INT,\n    lua_assert\n} = require('./llimits.js');\nconst ldebug   = require('./ldebug.js');\nconst ldo      = require('./ldo.js');\nconst {\n    lisdigit,\n    lislalnum,\n    lislalpha,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst lobject  = require('./lobject.js');\nconst {\n    luaS_bless,\n    luaS_hash,\n    luaS_hashlongstr,\n    luaS_new\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst {\n    EOZ,\n    luaZ_buffer,\n    luaZ_buffremove,\n    luaZ_resetbuffer,\n    luaZ_resizebuffer\n} = require('./lzio.js');\n\nconst FIRST_RESERVED = 257;\n\nconst LUA_ENV = to_luastring(\"_ENV\", true);\n\n/* terminal symbols denoted by reserved words */\nconst TK_AND      = FIRST_RESERVED;\nconst TK_BREAK    = FIRST_RESERVED + 1;\nconst TK_DO       = FIRST_RESERVED + 2;\nconst TK_ELSE     = FIRST_RESERVED + 3;\nconst TK_ELSEIF   = FIRST_RESERVED + 4;\nconst TK_END      = FIRST_RESERVED + 5;\nconst TK_FALSE    = FIRST_RESERVED + 6;\nconst TK_FOR      = FIRST_RESERVED + 7;\nconst TK_FUNCTION = FIRST_RESERVED + 8;\nconst TK_GOTO     = FIRST_RESERVED + 9;\nconst TK_IF       = FIRST_RESERVED + 10;\nconst TK_IN       = FIRST_RESERVED + 11;\nconst TK_LOCAL    = FIRST_RESERVED + 12;\nconst TK_NIL      = FIRST_RESERVED + 13;\nconst TK_NOT      = FIRST_RESERVED + 14;\nconst TK_OR       = FIRST_RESERVED + 15;\nconst TK_REPEAT   = FIRST_RESERVED + 16;\nconst TK_RETURN   = FIRST_RESERVED + 17;\nconst TK_THEN     = FIRST_RESERVED + 18;\nconst TK_TRUE     = FIRST_RESERVED + 19;\nconst TK_UNTIL    = FIRST_RESERVED + 20;\nconst TK_WHILE    = FIRST_RESERVED + 21;\n/* other terminal symbols */\nconst TK_IDIV     = FIRST_RESERVED + 22;\nconst TK_CONCAT   = FIRST_RESERVED + 23;\nconst TK_DOTS     = FIRST_RESERVED + 24;\nconst TK_EQ       = FIRST_RESERVED + 25;\nconst TK_GE       = FIRST_RESERVED + 26;\nconst TK_LE       = FIRST_RESERVED + 27;\nconst TK_NE       = FIRST_RESERVED + 28;\nconst TK_SHL      = FIRST_RESERVED + 29;\nconst TK_SHR      = FIRST_RESERVED + 30;\nconst TK_DBCOLON  = FIRST_RESERVED + 31;\nconst TK_EOS      = FIRST_RESERVED + 32;\nconst TK_FLT      = FIRST_RESERVED + 33;\nconst TK_INT      = FIRST_RESERVED + 34;\nconst TK_NAME     = FIRST_RESERVED + 35;\nconst TK_STRING   = FIRST_RESERVED + 36;\n\nconst RESERVED = {\n    \"TK_AND\":      TK_AND,\n    \"TK_BREAK\":    TK_BREAK,\n    \"TK_DO\":       TK_DO,\n    \"TK_ELSE\":     TK_ELSE,\n    \"TK_ELSEIF\":   TK_ELSEIF,\n    \"TK_END\":      TK_END,\n    \"TK_FALSE\":    TK_FALSE,\n    \"TK_FOR\":      TK_FOR,\n    \"TK_FUNCTION\": TK_FUNCTION,\n    \"TK_GOTO\":     TK_GOTO,\n    \"TK_IF\":       TK_IF,\n    \"TK_IN\":       TK_IN,\n    \"TK_LOCAL\":    TK_LOCAL,\n    \"TK_NIL\":      TK_NIL,\n    \"TK_NOT\":      TK_NOT,\n    \"TK_OR\":       TK_OR,\n    \"TK_REPEAT\":   TK_REPEAT,\n    \"TK_RETURN\":   TK_RETURN,\n    \"TK_THEN\":     TK_THEN,\n    \"TK_TRUE\":     TK_TRUE,\n    \"TK_UNTIL\":    TK_UNTIL,\n    \"TK_WHILE\":    TK_WHILE,\n    \"TK_IDIV\":     TK_IDIV,\n    \"TK_CONCAT\":   TK_CONCAT,\n    \"TK_DOTS\":     TK_DOTS,\n    \"TK_EQ\":       TK_EQ,\n    \"TK_GE\":       TK_GE,\n    \"TK_LE\":       TK_LE,\n    \"TK_NE\":       TK_NE,\n    \"TK_SHL\":      TK_SHL,\n    \"TK_SHR\":      TK_SHR,\n    \"TK_DBCOLON\":  TK_DBCOLON,\n    \"TK_EOS\":      TK_EOS,\n    \"TK_FLT\":      TK_FLT,\n    \"TK_INT\":      TK_INT,\n    \"TK_NAME\":     TK_NAME,\n    \"TK_STRING\":   TK_STRING\n};\n\nconst luaX_tokens = [\n    \"and\", \"break\", \"do\", \"else\", \"elseif\",\n    \"end\", \"false\", \"for\", \"function\", \"goto\", \"if\",\n    \"in\", \"local\", \"nil\", \"not\", \"or\", \"repeat\",\n    \"return\", \"then\", \"true\", \"until\", \"while\",\n    \"//\", \"..\", \"...\", \"==\", \">=\", \"<=\", \"~=\",\n    \"<<\", \">>\", \"::\", \"<eof>\",\n    \"<number>\", \"<integer>\", \"<name>\", \"<string>\"\n].map((e, i)=>to_luastring(e));\n\nclass SemInfo {\n    constructor() {\n        this.r = NaN;\n        this.i = NaN;\n        this.ts = null;\n    }\n}\n\nclass Token {\n    constructor() {\n        this.token = NaN;\n        this.seminfo = new SemInfo();\n    }\n}\n\n/* state of the lexer plus state of the parser when shared by all\n   functions */\nclass LexState {\n    constructor() {\n        this.current = NaN;  /* current character (charint) */\n        this.linenumber = NaN;  /* input line counter */\n        this.lastline = NaN;  /* line of last token 'consumed' */\n        this.t = new Token();  /* current token */\n        this.lookahead = new Token();  /* look ahead token */\n        this.fs = null;  /* current function (parser) */\n        this.L = null;\n        this.z = null; /* input stream */\n        this.buff = null;  /* buffer for tokens */\n        this.h = null;  /* to reuse strings */\n        this.dyd = null;  /* dynamic structures used by the parser */\n        this.source = null;  /* current source name */\n        this.envn = null;  /* environment variable name */\n    }\n}\n\nconst save = function(ls, c) {\n    let b = ls.buff;\n    if (b.n + 1 > b.buffer.length) {\n        if (b.buffer.length >= MAX_INT/2)\n            lexerror(ls, to_luastring(\"lexical element too long\", true), 0);\n        let newsize = b.buffer.length*2;\n        luaZ_resizebuffer(ls.L, b, newsize);\n    }\n    b.buffer[b.n++] = c < 0 ? 255 + c + 1 : c;\n};\n\nconst luaX_token2str = function(ls, token) {\n    if (token < FIRST_RESERVED) {  /* single-byte symbols? */\n        return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%c'\", true), token);\n    } else {\n        let s = luaX_tokens[token - FIRST_RESERVED];\n        if (token < TK_EOS)  /* fixed format (symbols and reserved words)? */\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), s);\n        else  /* names, strings, and numerals */\n            return s;\n    }\n};\n\nconst currIsNewline = function(ls) {\n    return ls.current === 10 /* ('\\n').charCodeAt(0) */ || ls.current === 13 /* ('\\r').charCodeAt(0) */;\n};\n\nconst next = function(ls) {\n    ls.current = ls.z.zgetc();\n};\n\nconst save_and_next = function(ls) {\n    save(ls, ls.current);\n    next(ls);\n};\n\n/*\n** creates a new string and anchors it in scanner's table so that\n** it will not be collected until the end of the compilation\n** (by that time it should be anchored somewhere)\n*/\nconst TVtrue = new lobject.TValue(LUA_TBOOLEAN, true);\nconst luaX_newstring = function(ls, str) {\n    let L = ls.L;\n    let ts = luaS_new(L, str);\n    /* HACK: Workaround lack of ltable 'keyfromval' */\n    let tpair = ls.h.strong.get(luaS_hashlongstr(ts));\n    if (!tpair) { /* not in use yet? */\n        let key = new lobject.TValue(LUA_TLNGSTR, ts);\n        ltable.luaH_setfrom(L, ls.h, key, TVtrue);\n    } else { /* string already present */\n        ts = tpair.key.tsvalue(); /* re-use value previously stored */\n    }\n    return ts;\n};\n\n/*\n** increment line number and skips newline sequence (any of\n** \\n, \\r, \\n\\r, or \\r\\n)\n*/\nconst inclinenumber = function(ls) {\n    let old = ls.current;\n    lua_assert(currIsNewline(ls));\n    next(ls);  /* skip '\\n' or '\\r' */\n    if (currIsNewline(ls) && ls.current !== old)\n        next(ls);  /* skip '\\n\\r' or '\\r\\n' */\n    if (++ls.linenumber >= MAX_INT)\n        lexerror(ls, to_luastring(\"chunk has too many lines\", true), 0);\n};\n\nconst luaX_setinput = function(L, ls, z, source, firstchar) {\n    ls.t = {\n        token: 0,\n        seminfo: new SemInfo()\n    };\n    ls.L = L;\n    ls.current = firstchar;\n    ls.lookahead = {\n        token: TK_EOS,\n        seminfo: new SemInfo()\n    };\n    ls.z = z;\n    ls.fs = null;\n    ls.linenumber = 1;\n    ls.lastline = 1;\n    ls.source = source;\n    ls.envn = luaS_bless(L, LUA_ENV);\n    luaZ_resizebuffer(L, ls.buff, LUA_MINBUFFER);  /* initialize buffer */\n};\n\nconst check_next1 = function(ls, c) {\n    if (ls.current === c) {\n        next(ls);\n        return true;\n    }\n\n    return false;\n};\n\n/*\n** Check whether current char is in set 'set' (with two chars) and\n** saves it\n*/\nconst check_next2 = function(ls, set) {\n    if (ls.current === set[0].charCodeAt(0) || ls.current === set[1].charCodeAt(0)) {\n        save_and_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst read_numeral = function(ls, seminfo) {\n    let expo = \"Ee\";\n    let first = ls.current;\n    lua_assert(lisdigit(ls.current));\n    save_and_next(ls);\n    if (first === 48 /* ('0').charCodeAt(0) */ && check_next2(ls, \"xX\"))  /* hexadecimal? */\n        expo = \"Pp\";\n\n    for (;;) {\n        if (check_next2(ls, expo))  /* exponent part? */\n            check_next2(ls, \"-+\");  /* optional exponent sign */\n        if (lisxdigit(ls.current))\n            save_and_next(ls);\n        else if (ls.current === 46 /* ('.').charCodeAt(0) */)\n            save_and_next(ls);\n        else break;\n    }\n\n    // save(ls, 0);\n\n    let obj = new lobject.TValue();\n    if (lobject.luaO_str2num(luaZ_buffer(ls.buff), obj) === 0)  /* format error? */\n        lexerror(ls, to_luastring(\"malformed number\", true), TK_FLT);\n    if (obj.ttisinteger()) {\n        seminfo.i = obj.value;\n        return TK_INT;\n    } else {\n        lua_assert(obj.ttisfloat());\n        seminfo.r = obj.value;\n        return TK_FLT;\n    }\n};\n\nconst txtToken = function(ls, token) {\n    switch (token) {\n        case TK_NAME: case TK_STRING:\n        case TK_FLT: case TK_INT:\n            // save(ls, 0);\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), luaZ_buffer(ls.buff));\n        default:\n            return luaX_token2str(ls, token);\n    }\n};\n\nconst lexerror = function(ls, msg, token) {\n    msg = ldebug.luaG_addinfo(ls.L, msg, ls.source, ls.linenumber);\n    if (token)\n        lobject.luaO_pushfstring(ls.L, to_luastring(\"%s near %s\"), msg, txtToken(ls, token));\n    ldo.luaD_throw(ls.L, LUA_ERRSYNTAX);\n};\n\nconst luaX_syntaxerror = function(ls, msg) {\n    lexerror(ls, msg, ls.t.token);\n};\n\n/*\n** skip a sequence '[=*[' or ']=*]'; if sequence is well formed, return\n** its number of '='s; otherwise, return a negative number (-1 iff there\n** are no '='s after initial bracket)\n*/\nconst skip_sep = function(ls) {\n    let count = 0;\n    let s = ls.current;\n    lua_assert(s === 91 /* ('[').charCodeAt(0) */ || s === 93 /* (']').charCodeAt(0) */);\n    save_and_next(ls);\n    while (ls.current === 61 /* ('=').charCodeAt(0) */) {\n        save_and_next(ls);\n        count++;\n    }\n    return ls.current === s ? count : (-count) - 1;\n};\n\nconst read_long_string = function(ls, seminfo, sep) {\n    let line = ls.linenumber;  /* initial line (for error message) */\n    save_and_next(ls);  /* skip 2nd '[' */\n\n    if (currIsNewline(ls))  /* string starts with a newline? */\n        inclinenumber(ls);  /* skip it */\n\n    let skip = false;\n    for (; !skip ;) {\n        switch (ls.current) {\n            case EOZ: {  /* error */\n                let what = seminfo ? \"string\" : \"comment\";\n                let msg = `unfinished long ${what} (starting at line ${line})`;\n                lexerror(ls, to_luastring(msg), TK_EOS);\n                break;\n            }\n            case 93 /* (']').charCodeAt(0) */: {\n                if (skip_sep(ls) === sep) {\n                    save_and_next(ls);  /* skip 2nd ']' */\n                    skip = true;\n                }\n                break;\n            }\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {\n                save(ls, 10 /* ('\\n').charCodeAt(0) */);\n                inclinenumber(ls);\n                if (!seminfo) luaZ_resetbuffer(ls.buff);\n                break;\n            }\n            default: {\n                if (seminfo) save_and_next(ls);\n                else next(ls);\n            }\n        }\n    }\n\n    if (seminfo)\n        seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(2 + sep, ls.buff.n - (2 + sep)));\n};\n\nconst esccheck = function(ls, c, msg) {\n    if (!c) {\n        if (ls.current !== EOZ)\n            save_and_next(ls);  /* add current to buffer for error message */\n        lexerror(ls, msg, TK_STRING);\n    }\n};\n\nconst gethexa = function(ls) {\n    save_and_next(ls);\n    esccheck(ls, lisxdigit(ls.current), to_luastring(\"hexadecimal digit expected\", true));\n    return lobject.luaO_hexavalue(ls.current);\n};\n\nconst readhexaesc = function(ls) {\n    let r = gethexa(ls);\n    r = (r << 4) + gethexa(ls);\n    luaZ_buffremove(ls.buff, 2);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst readutf8desc = function(ls) {\n    let i = 4;  /* chars to be removed: '\\', 'u', '{', and first digit */\n    save_and_next(ls);  /* skip 'u' */\n    esccheck(ls, ls.current === 123 /* ('{').charCodeAt(0) */, to_luastring(\"missing '{'\", true));\n    let r = gethexa(ls);  /* must have at least one digit */\n\n    save_and_next(ls);\n    while (lisxdigit(ls.current)) {\n        i++;\n        r = (r << 4) + lobject.luaO_hexavalue(ls.current);\n        esccheck(ls, r <= 0x10FFFF, to_luastring(\"UTF-8 value too large\", true));\n        save_and_next(ls);\n    }\n    esccheck(ls, ls.current === 125 /* ('}').charCodeAt(0) */, to_luastring(\"missing '}'\", true));\n    next(ls);  /* skip '}' */\n    luaZ_buffremove(ls.buff, i);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst utf8esc = function(ls) {\n    let buff = new Uint8Array(lobject.UTF8BUFFSZ);\n    let n = lobject.luaO_utf8esc(buff, readutf8desc(ls));\n    for (; n > 0; n--)  /* add 'buff' to string */\n        save(ls, buff[lobject.UTF8BUFFSZ - n]);\n};\n\nconst readdecesc = function(ls) {\n    let r = 0;  /* result accumulator */\n    let i;\n    for (i = 0; i < 3 && lisdigit(ls.current); i++) {  /* read up to 3 digits */\n        r = 10 * r + ls.current - 48 /* ('0').charCodeAt(0) */;\n        save_and_next(ls);\n    }\n    esccheck(ls, r <= 255, to_luastring(\"decimal escape too large\", true));\n    luaZ_buffremove(ls.buff, i);  /* remove read digits from buffer */\n    return r;\n};\n\nconst read_string = function(ls, del, seminfo) {\n    save_and_next(ls);  /* keep delimiter (for error messages) */\n\n    while (ls.current !== del) {\n        switch (ls.current) {\n            case EOZ:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_EOS);\n                break;\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_STRING);\n                break;\n            case 92 /* ('\\\\').charCodeAt(0) */: {  /* escape sequences */\n                save_and_next(ls);  /* keep '\\\\' for error messages */\n                let will;\n                let c;\n                switch(ls.current) {\n                    case 97 /* ('a').charCodeAt(0) */: c = 7 /* \\a isn't valid JS */; will = 'read_save'; break;\n                    case 98 /* ('b').charCodeAt(0) */: c = 8 /* ('\\b').charCodeAt(0) */; will = 'read_save'; break;\n                    case 102 /* ('f').charCodeAt(0) */: c = 12 /* ('\\f').charCodeAt(0) */; will = 'read_save'; break;\n                    case 110 /* ('n').charCodeAt(0) */: c = 10 /* ('\\n').charCodeAt(0) */; will = 'read_save'; break;\n                    case 114 /* ('r').charCodeAt(0) */: c = 13 /* ('\\r').charCodeAt(0) */; will = 'read_save'; break;\n                    case 116 /* ('t').charCodeAt(0) */: c = 9 /* ('\\t').charCodeAt(0) */; will = 'read_save'; break;\n                    case 118 /* ('v').charCodeAt(0) */: c = 11 /* ('\\v').charCodeAt(0) */; will = 'read_save'; break;\n                    case 120 /* ('x').charCodeAt(0) */: c = readhexaesc(ls); will = 'read_save'; break;\n                    case 117 /* ('u').charCodeAt(0) */: utf8esc(ls); will = 'no_save'; break;\n                    case 10 /* ('\\n').charCodeAt(0) */:\n                    case 13 /* ('\\r').charCodeAt(0) */:\n                        inclinenumber(ls); c = 10 /* ('\\n').charCodeAt(0) */; will = 'only_save'; break;\n                    case 92 /* ('\\\\').charCodeAt(0) */:\n                    case 34 /* ('\"').charCodeAt(0) */:\n                    case 39 /* ('\\'').charCodeAt(0) */:\n                        c = ls.current; will = 'read_save'; break;\n                    case EOZ: will = 'no_save'; break;  /* will raise an error next loop */\n                    case 122 /* ('z').charCodeAt(0) */: {  /* zap following span of spaces */\n                        luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                        next(ls);  /* skip the 'z' */\n                        while (lisspace(ls.current)) {\n                            if (currIsNewline(ls)) inclinenumber(ls);\n                            else next(ls);\n                        }\n                        will = 'no_save'; break;\n                    }\n                    default: {\n                        esccheck(ls, lisdigit(ls.current), to_luastring(\"invalid escape sequence\", true));\n                        c = readdecesc(ls);  /* digital escape '\\ddd' */\n                        will = 'only_save'; break;\n                    }\n                }\n\n                if (will === 'read_save')\n                    next(ls);\n\n                if (will === 'read_save' || will === 'only_save') {\n                    luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                    save(ls, c);\n                }\n\n                break;\n            }\n            default:\n                save_and_next(ls);\n        }\n    }\n    save_and_next(ls);  /* skip delimiter */\n\n    seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(1, ls.buff.n-1));\n};\n\nconst token_to_index = Object.create(null); /* don't want to return true for e.g. 'hasOwnProperty' */\nluaX_tokens.forEach((e, i)=>token_to_index[luaS_hash(e)] = i);\n\nconst isreserved = function(w) {\n    let kidx = token_to_index[luaS_hashlongstr(w)];\n    return kidx !== void 0 && kidx <= 22;\n};\n\nconst llex = function(ls, seminfo) {\n    luaZ_resetbuffer(ls.buff);\n    for (;;) {\n        lua_assert(typeof ls.current == \"number\"); /* fengari addition */\n        switch (ls.current) {\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {  /* line breaks */\n                inclinenumber(ls);\n                break;\n            }\n            case 32 /* (' ').charCodeAt(0) */:\n            case 12 /* ('\\f').charCodeAt(0) */:\n            case 9 /* ('\\t').charCodeAt(0) */:\n            case 11 /* ('\\v').charCodeAt(0) */: {  /* spaces */\n                next(ls);\n                break;\n            }\n            case 45 /* ('-').charCodeAt(0) */: {  /* '-' or '--' (comment) */\n                next(ls);\n                if (ls.current !== 45 /* ('-').charCodeAt(0) */) return 45 /* ('-').charCodeAt(0) */;\n                /* else is a comment */\n                next(ls);\n                if (ls.current === 91 /* ('[').charCodeAt(0) */) {  /* long comment? */\n                    let sep = skip_sep(ls);\n                    luaZ_resetbuffer(ls.buff);  /* 'skip_sep' may dirty the buffer */\n                    if (sep >= 0) {\n                        read_long_string(ls, null, sep);  /* skip long comment */\n                        luaZ_resetbuffer(ls.buff);  /* previous call may dirty the buff. */\n                        break;\n                    }\n                }\n\n                /* else short comment */\n                while (!currIsNewline(ls) && ls.current !== EOZ)\n                    next(ls);  /* skip until end of line (or end of file) */\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* long string or simply '[' */\n                let sep = skip_sep(ls);\n                if (sep >= 0) {\n                    read_long_string(ls, seminfo, sep);\n                    return TK_STRING;\n                } else if (sep !== -1)  /* '[=...' missing second bracket */\n                    lexerror(ls, to_luastring(\"invalid long string delimiter\", true), TK_STRING);\n                return 91 /* ('[').charCodeAt(0) */;\n            }\n            case 61 /* ('=').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_EQ;\n                else return 61 /* ('=').charCodeAt(0) */;\n            }\n            case 60 /* ('<').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_LE;\n                else if (check_next1(ls, 60 /* ('<').charCodeAt(0) */)) return TK_SHL;\n                else return 60 /* ('<').charCodeAt(0) */;\n            }\n            case 62 /* ('>').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_GE;\n                else if (check_next1(ls, 62 /* ('>').charCodeAt(0) */)) return TK_SHR;\n                else return 62 /* ('>').charCodeAt(0) */;\n            }\n            case 47 /* ('/').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 47 /* ('/').charCodeAt(0) */)) return TK_IDIV;\n                else return 47 /* ('/').charCodeAt(0) */;\n            }\n            case 126 /* ('~').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_NE;\n                else return 126 /* ('~').charCodeAt(0) */;\n            }\n            case 58 /* (':').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 58 /* (':').charCodeAt(0) */)) return TK_DBCOLON;\n                else return 58 /* (':').charCodeAt(0) */;\n            }\n            case 34 /* ('\"').charCodeAt(0) */:\n            case 39 /* ('\\'').charCodeAt(0) */: {  /* short literal strings */\n                read_string(ls, ls.current, seminfo);\n                return TK_STRING;\n            }\n            case 46 /* ('.').charCodeAt(0) */: {  /* '.', '..', '...', or number */\n                save_and_next(ls);\n                if (check_next1(ls, 46 /* ('.').charCodeAt(0) */)) {\n                    if (check_next1(ls, 46 /* ('.').charCodeAt(0) */))\n                        return TK_DOTS;   /* '...' */\n                    else return TK_CONCAT;   /* '..' */\n                }\n                else if (!lisdigit(ls.current)) return 46 /* ('.').charCodeAt(0) */;\n                else return read_numeral(ls, seminfo);\n            }\n            case 48 /* ('0').charCodeAt(0) */: case 49 /* ('1').charCodeAt(0) */: case 50 /* ('2').charCodeAt(0) */: case 51 /* ('3').charCodeAt(0) */: case 52 /* ('4').charCodeAt(0) */:\n            case 53 /* ('5').charCodeAt(0) */: case 54 /* ('6').charCodeAt(0) */: case 55 /* ('7').charCodeAt(0) */: case 56 /* ('8').charCodeAt(0) */: case 57 /* ('9').charCodeAt(0) */: {\n                return read_numeral(ls, seminfo);\n            }\n            case EOZ: {\n                return TK_EOS;\n            }\n            default: {\n                if (lislalpha(ls.current)) {  /* identifier or reserved word? */\n                    do {\n                        save_and_next(ls);\n                    } while (lislalnum(ls.current));\n                    let ts = luaX_newstring(ls, luaZ_buffer(ls.buff));\n                    seminfo.ts = ts;\n                    let kidx = token_to_index[luaS_hashlongstr(ts)];\n                    if (kidx !== void 0 && kidx <= 22)  /* reserved word? */\n                        return kidx + FIRST_RESERVED;\n                    else\n                        return TK_NAME;\n                } else {  /* single-char tokens (+ - / ...) */\n                    let c = ls.current;\n                    next(ls);\n                    return c;\n                }\n            }\n        }\n    }\n};\n\nconst luaX_next = function(ls) {\n    ls.lastline = ls.linenumber;\n    if (ls.lookahead.token !== TK_EOS) {  /* is there a look-ahead token? */\n        ls.t.token = ls.lookahead.token;  /* use this one */\n        ls.t.seminfo.i = ls.lookahead.seminfo.i;\n        ls.t.seminfo.r = ls.lookahead.seminfo.r;\n        ls.t.seminfo.ts = ls.lookahead.seminfo.ts;\n        ls.lookahead.token = TK_EOS;  /* and discharge it */\n    } else\n        ls.t.token = llex(ls, ls.t.seminfo);  /* read next token */\n};\n\nconst luaX_lookahead = function(ls) {\n    lua_assert(ls.lookahead.token === TK_EOS);\n    ls.lookahead.token = llex(ls, ls.lookahead.seminfo);\n    return ls.lookahead.token;\n};\n\nmodule.exports.FIRST_RESERVED   = FIRST_RESERVED;\nmodule.exports.LUA_ENV          = LUA_ENV;\nmodule.exports.LexState         = LexState;\nmodule.exports.RESERVED         = RESERVED;\nmodule.exports.isreserved       = isreserved;\nmodule.exports.luaX_lookahead   = luaX_lookahead;\nmodule.exports.luaX_newstring   = luaX_newstring;\nmodule.exports.luaX_next        = luaX_next;\nmodule.exports.luaX_setinput    = luaX_setinput;\nmodule.exports.luaX_syntaxerror = luaX_syntaxerror;\nmodule.exports.luaX_token2str   = luaX_token2str;\nmodule.exports.luaX_tokens      = luaX_tokens;\n","\"use strict\";\n\nconst {\n\tlua,\n\tlauxlib,\n\tlualib,\n\tto_luastring\n} = require('fengari');\nconst {\n\tLUA_MULTRET,\n\tLUA_OK,\n\tLUA_REGISTRYINDEX,\n\tLUA_RIDX_MAINTHREAD,\n\tLUA_TBOOLEAN,\n\tLUA_TFUNCTION,\n\tLUA_TLIGHTUSERDATA,\n\tLUA_TNIL,\n\tLUA_TNONE,\n\tLUA_TNUMBER,\n\tLUA_TSTRING,\n\tLUA_TTABLE,\n\tLUA_TTHREAD,\n\tLUA_TUSERDATA,\n\tlua_atnativeerror,\n\tlua_call,\n\tlua_getfield,\n\tlua_gettable,\n\tlua_gettop,\n\tlua_isnil,\n\tlua_isproxy,\n\tlua_newuserdata,\n\tlua_pcall,\n\tlua_pop,\n\tlua_pushboolean,\n\tlua_pushcfunction,\n\tlua_pushinteger,\n\tlua_pushlightuserdata,\n\tlua_pushliteral,\n\tlua_pushnil,\n\tlua_pushnumber,\n\tlua_pushstring,\n\tlua_pushvalue,\n\tlua_rawgeti,\n\tlua_rawgetp,\n\tlua_rawsetp,\n\tlua_rotate,\n\tlua_setfield,\n\tlua_settable,\n\tlua_settop,\n\tlua_toboolean,\n\tlua_tojsstring,\n\tlua_tonumber,\n\tlua_toproxy,\n\tlua_tothread,\n\tlua_touserdata,\n\tlua_type\n} = lua;\nconst {\n\tluaL_argerror,\n\tluaL_checkany,\n\tluaL_checkoption,\n\tluaL_checkstack,\n\tluaL_checkudata,\n\tluaL_error,\n\tluaL_getmetafield,\n\tluaL_newlib,\n\tluaL_newmetatable,\n\tluaL_requiref,\n\tluaL_setfuncs,\n\tluaL_setmetatable,\n\tluaL_testudata,\n\tluaL_tolstring\n} = lauxlib;\nconst {\n\tluaopen_base\n} = lualib;\n\nconst FENGARI_INTEROP_VERSION_MAJOR   = \"0\";\nconst FENGARI_INTEROP_VERSION_MINOR   = \"1\";\nconst FENGARI_INTEROP_VERSION_NUM     = 1;\nconst FENGARI_INTEROP_VERSION_RELEASE = \"2\";\nconst FENGARI_INTEROP_VERSION         = FENGARI_INTEROP_VERSION_MAJOR + \".\" + FENGARI_INTEROP_VERSION_MINOR;\nconst FENGARI_INTEROP_RELEASE         = FENGARI_INTEROP_VERSION + \".\" + FENGARI_INTEROP_VERSION_RELEASE;\n\nlet custom_inspect_symbol;\nif (typeof process !== \"undefined\") {\n\ttry { /* for node.js */\n\t\tcustom_inspect_symbol = require('util').inspect.custom;\n\t} catch (e) {}\n}\n\nconst global_env = (function() {\n\t/* global WorkerGlobalScope */ /* see https://github.com/sindresorhus/globals/issues/127 */\n\tif (typeof process !== \"undefined\") {\n\t\t/* node */\n\t\treturn global;\n\t} else if (typeof window !== \"undefined\") {\n\t\t/* browser window */\n\t\treturn window;\n\t} else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t\t/* web worker */\n\t\treturn self;\n\t} else {\n\t\t/* unknown global env */\n\t\treturn (0, eval)('this'); /* use non-strict mode to get global env */\n\t}\n})();\n\nlet apply, construct, Reflect_deleteProperty;\nif (typeof Reflect !== \"undefined\") {\n\tapply = Reflect.apply;\n\tconstruct = Reflect.construct;\n\tReflect_deleteProperty = Reflect.deleteProperty;\n} else {\n\tconst fApply = Function.apply;\n\tconst bind = Function.bind;\n\tapply = function(target, thisArgument, argumentsList) {\n\t\treturn fApply.call(target, thisArgument, argumentsList);\n\t};\n\tconstruct = function(target, argumentsList /*, newTarget */) {\n\t\tswitch (argumentsList.length) {\n\t\t\tcase 0: return new target();\n\t\t\tcase 1: return new target(argumentsList[0]);\n\t\t\tcase 2: return new target(argumentsList[0], argumentsList[1]);\n\t\t\tcase 3: return new target(argumentsList[0], argumentsList[1], argumentsList[2]);\n\t\t\tcase 4: return new target(argumentsList[0], argumentsList[1], argumentsList[2], argumentsList[3]);\n\t\t}\n\t\tlet args = [null];\n\t\targs.push.apply(args, argumentsList);\n\t\treturn new (bind.apply(target, args))();\n\t};\n\t/* need to be in non-strict mode */\n\tReflect_deleteProperty = Function(\"t\", \"k\", \"delete t[k]\");\n}\n\n/*\nString.concat coerces to string with correct hint for Symbol.toPrimitive\n`this` isn't allowed to be null, so bind the empty string\n*/\nconst toString = String.prototype.concat.bind(\"\");\n\nconst isobject = function(o) {\n\treturn typeof o === \"object\" ? o !== null : typeof o === \"function\";\n};\n\nconst js_tname = to_luastring(\"js object\");\nconst js_library_not_loaded = \"js library not loaded into lua_State\";\n\nconst testjs = function(L, idx) {\n\tlet u = luaL_testudata(L, idx, js_tname);\n\tif (u)\n\t\treturn u.data;\n\telse\n\t\treturn void 0;\n};\n\nconst checkjs = function(L, idx) {\n\treturn luaL_checkudata(L, idx, js_tname).data;\n};\n\nconst pushjs = function(L, v) {\n\tlet b = lua_newuserdata(L);\n\tb.data = v;\n\tluaL_setmetatable(L, js_tname);\n};\n\nconst getmainthread = function(L) {\n\tlua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_MAINTHREAD);\n\tlet mainL = lua_tothread(L, -1);\n\tlua_pop(L, 1);\n\treturn mainL;\n};\n\n/* weak map from states to proxy objects (for each object) in that state */\nconst states = new WeakMap();\n\nconst push = function(L, v) {\n\tswitch (typeof v) {\n\t\tcase \"undefined\":\n\t\t\tlua_pushnil(L);\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tlua_pushnumber(L, v);\n\t\t\tbreak;\n\t\tcase \"string\":\n\t\t\tlua_pushstring(L, to_luastring(v));\n\t\t\tbreak;\n\t\tcase \"boolean\":\n\t\t\tlua_pushboolean(L, v);\n\t\t\tbreak;\n\t\tcase \"symbol\":\n\t\t\tlua_pushlightuserdata(L, v);\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tif (lua_isproxy(v, L)) {\n\t\t\t\tv(L);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tcase \"object\":\n\t\t\tif (v === null) {\n\t\t\t\t/* can't use null in a WeakMap; grab from registry */\n\t\t\t\tif (lua_rawgetp(L, LUA_REGISTRYINDEX, null) !== LUA_TUSERDATA)\n\t\t\t\t\tthrow Error(js_library_not_loaded);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tdefault: {\n\t\t\t/* Try and push same object again */\n\t\t\tlet objects_seen = states.get(getmainthread(L));\n\t\t\tif (!objects_seen) throw Error(js_library_not_loaded);\n\t\t\tlet p = objects_seen.get(v);\n\t\t\tif (p) {\n\t\t\t\tp(L);\n\t\t\t} else {\n\t\t\t\tpushjs(L, v);\n\t\t\t\tp = lua_toproxy(L, -1);\n\t\t\t\tobjects_seen.set(v, p);\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst atnativeerror = function(L) {\n\tlet u = lua_touserdata(L, 1);\n\tpush(L, u);\n\treturn 1;\n};\n\nconst tojs = function(L, idx) {\n\tswitch(lua_type(L, idx)) {\n\t\tcase LUA_TNONE:\n\t\tcase LUA_TNIL:\n\t\t\treturn void 0;\n\t\tcase LUA_TBOOLEAN:\n\t\t\treturn lua_toboolean(L, idx);\n\t\tcase LUA_TLIGHTUSERDATA:\n\t\t\treturn lua_touserdata(L, idx);\n\t\tcase LUA_TNUMBER:\n\t\t\treturn lua_tonumber(L, idx);\n\t\tcase LUA_TSTRING:\n\t\t\treturn lua_tojsstring(L, idx);\n\t\tcase LUA_TUSERDATA: {\n\t\t\tlet u = testjs(L, idx);\n\t\t\tif (u !== void 0)\n\t\t\t\treturn u;\n\t\t}\n\t\t/* fall through */\n\t\tcase LUA_TTABLE:\n\t\tcase LUA_TFUNCTION:\n\t\tcase LUA_TTHREAD:\n\t\t/* fall through */\n\t\tdefault:\n\t\t\treturn wrap(L, lua_toproxy(L, idx));\n\t}\n};\n\n/* Calls function on the stack with `nargs` from the stack.\n   On lua error, re-throws as javascript error\n   On success, returns single return value */\nconst jscall = function(L, nargs) {\n\tlet status = lua_pcall(L, nargs, 1, 0);\n\tlet r = tojs(L, -1);\n\tlua_pop(L, 1);\n\tswitch(status) {\n\t\tcase LUA_OK:\n\t\t\treturn r;\n\t\tdefault:\n\t\t\tthrow r;\n\t}\n};\n\nconst invoke = function(L, p, thisarg, args, n_results) {\n\tif (!isobject(args)) throw new TypeError(\"`args` argument must be an object\");\n\tlet length = +args.length;\n\tif (!(length >= 0)) length = 0; /* Keep NaN in mind */\n\tluaL_checkstack(L, 2+length, null);\n\tlet base = lua_gettop(L);\n\tp(L);\n\tpush(L, thisarg);\n\tfor (let i=0; i<length; i++) {\n\t\tpush(L, args[i]);\n\t}\n\tswitch(lua_pcall(L, 1+length, n_results, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet nres = lua_gettop(L)-base;\n\t\t\tlet res = new Array(nres);\n\t\t\tfor (let i=0; i<nres; i++) {\n\t\t\t\tres[i] = tojs(L, base+i+1);\n\t\t\t}\n\t\t\tlua_settop(L, base);\n\t\t\treturn res;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_settop(L, base);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst gettable = function(L) {\n\tlua_gettable(L, 1);\n\treturn 1;\n};\n\nconst get = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\treturn jscall(L, 2);\n};\n\nconst has = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\tlet status = lua_pcall(L, 2, 1, 0);\n\tswitch(status) {\n\t\tcase LUA_OK: {\n\t\t\tlet r = lua_isnil(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\treturn !r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst set = function(L, p, prop, value) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tpush(L, value);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst deleteProperty = function(L, p, prop) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tlua_pushnil(L);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst tostring = function(L, p) {\n\tluaL_checkstack(L, 2, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_tolstring(L, 1);\n\t\treturn 1;\n\t});\n\tp(L);\n\treturn jscall(L, 1);\n};\n\n/* implements lua's \"Generic For\" protocol */\nconst iter_next = function() {\n\tlet L = this.L;\n\tluaL_checkstack(L, 3, null);\n\tlet top = lua_gettop(L);\n\tthis.iter(L);\n\tthis.state(L);\n\tthis.last(L);\n\tswitch(lua_pcall(L, 2, LUA_MULTRET, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tthis.last = lua_toproxy(L, top+1);\n\t\t\tlet r;\n\t\t\tif (lua_isnil(L, -1)) {\n\t\t\t\tr = {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: void 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet n_results = lua_gettop(L) - top;\n\t\t\t\tlet result = new Array(n_results);\n\t\t\t\tfor (let i=0; i<n_results; i++) {\n\t\t\t\t\tresult[i] = tojs(L, top+i+1);\n\t\t\t\t}\n\t\t\t\tr = {\n\t\t\t\t\tdone: false,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t\tlua_settop(L, top);\n\t\t\treturn r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet e = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow e;\n\t\t}\n\t}\n};\n\n/* make iteration use pairs() */\nconst jsiterator = function(L, p) {\n\tluaL_checkstack(L, 1, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_requiref(L, to_luastring(\"_G\"), luaopen_base, 0);\n\t\tlua_getfield(L, -1, to_luastring(\"pairs\"));\n\t\tp(L);\n\t\tlua_call(L, 1, 3);\n\t\treturn 3;\n\t});\n\tswitch(lua_pcall(L, 0, 3, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet iter = lua_toproxy(L, -3);\n\t\t\tlet state = lua_toproxy(L, -2);\n\t\t\tlet last = lua_toproxy(L, -1);\n\t\t\tlua_pop(L, 3);\n\t\t\treturn {\n\t\t\t\tL: L,\n\t\t\t\titer: iter,\n\t\t\t\tstate: state,\n\t\t\t\tlast: last,\n\t\t\t\tnext: iter_next\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst wrap = function(L1, p) {\n\tconst L = getmainthread(L1);\n\t/* we need `typeof js_proxy` to be \"function\" so that it's acceptable to native apis */\n\tlet js_proxy = function() {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, this, arguments, 1)[0];\n\t};\n\tjs_proxy.apply = function(thisarg, args) {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, thisarg, args, 1)[0];\n\t};\n\tjs_proxy.invoke = function(thisarg, args) {\n\t\treturn invoke(L, p, thisarg, args, LUA_MULTRET);\n\t};\n\tjs_proxy.get = function(k) {\n\t\treturn get(L, p, k);\n\t};\n\tjs_proxy.has = function(k) {\n\t\treturn has(L, p, k);\n\t};\n\tjs_proxy.set = function(k, v) {\n\t\treturn set(L, p, k, v);\n\t};\n\tjs_proxy.delete = function(k) {\n\t\treturn deleteProperty(L, p, k);\n\t};\n\tjs_proxy.toString = function() {\n\t\treturn tostring(L, p);\n\t};\n\tif (typeof Symbol === \"function\") {\n\t\tjs_proxy[Symbol.toStringTag] = \"Fengari object\";\n\t\tjs_proxy[Symbol.iterator] = function() {\n\t\t\treturn jsiterator(L, p);\n\t\t};\n\t\tif (Symbol.toPrimitive) {\n\t\t\tjs_proxy[Symbol.toPrimitive] = function(hint) {\n\t\t\t\tif (hint === \"string\") {\n\t\t\t\t\treturn tostring(L, p);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\tif (custom_inspect_symbol) {\n\t\tjs_proxy[custom_inspect_symbol] = js_proxy.toString;\n\t}\n\tlet objects_seen = states.get(L);\n\tif (!objects_seen) throw Error(js_library_not_loaded);\n\tobjects_seen.set(js_proxy, p);\n\treturn js_proxy;\n};\n\nconst jslib = {\n\t\"new\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet args = new Array(nargs);\n\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\targs[i] = tojs(L, i+2);\n\t\t}\n\t\tpush(L, construct(u, args));\n\t\treturn 1;\n\t},\n\t\"tonumber\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushnumber(L, +u);\n\t\treturn 1;\n\t},\n\t\"tostring\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, toString(u));\n\t\treturn 1;\n\t},\n\t\"instanceof\": function(L) {\n\t\tlet u1 = tojs(L, 1);\n\t\tlet u2 = tojs(L, 2);\n\t\tlua_pushboolean(L, u1 instanceof u2);\n\t\treturn 1;\n\t},\n\t\"typeof\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, typeof u);\n\t\treturn 1;\n\t}\n};\n\nif (typeof Symbol === \"function\" && Symbol.iterator) {\n\tconst get_iterator = function(L, idx) {\n\t\tlet u = checkjs(L, idx);\n\t\tlet getiter = u[Symbol.iterator];\n\t\tif (!getiter)\n\t\t\tluaL_argerror(L, idx, to_luastring(\"object not iterable\"));\n\t\tlet iter = apply(getiter, u, []);\n\t\tif (!isobject(iter))\n\t\t\tluaL_argerror(L, idx, to_luastring(\"Result of the Symbol.iterator method is not an object\"));\n\t\treturn iter;\n\t};\n\n\tconst next = function(L) {\n\t\tlet iter = tojs(L, 1);\n\t\tlet r = iter.next();\n\t\tif (r.done) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tpush(L, r.value);\n\t\t\treturn 1;\n\t\t}\n\t};\n\n\tjslib[\"of\"] = function(L) {\n\t\tlet iter = get_iterator(L, 1);\n\t\tlua_pushcfunction(L, next);\n\t\tpush(L, iter);\n\t\treturn 2;\n\t};\n}\n\nif (typeof Proxy === \"function\" && typeof Symbol === \"function\") {\n\tconst L_symbol = Symbol(\"lua_State\");\n\tconst p_symbol = Symbol(\"fengari-proxy\");\n\n\tconst proxy_handlers = {\n\t\t\"apply\": function(target, thisarg, args) {\n\t\t\treturn invoke(target[L_symbol], target[p_symbol], thisarg, args, 1)[0];\n\t\t},\n\t\t\"construct\": function(target, argumentsList) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tlet arg_length = argumentsList.length;\n\t\t\tluaL_checkstack(L, 2+arg_length, null);\n\t\t\tp(L);\n\t\t\tlet idx = lua_gettop(L);\n\t\t\tif (luaL_getmetafield(L, idx, to_luastring(\"construct\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow new TypeError(\"not a constructor\");\n\t\t\t}\n\t\t\tlua_rotate(L, idx, 1);\n\t\t\tfor (let i=0; i<arg_length; i++) {\n\t\t\t\tpush(L, argumentsList[i]);\n\t\t\t}\n\t\t\treturn jscall(L, 1+arg_length);\n\t\t},\n\t\t\"defineProperty\": function(target, prop, desc) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 4, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"defineProperty\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\tpush(L, desc);\n\t\t\treturn jscall(L, 3);\n\t\t},\n\t\t\"deleteProperty\": function(target, k) {\n\t\t\treturn deleteProperty(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"get\": function(target, k) {\n\t\t\treturn get(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"getOwnPropertyDescriptor\": function(target, prop) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getOwnPropertyDescriptor\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\treturn jscall(L, 2);\n\t\t},\n\t\t\"getPrototypeOf\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"has\": function(target, k) {\n\t\t\treturn has(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"ownKeys\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"ownKeys\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow Error(\"ownKeys unknown for fengari object\");\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"set\": function(target, k, v) {\n\t\t\tset(target[L_symbol], target[p_symbol], k, v);\n\t\t\treturn true;\n\t\t},\n\t\t\"setPrototypeOf\": function(target, prototype) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"setPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prototype);\n\t\t\treturn jscall(L, 2);\n\t\t}\n\t};\n\n\t/*\n\tFunctions created with `function(){}` have a non-configurable .prototype\n\tfield. This causes issues with the .ownKeys and .getOwnPropertyDescriptor\n\ttraps.\n\tHowever using `.bind()` returns a function without the .prototype property.\n\n\t```js\n\tReflect.ownKeys((function(){})) // Array [ \"prototype\", \"length\", \"name\" ]\n\tReflect.ownKeys((function(){}).bind()) // Array [ \"length\", \"name\" ]\n\t```\n\t*/\n\tconst raw_function = function() {\n\t\tlet f = (function(){}).bind();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tWe use Function() here to get prevent transpilers from converting to a\n\tnon-arrow function.\n\tAdditionally, we avoid setting the internal name field by never giving the\n\tnew function a name in the block it was defined (and instead delete-ing\n\tthe configurable fields .length and .name in a wrapper function)\n\t*/\n\tconst make_arrow_function = Function(\"return ()=>void 0;\");\n\tconst raw_arrow_function = function() {\n\t\tlet f = make_arrow_function();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tArrow functions do not have a .prototype field:\n\n\t```js\n\tReflect.ownKeys((() = >void 0)) // Array [ \"length\", \"name\" ]\n\t```\n\n\tHowever they cannot be used as a constructor:\n\n\t```js\n\tnew (new Proxy(() => void 0, { construct: function() { return {}; } })) // TypeError: (intermediate value) is not a constructor\n\tnew (new Proxy(function(){}, { construct: function() { return {}; } })) // {}\n\t```\n\t*/\n\tconst createproxy = function(L1, p, type) {\n\t\tconst L = getmainthread(L1);\n\t\tlet target;\n\t\tswitch (type) {\n\t\t\tcase \"function\":\n\t\t\t\ttarget = raw_function();\n\t\t\t\tbreak;\n\t\t\tcase \"arrow_function\":\n\t\t\t\ttarget = raw_arrow_function();\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\ttarget = {};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow TypeError(\"invalid type to createproxy\");\n\t\t}\n\t\ttarget[p_symbol] = p;\n\t\ttarget[L_symbol] = L;\n\t\treturn new Proxy(target, proxy_handlers);\n\t};\n\n\tconst valid_types = [\"function\", \"arrow_function\", \"object\"];\n\tconst valid_types_as_luastring = valid_types.map((v) => to_luastring(v));\n\tjslib[\"createproxy\"] = function(L) {\n\t\tluaL_checkany(L, 1);\n\t\tlet type = valid_types[luaL_checkoption(L, 2, valid_types_as_luastring[0], valid_types_as_luastring)];\n\t\tlet fengariProxy = createproxy(L, lua_toproxy(L, 1), type);\n\t\tpush(L, fengariProxy);\n\t\treturn 1;\n\t};\n}\n\nlet jsmt = {\n\t\"__index\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tpush(L, u[k]);\n\t\treturn 1;\n\t},\n\t\"__newindex\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tlet v = tojs(L, 3);\n\t\tif (v === void 0)\n\t\t\tReflect_deleteProperty(u, k);\n\t\telse\n\t\t\tu[k] = v;\n\t\treturn 0;\n\t},\n\t\"__tostring\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet s = toString(u);\n\t\tlua_pushstring(L, to_luastring(s));\n\t\treturn 1;\n\t},\n\t\"__call\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet thisarg;\n\t\tlet args = new Array(Math.max(0, nargs-1));\n\t\tif (nargs > 0) {\n\t\t\tthisarg = tojs(L, 2);\n\t\t\tif (nargs-- > 0) {\n\t\t\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\t\t\targs[i] = tojs(L, i+3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpush(L, apply(u, thisarg, args));\n\t\treturn 1;\n\t},\n\t\"__pairs\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet iter, state, first;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__pairs\")]) === void 0) {\n\t\t\t/* By default, iterate over Object.keys */\n\t\t\titer = function(last) {\n\t\t\t\tif (this.index >= this.keys.length)\n\t\t\t\t\treturn;\n\t\t\t\tlet key = this.keys[this.index++];\n\t\t\t\treturn [key, this.object[key]];\n\t\t\t};\n\t\t\tstate = {\n\t\t\t\tobject: u,\n\t\t\t\tkeys: Object.keys(u),\n\t\t\t\tindex: 0,\n\t\t\t};\n\t\t} else {\n\t\t\tlet r = apply(f, u, []);\n\t\t\tif (r === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object with keys 'iter', 'state', 'first' expected)\"));\n\t\t\titer = r.iter;\n\t\t\tif (iter === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object.iter is missing)\"));\n\t\t\tstate = r.state;\n\t\t\tfirst = r.first;\n\t\t}\n\t\tlua_pushcfunction(L, function() {\n\t\t\tlet state = tojs(L, 1);\n\t\t\tlet last = tojs(L, 2);\n\t\t\tlet r = apply(iter, state, [last]);\n\t\t\t/* returning undefined indicates end of iteration */\n\t\t\tif (r === void 0)\n\t\t\t\treturn 0;\n\t\t\t/* otherwise it should return an array of results */\n\t\t\tif (!Array.isArray(r))\n\t\t\t\tluaL_error(L, to_luastring(\"bad iterator result (Array or undefined expected)\"));\n\t\t\tluaL_checkstack(L, r.length, null);\n\t\t\tfor (let i=0; i<r.length; i++) {\n\t\t\t\tpush(L, r[i]);\n\t\t\t}\n\t\t\treturn r.length;\n\t\t});\n\t\tpush(L, state);\n\t\tpush(L, first);\n\t\treturn 3;\n\t},\n\t\"__len\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet r;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__len\")]) === void 0) {\n\t\t\t/* by default use .length field */\n\t\t\tr = u.length;\n\t\t} else {\n\t\t\tr = apply(f, u, []);\n\t\t}\n\t\tpush(L, r);\n\t\treturn 1;\n\t}\n};\n\nconst luaopen_js = function(L) {\n\t/* Add weak map to track objects seen */\n\tstates.set(getmainthread(L), new WeakMap());\n\n\tlua_atnativeerror(L, atnativeerror);\n\n\tluaL_newlib(L, jslib);\n\tlua_pushliteral(L, FENGARI_INTEROP_VERSION);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION\"));\n\tlua_pushinteger(L, FENGARI_INTEROP_VERSION_NUM);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION_NUM\"));\n\tlua_pushliteral(L, FENGARI_INTEROP_RELEASE);\n\tlua_setfield(L, -2, to_luastring(\"_RELEASE\"));\n\n\tluaL_newmetatable(L, js_tname);\n\tluaL_setfuncs(L, jsmt, 0);\n\tlua_pop(L, 1);\n\n\tpushjs(L, null);\n\t/* Store null object in registry under lightuserdata null */\n\tlua_pushvalue(L, -1);\n\tlua_rawsetp(L, LUA_REGISTRYINDEX, null);\n\tlua_setfield(L, -2, to_luastring(\"null\"));\n\n\tpush(L, global_env);\n\tlua_setfield(L, -2, to_luastring(\"global\"));\n\n\treturn 1;\n};\n\nmodule.exports.FENGARI_INTEROP_VERSION = FENGARI_INTEROP_VERSION;\nmodule.exports.FENGARI_INTEROP_VERSION_NUM = FENGARI_INTEROP_VERSION_NUM;\nmodule.exports.FENGARI_INTEROP_RELEASE = FENGARI_INTEROP_RELEASE;\nmodule.exports.checkjs = checkjs;\nmodule.exports.testjs = testjs;\nmodule.exports.pushjs = pushjs;\nmodule.exports.push = push;\nmodule.exports.tojs = tojs;\nmodule.exports.luaopen_js = luaopen_js;\n","\"use strict\";\n\nconst { luastring_of } = require('./defs.js');\n\nconst luai_ctype_ = luastring_of(\n    0x00,  /* EOZ */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 0. */\n    0x00,  0x08,  0x08,  0x08,  0x08,  0x08,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 1. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x0c,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,        /* 2. */\n    0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,        /* 3. */\n    0x16,  0x16,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 4. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 5. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x05,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 6. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 7. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 8. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 9. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* a. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* b. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* c. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* d. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* e. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* f. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00\n);\n\nconst ALPHABIT = 0;\nconst DIGITBIT = 1;\nconst PRINTBIT = 2;\nconst SPACEBIT = 3;\nconst XDIGITBIT = 4;\n\nconst lisdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<DIGITBIT)) !== 0;\n};\n\nconst lisxdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<XDIGITBIT)) !== 0;\n};\n\nconst lisprint = function(c) {\n    return (luai_ctype_[c+1] & (1<<PRINTBIT)) !== 0;\n};\n\nconst lisspace = function(c) {\n    return (luai_ctype_[c+1] & (1<<SPACEBIT)) !== 0;\n};\n\nconst lislalpha = function(c) {\n    return (luai_ctype_[c+1] & (1<<ALPHABIT)) !== 0;\n};\n\nconst lislalnum = function(c) {\n    return (luai_ctype_[c+1] & ((1<<ALPHABIT)|(1<<DIGITBIT))) !== 0;\n};\n\nmodule.exports.lisdigit   = lisdigit;\nmodule.exports.lislalnum  = lislalnum;\nmodule.exports.lislalpha  = lislalpha;\nmodule.exports.lisprint   = lisprint;\nmodule.exports.lisspace   = lisspace;\nmodule.exports.lisxdigit  = lisxdigit;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    to_luastring\n} = require('./defs.js');\nconst {\n    BinOpr: {\n        OPR_ADD,\n        OPR_AND,\n        OPR_BAND,\n        OPR_BOR,\n        OPR_BXOR,\n        OPR_CONCAT,\n        OPR_DIV,\n        OPR_EQ,\n        OPR_GE,\n        OPR_GT,\n        OPR_IDIV,\n        OPR_LE,\n        OPR_LT,\n        OPR_MOD,\n        OPR_MUL,\n        OPR_NE,\n        OPR_NOBINOPR,\n        OPR_OR,\n        OPR_POW,\n        OPR_SHL,\n        OPR_SHR,\n        OPR_SUB\n    },\n    UnOpr: {\n        OPR_BNOT,\n        OPR_LEN,\n        OPR_MINUS,\n        OPR_NOT,\n        OPR_NOUNOPR\n    },\n    NO_JUMP,\n    getinstruction,\n    luaK_checkstack,\n    luaK_codeABC,\n    luaK_codeABx,\n    luaK_codeAsBx,\n    luaK_codek,\n    luaK_concat,\n    luaK_dischargevars,\n    luaK_exp2RK,\n    luaK_exp2anyreg,\n    luaK_exp2anyregup,\n    luaK_exp2nextreg,\n    luaK_exp2val,\n    luaK_fixline,\n    luaK_getlabel,\n    luaK_goiffalse,\n    luaK_goiftrue,\n    luaK_indexed,\n    luaK_infix,\n    luaK_intK,\n    luaK_jump,\n    luaK_jumpto,\n    luaK_nil,\n    luaK_patchclose,\n    luaK_patchlist,\n    luaK_patchtohere,\n    luaK_posfix,\n    luaK_prefix,\n    luaK_reserveregs,\n    luaK_ret,\n    luaK_self,\n    luaK_setlist,\n    luaK_setmultret,\n    luaK_setoneret,\n    luaK_setreturns,\n    luaK_storevar,\n    luaK_stringK\n} = require('./lcode.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst {\n    LUAI_MAXCCALLS,\n    MAX_INT,\n    lua_assert\n}  = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst {\n    OpCodesI: {\n        OP_CALL,\n        OP_CLOSURE,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETUPVAL,\n        OP_MOVE,\n        OP_NEWTABLE,\n        OP_SETTABLE,\n        OP_TAILCALL,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_VARARG\n    },\n    LFIELDS_PER_FLUSH,\n    SETARG_B,\n    SETARG_C,\n    SET_OPCODE\n} = require('./lopcodes.js');\nconst {\n    luaS_eqlngstr,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst Proto    = lfunc.Proto;\nconst R        = llex.RESERVED;\n\nconst MAXVARS = 200;\n\nconst hasmultret = function(k) {\n    return k === expkind.VCALL || k === expkind.VVARARG;\n};\n\nconst eqstr = function(a, b) {\n    /* TODO: use plain equality as strings are cached */\n    return luaS_eqlngstr(a, b);\n};\n\nclass BlockCnt {\n    constructor() {\n        this.previous = null;  /* chain */\n        this.firstlabel = NaN; /* index of first label in this block */\n        this.firstgoto = NaN;  /* index of first pending goto in this block */\n        this.nactvar = NaN;    /* # active locals outside the block */\n        this.upval = NaN;      /* true if some variable in the block is an upvalue */\n        this.isloop = NaN;     /* true if 'block' is a loop */\n    }\n}\n\nconst expkind = {\n    VVOID: 0,        /* when 'expdesc' describes the last expression a list,\n                        this kind means an empty list (so, no expression) */\n    VNIL: 1,         /* constant nil */\n    VTRUE: 2,        /* constant true */\n    VFALSE: 3,       /* constant false */\n    VK: 4,           /* constant in 'k'; info = index of constant in 'k' */\n    VKFLT: 5,        /* floating constant; nval = numerical float value */\n    VKINT: 6,        /* integer constant; nval = numerical integer value */\n    VNONRELOC: 7,    /* expression has its value in a fixed register;\n                        info = result register */\n    VLOCAL: 8,       /* local variable; info = local register */\n    VUPVAL: 9,       /* upvalue variable; info = index of upvalue in 'upvalues' */\n    VINDEXED: 10,    /* indexed variable;\n                        ind.vt = whether 't' is register or upvalue;\n                        ind.t = table register or upvalue;\n                        ind.idx = key's R/K index */\n    VJMP: 11,        /* expression is a test/comparison;\n                        info = pc of corresponding jump instruction */\n    VRELOCABLE: 12,  /* expression can put result in any register;\n                        info = instruction pc */\n    VCALL: 13,       /* expression is a function call; info = instruction pc */\n    VVARARG: 14      /* vararg expression; info = instruction pc */\n};\n\nconst vkisvar = function(k) {\n    return expkind.VLOCAL <= k && k <= expkind.VINDEXED;\n};\n\nconst vkisinreg = function(k) {\n    return k === expkind.VNONRELOC || k === expkind.VLOCAL;\n};\n\nclass expdesc {\n    constructor() {\n        this.k = NaN;\n        this.u = {\n            ival: NaN,    /* for VKINT */\n            nval: NaN,    /* for VKFLT */\n            info: NaN,    /* for generic use */\n            ind: {        /* for indexed variables (VINDEXED) */\n                idx: NaN, /* index (R/K) */\n                t: NaN,   /* table (register or upvalue) */\n                vt: NaN   /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */\n            }\n        };\n        this.t = NaN;     /* patch list of 'exit when true' */\n        this.f = NaN;     /* patch list of 'exit when false' */\n    }\n\n    to(e) { // Copy e content to this, cf. luaK_posfix\n        this.k = e.k;\n        this.u = e.u;\n        this.t = e.t;\n        this.f = e.f;\n    }\n}\n\nclass FuncState {\n    constructor() {\n        this.f = null;         /* current function header */\n        this.prev = null;      /* enclosing function */\n        this.ls = null;        /* lexical state */\n        this.bl = null;        /* chain of current blocks */\n        this.pc = NaN;         /* next position to code (equivalent to 'ncode') */\n        this.lasttarget = NaN; /* 'label' of last 'jump label' */\n        this.jpc = NaN;        /* list of pending jumps to 'pc' */\n        this.nk = NaN;         /* number of elements in 'k' */\n        this.np = NaN;         /* number of elements in 'p' */\n        this.firstlocal = NaN; /* index of first local var (in Dyndata array) */\n        this.nlocvars = NaN;   /* number of elements in 'f->locvars' */\n        this.nactvar = NaN;    /* number of active local variables */\n        this.nups = NaN;       /* number of upvalues */\n        this.freereg = NaN;    /* first free register */\n    }\n}\n\n/* description of active local variable */\nclass Vardesc {\n    constructor() {\n        this.idx = NaN;  /* variable index in stack */\n    }\n}\n\n\n/* description of pending goto statements and label statements */\nclass Labeldesc {\n    constructor() {\n        this.name = null;  /* label identifier */\n        this.pc = NaN;  /* position in code */\n        this.line = NaN;  /* line where it appeared */\n        this.nactvar = NaN;  /* local level where it appears in current block */\n    }\n}\n\n\n/* list of labels or gotos */\nclass Labellist {\n    constructor() {\n        this.arr = []; /* array */\n        this.n = NaN;  /* number of entries in use */\n        this.size = NaN;  /* array size */\n    }\n}\n\n/* dynamic structures used by the parser */\nclass Dyndata {\n    constructor() {\n        this.actvar = {  /* list of active local variables */\n            arr: [],\n            n: NaN,\n            size: NaN\n        };\n        this.gt = new Labellist();\n        this.label = new Labellist();\n    }\n}\n\nconst semerror = function(ls, msg) {\n    ls.t.token = 0;  /* remove \"near <token>\" from final message */\n    llex.luaX_syntaxerror(ls, msg);\n};\n\nconst error_expected = function(ls, token) {\n    llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L, to_luastring(\"%s expected\", true), llex.luaX_token2str(ls, token)));\n};\n\nconst errorlimit = function(fs, limit, what) {\n    let L = fs.ls.L;\n    let line = fs.f.linedefined;\n    let where = (line === 0)\n        ? to_luastring(\"main function\", true)\n        : lobject.luaO_pushfstring(L, to_luastring(\"function at line %d\", true), line);\n    let msg = lobject.luaO_pushfstring(L, to_luastring(\"too many %s (limit is %d) in %s\", true),\n        what, limit, where);\n    llex.luaX_syntaxerror(fs.ls, msg);\n};\n\nconst checklimit = function(fs, v, l, what) {\n    if (v > l) errorlimit(fs, l, what);\n};\n\nconst testnext = function(ls, c) {\n    if (ls.t.token === c) {\n        llex.luaX_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst check = function(ls, c) {\n    if (ls.t.token !== c)\n        error_expected(ls, c);\n};\n\nconst checknext = function(ls, c) {\n    check(ls, c);\n    llex.luaX_next(ls);\n};\n\nconst check_condition = function(ls, c, msg) {\n    if (!c)\n        llex.luaX_syntaxerror(ls, msg);\n};\n\nconst check_match = function(ls, what, who, where) {\n    if (!testnext(ls, what)) {\n        if (where === ls.linenumber)\n            error_expected(ls, what);\n        else\n            llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L,\n                to_luastring(\"%s expected (to close %s at line %d)\"),\n                llex.luaX_token2str(ls, what), llex.luaX_token2str(ls, who), where));\n    }\n};\n\nconst str_checkname = function(ls) {\n    check(ls, R.TK_NAME);\n    let ts = ls.t.seminfo.ts;\n    llex.luaX_next(ls);\n    return ts;\n};\n\nconst init_exp = function(e, k, i) {\n    e.f = e.t = NO_JUMP;\n    e.k = k;\n    e.u.info = i;\n};\n\nconst codestring = function(ls, e, s) {\n    init_exp(e, expkind.VK, luaK_stringK(ls.fs, s));\n};\n\nconst checkname = function(ls, e) {\n    codestring(ls, e, str_checkname(ls));\n};\n\nconst registerlocalvar = function(ls, varname) {\n    let fs = ls.fs;\n    let f = fs.f;\n    f.locvars[fs.nlocvars] = new lobject.LocVar();\n    f.locvars[fs.nlocvars].varname = varname;\n    return fs.nlocvars++;\n};\n\nconst new_localvar = function(ls, name) {\n    let fs = ls.fs;\n    let dyd = ls.dyd;\n    let reg = registerlocalvar(ls, name);\n    checklimit(fs, dyd.actvar.n + 1 - fs.firstlocal, MAXVARS, to_luastring(\"local variables\", true));\n    dyd.actvar.arr[dyd.actvar.n] = new Vardesc();\n    dyd.actvar.arr[dyd.actvar.n].idx = reg;\n    dyd.actvar.n++;\n};\n\nconst new_localvarliteral = function(ls, name) {\n    new_localvar(ls, llex.luaX_newstring(ls, to_luastring(name, true)));\n};\n\nconst getlocvar = function(fs, i) {\n    let idx = fs.ls.dyd.actvar.arr[fs.firstlocal + i].idx;\n    lua_assert(idx < fs.nlocvars);\n    return fs.f.locvars[idx];\n};\n\nconst adjustlocalvars = function(ls, nvars) {\n    let fs = ls.fs;\n    fs.nactvar = fs.nactvar + nvars;\n    for (; nvars; nvars--)\n        getlocvar(fs, fs.nactvar - nvars).startpc = fs.pc;\n};\n\nconst removevars = function(fs, tolevel) {\n    fs.ls.dyd.actvar.n -= fs.nactvar - tolevel;\n    while (fs.nactvar > tolevel)\n        getlocvar(fs, --fs.nactvar).endpc = fs.pc;\n};\n\nconst searchupvalue = function(fs, name) {\n    let up = fs.f.upvalues;\n    for (let i = 0; i < fs.nups; i++) {\n        if (eqstr(up[i].name, name))\n            return i;\n    }\n    return -1;  /* not found */\n};\n\nconst newupvalue = function(fs, name, v) {\n    let f = fs.f;\n    checklimit(fs, fs.nups + 1, lfunc.MAXUPVAL, to_luastring(\"upvalues\", true));\n    f.upvalues[fs.nups] = {\n        instack: v.k === expkind.VLOCAL,\n        idx: v.u.info,\n        name: name\n    };\n    return fs.nups++;\n};\n\nconst searchvar = function(fs, n) {\n    for (let i = fs.nactvar - 1; i >= 0; i--) {\n        if (eqstr(n, getlocvar(fs, i).varname))\n            return i;\n    }\n\n    return -1;\n};\n\n/*\n** Mark block where variable at given level was defined\n** (to emit close instructions later).\n*/\nconst markupval = function(fs, level) {\n    let bl = fs.bl;\n    while (bl.nactvar > level)\n        bl = bl.previous;\n    bl.upval = 1;\n};\n\n/*\n** Find variable with given name 'n'. If it is an upvalue, add this\n** upvalue into all intermediate functions.\n*/\nconst singlevaraux = function(fs, n, vr, base) {\n    if (fs === null)  /* no more levels? */\n        init_exp(vr, expkind.VVOID, 0);  /* default is global */\n    else {\n        let v = searchvar(fs, n);  /* look up locals at current level */\n        if (v >= 0) {  /* found? */\n            init_exp(vr, expkind.VLOCAL, v);  /* variable is local */\n            if (!base)\n                markupval(fs, v);  /* local will be used as an upval */\n        } else {  /* not found as local at current level; try upvalues */\n            let idx = searchupvalue(fs, n);  /* try existing upvalues */\n            if (idx < 0) {  /* not found? */\n                singlevaraux(fs.prev, n, vr, 0);  /* try upper levels */\n                if (vr.k === expkind.VVOID)  /* not found? */\n                    return;  /* it is a global */\n                /* else was LOCAL or UPVAL */\n                idx = newupvalue(fs, n, vr);  /* will be a new upvalue */\n            }\n            init_exp(vr, expkind.VUPVAL, idx);  /* new or old upvalue */\n        }\n    }\n};\n\nconst singlevar = function(ls, vr) {\n    let varname = str_checkname(ls);\n    let fs = ls.fs;\n    singlevaraux(fs, varname, vr, 1);\n    if (vr.k === expkind.VVOID) {  /* is global name? */\n        let key = new expdesc();\n        singlevaraux(fs, ls.envn, vr, 1);  /* get environment variable */\n        lua_assert(vr.k !== expkind.VVOID);  /* this one must exist */\n        codestring(ls, key, varname);  /* key is variable name */\n        luaK_indexed(fs, vr, key);  /* env[varname] */\n    }\n};\n\nconst adjust_assign = function(ls, nvars, nexps, e) {\n    let fs = ls.fs;\n    let extra = nvars - nexps;\n    if (hasmultret(e.k)) {\n        extra++;  /* includes call itself */\n        if (extra < 0) extra = 0;\n        luaK_setreturns(fs, e, extra);  /* last exp. provides the difference */\n        if (extra > 1) luaK_reserveregs(fs, extra - 1);\n    } else {\n        if (e.k !== expkind.VVOID) luaK_exp2nextreg(fs, e);  /* close last expression */\n        if (extra > 0) {\n            let reg = fs.freereg;\n            luaK_reserveregs(fs, extra);\n            luaK_nil(fs, reg, extra);\n        }\n    }\n    if (nexps > nvars)\n        ls.fs.freereg -= nexps - nvars;  /* remove extra values */\n};\n\nconst enterlevel = function(ls) {\n    let L = ls.L;\n    ++L.nCcalls;\n    checklimit(ls.fs, L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n};\n\nconst leavelevel = function(ls) {\n    return ls.L.nCcalls--;\n};\n\nconst closegoto = function(ls, g, label) {\n    let fs = ls.fs;\n    let gl = ls.dyd.gt;\n    let gt = gl.arr[g];\n    lua_assert(eqstr(gt.name, label.name));\n    if (gt.nactvar < label.nactvar) {\n        let vname = getlocvar(fs, gt.nactvar).varname;\n        let msg = lobject.luaO_pushfstring(ls.L,\n            to_luastring(\"<goto %s> at line %d jumps into the scope of local '%s'\"),\n            gt.name.getstr(), gt.line, vname.getstr());\n        semerror(ls, msg);\n    }\n    luaK_patchlist(fs, gt.pc, label.pc);\n    /* remove goto from pending list */\n    for (let i = g; i < gl.n - 1; i++)\n        gl.arr[i] = gl.arr[i + 1];\n    gl.n--;\n};\n\n/*\n** try to close a goto with existing labels; this solves backward jumps\n*/\nconst findlabel = function(ls, g) {\n    let bl = ls.fs.bl;\n    let dyd = ls.dyd;\n    let gt = dyd.gt.arr[g];\n    /* check labels in current block for a match */\n    for (let i = bl.firstlabel; i < dyd.label.n; i++) {\n        let lb = dyd.label.arr[i];\n        if (eqstr(lb.name, gt.name)) {  /* correct label? */\n            if (gt.nactvar > lb.nactvar && (bl.upval || dyd.label.n > bl.firstlabel))\n                luaK_patchclose(ls.fs, gt.pc, lb.nactvar);\n            closegoto(ls, g, lb);  /* close it */\n            return true;\n        }\n    }\n    return false;  /* label not found; cannot close goto */\n};\n\nconst newlabelentry = function(ls, l, name, line, pc) {\n    let n = l.n;\n    l.arr[n] = new Labeldesc();\n    l.arr[n].name = name;\n    l.arr[n].line = line;\n    l.arr[n].nactvar = ls.fs.nactvar;\n    l.arr[n].pc = pc;\n    l.n = n + 1;\n    return n;\n};\n\n/*\n** check whether new label 'lb' matches any pending gotos in current\n** block; solves forward jumps\n*/\nconst findgotos = function(ls, lb) {\n    let gl = ls.dyd.gt;\n    let i = ls.fs.bl.firstgoto;\n    while (i < gl.n) {\n        if (eqstr(gl.arr[i].name, lb.name))\n            closegoto(ls, i, lb);\n        else\n            i++;\n    }\n};\n\n/*\n** export pending gotos to outer level, to check them against\n** outer labels; if the block being exited has upvalues, and\n** the goto exits the scope of any variable (which can be the\n** upvalue), close those variables being exited.\n*/\nconst movegotosout = function(fs, bl) {\n    let i = bl.firstgoto;\n    let gl = fs.ls.dyd.gt;\n    /* correct pending gotos to current block and try to close it\n       with visible labels */\n    while (i < gl.n) {\n        let gt = gl.arr[i];\n        if (gt.nactvar > bl.nactvar) {\n            if (bl.upval)\n                luaK_patchclose(fs, gt.pc, bl.nactvar);\n            gt.nactvar = bl.nactvar;\n        }\n        if (!findlabel(fs.ls, i))\n            i++;  /* move to next one */\n    }\n};\n\nconst enterblock = function(fs, bl, isloop) {\n    bl.isloop = isloop;\n    bl.nactvar = fs.nactvar;\n    bl.firstlabel = fs.ls.dyd.label.n;\n    bl.firstgoto = fs.ls.dyd.gt.n;\n    bl.upval = 0;\n    bl.previous = fs.bl;\n    fs.bl = bl;\n    lua_assert(fs.freereg === fs.nactvar);\n};\n\n/*\n** create a label named 'break' to resolve break statements\n*/\nconst breaklabel = function(ls) {\n    let n = luaS_newliteral(ls.L, \"break\");\n    let l = newlabelentry(ls, ls.dyd.label, n, 0, ls.fs.pc);\n    findgotos(ls, ls.dyd.label.arr[l]);\n};\n\n/*\n** generates an error for an undefined 'goto'; choose appropriate\n** message when label name is a reserved word (which can only be 'break')\n*/\nconst undefgoto = function(ls, gt) {\n    let msg = llex.isreserved(gt.name)\n        ? \"<%s> at line %d not inside a loop\"\n        : \"no visible label '%s' for <goto> at line %d\";\n    msg = lobject.luaO_pushfstring(ls.L, to_luastring(msg), gt.name.getstr(), gt.line);\n    semerror(ls, msg);\n};\n\n/*\n** adds a new prototype into list of prototypes\n*/\nconst addprototype = function(ls) {\n    let L = ls.L;\n    let clp = new Proto(L);\n    let fs = ls.fs;\n    let f = fs.f;  /* prototype of current function */\n    f.p[fs.np++] = clp;\n    return clp;\n};\n\n/*\n** codes instruction to create new closure in parent function.\n*/\nconst codeclosure = function(ls, v) {\n    let fs = ls.fs.prev;\n    init_exp(v, expkind.VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs.np -1));\n    luaK_exp2nextreg(fs, v);  /* fix it at the last register */\n};\n\nconst open_func = function(ls, fs, bl) {\n    fs.prev = ls.fs;  /* linked list of funcstates */\n    fs.ls = ls;\n    ls.fs = fs;\n    fs.pc = 0;\n    fs.lasttarget = 0;\n    fs.jpc = NO_JUMP;\n    fs.freereg = 0;\n    fs.nk = 0;\n    fs.np = 0;\n    fs.nups = 0;\n    fs.nlocvars = 0;\n    fs.nactvar = 0;\n    fs.firstlocal = ls.dyd.actvar.n;\n    fs.bl = null;\n    let f = fs.f;\n    f.source = ls.source;\n    f.maxstacksize = 2;  /* registers 0/1 are always valid */\n    enterblock(fs, bl, false);\n};\n\nconst leaveblock = function(fs) {\n    let bl = fs.bl;\n    let ls = fs.ls;\n    if (bl.previous && bl.upval) {\n        /* create a 'jump to here' to close upvalues */\n        let j = luaK_jump(fs);\n        luaK_patchclose(fs, j , bl.nactvar);\n        luaK_patchtohere(fs, j);\n    }\n\n    if (bl.isloop)\n        breaklabel(ls);  /* close pending breaks */\n\n    fs.bl = bl.previous;\n    removevars(fs, bl.nactvar);\n    lua_assert(bl.nactvar === fs.nactvar);\n    fs.freereg = fs.nactvar;  /* free registers */\n    ls.dyd.label.n = bl.firstlabel;  /* remove local labels */\n    if (bl.previous)  /* inner block? */\n        movegotosout(fs, bl);  /* update pending gotos to outer block */\n    else if (bl.firstgoto < ls.dyd.gt.n)  /* pending gotos in outer block? */\n        undefgoto(ls, ls.dyd.gt.arr[bl.firstgoto]);  /* error */\n};\n\nconst close_func = function(ls) {\n    let fs = ls.fs;\n    luaK_ret(fs, 0, 0);  /* final return */\n    leaveblock(fs);\n    lua_assert(fs.bl === null);\n    ls.fs = fs.prev;\n};\n\n/*============================================================*/\n/* GRAMMAR RULES */\n/*============================================================*/\n\nconst block_follow = function(ls, withuntil) {\n    switch (ls.t.token) {\n        case R.TK_ELSE: case R.TK_ELSEIF:\n        case R.TK_END: case R.TK_EOS:\n            return true;\n        case R.TK_UNTIL: return withuntil;\n        default: return false;\n    }\n};\n\nconst statlist = function(ls) {\n    /* statlist -> { stat [';'] } */\n    while (!block_follow(ls, 1)) {\n        if (ls.t.token === R.TK_RETURN) {\n            statement(ls);\n            return;  /* 'return' must be last statement */\n        }\n        statement(ls);\n    }\n};\n\nconst fieldsel = function(ls, v) {\n    /* fieldsel -> ['.' | ':'] NAME */\n    let fs = ls.fs;\n    let key = new expdesc();\n    luaK_exp2anyregup(fs, v);\n    llex.luaX_next(ls);  /* skip the dot or colon */\n    checkname(ls, key);\n    luaK_indexed(fs, v, key);\n};\n\nconst yindex = function(ls, v) {\n    /* index -> '[' expr ']' */\n    llex.luaX_next(ls);  /* skip the '[' */\n    expr(ls, v);\n    luaK_exp2val(ls.fs, v);\n    checknext(ls, 93 /* (']').charCodeAt(0) */);\n};\n\n/*\n** {======================================================================\n** Rules for Constructors\n** =======================================================================\n*/\n\nclass ConsControl {\n    constructor() {\n        this.v = new expdesc(); /* last list item read */\n        this.t = new expdesc(); /* table descriptor */\n        this.nh = NaN;          /* total number of 'record' elements */\n        this.na = NaN;          /* total number of array elements */\n        this.tostore = NaN;     /* number of array elements pending to be stored */\n    }\n}\n\nconst recfield = function(ls, cc) {\n    /* recfield -> (NAME | '['exp1']') = exp1 */\n    let fs = ls.fs;\n    let reg = ls.fs.freereg;\n    let key = new expdesc();\n    let val = new expdesc();\n\n    if (ls.t.token === R.TK_NAME) {\n        checklimit(fs, cc.nh, MAX_INT, to_luastring(\"items in a constructor\", true));\n        checkname(ls, key);\n    } else  /* ls->t.token === '[' */\n        yindex(ls, key);\n    cc.nh++;\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    let rkkey = luaK_exp2RK(fs, key);\n    expr(ls, val);\n    luaK_codeABC(fs, OP_SETTABLE, cc.t.u.info, rkkey, luaK_exp2RK(fs, val));\n    fs.freereg = reg;  /* free registers */\n};\n\nconst closelistfield = function(fs, cc) {\n    if (cc.v.k === expkind.VVOID) return;  /* there is no list item */\n    luaK_exp2nextreg(fs, cc.v);\n    cc.v.k = expkind.VVOID;\n    if (cc.tostore === LFIELDS_PER_FLUSH) {\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);  /* flush */\n        cc.tostore = 0;  /* no more items pending */\n    }\n};\n\nconst lastlistfield = function(fs, cc) {\n    if (cc.tostore === 0) return;\n    if (hasmultret(cc.v.k)) {\n        luaK_setmultret(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, LUA_MULTRET);\n        cc.na--;  /* do not count last expression (unknown number of elements) */\n    } else {\n        if (cc.v.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);\n    }\n};\n\nconst listfield = function(ls, cc) {\n    /* listfield -> exp */\n    expr(ls, cc.v);\n    checklimit(ls.fs, cc.na, MAX_INT, to_luastring(\"items in a constructor\", true));\n    cc.na++;\n    cc.tostore++;\n};\n\nconst field = function(ls, cc) {\n    /* field -> listfield | recfield */\n    switch (ls.t.token) {\n        case R.TK_NAME: {  /* may be 'listfield' or 'recfield' */\n            if (llex.luaX_lookahead(ls) !== 61 /* ('=').charCodeAt(0) */)  /* expression? */\n                listfield(ls, cc);\n            else\n                recfield(ls, cc);\n            break;\n        }\n        case 91 /* ('[').charCodeAt(0) */: {\n            recfield(ls, cc);\n            break;\n        }\n        default: {\n            listfield(ls, cc);\n            break;\n        }\n    }\n};\n\nconst constructor = function(ls, t) {\n    /* constructor -> '{' [ field { sep field } [sep] ] '}'\n       sep -> ',' | ';' */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    let pc = luaK_codeABC(fs, OP_NEWTABLE, 0, 0, 0);\n    let cc = new ConsControl();\n    cc.na = cc.nh = cc.tostore = 0;\n    cc.t = t;\n    init_exp(t, expkind.VRELOCABLE, pc);\n    init_exp(cc.v, expkind.VVOID, 0);  /* no value (yet) */\n    luaK_exp2nextreg(ls.fs, t);  /* fix it at stack top */\n    checknext(ls, 123 /* ('{').charCodeAt(0) */);\n    do {\n        lua_assert(cc.v.k === expkind.VVOID || cc.tostore > 0);\n        if (ls.t.token === 125 /* ('}').charCodeAt(0) */) break;\n        closelistfield(fs, cc);\n        field(ls, cc);\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */) || testnext(ls, 59 /* (';').charCodeAt(0) */));\n    check_match(ls, 125 /* ('}').charCodeAt(0) */, 123 /* ('{').charCodeAt(0) */, line);\n    lastlistfield(fs, cc);\n    SETARG_B(fs.f.code[pc], lobject.luaO_int2fb(cc.na));  /* set initial array size */\n    SETARG_C(fs.f.code[pc], lobject.luaO_int2fb(cc.nh));  /* set initial table size */\n};\n\n/* }====================================================================== */\n\nconst parlist = function(ls) {\n    /* parlist -> [ param { ',' param } ] */\n    let fs = ls.fs;\n    let f = fs.f;\n    let nparams = 0;\n    f.is_vararg = false;\n    if (ls.t.token !== 41 /* (')').charCodeAt(0) */) {  /* is 'parlist' not empty? */\n        do {\n            switch (ls.t.token) {\n                case R.TK_NAME: {  /* param -> NAME */\n                    new_localvar(ls, str_checkname(ls));\n                    nparams++;\n                    break;\n                }\n                case R.TK_DOTS: {  /* param -> '...' */\n                    llex.luaX_next(ls);\n                    f.is_vararg = true;  /* declared vararg */\n                    break;\n                }\n                default: llex.luaX_syntaxerror(ls, to_luastring(\"<name> or '...' expected\", true));\n            }\n        } while(!f.is_vararg && testnext(ls, 44 /* (',').charCodeAt(0) */));\n    }\n    adjustlocalvars(ls, nparams);\n    f.numparams = fs.nactvar;\n    luaK_reserveregs(fs, fs.nactvar);  /* reserve register for parameters */\n};\n\nconst body = function(ls, e, ismethod, line) {\n    /* body ->  '(' parlist ')' block END */\n    let new_fs = new FuncState();\n    let bl = new BlockCnt();\n    new_fs.f = addprototype(ls);\n    new_fs.f.linedefined = line;\n    open_func(ls, new_fs, bl);\n    checknext(ls, 40 /* ('(').charCodeAt(0) */);\n    if (ismethod) {\n        new_localvarliteral(ls, \"self\");  /* create 'self' parameter */\n        adjustlocalvars(ls, 1);\n    }\n    parlist(ls);\n    checknext(ls, 41 /* (')').charCodeAt(0) */);\n    statlist(ls);\n    new_fs.f.lastlinedefined = ls.linenumber;\n    check_match(ls, R.TK_END, R.TK_FUNCTION, line);\n    codeclosure(ls, e);\n    close_func(ls);\n};\n\nconst explist = function(ls, v) {\n    /* explist -> expr { ',' expr } */\n    let n = 1;  /* at least one expression */\n    expr(ls, v);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        luaK_exp2nextreg(ls.fs, v);\n        expr(ls, v);\n        n++;\n    }\n    return n;\n};\n\nconst funcargs = function(ls, f, line) {\n    let fs = ls.fs;\n    let args = new expdesc();\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {  /* funcargs -> '(' [ explist ] ')' */\n            llex.luaX_next(ls);\n            if (ls.t.token === 41 /* (')').charCodeAt(0) */)  /* arg list is empty? */\n                args.k = expkind.VVOID;\n            else {\n                explist(ls, args);\n                luaK_setmultret(fs, args);\n            }\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* funcargs -> constructor */\n            constructor(ls, args);\n            break;\n        }\n        case R.TK_STRING: {  /* funcargs -> STRING */\n            codestring(ls, args, ls.t.seminfo.ts);\n            llex.luaX_next(ls);  /* must use 'seminfo' before 'next' */\n            break;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"function arguments expected\", true));\n        }\n    }\n    lua_assert(f.k === expkind.VNONRELOC);\n    let nparams;\n    let base = f.u.info;  /* base register for call */\n    if (hasmultret(args.k))\n        nparams = LUA_MULTRET;  /* open call */\n    else {\n        if (args.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, args);  /* close last argument */\n        nparams = fs.freereg - (base+1);\n    }\n    init_exp(f, expkind.VCALL, luaK_codeABC(fs, OP_CALL, base, nparams+1, 2));\n    luaK_fixline(fs, line);\n    fs.freereg = base + 1; /* call remove function and arguments and leaves (unless changed) one result */\n};\n\n/*\n** {======================================================================\n** Expression parsing\n** =======================================================================\n*/\n\nconst primaryexp = function(ls, v) {\n    /* primaryexp -> NAME | '(' expr ')' */\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {\n            let line = ls.linenumber;\n            llex.luaX_next(ls);\n            expr(ls, v);\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            luaK_dischargevars(ls.fs, v);\n            return;\n        }\n        case R.TK_NAME: {\n            singlevar(ls, v);\n            return;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"unexpected symbol\", true));\n        }\n    }\n};\n\nconst suffixedexp = function(ls, v) {\n    /* suffixedexp ->\n       primaryexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs } */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    primaryexp(ls, v);\n    for (;;) {\n        switch (ls.t.token) {\n            case 46 /* ('.').charCodeAt(0) */: {  /* fieldsel */\n                fieldsel(ls, v);\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* '[' exp1 ']' */\n                let key = new expdesc();\n                luaK_exp2anyregup(fs, v);\n                yindex(ls, key);\n                luaK_indexed(fs, v, key);\n                break;\n            }\n            case 58 /* (':').charCodeAt(0) */: {  /* ':' NAME funcargs */\n                let key = new expdesc();\n                llex.luaX_next(ls);\n                checkname(ls, key);\n                luaK_self(fs, v, key);\n                funcargs(ls, v, line);\n                break;\n            }\n            case 40 /* ('(').charCodeAt(0) */: case R.TK_STRING: case 123 /* ('{').charCodeAt(0) */: {  /* funcargs */\n                luaK_exp2nextreg(fs, v);\n                funcargs(ls, v, line);\n                break;\n            }\n            default: return;\n        }\n    }\n};\n\nconst simpleexp = function(ls, v) {\n    /* simpleexp -> FLT | INT | STRING | NIL | TRUE | FALSE | ... |\n       constructor | FUNCTION body | suffixedexp */\n    switch (ls.t.token) {\n        case R.TK_FLT: {\n            init_exp(v, expkind.VKFLT, 0);\n            v.u.nval = ls.t.seminfo.r;\n            break;\n        }\n        case R.TK_INT: {\n            init_exp(v, expkind.VKINT, 0);\n            v.u.ival = ls.t.seminfo.i;\n            break;\n        }\n        case R.TK_STRING: {\n            codestring(ls, v, ls.t.seminfo.ts);\n            break;\n        }\n        case R.TK_NIL: {\n            init_exp(v, expkind.VNIL, 0);\n            break;\n        }\n        case R.TK_TRUE: {\n            init_exp(v, expkind.VTRUE, 0);\n            break;\n        }\n        case R.TK_FALSE: {\n            init_exp(v, expkind.VFALSE, 0);\n            break;\n        }\n        case R.TK_DOTS: {  /* vararg */\n            let fs = ls.fs;\n            check_condition(ls, fs.f.is_vararg, to_luastring(\"cannot use '...' outside a vararg function\", true));\n            init_exp(v, expkind.VVARARG, luaK_codeABC(fs, OP_VARARG, 0, 1, 0));\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* constructor */\n            constructor(ls, v);\n            return;\n        }\n        case R.TK_FUNCTION: {\n            llex.luaX_next(ls);\n            body(ls, v, 0, ls.linenumber);\n            return;\n        }\n        default: {\n            suffixedexp(ls, v);\n            return;\n        }\n    }\n    llex.luaX_next(ls);\n};\n\nconst getunopr = function(op) {\n    switch (op) {\n        case R.TK_NOT: return OPR_NOT;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_MINUS;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BNOT;\n        case 35 /* ('#').charCodeAt(0) */: return OPR_LEN;\n        default: return OPR_NOUNOPR;\n    }\n};\n\nconst getbinopr = function(op) {\n    switch (op) {\n        case 43 /* ('+').charCodeAt(0) */: return OPR_ADD;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_SUB;\n        case 42 /* ('*').charCodeAt(0) */: return OPR_MUL;\n        case 37 /* ('%').charCodeAt(0) */: return OPR_MOD;\n        case 94 /* ('^').charCodeAt(0) */: return OPR_POW;\n        case 47 /* ('/').charCodeAt(0) */: return OPR_DIV;\n        case R.TK_IDIV:   return OPR_IDIV;\n        case 38 /* ('&').charCodeAt(0) */: return OPR_BAND;\n        case 124 /* ('|').charCodeAt(0) */: return OPR_BOR;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BXOR;\n        case R.TK_SHL:    return OPR_SHL;\n        case R.TK_SHR:    return OPR_SHR;\n        case R.TK_CONCAT: return OPR_CONCAT;\n        case R.TK_NE:     return OPR_NE;\n        case R.TK_EQ:     return OPR_EQ;\n        case 60 /* ('<').charCodeAt(0) */: return OPR_LT;\n        case R.TK_LE:     return OPR_LE;\n        case 62 /* ('>').charCodeAt(0) */: return OPR_GT;\n        case R.TK_GE:     return OPR_GE;\n        case R.TK_AND:    return OPR_AND;\n        case R.TK_OR:     return OPR_OR;\n        default:          return OPR_NOBINOPR;\n    }\n};\n\nconst priority = [  /* ORDER OPR */\n    {left: 10, right: 10}, {left: 10, right: 10},     /* '+' '-' */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '*' '%' */\n    {left: 14, right: 13},               /* '^' (right associative) */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '/' '//' */\n    {left: 6, right: 6}, {left: 4, right: 4}, {left: 5, right: 5}, /* '&' '|' '~' */\n    {left: 7, right: 7}, {left: 7, right: 7},         /* '<<' '>>' */\n    {left: 9, right: 8},                 /* '..' (right associative) */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ==, <, <= */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ~=, >, >= */\n    {left: 2, right: 2}, {left: 1, right: 1}          /* and, or */\n];\n\nconst UNARY_PRIORITY = 12;\n\n/*\n** subexpr -> (simpleexp | unop subexpr) { binop subexpr }\n** where 'binop' is any binary operator with a priority higher than 'limit'\n*/\nconst subexpr = function(ls, v, limit) {\n    enterlevel(ls);\n    let uop = getunopr(ls.t.token);\n    if (uop !== OPR_NOUNOPR) {\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        subexpr(ls, v, UNARY_PRIORITY);\n        luaK_prefix(ls.fs, uop, v, line);\n    } else\n        simpleexp(ls, v);\n    /* expand while operators have priorities higher than 'limit' */\n    let op = getbinopr(ls.t.token);\n    while (op !== OPR_NOBINOPR && priority[op].left > limit) {\n        let v2 = new expdesc();\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        luaK_infix(ls.fs, op, v);\n        /* read sub-expression with higher priority */\n        let nextop = subexpr(ls, v2, priority[op].right);\n        luaK_posfix(ls.fs, op, v, v2, line);\n        op = nextop;\n    }\n    leavelevel(ls);\n    return op;  /* return first untreated operator */\n};\n\nconst expr = function(ls, v) {\n    subexpr(ls, v, 0);\n};\n\n/* }==================================================================== */\n\n\n\n/*\n** {======================================================================\n** Rules for Statements\n** =======================================================================\n*/\n\nconst block = function(ls) {\n    /* block -> statlist */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 0);\n    statlist(ls);\n    leaveblock(fs);\n};\n\n/*\n** structure to chain all variables in the left-hand side of an\n** assignment\n*/\nclass LHS_assign {\n    constructor() {\n        this.prev = null;\n        this.v = new expdesc();  /* variable (global, local, upvalue, or indexed) */\n    }\n}\n\n/*\n** check whether, in an assignment to an upvalue/local variable, the\n** upvalue/local variable is begin used in a previous assignment to a\n** table. If so, save original upvalue/local value in a safe place and\n** use this safe copy in the previous assignment.\n*/\nconst check_conflict = function(ls, lh, v) {\n    let fs = ls.fs;\n    let extra = fs.freereg;  /* eventual position to save local variable */\n    let conflict = false;\n    for (; lh; lh = lh.prev) {  /* check all previous assignments */\n        if (lh.v.k === expkind.VINDEXED) {  /* assigning to a table? */\n            /* table is the upvalue/local being assigned now? */\n            if (lh.v.u.ind.vt === v.k && lh.v.u.ind.t === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.vt = expkind.VLOCAL;\n                lh.v.u.ind.t = extra;  /* previous assignment will use safe copy */\n            }\n            /* index is the local being assigned? (index cannot be upvalue) */\n            if (v.k === expkind.VLOCAL && lh.v.u.ind.idx === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.idx = extra;  /* previous assignment will use safe copy */\n            }\n        }\n    }\n    if (conflict) {\n        /* copy upvalue/local value to a temporary (in position 'extra') */\n        let op = v.k === expkind.VLOCAL ? OP_MOVE : OP_GETUPVAL;\n        luaK_codeABC(fs, op, extra, v.u.info, 0);\n        luaK_reserveregs(fs, 1);\n    }\n};\n\nconst assignment = function(ls, lh, nvars) {\n    let e = new expdesc();\n    check_condition(ls, vkisvar(lh.v.k), to_luastring(\"syntax error\", true));\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */)) {  /* assignment -> ',' suffixedexp assignment */\n        let nv = new LHS_assign();\n        nv.prev = lh;\n        suffixedexp(ls, nv.v);\n        if (nv.v.k !== expkind.VINDEXED)\n            check_conflict(ls, lh, nv.v);\n        checklimit(ls.fs, nvars + ls.L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n        assignment(ls, nv, nvars + 1);\n    } else {  /* assignment -> '=' explist */\n        checknext(ls, 61 /* ('=').charCodeAt(0) */);\n        let nexps = explist(ls, e);\n        if (nexps !== nvars)\n            adjust_assign(ls, nvars, nexps, e);\n        else {\n            luaK_setoneret(ls.fs, e);  /* close last expression */\n            luaK_storevar(ls.fs, lh.v, e);\n            return;  /* avoid default */\n        }\n    }\n    init_exp(e, expkind.VNONRELOC, ls.fs.freereg-1);  /* default assignment */\n    luaK_storevar(ls.fs, lh.v, e);\n};\n\nconst cond = function(ls) {\n    /* cond -> exp */\n    let v = new expdesc();\n    expr(ls, v);  /* read condition */\n    if (v.k === expkind.VNIL) v.k = expkind.VFALSE;  /* 'falses' are all equal here */\n    luaK_goiftrue(ls.fs, v);\n    return v.f;\n};\n\nconst gotostat = function(ls, pc) {\n    let line = ls.linenumber;\n    let label;\n    if (testnext(ls, R.TK_GOTO))\n        label = str_checkname(ls);\n    else {\n        llex.luaX_next(ls);  /* skip break */\n        label = luaS_newliteral(ls.L, \"break\");\n    }\n    let g = newlabelentry(ls, ls.dyd.gt, label, line, pc);\n    findlabel(ls, g);  /* close it if label already defined */\n};\n\n/* check for repeated labels on the same block */\nconst checkrepeated = function(fs, ll, label) {\n    for (let i = fs.bl.firstlabel; i < ll.n; i++) {\n        if (eqstr(label, ll.arr[i].name)) {\n            let msg = lobject.luaO_pushfstring(fs.ls.L,\n                to_luastring(\"label '%s' already defined on line %d\", true),\n                label.getstr(), ll.arr[i].line);\n            semerror(fs.ls, msg);\n        }\n    }\n};\n\n/* skip no-op statements */\nconst skipnoopstat = function(ls) {\n    while (ls.t.token === 59 /* (';').charCodeAt(0) */ || ls.t.token === R.TK_DBCOLON)\n        statement(ls);\n};\n\nconst labelstat = function(ls, label, line) {\n    /* label -> '::' NAME '::' */\n    let fs = ls.fs;\n    let ll = ls.dyd.label;\n    let l;  /* index of new label being created */\n    checkrepeated(fs, ll, label);  /* check for repeated labels */\n    checknext(ls, R.TK_DBCOLON);  /* skip double colon */\n    /* create new entry for this label */\n    l = newlabelentry(ls, ll, label, line, luaK_getlabel(fs));\n    skipnoopstat(ls);  /* skip other no-op statements */\n    if (block_follow(ls, 0)) {  /* label is last no-op statement in the block? */\n        /* assume that locals are already out of scope */\n        ll.arr[l].nactvar = fs.bl.nactvar;\n    }\n    findgotos(ls, ll.arr[l]);\n};\n\nconst whilestat = function(ls, line) {\n    /* whilestat -> WHILE cond DO block END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    llex.luaX_next(ls);  /* skip WHILE */\n    let whileinit = luaK_getlabel(fs);\n    let condexit = cond(ls);\n    enterblock(fs, bl, 1);\n    checknext(ls, R.TK_DO);\n    block(ls);\n    luaK_jumpto(fs, whileinit);\n    check_match(ls, R.TK_END, R.TK_WHILE, line);\n    leaveblock(fs);\n    luaK_patchtohere(fs, condexit);  /* false conditions finish the loop */\n};\n\nconst repeatstat = function(ls, line) {\n    /* repeatstat -> REPEAT block UNTIL cond */\n    let fs = ls.fs;\n    let repeat_init = luaK_getlabel(fs);\n    let bl1 = new BlockCnt();\n    let bl2 = new BlockCnt();\n    enterblock(fs, bl1, 1);  /* loop block */\n    enterblock(fs, bl2, 0);  /* scope block */\n    llex.luaX_next(ls);  /* skip REPEAT */\n    statlist(ls);\n    check_match(ls, R.TK_UNTIL, R.TK_REPEAT, line);\n    let condexit = cond(ls);  /* read condition (inside scope block) */\n    if (bl2.upval)  /* upvalues? */\n        luaK_patchclose(fs, condexit, bl2.nactvar);\n    leaveblock(fs);  /* finish scope */\n    luaK_patchlist(fs, condexit, repeat_init);  /* close the loop */\n    leaveblock(fs);  /* finish loop */\n};\n\nconst exp1 = function(ls) {\n    let e = new expdesc();\n    expr(ls, e);\n    luaK_exp2nextreg(ls.fs, e);\n    lua_assert(e.k === expkind.VNONRELOC);\n    let reg = e.u.info;\n    return reg;\n};\n\nconst forbody = function(ls, base, line, nvars, isnum) {\n    /* forbody -> DO block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let endfor;\n    adjustlocalvars(ls, 3);  /* control variables */\n    checknext(ls, R.TK_DO);\n    let prep = isnum ? luaK_codeAsBx(fs, OP_FORPREP, base, NO_JUMP) : luaK_jump(fs);\n    enterblock(fs, bl, 0);  /* scope for declared variables */\n    adjustlocalvars(ls, nvars);\n    luaK_reserveregs(fs, nvars);\n    block(ls);\n    leaveblock(fs);  /* end of scope for declared variables */\n    luaK_patchtohere(fs, prep);\n    if (isnum)  /* end of scope for declared variables */\n        endfor = luaK_codeAsBx(fs, OP_FORLOOP, base, NO_JUMP);\n    else {  /* generic for */\n        luaK_codeABC(fs, OP_TFORCALL, base, 0, nvars);\n        luaK_fixline(fs, line);\n        endfor = luaK_codeAsBx(fs, OP_TFORLOOP, base + 2, NO_JUMP);\n    }\n    luaK_patchlist(fs, endfor, prep + 1);\n    luaK_fixline(fs, line);\n};\n\nconst fornum = function(ls, varname, line) {\n    /* fornum -> NAME = exp1,exp1[,exp1] forbody */\n    let fs = ls.fs;\n    let base = fs.freereg;\n    new_localvarliteral(ls, \"(for index)\");\n    new_localvarliteral(ls, \"(for limit)\");\n    new_localvarliteral(ls, \"(for step)\");\n    new_localvar(ls, varname);\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    exp1(ls);  /* initial value */\n    checknext(ls, 44 /* (',').charCodeAt(0) */);\n    exp1(ls);  /* limit */\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */))\n        exp1(ls);  /* optional step */\n    else {  /* default step = 1 */\n        luaK_codek(fs, fs.freereg, luaK_intK(fs, 1));\n        luaK_reserveregs(fs, 1);\n    }\n    forbody(ls, base, line, 1, 1);\n};\n\nconst forlist = function(ls, indexname) {\n    /* forlist -> NAME {,NAME} IN explist forbody */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let nvars = 4;  /* gen, state, control, plus at least one declared var */\n    let base = fs.freereg;\n    /* create control variables */\n    new_localvarliteral(ls, \"(for generator)\");\n    new_localvarliteral(ls, \"(for state)\");\n    new_localvarliteral(ls, \"(for control)\");\n    /* create declared variables */\n    new_localvar(ls, indexname);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    }\n    checknext(ls, R.TK_IN);\n    let line = ls.linenumber;\n    adjust_assign(ls, 3, explist(ls, e), e);\n    luaK_checkstack(fs, 3);  /* extra space to call generator */\n    forbody(ls, base, line, nvars - 3, 0);\n};\n\nconst forstat = function(ls, line) {\n    /* forstat -> FOR (fornum | forlist) END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 1);  /* scope for loop and control variables */\n    llex.luaX_next(ls);  /* skip 'for' */\n    let varname = str_checkname(ls);  /* first variable name */\n    switch (ls.t.token) {\n        case 61 /* ('=').charCodeAt(0) */: fornum(ls, varname, line); break;\n        case 44 /* (',').charCodeAt(0) */: case R.TK_IN: forlist(ls, varname); break;\n        default: llex.luaX_syntaxerror(ls, to_luastring(\"'=' or 'in' expected\", true));\n    }\n    check_match(ls, R.TK_END, R.TK_FOR, line);\n    leaveblock(fs);  /* loop scope ('break' jumps to this point) */\n};\n\nconst test_then_block = function(ls, escapelist) {\n    /* test_then_block -> [IF | ELSEIF] cond THEN block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let v = new expdesc();\n    let jf;  /* instruction to skip 'then' code (if condition is false) */\n\n    llex.luaX_next(ls);  /* skip IF or ELSEIF */\n    expr(ls, v);  /* read condition */\n    checknext(ls, R.TK_THEN);\n\n    if (ls.t.token === R.TK_GOTO || ls.t.token === R.TK_BREAK) {\n        luaK_goiffalse(ls.fs, v);  /* will jump to label if condition is true */\n        enterblock(fs, bl, false);  /* must enter block before 'goto' */\n        gotostat(ls, v.t);   /* handle goto/break */\n        while (testnext(ls, 59 /* (';').charCodeAt(0) */));  /* skip colons */\n        if (block_follow(ls, 0)) {  /* 'goto' is the entire block? */\n            leaveblock(fs);\n            return escapelist;  /* and that is it */\n        } else  /* must skip over 'then' part if condition is false */\n            jf = luaK_jump(fs);\n    } else {  /* regular case (not goto/break) */\n        luaK_goiftrue(ls.fs, v);  /* skip over block if condition is false */\n        enterblock(fs, bl, false);\n        jf = v.f;\n    }\n\n    statlist(ls);  /* 'then' part */\n    leaveblock(fs);\n    if (ls.t.token === R.TK_ELSE || ls.t.token === R.TK_ELSEIF)  /* followed by 'else'/'elseif'? */\n        escapelist = luaK_concat(fs, escapelist, luaK_jump(fs));  /* must jump over it */\n    luaK_patchtohere(fs, jf);\n\n    return escapelist;\n};\n\nconst ifstat = function(ls, line) {\n    /* ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END */\n    let fs = ls.fs;\n    let escapelist = NO_JUMP;  /* exit list for finished parts */\n    escapelist = test_then_block(ls, escapelist);  /* IF cond THEN block */\n    while (ls.t.token === R.TK_ELSEIF)\n        escapelist = test_then_block(ls, escapelist);  /* ELSEIF cond THEN block */\n    if (testnext(ls, R.TK_ELSE))\n        block(ls);  /* 'else' part */\n    check_match(ls, R.TK_END, R.TK_IF, line);\n    luaK_patchtohere(fs, escapelist);  /* patch escape list to 'if' end */\n};\n\nconst localfunc = function(ls) {\n    let b = new expdesc();\n    let fs = ls.fs;\n    new_localvar(ls, str_checkname(ls));  /* new local variable */\n    adjustlocalvars(ls, 1);  /* enter its scope */\n    body(ls, b, 0, ls.linenumber);  /* function created in next register */\n    /* debug information will only see the variable after this point! */\n    getlocvar(fs, b.u.info).startpc = fs.pc;\n};\n\nconst localstat = function(ls) {\n    /* stat -> LOCAL NAME {',' NAME} ['=' explist] */\n    let nvars = 0;\n    let nexps;\n    let e = new expdesc();\n    do {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */));\n    if (testnext(ls, 61 /* ('=').charCodeAt(0) */))\n        nexps = explist(ls, e);\n    else {\n        e.k = expkind.VVOID;\n        nexps = 0;\n    }\n    adjust_assign(ls, nvars, nexps, e);\n    adjustlocalvars(ls, nvars);\n};\n\nconst funcname = function(ls, v) {\n    /* funcname -> NAME {fieldsel} [':' NAME] */\n    let ismethod = 0;\n    singlevar(ls, v);\n    while (ls.t.token === 46 /* ('.').charCodeAt(0) */)\n        fieldsel(ls, v);\n    if (ls.t.token === 58 /* (':').charCodeAt(0) */) {\n        ismethod = 1;\n        fieldsel(ls, v);\n    }\n    return ismethod;\n};\n\nconst funcstat = function(ls, line) {\n    /* funcstat -> FUNCTION funcname body */\n    let v = new expdesc();\n    let b = new expdesc();\n    llex.luaX_next(ls);  /* skip FUNCTION */\n    let ismethod = funcname(ls, v);\n    body(ls, b, ismethod, line);\n    luaK_storevar(ls.fs, v, b);\n    luaK_fixline(ls.fs, line);  /* definition \"happens\" in the first line */\n};\n\nconst exprstat= function(ls) {\n    /* stat -> func | assignment */\n    let fs = ls.fs;\n    let v = new LHS_assign();\n    suffixedexp(ls, v.v);\n    if (ls.t.token === 61 /* ('=').charCodeAt(0) */ || ls.t.token === 44 /* (',').charCodeAt(0) */) { /* stat . assignment ? */\n        v.prev = null;\n        assignment(ls, v, 1);\n    }\n    else {  /* stat -> func */\n        check_condition(ls, v.v.k === expkind.VCALL, to_luastring(\"syntax error\", true));\n        SETARG_C(getinstruction(fs, v.v), 1);  /* call statement uses no results */\n    }\n};\n\nconst retstat = function(ls) {\n    /* stat -> RETURN [explist] [';'] */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let first, nret;  /* registers with returned values */\n    if (block_follow(ls, 1) || ls.t.token === 59 /* (';').charCodeAt(0) */)\n        first = nret = 0;  /* return no values */\n    else {\n        nret = explist(ls, e);  /* optional return values */\n        if (hasmultret(e.k)) {\n            luaK_setmultret(fs, e);\n            if (e.k === expkind.VCALL && nret === 1) {  /* tail call? */\n                SET_OPCODE(getinstruction(fs, e), OP_TAILCALL);\n                lua_assert(getinstruction(fs, e).A === fs.nactvar);\n            }\n            first = fs.nactvar;\n            nret = LUA_MULTRET;  /* return all values */\n        } else {\n            if (nret === 1)  /* only one single value? */\n                first = luaK_exp2anyreg(fs, e);\n            else {\n                luaK_exp2nextreg(fs, e);  /* values must go to the stack */\n                first = fs.nactvar;  /* return all active values */\n                lua_assert(nret === fs.freereg - first);\n            }\n        }\n    }\n    luaK_ret(fs, first, nret);\n    testnext(ls, 59 /* (';').charCodeAt(0) */);  /* skip optional semicolon */\n};\n\nconst statement = function(ls) {\n    let line = ls.linenumber;  /* may be needed for error messages */\n    enterlevel(ls);\n    switch(ls.t.token) {\n        case 59 /* (';').charCodeAt(0) */: {  /* stat -> ';' (empty statement) */\n            llex.luaX_next(ls);  /* skip ';' */\n            break;\n        }\n        case R.TK_IF: {  /* stat -> ifstat */\n            ifstat(ls, line);\n            break;\n        }\n        case R.TK_WHILE: {  /* stat -> whilestat */\n            whilestat(ls, line);\n            break;\n        }\n        case R.TK_DO: {  /* stat -> DO block END */\n            llex.luaX_next(ls);  /* skip DO */\n            block(ls);\n            check_match(ls, R.TK_END, R.TK_DO, line);\n            break;\n        }\n        case R.TK_FOR: {  /* stat -> forstat */\n            forstat(ls, line);\n            break;\n        }\n        case R.TK_REPEAT: {  /* stat -> repeatstat */\n            repeatstat(ls, line);\n            break;\n        }\n        case R.TK_FUNCTION: {  /* stat -> funcstat */\n            funcstat(ls, line);\n            break;\n        }\n        case R.TK_LOCAL: {  /* stat -> localstat */\n            llex.luaX_next(ls);  /* skip LOCAL */\n            if (testnext(ls, R.TK_FUNCTION))  /* local function? */\n                localfunc(ls);\n            else\n                localstat(ls);\n            break;\n        }\n        case R.TK_DBCOLON: {  /* stat -> label */\n            llex.luaX_next(ls);  /* skip double colon */\n            labelstat(ls, str_checkname(ls), line);\n            break;\n        }\n        case R.TK_RETURN: {  /* skip double colon */\n            llex.luaX_next(ls);  /* skip RETURN */\n            retstat(ls);\n            break;\n        }\n        case R.TK_BREAK:   /* stat -> breakstat */\n        case R.TK_GOTO: {  /* stat -> 'goto' NAME */\n            gotostat(ls, luaK_jump(ls.fs));\n            break;\n        }\n        default: {  /* stat -> func | assignment */\n            exprstat(ls);\n            break;\n        }\n    }\n    lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg && ls.fs.freereg >= ls.fs.nactvar);\n    ls.fs.freereg = ls.fs.nactvar;  /* free registers */\n    leavelevel(ls);\n};\n\n/*\n** compiles the main function, which is a regular vararg function with an\n** upvalue named LUA_ENV\n*/\nconst mainfunc = function(ls, fs) {\n    let bl = new BlockCnt();\n    let v = new expdesc();\n    open_func(ls, fs, bl);\n    fs.f.is_vararg = true;  /* main function is always declared vararg */\n    init_exp(v, expkind.VLOCAL, 0);  /* create and... */\n    newupvalue(fs, ls.envn, v);  /* ...set environment upvalue */\n    llex.luaX_next(ls);  /* read first token */\n    statlist(ls);  /* parse main body */\n    check(ls, R.TK_EOS);\n    close_func(ls);\n};\n\nconst luaY_parser = function(L, z, buff, dyd, name, firstchar) {\n    let lexstate = new llex.LexState();\n    let funcstate = new FuncState();\n    let cl = lfunc.luaF_newLclosure(L, 1);  /* create main closure */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    lexstate.h = ltable.luaH_new(L);  /* create table for scanner */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].sethvalue(lexstate.h);\n    funcstate.f = cl.p = new Proto(L);\n    funcstate.f.source = luaS_new(L, name);\n    lexstate.buff = buff;\n    lexstate.dyd = dyd;\n    dyd.actvar.n = dyd.gt.n = dyd.label.n = 0;\n    llex.luaX_setinput(L, lexstate, z, funcstate.f.source, firstchar);\n    mainfunc(lexstate, funcstate);\n    lua_assert(!funcstate.prev && funcstate.nups === 1 && !lexstate.fs);\n    /* all scopes should be correctly finished */\n    lua_assert(dyd.actvar.n === 0 && dyd.gt.n === 0 && dyd.label.n === 0);\n    delete L.stack[--L.top];  /* remove scanner's table */\n    return cl;  /* closure is on the stack, too */\n};\n\n\nmodule.exports.Dyndata     = Dyndata;\nmodule.exports.expkind     = expkind;\nmodule.exports.expdesc     = expdesc;\nmodule.exports.luaY_parser = luaY_parser;\nmodule.exports.vkisinreg   = vkisinreg;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION,\n    LUA_YIELD,\n    lua_call,\n    lua_callk,\n    lua_concat,\n    lua_error,\n    lua_getglobal,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnone,\n    lua_isstring,\n    lua_load,\n    lua_next,\n    lua_pcallk,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcfunction,\n    lua_pushglobaltable,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawlen,\n    lua_rawset,\n    lua_remove,\n    lua_replace,\n    lua_rotate,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_stringtonumber,\n    lua_toboolean,\n    lua_tolstring,\n    lua_tostring,\n    lua_type,\n    lua_typename\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkoption,\n    luaL_checkstack,\n    luaL_checktype,\n    luaL_error,\n    luaL_getmetafield,\n    luaL_loadbufferx,\n    luaL_loadfile,\n    luaL_loadfilex,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_setfuncs,\n    luaL_tolstring,\n    luaL_where\n} = require('./lauxlib.js');\nconst {\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nlet lua_writestring;\nlet lua_writeline;\nif (typeof process === \"undefined\") {\n    if (typeof TextDecoder === \"function\") { /* Older browsers don't have TextDecoder */\n        let buff = \"\";\n        let decoder = new TextDecoder(\"utf-8\");\n        lua_writestring = function(s) {\n            buff += decoder.decode(s, {stream: true});\n        };\n        let empty = new Uint8Array(0);\n        lua_writeline = function() {\n            buff += decoder.decode(empty);\n            console.log(buff);\n            buff = \"\";\n        };\n    } else {\n        let buff = [];\n        lua_writestring = function(s) {\n            try {\n                /* If the string is valid utf8, then we can use to_jsstring */\n                s = to_jsstring(s);\n            } catch(e) {\n                /* otherwise push copy of raw array */\n                let copy = new Uint8Array(s.length);\n                copy.set(s);\n                s = copy;\n            }\n            buff.push(s);\n        };\n        lua_writeline = function() {\n            console.log.apply(console.log, buff);\n            buff = [];\n        };\n    }\n} else {\n    lua_writestring = function(s) {\n        process.stdout.write(Buffer.from(s));\n    };\n    lua_writeline = function() {\n        process.stdout.write(\"\\n\");\n    };\n}\nconst luaB_print = function(L) {\n    let n = lua_gettop(L); /* number of arguments */\n    lua_getglobal(L, to_luastring(\"tostring\", true));\n    for (let i = 1; i <= n; i++) {\n        lua_pushvalue(L, -1);  /* function to be called */\n        lua_pushvalue(L, i);  /* value to print */\n        lua_call(L, 1, 1);\n        let s = lua_tolstring(L, -1);\n        if (s === null)\n            return luaL_error(L, to_luastring(\"'tostring' must return a string to 'print'\"));\n        if (i > 1) lua_writestring(to_luastring(\"\\t\"));\n        lua_writestring(s);\n        lua_pop(L, 1);\n    }\n    lua_writeline();\n    return 0;\n};\n\nconst luaB_tostring = function(L) {\n    luaL_checkany(L, 1);\n    luaL_tolstring(L, 1);\n\n    return 1;\n};\n\nconst luaB_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);\n        return 1;  /* no metatable */\n    }\n    luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true));\n    return 1;  /* returns either __metatable field (if present) or metatable */\n};\n\nconst luaB_setmetatable = function(L) {\n    let t = lua_type(L, 2);\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_argcheck(L, t === LUA_TNIL || t === LUA_TTABLE, 2, \"nil or table expected\");\n    if (luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true)) !== LUA_TNIL)\n        return luaL_error(L, to_luastring(\"cannot change a protected metatable\"));\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;\n};\n\nconst luaB_rawequal = function(L) {\n    luaL_checkany(L, 1);\n    luaL_checkany(L, 2);\n    lua_pushboolean(L, lua_rawequal(L, 1, 2));\n    return 1;\n};\n\nconst luaB_rawlen = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t === LUA_TTABLE || t === LUA_TSTRING, 1, \"table or string expected\");\n    lua_pushinteger(L, lua_rawlen(L, 1));\n    return 1;\n};\n\nconst luaB_rawget = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_rawget(L, 1);\n    return 1;\n};\n\nconst luaB_rawset = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    luaL_checkany(L, 3);\n    lua_settop(L, 3);\n    lua_rawset(L, 1);\n    return 1;\n};\n\nconst opts = [\n    \"stop\", \"restart\", \"collect\",\n    \"count\", \"step\", \"setpause\", \"setstepmul\",\n    \"isrunning\"\n].map((e) => to_luastring(e));\nconst luaB_collectgarbage = function(L) {\n    luaL_checkoption(L, 1, \"collect\", opts);\n    luaL_optinteger(L, 2, 0);\n    luaL_error(L, to_luastring(\"lua_gc not implemented\"));\n};\n\nconst luaB_type = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t !== LUA_TNONE, 1, \"value expected\");\n    lua_pushstring(L, lua_typename(L, t));\n    return 1;\n};\n\nconst pairsmeta = function(L, method, iszero, iter) {\n    luaL_checkany(L, 1);\n    if (luaL_getmetafield(L, 1, method) === LUA_TNIL) {  /* no metamethod? */\n        lua_pushcfunction(L, iter);  /* will return generator, */\n        lua_pushvalue(L, 1);  /* state, */\n        if (iszero) lua_pushinteger(L, 0);  /* and initial value */\n        else lua_pushnil(L);\n    } else {\n        lua_pushvalue(L, 1);  /* argument 'self' to metamethod */\n        lua_call(L, 1, 3);  /* get 3 values from metamethod */\n    }\n    return 3;\n};\n\nconst luaB_next = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    lua_settop(L, 2);  /* create a 2nd argument if there isn't one */\n    if (lua_next(L, 1))\n        return 2;\n    else {\n        lua_pushnil(L);\n        return 1;\n    }\n};\n\nconst luaB_pairs = function(L) {\n    return pairsmeta(L, to_luastring(\"__pairs\", true), 0, luaB_next);\n};\n\n/*\n** Traversal function for 'ipairs'\n*/\nconst ipairsaux = function(L) {\n    let i = luaL_checkinteger(L, 2) + 1;\n    lua_pushinteger(L, i);\n    return lua_geti(L, 1, i) === LUA_TNIL ? 1 : 2;\n};\n\n/*\n** 'ipairs' function. Returns 'ipairsaux', given \"table\", 0.\n** (The given \"table\" may not be a table.)\n*/\nconst luaB_ipairs = function(L) {\n    // Lua 5.2\n    // return pairsmeta(L, \"__ipairs\", 1, ipairsaux);\n\n    luaL_checkany(L, 1);\n    lua_pushcfunction(L, ipairsaux);  /* iteration function */\n    lua_pushvalue(L, 1);  /* state */\n    lua_pushinteger(L, 0);  /* initial value */\n    return 3;\n};\n\nconst b_str2int = function(s, base) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    let r = /^[\\t\\v\\f \\n\\r]*([+-]?)0*([0-9A-Za-z]+)[\\t\\v\\f \\n\\r]*$/.exec(s);\n    if (!r) return null;\n    let v = parseInt(r[1]+r[2], base);\n    if (isNaN(v)) return null;\n    return v|0;\n};\n\nconst luaB_tonumber = function(L) {\n    if (lua_type(L, 2) <= 0) {  /* standard conversion? */\n        luaL_checkany(L, 1);\n        if (lua_type(L, 1) === LUA_TNUMBER) {  /* already a number? */\n            lua_settop(L, 1);\n            return 1;\n        } else {\n            let s = lua_tostring(L, 1);\n            if (s !== null && lua_stringtonumber(L, s) === s.length+1)\n                return 1;  /* successful conversion to number */\n        }\n    } else {\n        let base = luaL_checkinteger(L, 2);\n        luaL_checktype(L, 1, LUA_TSTRING);  /* no numbers as strings */\n        let s = lua_tostring(L, 1);\n        luaL_argcheck(L, 2 <= base && base <= 36, 2, \"base out of range\");\n        let n = b_str2int(s, base);\n        if (n !== null) {\n            lua_pushinteger(L, n);\n            return 1;\n        }\n    }\n\n    lua_pushnil(L);\n    return 1;\n};\n\nconst luaB_error = function(L) {\n    let level = luaL_optinteger(L, 2, 1);\n    lua_settop(L, 1);\n    if (lua_type(L, 1) === LUA_TSTRING && level > 0) {\n        luaL_where(L, level);  /* add extra information */\n        lua_pushvalue(L, 1);\n        lua_concat(L, 2);\n    }\n    return lua_error(L);\n};\n\nconst luaB_assert = function(L) {\n    if (lua_toboolean(L, 1))  /* condition is true? */\n        return lua_gettop(L);  /* return all arguments */\n    else {\n        luaL_checkany(L, 1);  /* there must be a condition */\n        lua_remove(L, 1);  /* remove it */\n        lua_pushliteral(L, \"assertion failed!\");  /* default message */\n        lua_settop(L, 1);  /* leave only message (default if no other one) */\n        return luaB_error(L);  /* call 'error' */\n    }\n};\n\nconst luaB_select = function(L) {\n    let n = lua_gettop(L);\n    if (lua_type(L, 1) === LUA_TSTRING && lua_tostring(L, 1)[0] === 35 /* '#'.charCodeAt(0) */) {\n        lua_pushinteger(L, n - 1);\n        return 1;\n    } else {\n        let i = luaL_checkinteger(L, 1);\n        if (i < 0) i = n + i;\n        else if (i > n) i = n;\n        luaL_argcheck(L, 1 <= i, 1, \"index out of range\");\n        return n - i;\n    }\n};\n\n/*\n** Continuation function for 'pcall' and 'xpcall'. Both functions\n** already pushed a 'true' before doing the call, so in case of success\n** 'finishpcall' only has to return everything in the stack minus\n** 'extra' values (where 'extra' is exactly the number of items to be\n** ignored).\n*/\nconst finishpcall = function(L, status, extra) {\n    if (status !== LUA_OK && status !== LUA_YIELD) {  /* error? */\n        lua_pushboolean(L, 0);  /* first result (false) */\n        lua_pushvalue(L, -2);  /* error message */\n        return 2;  /* return false, msg */\n    } else\n        return lua_gettop(L) - extra;\n};\n\nconst luaB_pcall = function(L) {\n    luaL_checkany(L, 1);\n    lua_pushboolean(L, 1);  /* first result if no errors */\n    lua_insert(L, 1);  /* put it in place */\n    let status = lua_pcallk(L, lua_gettop(L) - 2, LUA_MULTRET, 0, 0, finishpcall);\n    return finishpcall(L, status, 0);\n};\n\n/*\n** Do a protected call with error handling. After 'lua_rotate', the\n** stack will have <f, err, true, f, [args...]>; so, the function passes\n** 2 to 'finishpcall' to skip the 2 first values when returning results.\n*/\nconst luaB_xpcall = function(L) {\n    let n = lua_gettop(L);\n    luaL_checktype(L, 2, LUA_TFUNCTION);  /* check error function */\n    lua_pushboolean(L, 1);  /* first result */\n    lua_pushvalue(L, 1);  /* function */\n    lua_rotate(L, 3, 2);  /* move them below function's arguments */\n    let status = lua_pcallk(L, n - 2, LUA_MULTRET, 2, 2, finishpcall);\n    return finishpcall(L, status, 2);\n};\n\nconst load_aux = function(L, status, envidx) {\n    if (status === LUA_OK) {\n        if (envidx !== 0) {  /* 'env' parameter? */\n            lua_pushvalue(L, envidx);  /* environment for loaded function */\n            if (!lua_setupvalue(L, -2, 1))  /* set it as 1st upvalue */\n                lua_pop(L, 1);  /* remove 'env' if not used by previous call */\n        }\n        return 1;\n    } else {  /* error (message is on top of the stack) */\n        lua_pushnil(L);\n        lua_insert(L, -2);  /* put before error message */\n        return 2;  /* return nil plus error message */\n    }\n};\n\n/*\n** reserved slot, above all arguments, to hold a copy of the returned\n** string to avoid it being collected while parsed. 'load' has four\n** optional arguments (chunk, source name, mode, and environment).\n*/\nconst RESERVEDSLOT = 5;\n\n/*\n** Reader for generic 'load' function: 'lua_load' uses the\n** stack for internal stuff, so the reader cannot change the\n** stack top. Instead, it keeps its resulting string in a\n** reserved slot inside the stack.\n*/\nconst generic_reader = function(L, ud) {\n    luaL_checkstack(L, 2, \"too many nested functions\");\n    lua_pushvalue(L, 1);  /* get function */\n    lua_call(L, 0, 1);  /* call it */\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* pop result */\n        return null;\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"reader function must return a string\"));\n    lua_replace(L, RESERVEDSLOT);  /* save string in reserved slot */\n    return lua_tostring(L, RESERVEDSLOT);\n};\n\nconst luaB_load = function(L) {\n    let s = lua_tostring(L, 1);\n    let mode = luaL_optstring(L, 3, \"bt\");\n    let env = !lua_isnone(L, 4) ? 4 : 0;  /* 'env' index or 0 if no 'env' */\n    let status;\n    if (s !== null) {  /* loading a string? */\n        let chunkname = luaL_optstring(L, 2, s);\n        status = luaL_loadbufferx(L, s, s.length, chunkname, mode);\n    } else {  /* loading from a reader function */\n        let chunkname = luaL_optstring(L, 2, \"=(load)\");\n        luaL_checktype(L, 1, LUA_TFUNCTION);\n        lua_settop(L, RESERVEDSLOT);  /* create reserved slot */\n        status = lua_load(L, generic_reader, null, chunkname, mode);\n    }\n    return load_aux(L, status, env);\n};\n\nconst luaB_loadfile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    let mode = luaL_optstring(L, 2, null);\n    let env = !lua_isnone(L, 3) ? 3 : 0;  /* 'env' index or 0 if no 'env' */\n    let status = luaL_loadfilex(L, fname, mode);\n    return load_aux(L, status, env);\n};\n\nconst dofilecont = function(L, d1, d2) {\n    return lua_gettop(L) - 1;\n};\n\nconst luaB_dofile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    lua_settop(L, 1);\n    if (luaL_loadfile(L, fname) !== LUA_OK)\n        return lua_error(L);\n    lua_callk(L, 0, LUA_MULTRET, 0, dofilecont);\n    return dofilecont(L, 0, 0);\n};\n\nconst base_funcs = {\n    \"assert\":         luaB_assert,\n    \"collectgarbage\": luaB_collectgarbage,\n    \"dofile\":         luaB_dofile,\n    \"error\":          luaB_error,\n    \"getmetatable\":   luaB_getmetatable,\n    \"ipairs\":         luaB_ipairs,\n    \"load\":           luaB_load,\n    \"loadfile\":       luaB_loadfile,\n    \"next\":           luaB_next,\n    \"pairs\":          luaB_pairs,\n    \"pcall\":          luaB_pcall,\n    \"print\":          luaB_print,\n    \"rawequal\":       luaB_rawequal,\n    \"rawget\":         luaB_rawget,\n    \"rawlen\":         luaB_rawlen,\n    \"rawset\":         luaB_rawset,\n    \"select\":         luaB_select,\n    \"setmetatable\":   luaB_setmetatable,\n    \"tonumber\":       luaB_tonumber,\n    \"tostring\":       luaB_tostring,\n    \"type\":           luaB_type,\n    \"xpcall\":         luaB_xpcall\n};\n\nconst luaopen_base = function(L) {\n    /* open lib into global table */\n    lua_pushglobaltable(L);\n    luaL_setfuncs(L, base_funcs, 0);\n    /* set global _G */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -2, to_luastring(\"_G\"));\n    /* set global _VERSION */\n    lua_pushliteral(L, LUA_VERSION);\n    lua_setfield(L, -2, to_luastring(\"_VERSION\"));\n    return 1;\n};\n\nmodule.exports.luaopen_base = luaopen_base;\n","\"use strict\";\n\nconst {\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TSTRING,\n    LUA_YIELD,\n    lua_Debug,\n    lua_checkstack,\n    lua_concat,\n    lua_error,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isyieldable,\n    lua_newthread,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushliteral,\n    lua_pushthread,\n    lua_pushvalue,\n    lua_resume,\n    lua_status,\n    lua_tothread,\n    lua_type,\n    lua_upvalueindex,\n    lua_xmove,\n    lua_yield\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checktype,\n    luaL_newlib,\n    luaL_where\n} = require('./lauxlib.js');\n\nconst getco = function(L) {\n    let co = lua_tothread(L, 1);\n    luaL_argcheck(L, co, 1, \"thread expected\");\n    return co;\n};\n\nconst auxresume = function(L, co, narg) {\n    if (!lua_checkstack(co, narg)) {\n        lua_pushliteral(L, \"too many arguments to resume\");\n        return -1;  /* error flag */\n    }\n\n    if (lua_status(co) === LUA_OK && lua_gettop(co) === 0) {\n        lua_pushliteral(L, \"cannot resume dead coroutine\");\n        return -1;  /* error flag */\n    }\n\n    lua_xmove(L, co, narg);\n    let status = lua_resume(co, L, narg);\n    if (status === LUA_OK || status === LUA_YIELD) {\n        let nres = lua_gettop(co);\n        if (!lua_checkstack(L, nres + 1)) {\n            lua_pop(co, nres);  /* remove results anyway */\n            lua_pushliteral(L, \"too many results to resume\");\n            return -1;  /* error flag */\n        }\n\n        lua_xmove(co,  L, nres);  /* move yielded values */\n        return nres;\n    } else {\n        lua_xmove(co, L, 1);  /* move error message */\n        return -1;  /* error flag */\n    }\n};\n\nconst luaB_coresume = function(L) {\n    let co = getco(L);\n    let r = auxresume(L, co, lua_gettop(L) - 1);\n    if (r < 0) {\n        lua_pushboolean(L, 0);\n        lua_insert(L, -2);\n        return 2;  /* return false + error message */\n    } else {\n        lua_pushboolean(L, 1);\n        lua_insert(L, -(r + 1));\n        return r + 1;  /* return true + 'resume' returns */\n    }\n};\n\nconst luaB_auxwrap = function(L) {\n    let co = lua_tothread(L, lua_upvalueindex(1));\n    let r = auxresume(L, co, lua_gettop(L));\n    if (r < 0) {\n        if (lua_type(L, -1) === LUA_TSTRING) {  /* error object is a string? */\n            luaL_where(L, 1);  /* add extra info */\n            lua_insert(L, -2);\n            lua_concat(L, 2);\n        }\n\n        return lua_error(L);  /* propagate error */\n    }\n\n    return r;\n};\n\nconst luaB_cocreate = function(L) {\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    let NL = lua_newthread(L);\n    lua_pushvalue(L, 1);  /* move function to top */\n    lua_xmove(L, NL, 1);  /* move function from L to NL */\n    return 1;\n};\n\nconst luaB_cowrap = function(L) {\n    luaB_cocreate(L);\n    lua_pushcclosure(L, luaB_auxwrap, 1);\n    return 1;\n};\n\nconst luaB_yield = function(L) {\n    return lua_yield(L, lua_gettop(L));\n};\n\nconst luaB_costatus = function(L) {\n    let co = getco(L);\n    if (L === co) lua_pushliteral(L, \"running\");\n    else {\n        switch (lua_status(co)) {\n            case LUA_YIELD:\n                lua_pushliteral(L, \"suspended\");\n                break;\n            case LUA_OK: {\n                let ar = new lua_Debug();\n                if (lua_getstack(co, 0, ar) > 0)  /* does it have frames? */\n                    lua_pushliteral(L, \"normal\");  /* it is running */\n                else if (lua_gettop(co) === 0)\n                    lua_pushliteral(L, \"dead\");\n                else\n                    lua_pushliteral(L, \"suspended\");  /* initial state */\n                break;\n            }\n            default:  /* some error occurred */\n                lua_pushliteral(L, \"dead\");\n                break;\n        }\n    }\n\n    return 1;\n};\n\nconst luaB_yieldable = function(L) {\n    lua_pushboolean(L, lua_isyieldable(L));\n    return 1;\n};\n\nconst luaB_corunning = function(L) {\n    lua_pushboolean(L, lua_pushthread(L));\n    return 2;\n};\n\nconst co_funcs = {\n    \"create\":      luaB_cocreate,\n    \"isyieldable\": luaB_yieldable,\n    \"resume\":      luaB_coresume,\n    \"running\":     luaB_corunning,\n    \"status\":      luaB_costatus,\n    \"wrap\":        luaB_cowrap,\n    \"yield\":       luaB_yield\n};\n\nconst luaopen_coroutine = function(L) {\n    luaL_newlib(L, co_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_coroutine = luaopen_coroutine;\n","\"use strict\";\n\nconst { LUA_MAXINTEGER } = require('./luaconf.js');\nconst {\n    LUA_OPEQ,\n    LUA_OPLT,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_call,\n    lua_checkstack,\n    lua_compare,\n    lua_createtable,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnoneornil,\n    lua_isstring,\n    lua_pop,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawget,\n    lua_setfield,\n    lua_seti,\n    lua_settop,\n    lua_toboolean,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addlstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checktype,\n    luaL_error,\n    luaL_len,\n    luaL_newlib,\n    luaL_opt,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_pushresult,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\n/*\n** Operations that an object must define to mimic a table\n** (some functions only need some of them)\n*/\nconst TAB_R  = 1;               /* read */\nconst TAB_W  = 2;               /* write */\nconst TAB_L  = 4;               /* length */\nconst TAB_RW = (TAB_R | TAB_W); /* read/write */\n\nconst checkfield = function(L, key, n) {\n    lua_pushstring(L, key);\n    return lua_rawget(L, -n) !== LUA_TNIL;\n};\n\n/*\n** Check that 'arg' either is a table or can behave like one (that is,\n** has a metatable with the required metamethods)\n*/\nconst checktab = function(L, arg, what) {\n    if (lua_type(L, arg) !== LUA_TTABLE) {  /* is it not a table? */\n        let n = 1;\n        if (lua_getmetatable(L, arg) &&  /* must have metatable */\n            (!(what & TAB_R) || checkfield(L, to_luastring(\"__index\", true), ++n)) &&\n            (!(what & TAB_W) || checkfield(L, to_luastring(\"__newindex\", true), ++n)) &&\n            (!(what & TAB_L) || checkfield(L, to_luastring(\"__len\", true), ++n))) {\n            lua_pop(L, n);  /* pop metatable and tested metamethods */\n        }\n        else\n            luaL_checktype(L, arg, LUA_TTABLE);  /* force an error */\n    }\n};\n\nconst aux_getn = function(L, n, w) {\n    checktab(L, n, w | TAB_L);\n    return luaL_len(L, n);\n};\n\nconst addfield = function(L, b, i) {\n    lua_geti(L, 1, i);\n    if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid value (%s) at index %d in table for 'concat'\"),\n            luaL_typename(L, -1), i);\n\n    luaL_addvalue(b);\n};\n\nconst tinsert = function(L) {\n    let e = aux_getn(L, 1, TAB_RW) + 1;  /* first empty element */\n    let pos;\n    switch (lua_gettop(L)) {\n        case 2:\n            pos = e;\n            break;\n        case 3: {\n            pos = luaL_checkinteger(L, 2);  /* 2nd argument is the position */\n            luaL_argcheck(L, 1 <= pos && pos <= e, 2, \"position out of bounds\");\n            for (let i = e; i > pos; i--) {  /* move up elements */\n                lua_geti(L, 1, i - 1);\n                lua_seti(L, 1, i);  /* t[i] = t[i - 1] */\n            }\n            break;\n        }\n        default: {\n            return luaL_error(L, \"wrong number of arguments to 'insert'\");\n        }\n    }\n\n    lua_seti(L, 1, pos);  /* t[pos] = v */\n    return 0;\n};\n\nconst tremove = function(L) {\n    let size = aux_getn(L, 1, TAB_RW);\n    let pos = luaL_optinteger(L, 2, size);\n    if (pos !== size)  /* validate 'pos' if given */\n        luaL_argcheck(L, 1 <= pos && pos <= size + 1, 1, \"position out of bounds\");\n    lua_geti(L, 1, pos);  /* result = t[pos] */\n    for (; pos < size; pos++) {\n        lua_geti(L, 1, pos + 1);\n        lua_seti(L, 1, pos);  /* t[pos] = t[pos + 1] */\n    }\n    lua_pushnil(L);\n    lua_seti(L, 1, pos);  /* t[pos] = nil */\n    return 1;\n};\n\n/*\n** Copy elements (1[f], ..., 1[e]) into (tt[t], tt[t+1], ...). Whenever\n** possible, copy in increasing order, which is better for rehashing.\n** \"possible\" means destination after original range, or smaller\n** than origin, or copying to another table.\n*/\nconst tmove = function(L) {\n    let f = luaL_checkinteger(L, 2);\n    let e = luaL_checkinteger(L, 3);\n    let t = luaL_checkinteger(L, 4);\n    let tt = !lua_isnoneornil(L, 5) ? 5 : 1;  /* destination table */\n    checktab(L, 1, TAB_R);\n    checktab(L, tt, TAB_W);\n    if (e >= f) {  /* otherwise, nothing to move */\n        luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3, \"too many elements to move\");\n        let n = e - f + 1;  /* number of elements to move */\n        luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4, \"destination wrap around\");\n\n        if (t > e || t <= f || (tt !== 1 && lua_compare(L, 1, tt, LUA_OPEQ) !== 1)) {\n            for (let i = 0; i < n; i++) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        } else {\n            for (let i = n - 1; i >= 0; i--) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        }\n    }\n\n    lua_pushvalue(L, tt);  /* return destination table */\n    return 1;\n};\n\nconst tconcat = function(L) {\n    let last = aux_getn(L, 1, TAB_R);\n    let sep = luaL_optlstring(L, 2, \"\");\n    let lsep = sep.length;\n    let i = luaL_optinteger(L, 3, 1);\n    last = luaL_optinteger(L, 4, last);\n\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n\n    for (; i < last; i++) {\n        addfield(L, b, i);\n        luaL_addlstring(b, sep, lsep);\n    }\n\n    if (i === last)\n        addfield(L, b, i);\n\n    luaL_pushresult(b);\n\n    return 1;\n};\n\nconst pack = function(L) {\n    let n = lua_gettop(L);  /* number of elements to pack */\n    lua_createtable(L, n, 1);  /* create result table */\n    lua_insert(L, 1);  /* put it at index 1 */\n    for (let i = n; i >= 1; i--)  /* assign elements */\n        lua_seti(L, 1, i);\n    lua_pushinteger(L, n);\n    lua_setfield(L, 1, to_luastring(\"n\"));  /* t.n = number of elements */\n    return 1;  /* return table */\n};\n\nconst unpack = function(L) {\n    let i = luaL_optinteger(L, 2, 1);\n    let e = luaL_opt(L, luaL_checkinteger, 3, luaL_len(L, 1));\n    if (i > e) return 0;  /* empty range */\n    let n = e - i;  /* number of elements minus 1 (avoid overflows) */\n    if (n >= Number.MAX_SAFE_INTEGER || !lua_checkstack(L, ++n))\n        return luaL_error(L, to_luastring(\"too many results to unpack\"));\n    for (; i < e; i++)  /* push arg[i..e - 1] (to avoid overflows) */\n        lua_geti(L, 1, i);\n    lua_geti(L, 1, e);  /* push last element */\n    return n;\n};\n\nconst l_randomizePivot = function() {\n    return Math.floor(Math.random()*0x100000000);\n};\n\nconst RANLIMIT = 100;\n\nconst set2 = function(L, i, j) {\n    lua_seti(L, 1, i);\n    lua_seti(L, 1, j);\n};\n\nconst sort_comp = function(L, a, b) {\n    if (lua_isnil(L, 2))  /* no function? */\n        return lua_compare(L, a, b, LUA_OPLT);  /* a < b */\n    else {  /* function */\n        lua_pushvalue(L, 2);    /* push function */\n        lua_pushvalue(L, a-1);  /* -1 to compensate function */\n        lua_pushvalue(L, b-2);  /* -2 to compensate function and 'a' */\n        lua_call(L, 2, 1);      /* call function */\n        let res = lua_toboolean(L, -1);  /* get result */\n        lua_pop(L, 1);          /* pop result */\n        return res;\n    }\n};\n\nconst partition = function(L, lo, up) {\n    let i = lo;  /* will be incremented before first use */\n    let j = up - 1;  /* will be decremented before first use */\n    /* loop invariant: a[lo .. i] <= P <= a[j .. up] */\n    for (;;) {\n        /* next loop: repeat ++i while a[i] < P */\n        while (lua_geti(L, 1, ++i), sort_comp(L, -1, -2)) {\n            if (i == up - 1)  /* a[i] < P  but a[up - 1] == P  ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[i] */\n        }\n        /* after the loop, a[i] >= P and a[lo .. i - 1] < P */\n        /* next loop: repeat --j while P < a[j] */\n        while (lua_geti(L, 1, --j), sort_comp(L, -3, -1)) {\n            if (j < i)  /* j < i  but  a[j] > P ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[j] */\n        }\n        /* after the loop, a[j] <= P and a[j + 1 .. up] >= P */\n        if (j < i) {  /* no elements out of place? */\n            /* a[lo .. i - 1] <= P <= a[j + 1 .. i .. up] */\n            lua_pop(L, 1);  /* pop a[j] */\n            /* swap pivot (a[up - 1]) with a[i] to satisfy pos-condition */\n            set2(L, up - 1, i);\n            return i;\n        }\n        /* otherwise, swap a[i] - a[j] to restore invariant and repeat */\n        set2(L, i, j);\n    }\n};\n\nconst choosePivot = function(lo, up, rnd) {\n    let r4 = Math.floor((up - lo) / 4);  /* range/4 */\n    let p = rnd % (r4 * 2) + (lo + r4);\n    lualib.lua_assert(lo + r4 <= p && p <= up - r4);\n    return p;\n};\n\nconst auxsort = function(L, lo, up, rnd) {\n    while (lo < up) {  /* loop for tail recursion */\n        /* sort elements 'lo', 'p', and 'up' */\n        lua_geti(L, 1, lo);\n        lua_geti(L, 1, up);\n        if (sort_comp(L, -1, -2))  /* a[up] < a[lo]? */\n            set2(L, lo, up);  /* swap a[lo] - a[up] */\n        else\n            lua_pop(L, 2);  /* remove both values */\n        if (up - lo == 1)  /* only 2 elements? */\n            return;  /* already sorted */\n        let p;  /* Pivot index */\n        if (up - lo < RANLIMIT || rnd === 0)  /* small interval or no randomize? */\n            p = Math.floor((lo + up)/2);  /* middle element is a good pivot */\n        else  /* for larger intervals, it is worth a random pivot */\n            p = choosePivot(lo, up, rnd);\n        lua_geti(L, 1, p);\n        lua_geti(L, 1, lo);\n        if (sort_comp(L, -2, -1))  /* a[p] < a[lo]? */\n            set2(L, p, lo);  /* swap a[p] - a[lo] */\n        else {\n            lua_pop(L, 1);  /* remove a[lo] */\n            lua_geti(L, 1, up);\n            if (sort_comp(L, -1, -2))  /* a[up] < a[p]? */\n                set2(L, p, up);  /* swap a[up] - a[p] */\n            else\n                lua_pop(L, 2);\n        }\n        if (up - lo == 2)  /* only 3 elements? */\n            return;  /* already sorted */\n        lua_geti(L, 1, p);  /* get middle element (Pivot) */\n        lua_pushvalue(L, -1);  /* push Pivot */\n        lua_geti(L, 1, up - 1);  /* push a[up - 1] */\n        set2(L, p, up - 1);  /* swap Pivot (a[p]) with a[up - 1] */\n        p = partition(L, lo, up);\n        let n;\n        /* a[lo .. p - 1] <= a[p] == P <= a[p + 1 .. up] */\n        if (p - lo < up - p) {  /* lower interval is smaller? */\n            auxsort(L, lo, p - 1, rnd);  /* call recursively for lower interval */\n            n = p - lo;  /* size of smaller interval */\n            lo = p + 1;  /* tail call for [p + 1 .. up] (upper interval) */\n        } else {\n            auxsort(L, p + 1, up, rnd);  /* call recursively for upper interval */\n            n = up - p;  /* size of smaller interval */\n            up = p - 1;  /* tail call for [lo .. p - 1]  (lower interval) */\n        }\n        if ((up - lo) / 128 > n) /* partition too imbalanced? */\n            rnd = l_randomizePivot();  /* try a new randomization */\n    }  /* tail call auxsort(L, lo, up, rnd) */\n};\n\nconst sort = function(L) {\n    let n = aux_getn(L, 1, TAB_RW);\n    if (n > 1) {  /* non-trivial interval? */\n        luaL_argcheck(L, n < LUA_MAXINTEGER, 1, \"array too big\");\n        if (!lua_isnoneornil(L, 2))  /* is there a 2nd argument? */\n            luaL_checktype(L, 2, LUA_TFUNCTION);  /* must be a function */\n        lua_settop(L, 2);  /* make sure there are two arguments */\n        auxsort(L, 1, n, 0);\n    }\n    return 0;\n};\n\nconst tab_funcs = {\n    \"concat\": tconcat,\n    \"insert\": tinsert,\n    \"move\":   tmove,\n    \"pack\":   pack,\n    \"remove\": tremove,\n    \"sort\":   sort,\n    \"unpack\": unpack\n};\n\nconst luaopen_table = function(L) {\n    luaL_newlib(L, tab_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_table = luaopen_table;\n","\"use strict\";\n\nconst {\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_close,\n    lua_createtable,\n    lua_getfield,\n    lua_isboolean,\n    lua_isnoneornil,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_setfield,\n    lua_settop,\n    lua_toboolean,\n    lua_tointegerx\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addstring,\n    // luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_execresult,\n    luaL_fileresult,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_optstring,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_eq,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/* options for ANSI C 89 (only 1-char options) */\n// const L_STRFTIMEC89 = to_luastring(\"aAbBcdHIjmMpSUwWxXyYZ%\");\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC89;\n\n/* options for ISO C 99 and POSIX */\n// const L_STRFTIMEC99 = to_luastring(\"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%||EcECExEXEyEYOdOeOHOIOmOMOSOuOUOVOwOWOy\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC99;\n\n/* options for Windows */\n// const L_STRFTIMEWIN = to_luastring(\"aAbBcdHIjmMpSUwWxXyYzZ%||#c#x#d#H#I#j#m#M#S#U#w#W#y#Y\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEWIN;\n\n/* options for our own strftime implementation\n  - should be superset of C89 options for compat\n  - missing from C99:\n      - ISO 8601 week specifiers: gGV\n      - > single char specifiers\n  - beyond C99:\n      - %k: TZ extension: space-padded 24-hour\n      - %l: TZ extension: space-padded 12-hour\n      - %P: GNU extension: lower-case am/pm\n*/\nconst LUA_STRFTIMEOPTIONS = to_luastring(\"aAbBcCdDeFhHIjklmMnpPrRStTuUwWxXyYzZ%\");\n\n\nconst setfield = function(L, key, value) {\n    lua_pushinteger(L, value);\n    lua_setfield(L, -2, to_luastring(key, true));\n};\n\nconst setallfields = function(L, time, utc) {\n    setfield(L, \"sec\",   utc ? time.getUTCSeconds()  : time.getSeconds());\n    setfield(L, \"min\",   utc ? time.getUTCMinutes()  : time.getMinutes());\n    setfield(L, \"hour\",  utc ? time.getUTCHours()    : time.getHours());\n    setfield(L, \"day\",   utc ? time.getUTCDate()     : time.getDate());\n    setfield(L, \"month\", (utc ? time.getUTCMonth()   : time.getMonth()) + 1);\n    setfield(L, \"year\",  utc ? time.getUTCFullYear() : time.getFullYear());\n    setfield(L, \"wday\",  (utc ? time.getUTCDay()     : time.getDay()) + 1);\n    setfield(L, \"yday\", Math.floor((time - (new Date(time.getFullYear(), 0, 0 /* shortcut to correct day by one */))) / 86400000));\n    // setboolfield(L, \"isdst\", time.get);\n};\n\nconst L_MAXDATEFIELD = (Number.MAX_SAFE_INTEGER / 2);\n\nconst getfield = function(L, key, d, delta) {\n    let t = lua_getfield(L, -1, to_luastring(key, true));  /* get field and its type */\n    let res = lua_tointegerx(L, -1);\n    if (res === false) {  /* field is not an integer? */\n        if (t !== LUA_TNIL)  /* some other value? */\n            return luaL_error(L, to_luastring(\"field '%s' is not an integer\"), key);\n        else if (d < 0)  /* absent field; no default? */\n            return luaL_error(L, to_luastring(\"field '%s' missing in date table\"), key);\n        res = d;\n    }\n    else {\n        if (!(-L_MAXDATEFIELD <= res && res <= L_MAXDATEFIELD))\n            return luaL_error(L, to_luastring(\"field '%s' is out-of-bound\"), key);\n        res -= delta;\n    }\n    lua_pop(L, 1);\n    return res;\n};\n\n\nconst locale = {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ].map((s) => to_luastring(s)),\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((s) => to_luastring(s)),\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((s) => to_luastring(s)),\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].map((s) => to_luastring(s)),\n    AM: to_luastring(\"AM\"),\n    PM: to_luastring(\"PM\"),\n    am: to_luastring(\"am\"),\n    pm: to_luastring(\"pm\"),\n    formats: {\n        c: to_luastring(\"%a %b %e %H:%M:%S %Y\"),\n        D: to_luastring(\"%m/%d/%y\"),\n        F: to_luastring(\"%Y-%m-%d\"),\n        R: to_luastring(\"%H:%M\"),\n        r: to_luastring(\"%I:%M:%S %p\"),\n        T: to_luastring(\"%H:%M:%S\"),\n        X: to_luastring(\"%T\"),\n        x: to_luastring(\"%D\")\n    }\n};\n\nconst week_number = function(date, start_of_week) {\n    // This works by shifting the weekday back by one day if we\n    // are treating Monday as the first day of the week.\n    let weekday = date.getDay();\n    if (start_of_week === 'monday') {\n        if (weekday === 0) // Sunday\n            weekday = 6;\n        else\n            weekday--;\n    }\n    let yday = (date - new Date(date.getFullYear(), 0, 1)) / 86400000;\n    return Math.floor((yday + 7 - weekday) / 7);\n};\n\nconst push_pad_2 = function(b, n, pad) {\n    if (n < 10)\n        luaL_addchar(b, pad);\n    luaL_addstring(b, to_luastring(String(n)));\n};\n\nconst strftime = function(L, b, s, date) {\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] !== 37 /* % */) {  /* not a conversion specifier? */\n            luaL_addchar(b, s[i++]);\n        } else {\n            i++;  /* skip '%' */\n            let len = checkoption(L, s, i);\n            /* each `case` has an example output above it for the UTC epoch */\n            switch(s[i]) {\n                // '%'\n                case 37 /* % */:\n                    luaL_addchar(b, 37);\n                    break;\n\n                // 'Thursday'\n                case 65 /* A */:\n                    luaL_addstring(b, locale.days[date.getDay()]);\n                    break;\n\n                // 'January'\n                case 66 /* B */:\n                    luaL_addstring(b, locale.months[date.getMonth()]);\n                    break;\n\n                // '19'\n                case 67 /* C */:\n                    push_pad_2(b, Math.floor(date.getFullYear() / 100), 48 /* 0 */);\n                    break;\n\n                // '01/01/70'\n                case 68 /* D */:\n                    strftime(L, b, locale.formats.D, date);\n                    break;\n\n                // '1970-01-01'\n                case 70 /* F */:\n                    strftime(L, b, locale.formats.F, date);\n                    break;\n\n                // '00'\n                case 72 /* H */:\n                    push_pad_2(b, date.getHours(), 48 /* 0 */);\n                    break;\n\n                // '12'\n                case 73 /* I */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 77 /* M */:\n                    push_pad_2(b, date.getMinutes(), 48 /* 0 */);\n                    break;\n\n                // 'am'\n                case 80 /* P */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.am : locale.pm);\n                    break;\n\n                // '00:00'\n                case 82 /* R */:\n                    strftime(L, b, locale.formats.R, date);\n                    break;\n\n                // '00'\n                case 83 /* S */:\n                    push_pad_2(b, date.getSeconds(), 48 /* 0 */);\n                    break;\n\n                // '00:00:00'\n                case 84 /* T */:\n                    strftime(L, b, locale.formats.T, date);\n                    break;\n\n                // '00'\n                case 85 /* U */:\n                    push_pad_2(b, week_number(date, \"sunday\"), 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 87 /* W */:\n                    push_pad_2(b, week_number(date, \"monday\"), 48 /* 0 */);\n                    break;\n\n                // '16:00:00'\n                case 88 /* X */:\n                    strftime(L, b, locale.formats.X, date);\n                    break;\n\n                // '1970'\n                case 89 /* Y */:\n                    luaL_addstring(b, to_luastring(String(date.getFullYear())));\n                    break;\n\n                // 'GMT'\n                case 90 /* Z */: {\n                    let tzString = date.toString().match(/\\(([\\w\\s]+)\\)/);\n                    if (tzString)\n                        luaL_addstring(b, to_luastring(tzString[1]));\n                    break;\n                }\n\n                // 'Thu'\n                case 97 /* a */:\n                    luaL_addstring(b, locale.shortDays[date.getDay()]);\n                    break;\n\n                // 'Jan'\n                case 98 /* b */:\n                case 104 /* h */:\n                    luaL_addstring(b, locale.shortMonths[date.getMonth()]);\n                    break;\n\n                // ''\n                case 99 /* c */:\n                    strftime(L, b, locale.formats.c, date);\n                    break;\n\n                // '01'\n                case 100 /* d */:\n                    push_pad_2(b, date.getDate(), 48 /* 0 */);\n                    break;\n\n                // ' 1'\n                case 101 /* e */:\n                    push_pad_2(b, date.getDate(), 32 /* space */);\n                    break;\n\n                // '000'\n                case 106 /* j */: {\n                    let yday = Math.floor((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n                    if (yday < 100) {\n                        if (yday < 10)\n                            luaL_addchar(b, 48 /* 0 */);\n                        luaL_addchar(b, 48 /* 0 */);\n                    }\n                    luaL_addstring(b, to_luastring(String(yday)));\n                    break;\n                }\n\n                // ' 0'\n                case 107 /* k */:\n                    push_pad_2(b, date.getHours(), 32 /* space */);\n                    break;\n\n                // '12'\n                case 108 /* l */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 32 /* space */);\n                    break;\n\n                // '01'\n                case 109 /* m */:\n                    push_pad_2(b, date.getMonth() + 1, 48 /* 0 */);\n                    break;\n\n                // '\\n'\n                case 110 /* n */:\n                    luaL_addchar(b, 10);\n                    break;\n\n                // 'AM'\n                case 112 /* p */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.AM : locale.PM);\n                    break;\n\n                // '12:00:00 AM'\n                case 114 /* r */:\n                    strftime(L, b, locale.formats.r, date);\n                    break;\n\n                // '0'\n                case 115 /* s */:\n                    luaL_addstring(b, to_luastring(String(Math.floor(date / 1000))));\n                    break;\n\n                // '\\t'\n                case 116 /* t */:\n                    luaL_addchar(b, 8);\n                    break;\n\n                // '4'\n                case 117 /* u */: {\n                    let day = date.getDay();\n                    luaL_addstring(b, to_luastring(String(day === 0 ? 7 : day)));\n                    break;\n                }\n\n                // '4'\n                case 119 /* w */:\n                    luaL_addstring(b, to_luastring(String(date.getDay())));\n                    break;\n\n                // '12/31/69'\n                case 120 /* x */:\n                    strftime(L, b, locale.formats.x, date);\n                    break;\n\n                // '70'\n                case 121 /* y */:\n                    push_pad_2(b, date.getFullYear() % 100, 48 /* 0 */);\n                    break;\n\n                // '+0000'\n                case 122 /* z */: {\n                    let off = date.getTimezoneOffset();\n                    if (off > 0) {\n                        luaL_addchar(b, 45 /* - */);\n                    } else {\n                        off = -off;\n                        luaL_addchar(b, 43 /* + */);\n                    }\n                    push_pad_2(b, Math.floor(off/60), 48 /* 0 */);\n                    push_pad_2(b, off % 60, 48 /* 0 */);\n                    break;\n                }\n            }\n            i += len;\n        }\n    }\n};\n\n\nconst checkoption = function(L, conv, i) {\n    let option = LUA_STRFTIMEOPTIONS;\n    let o = 0;\n    let oplen = 1;  /* length of options being checked */\n    for (; o < option.length && oplen <= (conv.length - i); o += oplen) {\n        if (option[o] === '|'.charCodeAt(0))  /* next block? */\n            oplen++;  /* will check options with next length (+1) */\n        else if (luastring_eq(conv.subarray(i, i+oplen), option.subarray(o, o+oplen))) {  /* match? */\n            return oplen;  /* return length */\n        }\n    }\n    luaL_argerror(L, 1,\n        lua_pushfstring(L, to_luastring(\"invalid conversion specifier '%%%s'\"), conv));\n};\n\n/* maximum size for an individual 'strftime' item */\n// const SIZETIMEFMT = 250;\n\n\nconst os_date = function(L) {\n    let s = luaL_optlstring(L, 1, \"%c\");\n    let stm = lua_isnoneornil(L, 2) ? new Date() : new Date(l_checktime(L, 2) * 1000);\n    let utc = false;\n    let i = 0;\n    if (s[i] === '!'.charCodeAt(0)) {  /* UTC? */\n        utc = true;\n        i++;  /* skip '!' */\n    }\n    if (s[i] === \"*\".charCodeAt(0) && s[i+1] === \"t\".charCodeAt(0)) {\n        lua_createtable(L, 0, 9);  /* 9 = number of fields */\n        setallfields(L, stm, utc);\n    } else {\n        let cc = new Uint8Array(4);\n        cc[0] = \"%\".charCodeAt(0);\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        strftime(L, b, s, stm);\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\nconst os_time = function(L) {\n    let t;\n    if (lua_isnoneornil(L, 1))  /* called without args? */\n        t = new Date();  /* get current time */\n    else {\n        luaL_checktype(L, 1, LUA_TTABLE);\n        lua_settop(L, 1);  /* make sure table is at the top */\n        t = new Date(\n            getfield(L, \"year\", -1, 0),\n            getfield(L, \"month\", -1, 1),\n            getfield(L, \"day\", -1, 0),\n            getfield(L, \"hour\", 12, 0),\n            getfield(L, \"min\", 0, 0),\n            getfield(L, \"sec\", 0, 0)\n        );\n        setallfields(L, t);\n    }\n\n    lua_pushinteger(L, Math.floor(t / 1000));\n    return 1;\n};\n\nconst l_checktime = function(L, arg) {\n    let t = luaL_checkinteger(L, arg);\n    // luaL_argcheck(L, t, arg, \"time out-of-bounds\");\n    return t;\n};\n\nconst os_difftime = function(L) {\n    let t1 = l_checktime(L, 1);\n    let t2 = l_checktime(L, 2);\n    lua_pushnumber(L, t1 - t2);\n    return 1;\n};\n\nconst syslib = {\n    \"date\": os_date,\n    \"difftime\": os_difftime,\n    \"time\": os_time\n};\n\nif (typeof process === \"undefined\") {\n    syslib.clock = function(L) {\n        lua_pushnumber(L, performance.now()/1000);\n        return 1;\n    };\n} else {\n    /* Only with Node */\n    const fs = require('fs');\n    const tmp = require('tmp');\n    const child_process = require('child_process');\n\n    syslib.exit = function(L) {\n        let status;\n        if (lua_isboolean(L, 1))\n            status = (lua_toboolean(L, 1) ? 0 : 1);\n        else\n            status = luaL_optinteger(L, 1, 0);\n        if (lua_toboolean(L, 2))\n            lua_close(L);\n        if (L) process.exit(status);  /* 'if' to avoid warnings for unreachable 'return' */\n        return 0;\n    };\n\n    syslib.getenv = function(L) {\n        let key = luaL_checkstring(L, 1);\n        key = to_jsstring(key); /* https://github.com/nodejs/node/issues/16961 */\n        if (Object.prototype.hasOwnProperty.call(process.env, key)) {\n            lua_pushliteral(L, process.env[key]);\n        } else {\n            lua_pushnil(L);\n        }\n        return 1;\n    };\n\n    syslib.clock = function(L) {\n        lua_pushnumber(L, process.uptime());\n        return 1;\n    };\n\n    const lua_tmpname = function() {\n        return tmp.tmpNameSync();\n    };\n\n    syslib.remove = function(L) {\n        let filename = luaL_checkstring(L, 1);\n        try {\n            fs.unlinkSync(filename);\n        } catch (e) {\n            if (e.code === 'EISDIR') {\n                try {\n                    fs.rmdirSync(filename);\n                } catch (e) {\n                    return luaL_fileresult(L, false, filename, e);\n                }\n            } else {\n                return luaL_fileresult(L, false, filename, e);\n            }\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.rename = function(L) {\n        let fromname = luaL_checkstring(L, 1);\n        let toname = luaL_checkstring(L, 2);\n        try {\n            fs.renameSync(fromname, toname);\n        } catch (e) {\n            return luaL_fileresult(L, false, false, e);\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.tmpname = function(L) {\n        let name = lua_tmpname();\n        if (!name)\n            return luaL_error(L, to_luastring(\"unable to generate a unique filename\"));\n        lua_pushstring(L, to_luastring(name));\n        return 1;\n    };\n\n    syslib.execute = function(L) {\n        let cmd = luaL_optstring(L, 1, null);\n        if (cmd !== null) {\n            try {\n                child_process.execSync(\n                    cmd,\n                    {\n                        stdio: [process.stdin, process.stdout, process.stderr]\n                    }\n                );\n            } catch (e) {\n                return luaL_execresult(L, e);\n            }\n\n            return luaL_execresult(L, null);\n        } else {\n            /* Assume a shell is available.\n               If it's good enough for musl it's good enough for us.\n               http://git.musl-libc.org/cgit/musl/tree/src/process/system.c?id=ac45692a53a1b8d2ede329d91652d43c1fb5dc8d#n22\n            */\n            lua_pushboolean(L, 1);\n            return 1;\n        }\n    };\n}\n\nconst luaopen_os = function(L) {\n    luaL_newlib(L, syslib);\n    return 1;\n};\n\nmodule.exports.luaopen_os = luaopen_os;\n","\"use strict\";\n\nconst { sprintf } = require('sprintf-js');\n\nconst {\n    LUA_INTEGER_FMT,\n    LUA_INTEGER_FRMLEN,\n    LUA_MININTEGER,\n    LUA_NUMBER_FMT,\n    LUA_NUMBER_FRMLEN,\n    frexp,\n    lua_getlocaledecpoint\n} = require('./luaconf.js');\nconst {\n    LUA_TBOOLEAN,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    lua_call,\n    lua_createtable,\n    lua_dump,\n    lua_gettable,\n    lua_gettop,\n    lua_isinteger,\n    lua_isstring,\n    lua_pop,\n    lua_pushcclosure,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tonumber,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addlstring,\n    luaL_addsize,\n    luaL_addstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_buffinitsize,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_prepbuffsize,\n    luaL_pushresult,\n    luaL_pushresultsize,\n    luaL_tolstring,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_eq,\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst sL_ESC  = '%';\nconst L_ESC   = sL_ESC.charCodeAt(0);\n\n/*\n** maximum number of captures that a pattern can do during\n** pattern-matching. This limit is arbitrary, but must fit in\n** an unsigned char.\n*/\nconst LUA_MAXCAPTURES = 32;\n\n// (sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))\nconst MAXSIZE = 2147483647;\n\n/* Give natural (i.e. strings end at the first \\0) length of a string represented by an array of bytes */\nconst strlen = function(s) {\n    let len = luastring_indexOf(s, 0);\n    return len > -1 ? len : s.length;\n};\n\n/* translate a relative string position: negative means back from end */\nconst posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\nconst str_sub = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let start = posrelat(luaL_checkinteger(L, 2), l);\n    let end = posrelat(luaL_optinteger(L, 3, -1), l);\n    if (start < 1) start = 1;\n    if (end > l) end = l;\n    if (start <= end)\n        lua_pushstring(L, s.subarray(start - 1, (start - 1) + (end - start + 1)));\n    else lua_pushliteral(L, \"\");\n    return 1;\n};\n\nconst str_len = function(L) {\n    lua_pushinteger(L, luaL_checkstring(L, 1).length);\n    return 1;\n};\n\nconst str_char = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let b = new luaL_Buffer();\n    let p = luaL_buffinitsize(L, b, n);\n    for (let i = 1; i <= n; i++) {\n        let c = luaL_checkinteger(L, i);\n        luaL_argcheck(L, c >= 0 && c <= 255, \"value out of range\"); // Strings are 8-bit clean\n        p[i-1] = c;\n    }\n    luaL_pushresultsize(b, n);\n    return 1;\n};\n\nconst writer = function(L, b, size, B) {\n    luaL_addlstring(B, b, size);\n    return 0;\n};\n\nconst str_dump = function(L) {\n    let b = new luaL_Buffer();\n    let strip = lua_toboolean(L, 2);\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    lua_settop(L, 1);\n    luaL_buffinit(L, b);\n    if (lua_dump(L, writer, b, strip) !== 0)\n        return luaL_error(L, to_luastring(\"unable to dump given function\"));\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst SIZELENMOD = LUA_NUMBER_FRMLEN.length + 1;\n\nconst L_NBFD = 1;\n\nconst num2straux = function(x) {\n    /* if 'inf' or 'NaN', format it like '%g' */\n    if (Object.is(x, Infinity))\n        return to_luastring('inf');\n    else if (Object.is(x, -Infinity))\n        return to_luastring('-inf');\n    else if (Number.isNaN(x))\n        return to_luastring('nan');\n    else if (x === 0) {  /* can be -0... */\n        /* create \"0\" or \"-0\" followed by exponent */\n        let zero = sprintf(LUA_NUMBER_FMT + \"x0p+0\", x);\n        if (Object.is(x, -0))\n            zero = \"-\" + zero;\n        return to_luastring(zero);\n    } else {\n        let buff = \"\";\n        let fe = frexp(x);  /* 'x' fraction and exponent */\n        let m = fe[0];\n        let e = fe[1];\n        if (m < 0) {  /* is number negative? */\n            buff += '-';  /* add signal */\n            m = -m;  /* make it positive */\n        }\n        buff += \"0x\";  /* add \"0x\" */\n        buff += (m * (1<<L_NBFD)).toString(16);\n        e -= L_NBFD;  /* this digit goes before the radix point */\n        buff += sprintf(\"p%+d\", e);  /* add exponent */\n        return to_luastring(buff);\n    }\n};\n\nconst lua_number2strx = function(L, fmt, x) {\n    let buff = num2straux(x);\n    if (fmt[SIZELENMOD] === 65 /* 'A'.charCodeAt(0) */) {\n        for (let i = 0; i < buff.length; i++) {\n            let c = buff[i];\n            if (c >= 97) /* toupper */\n                buff[i] = c & 0xdf;\n        }\n    } else if (fmt[SIZELENMOD] !== 97 /* 'a'.charCodeAt(0) */)\n        luaL_error(L, to_luastring(\"modifiers for format '%%a'/'%%A' not implemented\"));\n    return buff;\n};\n\n/*\n** Maximum size of each formatted item. This maximum size is produced\n** by format('%.99f', -maxfloat), and is equal to 99 + 3 ('-', '.',\n** and '\\0') + number of decimal digits to represent maxfloat (which\n** is maximum exponent + 1). (99+3+1 then rounded to 120 for \"extra\n** expenses\", such as locale-dependent stuff)\n*/\n// const MAX_ITEM   = 120;// TODO: + l_mathlim(MAX_10_EXP);\n\n\n/* valid flags in a format specification */\nconst FLAGS = to_luastring(\"-+ #0\");\n\n/*\n** maximum size of each format specification (such as \"%-099.99d\")\n*/\n// const MAX_FORMAT = 32;\n\nconst isalpha = e => (97 <= e && e <= 122) || (65 <= e && e <= 90);\nconst isdigit = e => 48 <= e && e <= 57;\nconst iscntrl = e => (0x00 <= e && e <= 0x1f) || e === 0x7f;\nconst isgraph = e => 33 <= e && e <= 126;\nconst islower = e => 97 <= e && e <= 122;\nconst isupper = e => 65 <= e && e <= 90;\nconst isalnum = e => (97 <= e && e <= 122) || (65 <= e && e <= 90) || (48 <= e && e <= 57);\nconst ispunct = e => isgraph(e) && !isalnum(e);\nconst isspace = e => e === 32 || (e >= 9 && e <= 13);\nconst isxdigit = e => (48 <= e && e <= 57) || (65 <= e && e <= 70) || (97 <= e && e <= 102);\n\nconst addquoted = function(b, s, len) {\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n    let i = 0;\n    while (len--) {\n        if (s[i] === 34 /* '\"'.charCodeAt(0) */ ||\n            s[i] === 92 /* '\\\\'.charCodeAt(0) */ ||\n            s[i] === 10 /* '\\n'.charCodeAt(0) */) {\n            luaL_addchar(b, 92 /* '\\\\'.charCodeAt(0) */);\n            luaL_addchar(b, s[i]);\n        } else if (iscntrl(s[i])) {\n            let buff = ''+s[i];\n            if (isdigit(s[i+1]))\n                buff = '0'.repeat(3-buff.length) + buff; /* pad to 3 '0's */\n            luaL_addstring(b, to_luastring(\"\\\\\" + buff));\n        } else\n            luaL_addchar(b, s[i]);\n        i++;\n    }\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n};\n\n/*\n** Ensures the 'buff' string uses a dot as the radix character.\n*/\nconst checkdp = function(buff) {\n    if (luastring_indexOf(buff, 46 /* ('.').charCodeAt(0) */) < 0) {  /* no dot? */\n        let point = lua_getlocaledecpoint();  /* try locale point */\n        let ppoint = luastring_indexOf(buff, point);\n        if (ppoint) buff[ppoint] = 46 /* ('.').charCodeAt(0) */;  /* change it to a dot */\n    }\n};\n\nconst addliteral = function(L, b, arg) {\n    switch(lua_type(L, arg)) {\n        case LUA_TSTRING: {\n            let s = lua_tostring(L, arg);\n            addquoted(b, s, s.length);\n            break;\n        }\n        case LUA_TNUMBER: {\n            let buff;\n            if (!lua_isinteger(L, arg)) {  /* float? */\n                let n = lua_tonumber(L, arg);  /* write as hexa ('%a') */\n                buff = lua_number2strx(L, to_luastring(`%${LUA_INTEGER_FRMLEN}a`), n);\n                checkdp(buff);  /* ensure it uses a dot */\n            } else {  /* integers */\n                let n = lua_tointeger(L, arg);\n                let format = (n === LUA_MININTEGER)  /* corner case? */\n                    ? \"0x%\" + LUA_INTEGER_FRMLEN + \"x\"  /* use hexa */\n                    : LUA_INTEGER_FMT;  /* else use default format */\n                buff = to_luastring(sprintf(format, n));\n            }\n            luaL_addstring(b, buff);\n            break;\n        }\n        case LUA_TNIL: case LUA_TBOOLEAN: {\n            luaL_tolstring(L, arg);\n            luaL_addvalue(b);\n            break;\n        }\n        default: {\n            luaL_argerror(L, arg, to_luastring(\"value has no literal form\"));\n        }\n    }\n};\n\nconst scanformat = function(L, strfrmt, i, form) {\n    let p = i;\n    while (strfrmt[p] !== 0 && luastring_indexOf(FLAGS, strfrmt[p]) >= 0) p++;  /* skip flags */\n    if (p - i >= FLAGS.length)\n        luaL_error(L, to_luastring(\"invalid format (repeated flags)\"));\n    if (isdigit(strfrmt[p])) p++;  /* skip width */\n    if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    if (strfrmt[p] === 46 /* '.'.charCodeAt(0) */) {\n        p++;\n        if (isdigit(strfrmt[p])) p++;  /* skip precision */\n        if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    }\n    if (isdigit(strfrmt[p]))\n        luaL_error(L, to_luastring(\"invalid format (width or precision too long)\"));\n    form[0] = 37 /* \"%\".charCodeAt(0) */;\n    for (let j = 0; j < p - i + 1; j++)\n        form[j+1] = strfrmt[i+j];\n    return p;\n};\n\n/*\n** add length modifier into formats\n*/\nconst addlenmod = function(form, lenmod) {\n    let l = form.length;\n    let lm = lenmod.length;\n    let spec = form[l - 1];\n    for (let i = 0; i < lm; i++)\n        form[i + l - 1] = lenmod[i];\n    form[l + lm - 1] = spec;\n    // form[l + lm] = 0;\n};\n\nconst str_format = function(L) {\n    let top = lua_gettop(L);\n    let arg = 1;\n    let strfrmt = luaL_checkstring(L, arg);\n    let i = 0;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while (i < strfrmt.length) {\n        if (strfrmt[i] !== L_ESC) {\n            luaL_addchar(b, strfrmt[i++]);\n        } else if (strfrmt[++i] === L_ESC) {\n            luaL_addchar(b, strfrmt[i++]); /* %% */\n        } else { /* format item */\n            let form = [];  /* to store the format ('%...') */\n            if (++arg > top)\n                luaL_argerror(L, arg, to_luastring(\"no value\"));\n            i = scanformat(L, strfrmt, i, form);\n            switch (String.fromCharCode(strfrmt[i++])) {\n                case 'c': {\n                    // sprintf(String.fromCharCode(...form), luaL_checkinteger(L, arg));\n                    luaL_addchar(b, luaL_checkinteger(L, arg));\n                    break;\n                }\n                case 'd': case 'i':\n                case 'o': case 'u': case 'x': case 'X': {\n                    let n = luaL_checkinteger(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'a': case 'A': {\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, lua_number2strx(L, form, luaL_checknumber(L, arg)));\n                    break;\n                }\n                case 'e': case 'E': case 'f':\n                case 'g': case 'G': {\n                    let n = luaL_checknumber(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'q': {\n                    addliteral(L, b, arg);\n                    break;\n                }\n                case 's': {\n                    let s = luaL_tolstring(L, arg);\n                    if (form.length <= 2 || form[2] === 0) {  /* no modifiers? */\n                        luaL_addvalue(b);  /* keep entire string */\n                    } else {\n                        luaL_argcheck(L, s.length === strlen(s), arg, \"string contains zeros\");\n                        if (luastring_indexOf(form, 46 /* '.'.charCodeAt(0) */) < 0 && s.length >= 100) {\n                            /* no precision and string is too long to be formatted */\n                            luaL_addvalue(b);  /* keep entire string */\n                        } else {  /* format the string into 'buff' */\n                            // TODO: will fail if s is not valid UTF-8\n                            luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), to_jsstring(s))));\n                            lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */\n                        }\n                    }\n                    break;\n                }\n                default: {  /* also treat cases 'pnLlh' */\n                    return luaL_error(L, to_luastring(\"invalid option '%%%c' to 'format'\"), strfrmt[i-1]);\n                }\n            }\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\n/* value used for padding */\nconst LUAL_PACKPADBYTE = 0x00;\n\n/* maximum size for the binary representation of an integer */\nconst MAXINTSIZE = 16;\n\nconst SZINT = 4; // Size of lua_Integer\n\n/* number of bits in a character */\nconst NB = 8;\n\n/* mask for one character (NB 1's) */\nconst MC = ((1 << NB) - 1);\n\nconst MAXALIGN = 8;\n\n/*\n** information to pack/unpack stuff\n*/\nclass Header {\n    constructor(L) {\n        this.L = L;\n        this.islittle = true;\n        this.maxalign = 1;\n    }\n}\n\n/*\n** options for pack/unpack\n*/\nconst Kint       = 0; /* signed integers */\nconst Kuint      = 1; /* unsigned integers */\nconst Kfloat     = 2; /* floating-point numbers */\nconst Kchar      = 3; /* fixed-length strings */\nconst Kstring    = 4; /* strings with prefixed length */\nconst Kzstr      = 5; /* zero-terminated strings */\nconst Kpadding   = 6; /* padding */\nconst Kpaddalign = 7; /* padding for alignment */\nconst Knop       = 8; /* no-op (configuration or spaces) */\n\nconst digit = isdigit;\n\nconst getnum = function(fmt, df) {\n    if (fmt.off >= fmt.s.length || !digit(fmt.s[fmt.off]))  /* no number? */\n        return df;  /* return default value */\n    else {\n        let a = 0;\n        do {\n            a = a * 10 + (fmt.s[fmt.off++] - 48 /* '0'.charCodeAt(0) */);\n        } while (fmt.off < fmt.s.length && digit(fmt.s[fmt.off]) && a <= (MAXSIZE - 9)/10);\n        return a;\n    }\n};\n\n/*\n** Read an integer numeral and raises an error if it is larger\n** than the maximum size for integers.\n*/\nconst getnumlimit = function(h, fmt, df) {\n    let sz = getnum(fmt, df);\n    if (sz > MAXINTSIZE || sz <= 0)\n        luaL_error(h.L, to_luastring(\"integral size (%d) out of limits [1,%d]\"), sz, MAXINTSIZE);\n    return sz;\n};\n\n/*\n** Read and classify next option. 'size' is filled with option's size.\n*/\nconst getoption = function(h, fmt) {\n    let r = {\n        opt: fmt.s[fmt.off++],\n        size: 0  /* default */\n    };\n    switch (r.opt) {\n        case 98  /*'b'*/: r.size = 1; r.opt = Kint;   return r; // sizeof(char): 1\n        case 66  /*'B'*/: r.size = 1; r.opt = Kuint;  return r;\n        case 104 /*'h'*/: r.size = 2; r.opt = Kint;   return r; // sizeof(short): 2\n        case 72  /*'H'*/: r.size = 2; r.opt = Kuint;  return r;\n        case 108 /*'l'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(long): 4\n        case 76  /*'L'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 106 /*'j'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(lua_Integer): 4\n        case 74  /*'J'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 84  /*'T'*/: r.size = 4; r.opt = Kuint;  return r; // sizeof(size_t): 4\n        case 102 /*'f'*/: r.size = 4; r.opt = Kfloat; return r; // sizeof(float): 4\n        case 100 /*'d'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(double): 8\n        case 110 /*'n'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(lua_Number): 8\n        case 105 /*'i'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kint;    return r; // sizeof(int): 4\n        case 73  /*'I'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kuint;   return r;\n        case 115 /*'s'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kstring; return r;\n        case 99  /*'c'*/: {\n            r.size = getnum(fmt, -1);\n            if (r.size === -1)\n                luaL_error(h.L, to_luastring(\"missing size for format option 'c'\"));\n            r.opt = Kchar;\n            return r;\n        }\n        case 122 /*'z'*/:             r.opt = Kzstr;      return r;\n        case 120 /*'x'*/: r.size = 1; r.opt = Kpadding;   return r;\n        case 88  /*'X'*/:             r.opt = Kpaddalign; return r;\n        case 32  /*' '*/: break;\n        case 60  /*'<'*/: h.islittle = true; break;\n        case 62  /*'>'*/: h.islittle = false; break;\n        case 61  /*'='*/: h.islittle = true; break;\n        case 33  /*'!'*/: h.maxalign = getnumlimit(h, fmt, MAXALIGN); break;\n        default: luaL_error(h.L, to_luastring(\"invalid format option '%c'\"), r.opt);\n    }\n    r.opt = Knop;\n    return r;\n};\n\n/*\n** Read, classify, and fill other details about the next option.\n** 'psize' is filled with option's size, 'notoalign' with its\n** alignment requirements.\n** Local variable 'size' gets the size to be aligned. (Kpadal option\n** always gets its full alignment, other options are limited by\n** the maximum alignment ('maxalign'). Kchar option needs no alignment\n** despite its size.\n*/\nconst getdetails = function(h, totalsize, fmt) {\n    let r = {\n        opt: NaN,\n        size: NaN,\n        ntoalign: NaN\n    };\n\n    let opt = getoption(h, fmt);\n    r.size = opt.size;\n    r.opt = opt.opt;\n    let align = r.size;  /* usually, alignment follows size */\n    if (r.opt === Kpaddalign) {  /* 'X' gets alignment from following option */\n        if (fmt.off >= fmt.s.length || fmt.s[fmt.off] === 0)\n            luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        else {\n            let o = getoption(h, fmt);\n            align = o.size;\n            o = o.opt;\n            if (o === Kchar || align === 0)\n                luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        }\n    }\n    if (align <= 1 || r.opt === Kchar)  /* need no alignment? */\n        r.ntoalign = 0;\n    else {\n        if (align > h.maxalign)  /* enforce maximum alignment */\n            align = h.maxalign;\n        if ((align & (align -1)) !== 0)  /* is 'align' not a power of 2? */\n            luaL_argerror(h.L, 1, to_luastring(\"format asks for alignment not power of 2\"));\n        r.ntoalign = (align - (totalsize & (align - 1))) & (align - 1);\n    }\n    return r;\n};\n\n/*\n** Pack integer 'n' with 'size' bytes and 'islittle' endianness.\n** The final 'if' handles the case when 'size' is larger than\n** the size of a Lua integer, correcting the extra sign-extension\n** bytes if necessary (by default they would be zeros).\n*/\nconst packint = function(b, n, islittle, size, neg) {\n    let buff = luaL_prepbuffsize(b, size);\n    buff[islittle ? 0 : size - 1] = n & MC;  /* first byte */\n    for (let i = 1; i < size; i++) {\n        n >>= NB;\n        buff[islittle ? i : size - 1 - i] = n & MC;\n    }\n    if (neg && size > SZINT) {  /* negative number need sign extension? */\n        for (let i = SZINT; i < size; i++)  /* correct extra bytes */\n            buff[islittle ? i : size - 1 - i] = MC;\n    }\n    luaL_addsize(b, size);  /* add result to buffer */\n};\n\nconst str_pack = function(L) {\n    let b = new luaL_Buffer();\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),  /* format string */\n        off: 0\n    };\n    let arg = 1;  /* current argument to pack */\n    let totalsize = 0;  /* accumulate total size of result */\n    lua_pushnil(L);  /* mark to separate arguments from string buffer */\n    luaL_buffinit(L, b);\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        totalsize += ntoalign + size;\n        while (ntoalign-- > 0)\n            luaL_addchar(b, LUAL_PACKPADBYTE);  /* fill alignment */\n        arg++;\n        switch (opt) {\n            case Kint: {  /* signed integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT) {  /* need overflow check? */\n                    let lim = 1 << (size * 8) - 1;\n                    luaL_argcheck(L, -lim <= n && n < lim, arg, \"integer overflow\");\n                }\n                packint(b, n, h.islittle, size, n < 0);\n                break;\n            }\n            case Kuint: {  /* unsigned integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT)\n                    luaL_argcheck(L, (n>>>0) < (1 << (size * NB)), arg, \"unsigned overflow\");\n                packint(b, n>>>0, h.islittle, size, false);\n                break;\n            }\n            case Kfloat: {  /* floating-point options */\n                let buff = luaL_prepbuffsize(b, size);\n                let n = luaL_checknumber(L, arg);  /* get argument */\n                let dv = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n                if (size === 4) dv.setFloat32(0, n, h.islittle);\n                else dv.setFloat64(0, n, h.islittle);\n                luaL_addsize(b, size);\n                break;\n            }\n            case Kchar: {  /* fixed-size string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, len <= size, arg, \"string longer than given size\");\n                luaL_addlstring(b, s, len);  /* add string */\n                while (len++ < size)  /* pad extra space */\n                    luaL_addchar(b, LUAL_PACKPADBYTE);\n                break;\n            }\n            case Kstring: {  /* strings with length count */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L,\n                    size >= 4 /* sizeof(size_t) */ || len < (1 << (size * NB)),\n                    arg, \"string length does not fit in given size\");\n                packint(b, len, h.islittle, size, 0);  /* pack length */\n                luaL_addlstring(b, s, len);\n                totalsize += len;\n                break;\n            }\n            case Kzstr: {  /* zero-terminated string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, luastring_indexOf(s, 0) < 0, arg, \"strings contains zeros\");\n                luaL_addlstring(b, s, len);\n                luaL_addchar(b, 0);  /* add zero at the end */\n                totalsize += len + 1;\n                break;\n            }\n            case Kpadding: luaL_addchar(b, LUAL_PACKPADBYTE); /* fall through */\n            case Kpaddalign: case Knop:\n                arg--;  /* undo increment */\n                break;\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst str_reverse = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++)\n        r[i] = s[l-1-i];\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_lower = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (isupper(c))\n            c = c | 0x20;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_upper = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (islower(c))\n            c = c & 0xdf;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_rep = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let n = luaL_checkinteger(L, 2);\n    let sep = luaL_optstring(L, 3, \"\");\n    let lsep = sep.length;\n    if (n <= 0) lua_pushliteral(L, \"\");\n    else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */\n        return luaL_error(L, to_luastring(\"resulting string too large\"));\n    else {\n        let totallen = n * l + (n - 1) * lsep;\n        let b = new luaL_Buffer();\n        let p = luaL_buffinitsize(L, b, totallen);\n        let pi = 0;\n        while (n-- > 1) {  /* first n-1 copies (followed by separator) */\n            p.set(s, pi);\n            pi += l;\n            if (lsep > 0) {  /* empty 'memcpy' is not that cheap */\n                p.set(sep, pi);\n                pi += lsep;\n            }\n        }\n        p.set(s, pi);  /* last copy (not followed by separator) */\n        luaL_pushresultsize(b, totallen);\n    }\n    return 1;\n};\n\nconst str_byte = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let posi = posrelat(luaL_optinteger(L, 2, 1), l);\n    let pose = posrelat(luaL_optinteger(L, 3, posi), l);\n\n    if (posi < 1) posi = 1;\n    if (pose > l) pose = l;\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)  /* arithmetic overflow? */\n        return luaL_error(L, \"string slice too long\");\n\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    for (let i = 0; i < n; i++)\n        lua_pushinteger(L, s[posi + i - 1]);\n    return n;\n};\n\nconst str_packsize = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let totalsize = 0;  /* accumulate total size of result */\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        size += ntoalign;  /* total space used by option */\n        luaL_argcheck(L, totalsize <= MAXSIZE - size, 1, \"format result too large\");\n        totalsize += size;\n        switch (opt) {\n            case Kstring:  /* strings with length count */\n            case Kzstr:    /* zero-terminated string */\n                luaL_argerror(L, 1, \"variable-length format\");\n                /* call never return, but to avoid warnings: *//* fall through */\n            default:  break;\n        }\n    }\n    lua_pushinteger(L, totalsize);\n    return 1;\n};\n\n/*\n** Unpack an integer with 'size' bytes and 'islittle' endianness.\n** If size is smaller than the size of a Lua integer and integer\n** is signed, must do sign extension (propagating the sign to the\n** higher bits); if size is larger than the size of a Lua integer,\n** it must check the unread bytes to see whether they do not cause an\n** overflow.\n*/\nconst unpackint = function(L, str, islittle, size, issigned) {\n    let res = 0;\n    let limit = size <= SZINT ? size : SZINT;\n    for (let i = limit - 1; i >= 0; i--) {\n        res <<= NB;\n        res |= str[islittle ? i : size - 1 - i];\n    }\n    if (size < SZINT) {  /* real size smaller than lua_Integer? */\n        if (issigned) {  /* needs sign extension? */\n            let mask = 1 << (size * NB - 1);\n            res = ((res ^ mask) - mask);  /* do sign extension */\n        }\n    } else if (size > SZINT) {  /* must check unread bytes */\n        let mask = !issigned || res >= 0 ? 0 : MC;\n        for (let i = limit; i < size; i++) {\n            if (str[islittle ? i : size - 1 - i] !== mask)\n                luaL_error(L, to_luastring(\"%d-byte integer does not fit into Lua Integer\"), size);\n        }\n    }\n    return res;\n};\n\nconst unpacknum = function(L, b, islittle, size) {\n    lualib.lua_assert(b.length >= size);\n\n    let dv = new DataView(new ArrayBuffer(size));\n    for (let i = 0; i < size; i++)\n        dv.setUint8(i, b[i], islittle);\n\n    if (size == 4) return dv.getFloat32(0, islittle);\n    else return dv.getFloat64(0, islittle);\n};\n\nconst str_unpack = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let data = luaL_checkstring(L, 2);\n    let ld = data.length;\n    let pos = posrelat(luaL_optinteger(L, 3, 1), ld) - 1;\n    let n = 0;  /* number of results */\n    luaL_argcheck(L, pos <= ld && pos >= 0, 3, \"initial position out of string\");\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, pos, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        if (/*ntoalign + size > ~pos ||*/ pos + ntoalign + size > ld)\n            luaL_argerror(L, 2, to_luastring(\"data string too short\"));\n        pos += ntoalign;  /* skip alignment */\n        /* stack space for item + next position */\n        luaL_checkstack(L, 2, \"too many results\");\n        n++;\n        switch (opt) {\n            case Kint:\n            case Kuint: {\n                let res = unpackint(L, data.subarray(pos), h.islittle, size, opt === Kint);\n                lua_pushinteger(L, res);\n                break;\n            }\n            case Kfloat: {\n                let res = unpacknum(L, data.subarray(pos), h.islittle, size);\n                lua_pushnumber(L, res);\n                break;\n            }\n            case Kchar: {\n                lua_pushstring(L, data.subarray(pos, pos + size));\n                break;\n            }\n            case Kstring: {\n                let len = unpackint(L, data.subarray(pos), h.islittle, size, 0);\n                luaL_argcheck(L, pos + len + size <= ld, 2, \"data string too short\");\n                lua_pushstring(L, data.subarray(pos + size, pos + size + len));\n                pos += len;  /* skip string */\n                break;\n            }\n            case Kzstr: {\n                let e = luastring_indexOf(data, 0, pos);\n                if (e === -1) e = data.length - pos;\n                lua_pushstring(L, data.subarray(pos, e));\n                pos = e + 1;  /* skip string plus final '\\0' */\n                break;\n            }\n            case Kpaddalign: case Kpadding: case Knop:\n                n--;  /* undo increment */\n                break;\n        }\n        pos += size;\n    }\n    lua_pushinteger(L, pos + 1);  /* next position */\n    return n + 1;\n};\n\nconst CAP_UNFINISHED = -1;\nconst CAP_POSITION   = -2;\nconst MAXCCALLS      = 200;\nconst SPECIALS       = to_luastring(\"^$*+?.([%-\");\n\nclass MatchState {\n    constructor(L) {\n        this.src = null;  /* unmodified source string */\n        this.src_init = null;  /* init of source string */\n        this.src_end = null;  /* end ('\\0') of source string */\n        this.p = null;  /* unmodified pattern string */\n        this.p_end = null;  /* end ('\\0') of pattern */\n        this.L = L;\n        this.matchdepth = NaN;  /* control for recursive depth */\n        this.level = NaN;  /* total number of captures (finished or unfinished) */\n        this.capture = [];\n    }\n}\n\nconst check_capture = function(ms, l) {\n    l = l - 49 /* '1'.charCodeAt(0) */;\n    if (l < 0 || l >= ms.level || ms.capture[l].len === CAP_UNFINISHED)\n        return luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), l + 1);\n    return l;\n};\n\nconst capture_to_close = function(ms) {\n    let level = ms.level;\n    for (level--; level >= 0; level--)\n        if (ms.capture[level].len === CAP_UNFINISHED) return level;\n    return luaL_error(ms.L, to_luastring(\"invalid pattern capture\"));\n};\n\nconst classend = function(ms, p) {\n    switch(ms.p[p++]) {\n        case L_ESC: {\n            if (p === ms.p_end)\n                luaL_error(ms.L, to_luastring(\"malformed pattern (ends with '%%')\"));\n            return p + 1;\n        }\n        case 91 /* '['.charCodeAt(0) */: {\n            if (ms.p[p] === 94 /* '^'.charCodeAt(0) */) p++;\n            do {  /* look for a ']' */\n                if (p === ms.p_end)\n                    luaL_error(ms.L, to_luastring(\"malformed pattern (missing ']')\"));\n                if (ms.p[p++] === L_ESC && p < ms.p_end)\n                    p++;  /* skip escapes (e.g. '%]') */\n            } while (ms.p[p] !== 93 /* ']'.charCodeAt(0) */);\n            return p + 1;\n        }\n        default: {\n            return p;\n        }\n    }\n};\n\nconst match_class = function(c, cl) {\n    switch (cl) {\n        case 97  /* 'a'.charCodeAt(0) */: return  isalpha(c);\n        case 65  /* 'A'.charCodeAt(0) */: return !isalpha(c);\n        case 99  /* 'c'.charCodeAt(0) */: return  iscntrl(c);\n        case 67  /* 'C'.charCodeAt(0) */: return !iscntrl(c);\n        case 100 /* 'd'.charCodeAt(0) */: return  isdigit(c);\n        case 68  /* 'D'.charCodeAt(0) */: return !isdigit(c);\n        case 103 /* 'g'.charCodeAt(0) */: return  isgraph(c);\n        case 71  /* 'G'.charCodeAt(0) */: return !isgraph(c);\n        case 108 /* 'l'.charCodeAt(0) */: return  islower(c);\n        case 76  /* 'L'.charCodeAt(0) */: return !islower(c);\n        case 112 /* 'p'.charCodeAt(0) */: return  ispunct(c);\n        case 80  /* 'P'.charCodeAt(0) */: return !ispunct(c);\n        case 115 /* 's'.charCodeAt(0) */: return  isspace(c);\n        case 83  /* 'S'.charCodeAt(0) */: return !isspace(c);\n        case 117 /* 'u'.charCodeAt(0) */: return  isupper(c);\n        case 85  /* 'U'.charCodeAt(0) */: return !isupper(c);\n        case 119 /* 'w'.charCodeAt(0) */: return  isalnum(c);\n        case 87  /* 'W'.charCodeAt(0) */: return !isalnum(c);\n        case 120 /* 'x'.charCodeAt(0) */: return  isxdigit(c);\n        case 88  /* 'X'.charCodeAt(0) */: return !isxdigit(c);\n        case 122 /* 'z'.charCodeAt(0) */: return (c === 0);  /* deprecated option */\n        case 90  /* 'z'.charCodeAt(0) */: return (c !== 0);  /* deprecated option */\n        default: return (cl === c);\n    }\n};\n\nconst matchbracketclass = function(ms, c, p, ec) {\n    let sig = true;\n    if (ms.p[p + 1] === 94 /* '^'.charCodeAt(0) */) {\n        sig = false;\n        p++;  /* skip the '^' */\n    }\n    while (++p < ec) {\n        if (ms.p[p] === L_ESC) {\n            p++;\n            if (match_class(c, ms.p[p]))\n                return sig;\n        } else if (ms.p[p + 1] === 45 /* '-'.charCodeAt(0) */ && p + 2 < ec) {\n            p += 2;\n            if (ms.p[p - 2] <= c && c <= ms.p[p])\n                return sig;\n        } else if (ms.p[p] === c) return sig;\n    }\n    return !sig;\n};\n\nconst singlematch = function(ms, s, p, ep) {\n    if (s >= ms.src_end)\n        return false;\n    else {\n        let c = ms.src[s];\n        switch (ms.p[p]) {\n            case 46 /* '.'.charCodeAt(0) */: return true;  /* matches any char */\n            case L_ESC: return match_class(c, ms.p[p + 1]);\n            case 91 /* '['.charCodeAt(0) */: return matchbracketclass(ms, c, p, ep - 1);\n            default: return ms.p[p] === c;\n        }\n    }\n};\n\nconst matchbalance = function(ms, s, p) {\n    if (p >= ms.p_end - 1)\n        luaL_error(ms.L, to_luastring(\"malformed pattern (missing arguments to '%%b'\"));\n    if (ms.src[s] !== ms.p[p])\n        return null;\n    else {\n        let b = ms.p[p];\n        let e = ms.p[p + 1];\n        let cont = 1;\n        while (++s < ms.src_end) {\n            if (ms.src[s] === e) {\n                if (--cont === 0) return s + 1;\n            }\n            else if (ms.src[s] === b) cont++;\n        }\n    }\n    return null;  /* string ends out of balance */\n};\n\nconst max_expand = function(ms, s, p, ep) {\n    let i = 0;  /* counts maximum expand for item */\n    while (singlematch(ms, s + i, p, ep))\n        i++;\n    /* keeps trying to match with the maximum repetitions */\n    while (i >= 0) {\n        let res = match(ms, s + i, ep + 1);\n        if (res) return res;\n        i--;  /* else didn't match; reduce 1 repetition to try again */\n    }\n    return null;\n};\n\nconst min_expand = function(ms, s, p, ep) {\n    for (;;) {\n        let res = match(ms, s, ep + 1);\n        if (res !== null)\n            return res;\n        else if (singlematch(ms, s, p, ep))\n            s++;  /* try with one more repetition */\n        else return null;\n    }\n};\n\nconst start_capture = function(ms, s, p, what) {\n    let level = ms.level;\n    if (level >= LUA_MAXCAPTURES) luaL_error(ms.L, to_luastring(\"too many captures\"));\n    ms.capture[level] = ms.capture[level] ? ms.capture[level] : {};\n    ms.capture[level].init = s;\n    ms.capture[level].len = what;\n    ms.level = level + 1;\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.level--;  /* undo capture */\n    return res;\n};\n\nconst end_capture = function(ms, s, p) {\n    let l = capture_to_close(ms);\n    ms.capture[l].len = s - ms.capture[l].init;  /* close capture */\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.capture[l].len = CAP_UNFINISHED;  /* undo capture */\n    return res;\n};\n\n/* Compare the elements of arrays 'a' and 'b' to see if they contain the same elements */\nconst array_cmp = function(a, ai, b, bi, len) {\n    return luastring_eq(a.subarray(ai, ai+len), b.subarray(bi, bi+len));\n};\n\nconst match_capture = function(ms, s, l) {\n    l = check_capture(ms, l);\n    let len = ms.capture[l].len;\n    if ((ms.src_end-s) >= len && array_cmp(ms.src, ms.capture[l].init, ms.src, s, len))\n        return s+len;\n    else return null;\n};\n\nconst match = function(ms, s, p) {\n    let gotodefault = false;\n    let gotoinit = true;\n\n    if (ms.matchdepth-- === 0)\n        luaL_error(ms.L, to_luastring(\"pattern too complex\"));\n\n    while (gotoinit || gotodefault) {\n        gotoinit = false;\n        if (p !== ms.p_end) {  /* end of pattern? */\n            switch (gotodefault ? void 0 : ms.p[p]) {\n                case 40 /* '('.charCodeAt(0) */: {  /* start capture */\n                    if (ms.p[p + 1] === 41 /* ')'.charCodeAt(0) */)  /* position capture? */\n                        s = start_capture(ms, s, p + 2, CAP_POSITION);\n                    else\n                        s = start_capture(ms, s, p + 1, CAP_UNFINISHED);\n                    break;\n                }\n                case 41 /* ')'.charCodeAt(0) */: {  /* end capture */\n                    s = end_capture(ms, s, p + 1);\n                    break;\n                }\n                case 36 /* '$'.charCodeAt(0) */: {\n                    if (p + 1 !== ms.p_end) {  /* is the '$' the last char in pattern? */\n                        gotodefault = true;  /* no; go to default */\n                        break;\n                    }\n                    s = (ms.src.length - s) === 0 ? s : null;  /* check end of string */\n                    break;\n                }\n                case L_ESC: {  /* escaped sequences not in the format class[*+?-]? */\n                    switch (ms.p[p + 1]) {\n                        case 98 /* 'b'.charCodeAt(0) */: {  /* balanced string? */\n                            s = matchbalance(ms, s, p + 2);\n                            if (s !== null) {\n                                p += 4;\n                                gotoinit = true;\n                            }\n                            break;\n                        }\n                        case 102 /* 'f'.charCodeAt(0) */: {  /* frontier? */\n                            p += 2;\n                            if (ms.p[p] !== 91 /* '['.charCodeAt(0) */)\n                                luaL_error(ms.L, to_luastring(\"missing '[' after '%%f' in pattern\"));\n                            let ep = classend(ms, p);  /* points to what is next */\n                            let previous = s === ms.src_init ? 0 : ms.src[s-1];\n                            if (!matchbracketclass(ms, previous, p, ep - 1) && matchbracketclass(ms, (s===ms.src_end)?0:ms.src[s], p, ep - 1)) {\n                                p = ep; gotoinit = true; break;\n                            }\n                            s = null;  /* match failed */\n                            break;\n                        }\n                        case 48: case 49: case 50: case 51: case 52:\n                        case 53: case 54: case 55: case 56: case 57: {  /* capture results (%0-%9)? */\n                            s = match_capture(ms, s, ms.p[p + 1]);\n                            if (s !== null) {\n                                p += 2; gotoinit = true;\n                            }\n                            break;\n                        }\n                        default: gotodefault = true;\n                    }\n                    break;\n                }\n                default: {  /* pattern class plus optional suffix */\n                    gotodefault = false;\n                    let ep = classend(ms, p);  /* points to optional suffix */\n                    /* does not match at least once? */\n                    if (!singlematch(ms, s, p, ep)) {\n                        if (ms.p[ep] === 42 /* '*'.charCodeAt(0) */ ||\n                            ms.p[ep] === 63 /* '?'.charCodeAt(0) */ ||\n                            ms.p[ep] === 45 /* '-'.charCodeAt(0) */\n                        ) {  /* accept empty? */\n                            p = ep + 1; gotoinit = true; break;\n                        } else  /* '+' or no suffix */\n                            s = null;  /* fail */\n                    } else {  /* matched once */\n                        switch (ms.p[ep]) {  /* handle optional suffix */\n                            case 63 /* '?'.charCodeAt(0) */: {  /* optional */\n                                let res;\n                                if ((res = match(ms, s + 1, ep + 1)) !== null)\n                                    s = res;\n                                else {\n                                    p = ep + 1; gotoinit = true;\n                                }\n                                break;\n                            }\n                            case 43 /* '+'.charCodeAt(0) */:  /* 1 or more repetitions */\n                                s++;  /* 1 match already done */\n                                /* fall through */\n                            case 42 /* '*'.charCodeAt(0) */:  /* 0 or more repetitions */\n                                s = max_expand(ms, s, p, ep);\n                                break;\n                            case 45 /* '-'.charCodeAt(0) */:  /* 0 or more repetitions (minimum) */\n                                s = min_expand(ms, s, p, ep);\n                                break;\n                            default:  /* no suffix */\n                                s++; p = ep; gotoinit = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    ms.matchdepth++;\n    return s;\n};\n\nconst push_onecapture = function(ms, i, s, e) {\n    if (i >= ms.level) {\n        if (i === 0)\n            lua_pushlstring(ms.L, ms.src.subarray(s, e), e - s);  /* add whole match */\n        else\n            luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), i + 1);\n    } else {\n        let l = ms.capture[i].len;\n        if (l === CAP_UNFINISHED) luaL_error(ms.L, to_luastring(\"unfinished capture\"));\n        if (l === CAP_POSITION)\n            lua_pushinteger(ms.L, ms.capture[i].init - ms.src_init + 1);\n        else\n            lua_pushlstring(ms.L, ms.src.subarray(ms.capture[i].init), l);\n    }\n};\n\nconst push_captures = function(ms, s, e) {\n    let nlevels = ms.level === 0 && ms.src.subarray(s) ? 1 : ms.level;\n    luaL_checkstack(ms.L, nlevels, \"too many captures\");\n    for (let i = 0; i < nlevels; i++)\n        push_onecapture(ms, i, s, e);\n    return nlevels;  /* number of strings pushed */\n};\n\nconst nospecials = function(p, l) {\n    for (let i=0; i<l; i++) {\n        if (luastring_indexOf(SPECIALS, p[i]) !== -1)\n            return false;\n    }\n    return true;\n};\n\nconst prepstate = function(ms, L, s, ls, p, lp) {\n    ms.L = L;\n    ms.matchdepth = MAXCCALLS;\n    ms.src = s;\n    ms.src_init = 0;\n    ms.src_end = ls;\n    ms.p = p;\n    ms.p_end = lp;\n};\n\nconst reprepstate = function(ms) {\n    ms.level = 0;\n    lualib.lua_assert(ms.matchdepth === MAXCCALLS);\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length;\n\n    if (sl === 0)\n        return i;\n\n    for (; (i = arr.indexOf(subarr[0], i)) !== -1; i++) {\n        if (luastring_eq(arr.subarray(i, i+sl), subarr))\n            return i;\n    }\n\n    return -1;\n};\n\nconst str_find_aux = function(L, find) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    let init = posrelat(luaL_optinteger(L, 3, 1), ls);\n    if (init < 1) init = 1;\n    else if (init > ls + 1) {  /* start after string's end? */\n        lua_pushnil(L);  /* cannot find anything */\n        return 1;\n    }\n    /* explicit request or no special characters? */\n    if (find && (lua_toboolean(L, 4) || nospecials(p, lp))) {\n        /* do a plain search */\n        let f = find_subarray(s.subarray(init - 1), p, 0);\n        if (f > -1) {\n            lua_pushinteger(L, init + f);\n            lua_pushinteger(L, init + f + lp - 1);\n            return 2;\n        }\n    } else {\n        let ms = new MatchState(L);\n        let s1 = init - 1;\n        let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n        if (anchor) {\n            p = p.subarray(1); lp--;  /* skip anchor character */\n        }\n        prepstate(ms, L, s, ls, p, lp);\n        do {\n            let res;\n            reprepstate(ms);\n            if ((res = match(ms, s1, 0)) !== null) {\n                if (find) {\n                    lua_pushinteger(L, s1 + 1);  /* start */\n                    lua_pushinteger(L, res);   /* end */\n                    return push_captures(ms, null, 0) + 2;\n                } else\n                    return push_captures(ms, s1, res);\n            }\n        } while (s1++ < ms.src_end && !anchor);\n    }\n    lua_pushnil(L);  /* not found */\n    return 1;\n};\n\nconst str_find = function(L) {\n    return str_find_aux(L, 1);\n};\n\nconst str_match = function(L) {\n    return str_find_aux(L, 0);\n};\n\n/* state for 'gmatch' */\nclass GMatchState {\n    constructor() {\n        this.src = NaN;  /* current position */\n        this.p = NaN;  /* pattern */\n        this.lastmatch = NaN;  /* end of last match */\n        this.ms = new MatchState();  /* match state */\n    }\n}\n\nconst gmatch_aux = function(L) {\n    let gm = lua_touserdata(L, lua_upvalueindex(3));\n    gm.ms.L = L;\n    for (let src = gm.src; src <= gm.ms.src_end; src++) {\n        reprepstate(gm.ms);\n        let e;\n        if ((e = match(gm.ms, src, gm.p)) !== null && e !== gm.lastmatch) {\n            gm.src = gm.lastmatch = e;\n            return push_captures(gm.ms, src, e);\n        }\n    }\n    return 0;  /* not found */\n};\n\nconst str_gmatch = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    lua_settop(L, 2);  /* keep them on closure to avoid being collected */\n    let gm = new GMatchState();\n    lua_pushlightuserdata(L, gm);\n    prepstate(gm.ms, L, s, ls, p, lp);\n    gm.src = 0;\n    gm.p = 0;\n    gm.lastmatch = null;\n    lua_pushcclosure(L, gmatch_aux, 3);\n    return 1;\n};\n\nconst add_s = function(ms, b, s, e) {\n    let L = ms.L;\n    let news = lua_tostring(L, 3);\n    let l = news.length;\n    for (let i = 0; i < l; i++) {\n        if (news[i] !== L_ESC)\n            luaL_addchar(b, news[i]);\n        else {\n            i++;  /* skip ESC */\n            if (!isdigit(news[i])) {\n                if (news[i] !== L_ESC)\n                    luaL_error(L, to_luastring(\"invalid use of '%c' in replacement string\"), L_ESC);\n                luaL_addchar(b, news[i]);\n            } else if (news[i] === 48 /* '0'.charCodeAt(0) */)\n                luaL_addlstring(b, ms.src.subarray(s, e), e - s);\n            else {\n                push_onecapture(ms, news[i] - 49 /* '1'.charCodeAt(0) */, s, e);\n                luaL_tolstring(L, -1);\n                lua_remove(L, -2);  /* remove original value */\n                luaL_addvalue(b);  /* add capture to accumulated result */\n            }\n        }\n    }\n};\n\nconst add_value = function(ms, b, s, e, tr) {\n    let L = ms.L;\n    switch (tr) {\n        case LUA_TFUNCTION: {\n            lua_pushvalue(L, 3);\n            let n = push_captures(ms, s, e);\n            lua_call(L, n, 1);\n            break;\n        }\n        case LUA_TTABLE: {\n            push_onecapture(ms, 0, s, e);\n            lua_gettable(L, 3);\n            break;\n        }\n        default: {  /* LUA_TNUMBER or LUA_TSTRING */\n            add_s(ms, b, s, e);\n            return;\n        }\n    }\n    if (!lua_toboolean(L, -1)) {  /* nil or false? */\n        lua_pop(L, 1);\n        lua_pushlstring(L, ms.src.subarray(s, e), e - s);  /* keep original text */\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid replacement value (a %s)\"), luaL_typename(L, -1));\n    luaL_addvalue(b);  /* add result to accumulator */\n};\n\nconst str_gsub = function(L) {\n    let src = luaL_checkstring(L, 1);  /* subject */\n    let srcl = src.length;\n    let p = luaL_checkstring(L, 2);  /* pattern */\n    let lp = p.length;\n    let lastmatch = null;  /* end of last match */\n    let tr = lua_type(L, 3);  /* replacement type */\n    let max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */\n    let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n    let n = 0;  /* replacement count */\n    let ms = new MatchState(L);\n    let b = new luaL_Buffer();\n    luaL_argcheck(L, tr === LUA_TNUMBER || tr === LUA_TSTRING || tr === LUA_TFUNCTION || tr === LUA_TTABLE, 3,\n        \"string/function/table expected\");\n    luaL_buffinit(L, b);\n    if (anchor) {\n        p = p.subarray(1); lp--;  /* skip anchor character */\n    }\n    prepstate(ms, L, src, srcl, p, lp);\n    src = 0; p = 0;\n    while (n < max_s) {\n        let e;\n        reprepstate(ms);\n        if ((e = match(ms, src, p)) !== null && e !== lastmatch) {  /* match? */\n            n++;\n            add_value(ms, b, src, e, tr);  /* add replacement to buffer */\n            src = lastmatch = e;\n        } else if (src < ms.src_end)  /* otherwise, skip one character */\n            luaL_addchar(b, ms.src[src++]);\n        else break;  /* end of subject */\n        if (anchor) break;\n    }\n    luaL_addlstring(b, ms.src.subarray(src, ms.src_end), ms.src_end - src);\n    luaL_pushresult(b);\n    lua_pushinteger(L, n);  /* number of substitutions */\n    return 2;\n};\n\nconst strlib = {\n    \"byte\":     str_byte,\n    \"char\":     str_char,\n    \"dump\":     str_dump,\n    \"find\":     str_find,\n    \"format\":   str_format,\n    \"gmatch\":   str_gmatch,\n    \"gsub\":     str_gsub,\n    \"len\":      str_len,\n    \"lower\":    str_lower,\n    \"match\":    str_match,\n    \"pack\":     str_pack,\n    \"packsize\": str_packsize,\n    \"rep\":      str_rep,\n    \"reverse\":  str_reverse,\n    \"sub\":      str_sub,\n    \"unpack\":   str_unpack,\n    \"upper\":    str_upper\n};\n\nconst createmetatable = function(L) {\n    lua_createtable(L, 0, 1);  /* table to be metatable for strings */\n    lua_pushliteral(L, \"\");  /* dummy string */\n    lua_pushvalue(L, -2);  /* copy table */\n    lua_setmetatable(L, -2);  /* set table as metatable for strings */\n    lua_pop(L, 1);  /* pop dummy string */\n    lua_pushvalue(L, -2);  /* get string library */\n    lua_setfield(L, -2, to_luastring(\"__index\", true));  /* metatable.__index = string */\n    lua_pop(L, 1);  /* pop metatable */\n};\n\nconst luaopen_string = function(L) {\n    luaL_newlib(L, strlib);\n    createmetatable(L);\n    return 1;\n};\n\nmodule.exports.luaopen_string = luaopen_string;\n","\"use strict\";\n\nconst {\n    lua_gettop,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_setfield,\n    lua_tointeger\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_of,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst MAXUNICODE = 0x10FFFF;\n\nconst iscont = function(p) {\n    let c = p & 0xC0;\n    return c === 0x80;\n};\n\n/* translate a relative string position: negative means back from end */\nconst u_posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\n/*\n** Decode one UTF-8 sequence, returning NULL if byte sequence is invalid.\n*/\nconst limits = [0xFF, 0x7F, 0x7FF, 0xFFFF];\nconst utf8_decode = function(s, pos) {\n    let c = s[pos];\n    let res = 0;  /* final result */\n    if (c < 0x80)  /* ascii? */\n        res = c;\n    else {\n        let count = 0;  /* to count number of continuation bytes */\n        while (c & 0x40) {  /* still have continuation bytes? */\n            let cc = s[pos + (++count)];  /* read next byte */\n            if ((cc & 0xC0) !== 0x80)  /* not a continuation byte? */\n                return null;  /* invalid byte sequence */\n            res = (res << 6) | (cc & 0x3F);  /* add lower 6 bits from cont. byte */\n            c <<= 1;  /* to test next bit */\n        }\n        res |= ((c & 0x7F) << (count * 5));  /* add first byte */\n        if (count > 3 || res > MAXUNICODE || res <= limits[count])\n            return null;  /* invalid byte sequence */\n        pos += count;  /* skip continuation bytes read */\n    }\n\n    return {\n        code: res,\n        pos: pos + 1\n    };\n};\n\n/*\n** utf8len(s [, i [, j]]) --> number of characters that start in the\n** range [i,j], or nil + current position if 's' is not well formed in\n** that interval\n*/\nconst utflen = function(L) {\n    let n = 0;\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), len);\n    let posj = u_posrelat(luaL_optinteger(L, 3, -1), len);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= len, 2, \"initial position out of string\");\n    luaL_argcheck(L, --posj < len, 3, \"final position out of string\");\n\n    while (posi <= posj) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null) { /* conversion error? */\n            lua_pushnil(L);  /* return nil ... */\n            lua_pushinteger(L, posi + 1);  /* ... and current position */\n            return 2;\n        }\n        posi = dec.pos;\n        n++;\n    }\n    lua_pushinteger(L, n);\n    return 1;\n};\n\nconst p_U = to_luastring(\"%U\");\nconst pushutfchar = function(L, arg) {\n    let code = luaL_checkinteger(L, arg);\n    luaL_argcheck(L, 0 <= code && code <= MAXUNICODE, arg, \"value out of range\");\n    lua_pushfstring(L, p_U, code);\n};\n\n/*\n** utfchar(n1, n2, ...)  -> char(n1)..char(n2)...\n*/\nconst utfchar = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    if (n === 1)  /* optimize common case of single char */\n        pushutfchar(L, 1);\n    else {\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        for (let i = 1; i <= n; i++) {\n            pushutfchar(L, i);\n            luaL_addvalue(b);\n        }\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\n/*\n** offset(s, n, [i])  -> index where n-th character counting from\n**   position 'i' starts; 0 means character at 'i'.\n*/\nconst byteoffset = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let n = luaL_checkinteger(L, 2);\n    let posi = n >= 0 ? 1 : s.length + 1;\n    posi = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= s.length, 3, \"position out of range\");\n\n    if (n === 0) {\n        /* find beginning of current byte sequence */\n        while (posi > 0 && iscont(s[posi])) posi--;\n    } else {\n        if (iscont(s[posi]))\n            luaL_error(L, \"initial position is a continuation byte\");\n\n        if (n < 0) {\n            while (n < 0 && posi > 0) {  /* move back */\n                do {  /* find beginning of previous character */\n                    posi--;\n                } while (posi > 0 && iscont(s[posi]));\n                n++;\n            }\n        } else {\n            n--;  /* do not move for 1st character */\n            while (n > 0 && posi < s.length) {\n                do {  /* find beginning of next character */\n                    posi++;\n                } while (iscont(s[posi]));  /* (cannot pass final '\\0') */\n                n--;\n            }\n        }\n    }\n\n    if (n === 0)  /* did it find given character? */\n        lua_pushinteger(L, posi + 1);\n    else  /* no such character */\n        lua_pushnil(L);\n\n    return 1;\n};\n\n/*\n** codepoint(s, [i, [j]])  -> returns codepoints for all characters\n** that start in the range [i,j]\n*/\nconst codepoint = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), s.length);\n    let pose = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, posi >= 1, 2, \"out of range\");\n    luaL_argcheck(L, pose <= s.length, 3, \"out of range\");\n\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)\n        return luaL_error(L, \"string slice too long\");\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    n = 0;\n    for (posi -= 1; posi < pose;) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null)\n            return luaL_error(L, \"invalid UTF-8 code\");\n        lua_pushinteger(L, dec.code);\n        posi = dec.pos;\n        n++;\n    }\n    return n;\n};\n\nconst iter_aux = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let n = lua_tointeger(L, 2) - 1;\n\n    if (n < 0)  /* first iteration? */\n        n = 0;  /* start from here */\n    else if (n < len) {\n        n++;  /* skip current byte */\n        while (iscont(s[n])) n++;  /* and its continuations */\n    }\n\n    if (n >= len)\n        return 0;  /* no more codepoints */\n    else {\n        let dec = utf8_decode(s, n);\n        if (dec === null || iscont(s[dec.pos]))\n            return luaL_error(L, to_luastring(\"invalid UTF-8 code\"));\n        lua_pushinteger(L, n + 1);\n        lua_pushinteger(L, dec.code);\n        return 2;\n    }\n};\n\nconst iter_codes = function(L) {\n    luaL_checkstring(L, 1);\n    lua_pushcfunction(L, iter_aux);\n    lua_pushvalue(L, 1);\n    lua_pushinteger(L, 0);\n    return 3;\n};\n\nconst funcs = {\n    \"char\":      utfchar,\n    \"codepoint\": codepoint,\n    \"codes\":     iter_codes,\n    \"len\":       utflen,\n    \"offset\":    byteoffset\n};\n\n/* pattern to match a single UTF-8 character */\nconst UTF8PATT = luastring_of(91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42);\n\nconst luaopen_utf8 = function(L) {\n    luaL_newlib(L, funcs);\n    lua_pushstring(L, UTF8PATT);\n    lua_setfield(L, -2, to_luastring(\"charpattern\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_utf8 = luaopen_utf8;\n","\"use strict\";\n\nconst {\n    LUA_OPLT,\n    LUA_TNUMBER,\n    lua_compare,\n    lua_gettop,\n    lua_isinteger,\n    lua_isnoneornil,\n    lua_pushboolean,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushvalue,\n    lua_setfield,\n    lua_settop,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_error,\n    luaL_newlib,\n    luaL_optnumber\n} = require('./lauxlib.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nlet rand_state;\n/* use same parameters as glibc LCG */\nconst l_rand = function() {\n    rand_state = (1103515245 * rand_state + 12345) & 0x7fffffff;\n    return rand_state;\n};\nconst l_srand = function(x) {\n    rand_state = x|0;\n    if (rand_state === 0)\n        rand_state = 1;\n};\n\nconst math_random = function(L) {\n    let low, up;\n    /* use Math.random until randomseed is called */\n    let r = (rand_state === void 0)?Math.random():(l_rand() / 0x80000000);\n    switch (lua_gettop(L)) {  /* check number of arguments */\n        case 0:\n            lua_pushnumber(L, r);  /* Number between 0 and 1 */\n            return 1;\n        case 1: {\n            low = 1;\n            up = luaL_checkinteger(L, 1);\n            break;\n        }\n        case 2: {\n            low = luaL_checkinteger(L, 1);\n            up = luaL_checkinteger(L, 2);\n            break;\n        }\n        default: return luaL_error(L, \"wrong number of arguments\");\n    }\n\n    /* random integer in the interval [low, up] */\n    luaL_argcheck(L, low <= up, 1, \"interval is empty\");\n    luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,\n        \"interval too large\");\n\n    r *= (up - low) + 1;\n    lua_pushinteger(L, Math.floor(r) + low);\n    return 1;\n};\n\nconst math_randomseed = function(L) {\n    l_srand(luaL_checknumber(L, 1));\n    l_rand(); /* discard first value to avoid undesirable correlations */\n    return 0;\n};\n\nconst math_abs = function(L) {\n    if (lua_isinteger(L, 1)) {\n        let n = lua_tointeger(L, 1);\n        if (n < 0) n = (-n)|0;\n        lua_pushinteger(L, n);\n    }\n    else\n        lua_pushnumber(L, Math.abs(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_sin = function(L) {\n    lua_pushnumber(L, Math.sin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_cos = function(L) {\n    lua_pushnumber(L, Math.cos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_tan = function(L) {\n    lua_pushnumber(L, Math.tan(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_asin = function(L) {\n    lua_pushnumber(L, Math.asin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_acos = function(L) {\n    lua_pushnumber(L, Math.acos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_atan = function(L) {\n    let y = luaL_checknumber(L, 1);\n    let x = luaL_optnumber(L, 2, 1);\n    lua_pushnumber(L, Math.atan2(y, x));\n    return 1;\n};\n\nconst math_toint = function(L) {\n    let n = lua_tointegerx(L, 1);\n    if (n !== false)\n        lua_pushinteger(L, n);\n    else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);  /* value is not convertible to integer */\n    }\n    return 1;\n};\n\nconst pushnumint = function(L, d) {\n    let n = lua_numbertointeger(d);\n    if (n !== false)  /* does 'd' fit in an integer? */\n        lua_pushinteger(L, n);  /* result is integer */\n    else\n        lua_pushnumber(L, d);  /* result is float */\n};\n\nconst math_floor = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.floor(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_ceil = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.ceil(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_sqrt = function(L) {\n    lua_pushnumber(L, Math.sqrt(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_ult = function(L) {\n    let a = luaL_checkinteger(L, 1);\n    let b = luaL_checkinteger(L, 2);\n    lua_pushboolean(L, (a >= 0)?(b<0 || a<b):(b<0 && a<b));\n    return 1;\n};\n\nconst math_log = function(L) {\n    let x = luaL_checknumber(L, 1);\n    let res;\n    if (lua_isnoneornil(L, 2))\n        res = Math.log(x);\n    else {\n        let base = luaL_checknumber(L, 2);\n        if (base === 2)\n            res = Math.log2(x);\n        else if (base === 10)\n            res = Math.log10(x);\n        else\n            res = Math.log(x)/Math.log(base);\n    }\n    lua_pushnumber(L, res);\n    return 1;\n};\n\nconst math_exp = function(L) {\n    lua_pushnumber(L, Math.exp(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_deg = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (180 / Math.PI));\n    return 1;\n};\n\nconst math_rad = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (Math.PI / 180));\n    return 1;\n};\n\nconst math_min = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imin = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, i, imin, LUA_OPLT))\n            imin = i;\n    }\n    lua_pushvalue(L, imin);\n    return 1;\n};\n\nconst math_max = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imax = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, imax, i, LUA_OPLT))\n            imax = i;\n    }\n    lua_pushvalue(L, imax);\n    return 1;\n};\n\nconst math_type = function(L) {\n    if (lua_type(L, 1) === LUA_TNUMBER) {\n        if (lua_isinteger(L, 1))\n            lua_pushliteral(L, \"integer\");\n        else\n            lua_pushliteral(L, \"float\");\n    } else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);\n    }\n    return 1;\n};\n\nconst math_fmod = function(L) {\n    if (lua_isinteger(L, 1) && lua_isinteger(L, 2)) {\n        let d = lua_tointeger(L, 2);\n        /* no special case needed for -1 in javascript */\n        if (d === 0) {\n            luaL_argerror(L, 2, \"zero\");\n        } else\n            lua_pushinteger(L, (lua_tointeger(L, 1) % d)|0);\n    } else {\n        let a = luaL_checknumber(L, 1);\n        let b = luaL_checknumber(L, 2);\n        lua_pushnumber(L, a%b);\n    }\n    return 1;\n};\n\nconst math_modf = function(L) {\n    if (lua_isinteger(L, 1)) {\n        lua_settop(L, 1);  /* number is its own integer part */\n        lua_pushnumber(L, 0);  /* no fractional part */\n    } else {\n        let n = luaL_checknumber(L, 1);\n        let ip = n < 0 ? Math.ceil(n) : Math.floor(n);\n        pushnumint(L, ip);\n        lua_pushnumber(L, n === ip ? 0 : n - ip);\n    }\n    return 2;\n};\n\nconst mathlib = {\n    \"abs\":        math_abs,\n    \"acos\":       math_acos,\n    \"asin\":       math_asin,\n    \"atan\":       math_atan,\n    \"ceil\":       math_ceil,\n    \"cos\":        math_cos,\n    \"deg\":        math_deg,\n    \"exp\":        math_exp,\n    \"floor\":      math_floor,\n    \"fmod\":       math_fmod,\n    \"log\":        math_log,\n    \"max\":        math_max,\n    \"min\":        math_min,\n    \"modf\":       math_modf,\n    \"rad\":        math_rad,\n    \"random\":     math_random,\n    \"randomseed\": math_randomseed,\n    \"sin\":        math_sin,\n    \"sqrt\":       math_sqrt,\n    \"tan\":        math_tan,\n    \"tointeger\":  math_toint,\n    \"type\":       math_type,\n    \"ult\":        math_ult\n};\n\nconst luaopen_math = function(L) {\n    luaL_newlib(L, mathlib);\n    lua_pushnumber(L, Math.PI);\n    lua_setfield(L, -2, to_luastring(\"pi\", true));\n    lua_pushnumber(L, Infinity);\n    lua_setfield(L, -2, to_luastring(\"huge\", true));\n    lua_pushinteger(L, LUA_MAXINTEGER);\n    lua_setfield(L, -2, to_luastring(\"maxinteger\", true));\n    lua_pushinteger(L, LUA_MININTEGER);\n    lua_setfield(L, -2, to_luastring(\"mininteger\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_math = luaopen_math;\n","\"use strict\";\n\nconst {\n    LUA_MASKCALL,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_REGISTRYINDEX,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    LUA_TUSERDATA,\n    lua_Debug,\n    lua_call,\n    lua_checkstack,\n    lua_gethook,\n    lua_gethookcount,\n    lua_gethookmask,\n    lua_getinfo,\n    lua_getlocal,\n    lua_getmetatable,\n    lua_getstack,\n    lua_getupvalue,\n    lua_getuservalue,\n    lua_insert,\n    lua_iscfunction,\n    lua_isfunction,\n    lua_isnoneornil,\n    lua_isthread,\n    lua_newtable,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgetp,\n    lua_rawsetp,\n    lua_rotate,\n    lua_setfield,\n    lua_sethook,\n    lua_setlocal,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_setuservalue,\n    lua_tojsstring,\n    lua_toproxy,\n    lua_tostring,\n    lua_tothread,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueid,\n    lua_upvaluejoin,\n    lua_xmove\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_loadbuffer,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_traceback,\n    lua_writestringerror\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/*\n** If L1 != L, L1 can be in any state, and therefore there are no\n** guarantees about its stack space; any push in L1 must be\n** checked.\n*/\nconst checkstack = function(L, L1, n) {\n    if (L !== L1 && !lua_checkstack(L1, n))\n        luaL_error(L, to_luastring(\"stack overflow\", true));\n};\n\nconst db_getregistry = function(L) {\n    lua_pushvalue(L, LUA_REGISTRYINDEX);\n    return 1;\n};\n\nconst db_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);  /* no metatable */\n    }\n    return 1;\n};\n\nconst db_setmetatable = function(L) {\n    const t = lua_type(L, 2);\n    luaL_argcheck(L, t == LUA_TNIL || t == LUA_TTABLE, 2, \"nil or table expected\");\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;  /* return 1st argument */\n};\n\nconst db_getuservalue = function(L) {\n    if (lua_type(L, 1) !== LUA_TUSERDATA)\n        lua_pushnil(L);\n    else\n        lua_getuservalue(L, 1);\n    return 1;\n};\n\n\nconst db_setuservalue = function(L) {\n    luaL_checktype(L, 1, LUA_TUSERDATA);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_setuservalue(L, 1);\n    return 1;\n};\n\n/*\n** Auxiliary function used by several library functions: check for\n** an optional thread as function's first argument and set 'arg' with\n** 1 if this argument is present (so that functions can skip it to\n** access their other arguments)\n*/\nconst getthread = function(L) {\n    if (lua_isthread(L, 1)) {\n        return {\n            arg: 1,\n            thread: lua_tothread(L, 1)\n        };\n    } else {\n        return {\n            arg: 0,\n            thread: L\n        };  /* function will operate over current thread */\n    }\n};\n\n/*\n** Variations of 'lua_settable', used by 'db_getinfo' to put results\n** from 'lua_getinfo' into result table. Key is always a string;\n** value can be a string, an int, or a boolean.\n*/\nconst settabss = function(L, k, v) {\n    lua_pushstring(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsi = function(L, k, v) {\n    lua_pushinteger(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsb = function(L, k, v) {\n    lua_pushboolean(L, v);\n    lua_setfield(L, -2, k);\n};\n\n\n/*\n** In function 'db_getinfo', the call to 'lua_getinfo' may push\n** results on the stack; later it creates the result table to put\n** these objects. Function 'treatstackoption' puts the result from\n** 'lua_getinfo' on top of the result table so that it can call\n** 'lua_setfield'.\n*/\nconst treatstackoption = function(L, L1, fname) {\n    if (L == L1)\n        lua_rotate(L, -2, 1);  /* exchange object and table */\n    else\n        lua_xmove(L1, L, 1);  /* move object to the \"main\" stack */\n    lua_setfield(L, -2, fname);  /* put object into table */\n};\n\n/*\n** Calls 'lua_getinfo' and collects all results in a new table.\n** L1 needs stack space for an optional input (function) plus\n** two optional outputs (function and line table) from function\n** 'lua_getinfo'.\n*/\nconst db_getinfo = function(L) {\n    let ar = new lua_Debug();\n    let thread = getthread(L);\n    let arg = thread.arg;\n    let L1 = thread.thread;\n    let options = luaL_optstring(L, arg + 2, \"flnStu\");\n    checkstack(L, L1, 3);\n    if (lua_isfunction(L, arg + 1)) {  /* info about a function? */\n        options = lua_pushfstring(L, to_luastring(\">%s\"), options);  /* add '>' to 'options' */\n        lua_pushvalue(L, arg + 1);  /* move function to 'L1' stack */\n        lua_xmove(L, L1, 1);\n    } else {  /* stack level */\n        if (!lua_getstack(L1, luaL_checkinteger(L, arg + 1), ar)) {\n            lua_pushnil(L);  /* level out of range */\n            return 1;\n        }\n    }\n\n    if (!lua_getinfo(L1, options, ar))\n        luaL_argerror(L, arg + 2, \"invalid option\");\n    lua_newtable(L);  /* table to collect results */\n    if (luastring_indexOf(options, 83 /* 'S'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"source\", true), ar.source);\n        settabss(L, to_luastring(\"short_src\", true), ar.short_src);\n        settabsi(L, to_luastring(\"linedefined\", true), ar.linedefined);\n        settabsi(L, to_luastring(\"lastlinedefined\", true), ar.lastlinedefined);\n        settabss(L, to_luastring(\"what\", true), ar.what);\n    }\n    if (luastring_indexOf(options, 108 /* 'l'.charCodeAt(0) */) > -1)\n        settabsi(L, to_luastring(\"currentline\", true), ar.currentline);\n    if (luastring_indexOf(options, 117 /* 'u'.charCodeAt(0) */) > -1) {\n        settabsi(L, to_luastring(\"nups\", true), ar.nups);\n        settabsi(L, to_luastring(\"nparams\", true), ar.nparams);\n        settabsb(L, to_luastring(\"isvararg\", true), ar.isvararg);\n    }\n    if (luastring_indexOf(options, 110 /* 'n'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"name\", true), ar.name);\n        settabss(L, to_luastring(\"namewhat\", true), ar.namewhat);\n    }\n    if (luastring_indexOf(options, 116 /* 't'.charCodeAt(0) */) > -1)\n        settabsb(L, to_luastring(\"istailcall\", true), ar.istailcall);\n    if (luastring_indexOf(options, 76 /* 'L'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"activelines\", true));\n    if (luastring_indexOf(options, 102 /* 'f'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"func\", true));\n    return 1;  /* return table */\n};\n\nconst db_getlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let nvar = luaL_checkinteger(L, arg + 2);  /* local-variable index */\n    if (lua_isfunction(L, arg + 1)) {\n        lua_pushvalue(L, arg + 1);  /* push function */\n        lua_pushstring(L, lua_getlocal(L, null, nvar));  /* push local name */\n        return 1;  /* return only name (there is no value) */\n    } else {  /* stack-level argument */\n        let level = luaL_checkinteger(L, arg + 1);\n        if (!lua_getstack(L1, level, ar))  /* out of range? */\n            return luaL_argerror(L, arg+1, \"level out of range\");\n        checkstack(L, L1, 1);\n        let name = lua_getlocal(L1, ar, nvar);\n        if (name) {\n            lua_xmove(L1, L, 1);  /* move local value */\n            lua_pushstring(L, name);  /* push name */\n            lua_rotate(L, -2, 1);  /* re-order */\n            return 2;\n        }\n        else {\n            lua_pushnil(L);  /* no name (nor value) */\n            return 1;\n        }\n    }\n};\n\nconst db_setlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let level = luaL_checkinteger(L, arg + 1);\n    let nvar = luaL_checkinteger(L, arg + 2);\n    if (!lua_getstack(L1, level, ar))  /* out of range? */\n        return luaL_argerror(L, arg + 1, \"level out of range\");\n    luaL_checkany(L, arg + 3);\n    lua_settop(L, arg + 3);\n    checkstack(L, L1, 1);\n    lua_xmove(L, L1, 1);\n    let name = lua_setlocal(L1, ar, nvar);\n    if (name === null)\n        lua_pop(L1, 1);  /* pop value (if not popped by 'lua_setlocal') */\n    lua_pushstring(L, name);\n    return 1;\n};\n\n/*\n** get (if 'get' is true) or set an upvalue from a closure\n*/\nconst auxupvalue = function(L, get) {\n    let n = luaL_checkinteger(L, 2);  /* upvalue index */\n    luaL_checktype(L, 1, LUA_TFUNCTION);  /* closure */\n    let name = get ? lua_getupvalue(L, 1, n) : lua_setupvalue(L, 1, n);\n    if (name === null) return 0;\n    lua_pushstring(L, name);\n    lua_insert(L, -(get+1));  /* no-op if get is false */\n    return get + 1;\n};\n\n\nconst db_getupvalue = function(L) {\n    return auxupvalue(L, 1);\n};\n\nconst db_setupvalue = function(L) {\n    luaL_checkany(L, 3);\n    return auxupvalue(L, 0);\n};\n\n/*\n** Check whether a given upvalue from a given closure exists and\n** returns its index\n*/\nconst checkupval = function(L, argf, argnup) {\n    let nup = luaL_checkinteger(L, argnup);  /* upvalue index */\n    luaL_checktype(L, argf, LUA_TFUNCTION);  /* closure */\n    luaL_argcheck(L, (lua_getupvalue(L, argf, nup) !== null), argnup, \"invalid upvalue index\");\n    return nup;\n};\n\nconst db_upvalueid = function(L) {\n    let n = checkupval(L, 1, 2);\n    lua_pushlightuserdata(L, lua_upvalueid(L, 1, n));\n    return 1;\n};\n\nconst db_upvaluejoin = function(L) {\n    let n1 = checkupval(L, 1, 2);\n    let n2 = checkupval(L, 3, 4);\n    luaL_argcheck(L, !lua_iscfunction(L, 1), 1, \"Lua function expected\");\n    luaL_argcheck(L, !lua_iscfunction(L, 3), 3, \"Lua function expected\");\n    lua_upvaluejoin(L, 1, n1, 3, n2);\n    return 0;\n};\n\n/*\n** The hook table at registry[HOOKKEY] maps threads to their current\n** hook function. (We only need the unique address of 'HOOKKEY'.)\n*/\nconst HOOKKEY = to_luastring(\"__hooks__\", true);\n\nconst hooknames = [\"call\", \"return\", \"line\", \"count\", \"tail call\"].map(e => to_luastring(e));\n\n/*\n** Call hook function registered at hook table for the current\n** thread (if there is one)\n*/\nconst hookf = function(L, ar) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n    let hooktable = lua_touserdata(L, -1);\n    let proxy = hooktable.get(L);\n    if (proxy) {  /* is there a hook function? */\n        proxy(L);\n        lua_pushstring(L, hooknames[ar.event]);  /* push event name */\n        if (ar.currentline >= 0)\n            lua_pushinteger(L, ar.currentline);  /* push current line */\n        else lua_pushnil(L);\n        lualib.lua_assert(lua_getinfo(L, to_luastring(\"lS\"), ar));\n        lua_call(L, 2, 0);  /* call hook function */\n    }\n};\n\n/*\n** Convert a string mask (for 'sethook') into a bit mask\n*/\nconst makemask = function(smask, count) {\n    let mask = 0;\n    if (luastring_indexOf(smask, 99 /* 'c'.charCodeAt(0) */) > -1) mask |= LUA_MASKCALL;\n    if (luastring_indexOf(smask, 114 /* 'r'.charCodeAt(0) */) > -1) mask |= LUA_MASKRET;\n    if (luastring_indexOf(smask, 108 /* 'l'.charCodeAt(0) */) > -1) mask |= LUA_MASKLINE;\n    if (count > 0) mask |= LUA_MASKCOUNT;\n    return mask;\n};\n\n/*\n** Convert a bit mask (for 'gethook') into a string mask\n*/\nconst unmakemask = function(mask, smask) {\n    let i = 0;\n    if (mask & LUA_MASKCALL) smask[i++] = 99 /* 'c'.charCodeAt(0) */;\n    if (mask & LUA_MASKRET) smask[i++] = 114 /* 'r'.charCodeAt(0) */;\n    if (mask & LUA_MASKLINE) smask[i++] = 108 /* 'l'.charCodeAt(0) */;\n    return smask.subarray(0, i);\n};\n\nconst db_sethook = function(L) {\n    let mask, count, func;\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    if (lua_isnoneornil(L, arg+1)) {  /* no hook? */\n        lua_settop(L, arg+1);\n        func = null; mask = 0; count = 0;  /* turn off hooks */\n    }\n    else {\n        const smask = luaL_checkstring(L, arg + 2);\n        luaL_checktype(L, arg+1, LUA_TFUNCTION);\n        count = luaL_optinteger(L, arg + 3, 0);\n        func = hookf; mask = makemask(smask, count);\n    }\n    /* as weak tables are not supported; use a JS weak-map */\n    let hooktable;\n    if (lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY) === LUA_TNIL) {\n        hooktable = new WeakMap();\n        lua_pushlightuserdata(L, hooktable);\n        lua_rawsetp(L, LUA_REGISTRYINDEX, HOOKKEY);  /* set it in position */\n    } else {\n        hooktable = lua_touserdata(L, -1);\n    }\n    let proxy = lua_toproxy(L, arg + 1);  /* value (hook function) */\n    hooktable.set(L1, proxy);\n    lua_sethook(L1, func, mask, count);\n    return 0;\n};\n\nconst db_gethook = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let buff = new Uint8Array(5);\n    let mask = lua_gethookmask(L1);\n    let hook = lua_gethook(L1);\n    if (hook === null)  /* no hook? */\n        lua_pushnil(L);\n    else if (hook !== hookf)  /* external hook? */\n        lua_pushliteral(L, \"external hook\");\n    else {  /* hook table must exist */\n        lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n        let hooktable = lua_touserdata(L, -1);\n        let proxy = hooktable.get(L1);\n        proxy(L);\n    }\n    lua_pushstring(L, unmakemask(mask, buff));  /* 2nd result = mask */\n    lua_pushinteger(L, lua_gethookcount(L1));  /* 3rd result = count */\n    return 3;\n};\n\nconst db_traceback = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let msg = lua_tostring(L, arg + 1);\n    if (msg === null && !lua_isnoneornil(L, arg + 1))  /* non-string 'msg'? */\n        lua_pushvalue(L, arg + 1);  /* return it untouched */\n    else {\n        let level = luaL_optinteger(L, arg + 2, L === L1 ? 1 : 0);\n        luaL_traceback(L, L1, msg, level);\n    }\n    return 1;\n};\n\nconst dblib = {\n    \"gethook\":      db_gethook,\n    \"getinfo\":      db_getinfo,\n    \"getlocal\":     db_getlocal,\n    \"getmetatable\": db_getmetatable,\n    \"getregistry\":  db_getregistry,\n    \"getupvalue\":   db_getupvalue,\n    \"getuservalue\": db_getuservalue,\n    \"sethook\":      db_sethook,\n    \"setlocal\":     db_setlocal,\n    \"setmetatable\": db_setmetatable,\n    \"setupvalue\":   db_setupvalue,\n    \"setuservalue\": db_setuservalue,\n    \"traceback\":    db_traceback,\n    \"upvalueid\":    db_upvalueid,\n    \"upvaluejoin\":  db_upvaluejoin\n};\n\nlet getinput;\nif (typeof process !== \"undefined\") { // Only with Node\n    const readlineSync = require('readline-sync');\n    readlineSync.setDefaultOptions({\n        prompt: 'lua_debug> '\n    });\n    getinput = function() {\n        return readlineSync.prompt();\n    };\n} else if (typeof window !== \"undefined\") {\n    /* if in browser use window.prompt. Doesn't work from web workers.\n       See https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n    */\n    getinput = function() {\n        let input = prompt(\"lua_debug>\", \"\");\n        return (input !== null) ? input : \"\";\n    };\n}\nif (getinput) {\n    dblib.debug = function(L) {\n        for (;;) {\n            let input = getinput();\n\n            if (input === \"cont\")\n                return 0;\n\n            if (input.length === 0)\n                continue;\n\n            let buffer = to_luastring(input);\n            if (luaL_loadbuffer(L, buffer, buffer.length, to_luastring(\"=(debug command)\", true))\n                || lua_pcall(L, 0, 0, 0)) {\n                lua_writestringerror(lua_tojsstring(L, -1), \"\\n\");\n            }\n            lua_settop(L, 0);  /* remove eventual returns */\n        }\n    };\n}\n\nconst luaopen_debug = function(L) {\n    luaL_newlib(L, dblib);\n    return 1;\n};\n\nmodule.exports.luaopen_debug = luaopen_debug;\n","\"use strict\";\n\nconst {\n    LUA_DIRSEP,\n    LUA_EXEC_DIR,\n    LUA_JSPATH_DEFAULT,\n    LUA_PATH_DEFAULT,\n    LUA_PATH_MARK,\n    LUA_PATH_SEP\n} = require('./luaconf.js');\nconst {\n    LUA_OK,\n    LUA_REGISTRYINDEX,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_callk,\n    lua_createtable,\n    lua_getfield,\n    lua_insert,\n    lua_isfunction,\n    lua_isnil,\n    lua_isstring,\n    lua_newtable,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushglobaltable,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgeti,\n    lua_rawgetp,\n    lua_rawseti,\n    lua_rawsetp,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tostring,\n    lua_touserdata,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    LUA_LOADED_TABLE,\n    LUA_PRELOAD_TABLE,\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_buffinit,\n    luaL_checkstring,\n    luaL_error,\n    luaL_getsubtable,\n    luaL_gsub,\n    luaL_len,\n    luaL_loadfile,\n    luaL_newlib,\n    luaL_optstring,\n    luaL_pushresult,\n    luaL_setfuncs\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\nconst fengari  = require('./fengari.js');\n\nconst global_env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return global;\n    } else if (typeof window !== \"undefined\") {\n        /* browser window */\n        return window;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        /* web worker */\n        return self;\n    } else {\n        /* unknown global env */\n        return (0, eval)('this'); /* use non-strict mode to get global env */\n    }\n})();\n\nconst JSLIBS = to_luastring(\"__JSLIBS__\");\nconst LUA_PATH_VAR = \"LUA_PATH\";\nconst LUA_JSPATH_VAR = \"LUA_JSPATH\";\n\nconst LUA_IGMARK = \"-\";\n\n/*\n** LUA_CSUBSEP is the character that replaces dots in submodule names\n** when searching for a JS loader.\n** LUA_LSUBSEP is the character that replaces dots in submodule names\n** when searching for a Lua loader.\n*/\nconst LUA_CSUBSEP = LUA_DIRSEP;\nconst LUA_LSUBSEP = LUA_DIRSEP;\n\n/* prefix for open functions in JS libraries */\nconst LUA_POF = to_luastring(\"luaopen_\");\n\n/* separator for open functions in JS libraries */\nconst LUA_OFSEP = to_luastring(\"_\");\nconst LIB_FAIL = \"open\";\n\nconst AUXMARK = to_luastring(\"\\x01\");\n\n\n/*\n** load JS library in file 'path'. If 'seeglb', load with all names in\n** the library global.\n** Returns the library; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nlet lsys_load;\nif (typeof process === \"undefined\") {\n    lsys_load = function(L, path, seeglb) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n            lua_pushstring(L, to_luastring(`${xhr.status}: ${xhr.statusText}`));\n            return null;\n        }\n\n        let code = xhr.response;\n        /* Add sourceURL comment to get path in debugger+tracebacks */\n        if (!/\\/\\/[#@] sourceURL=/.test(code))\n            code += \" //# sourceURL=\" + path;\n        let func;\n        try {\n            func = Function(\"fengari\", code);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(`${e.name}: ${e.message}`));\n            return null;\n        }\n        let res = func(fengari);\n        if (typeof res === \"function\" || (typeof res === \"object\" && res !== null)) {\n            return res;\n        } else if (res === void 0) { /* assume library added symbols to global environment */\n            return global_env;\n        } else {\n            lua_pushstring(L, to_luastring(`library returned unexpected type (${typeof res})`));\n            return null;\n        }\n    };\n} else {\n    const pathlib = require('path');\n    lsys_load = function(L, path, seeglb) {\n        path = to_jsstring(path);\n        /* relative paths should be relative to cwd, not this js file */\n        path = pathlib.resolve(process.cwd(), path);\n        try {\n            return require(path);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(e.message));\n            return null;\n        }\n    };\n}\n\n/*\n** Try to find a function named 'sym' in library 'lib'.\n** Returns the function; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nconst lsys_sym = function(L, lib, sym) {\n    let f = lib[to_jsstring(sym)];\n\n    if (f && typeof f === 'function')\n        return f;\n    else {\n        lua_pushfstring(L, to_luastring(\"undefined symbol: %s\"), sym);\n        return null;\n    }\n};\n\n/*\n** return registry.LUA_NOENV as a boolean\n*/\nconst noenv = function(L) {\n    lua_getfield(L, LUA_REGISTRYINDEX, to_luastring(\"LUA_NOENV\"));\n    let b = lua_toboolean(L, -1);\n    lua_pop(L, 1);  /* remove value */\n    return b;\n};\n\nlet readable;\nif (typeof process !== \"undefined\") { // Only with Node\n    const fs = require('fs');\n\n    readable = function(filename) {\n        try {\n            let fd = fs.openSync(filename, 'r');\n            fs.closeSync(fd);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n} else {\n    readable = function(path) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        /* Following GET request done by searcher_Web will be cached */\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        return xhr.status >= 200 && xhr.status <= 299;\n    };\n}\n\n\n/* error codes for 'lookforfunc' */\nconst ERRLIB  = 1;\nconst ERRFUNC = 2;\n\n/*\n** Look for a C function named 'sym' in a dynamically loaded library\n** 'path'.\n** First, check whether the library is already loaded; if not, try\n** to load it.\n** Then, if 'sym' is '*', return true (as library has been loaded).\n** Otherwise, look for symbol 'sym' in the library and push a\n** C function with that symbol.\n** Return 0 and 'true' or a function in the stack; in case of\n** errors, return an error code and an error message in the stack.\n*/\nconst lookforfunc = function(L, path, sym) {\n    let reg = checkjslib(L, path);  /* check loaded JS libraries */\n    if (reg === null) {  /* must load library? */\n        reg = lsys_load(L, path, sym[0] === '*'.charCodeAt(0));  /* a global symbols if 'sym'=='*' */\n        if (reg === null) return ERRLIB;  /* unable to load library */\n        addtojslib(L, path, reg);\n    }\n    if (sym[0] === '*'.charCodeAt(0)) {  /* loading only library (no function)? */\n        lua_pushboolean(L, 1);  /* return 'true' */\n        return 0;  /* no errors */\n    }\n    else {\n        let f = lsys_sym(L, reg, sym);\n        if (f === null)\n            return ERRFUNC;  /* unable to find function */\n        lua_pushcfunction(L, f);  /* else create new function */\n        return 0;  /* no errors */\n    }\n};\n\nconst ll_loadlib = function(L) {\n    let path = luaL_checkstring(L, 1);\n    let init = luaL_checkstring(L, 2);\n    let stat = lookforfunc(L, path, init);\n    if (stat === 0)  /* no errors? */\n        return 1;  /* return the loaded function */\n    else {  /* error; error message is on stack top */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        lua_pushliteral(L, (stat === ERRLIB) ? LIB_FAIL : \"init\");\n        return 3;  /* return nil, error message, and where */\n    }\n};\n\nconst env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return process.env;\n    } else {\n        return global_env;\n    }\n})();\n\n/*\n** Set a path\n*/\nconst setpath = function(L, fieldname, envname, dft) {\n    let nver = `${envname}${lualib.LUA_VERSUFFIX}`;\n    lua_pushstring(L, to_luastring(nver));\n    let path = env[nver];  /* use versioned name */\n    if (path === undefined)  /* no environment variable? */\n        path = env[envname];  /* try unversioned name */\n    if (path === undefined || noenv(L))  /* no environment variable? */\n        lua_pushstring(L, dft);  /* use default */\n    else {\n        /* replace \";;\" by \";AUXMARK;\" and then AUXMARK by default path */\n        path = luaL_gsub(\n            L,\n            to_luastring(path),\n            to_luastring(LUA_PATH_SEP + LUA_PATH_SEP, true),\n            to_luastring(LUA_PATH_SEP + to_jsstring(AUXMARK) + LUA_PATH_SEP, true)\n        );\n        luaL_gsub(L, path, AUXMARK, dft);\n        lua_remove(L, -2); /* remove result from 1st 'gsub' */\n    }\n    lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */\n    lua_pop(L, 1);  /* pop versioned variable name */\n};\n\n/*\n** return registry.JSLIBS[path]\n*/\nconst checkjslib = function(L, path) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_getfield(L, -1, path);\n    let plib = lua_touserdata(L, -1);  /* plib = JSLIBS[path] */\n    lua_pop(L, 2);  /* pop JSLIBS table and 'plib' */\n    return plib;\n};\n\n/*\n** registry.JSLIBS[path] = plib        -- for queries\n** registry.JSLIBS[#JSLIBS + 1] = plib  -- also keep a list of all libraries\n*/\nconst addtojslib = function(L, path, plib) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_pushlightuserdata(L, plib);\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -3, path);  /* JSLIBS[path] = plib */\n    lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* JSLIBS[#JSLIBS + 1] = plib */\n    lua_pop(L, 1);  /* pop JSLIBS table */\n};\n\nconst pushnexttemplate = function(L, path) {\n    while (path[0] === LUA_PATH_SEP.charCodeAt(0)) path = path.subarray(1);  /* skip separators */\n    if (path.length === 0) return null;  /* no more templates */\n    let l = luastring_indexOf(path, LUA_PATH_SEP.charCodeAt(0));  /* find next separator */\n    if (l < 0) l = path.length;\n    lua_pushlstring(L, path, l);  /* template */\n    return path.subarray(l);\n};\n\nconst searchpath = function(L, name, path, sep, dirsep) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    if (sep[0] !== 0)  /* non-empty separator? */\n        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */\n    while ((path = pushnexttemplate(L, path)) !== null) {\n        let filename = luaL_gsub(L, lua_tostring(L, -1), to_luastring(LUA_PATH_MARK, true), name);\n        lua_remove(L, -2);  /* remove path template */\n        if (readable(filename))  /* does file exist and is readable? */\n            return filename;  /* return that file name */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno file '%s'\"), filename);\n        lua_remove(L, -2);  /* remove file name */\n        luaL_addvalue(msg);\n    }\n    luaL_pushresult(msg);  /* create error message */\n    return null;  /* not found */\n};\n\nconst ll_searchpath = function(L) {\n    let f = searchpath(\n        L,\n        luaL_checkstring(L, 1),\n        luaL_checkstring(L, 2),\n        luaL_optstring(L, 3, \".\"),\n        luaL_optstring(L, 4, LUA_DIRSEP)\n    );\n    if (f !== null) return 1;\n    else {  /* error message is on top of the stack */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        return 2;  /* return nil + error message */\n    }\n};\n\nconst findfile = function(L, name, pname, dirsep) {\n    lua_getfield(L, lua_upvalueindex(1), pname);\n    let path = lua_tostring(L, -1);\n    if (path === null)\n        luaL_error(L, to_luastring(\"'package.%s' must be a string\"), pname);\n    return searchpath(L, name, path, to_luastring(\".\"), dirsep);\n};\n\nconst checkload = function(L, stat, filename) {\n    if (stat) {  /* module loaded successfully? */\n        lua_pushstring(L, filename);  /* will be 2nd argument to module */\n        return 2;  /* return open function and file name */\n    } else\n        return luaL_error(L, to_luastring(\"error loading module '%s' from file '%s':\\n\\t%s\"),\n            lua_tostring(L, 1), filename, lua_tostring(L, -1));\n};\n\nconst searcher_Lua = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"path\", true), to_luastring(LUA_LSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, luaL_loadfile(L, filename) === LUA_OK, filename);\n};\n\n/*\n** Try to find a load function for module 'modname' at file 'filename'.\n** First, change '.' to '_' in 'modname'; then, if 'modname' has\n** the form X-Y (that is, it has an \"ignore mark\"), build a function\n** name \"luaopen_X\" and look for it. (For compatibility, if that\n** fails, it also tries \"luaopen_Y\".) If there is no ignore mark,\n** look for a function named \"luaopen_modname\".\n*/\nconst loadfunc = function(L, filename, modname) {\n    let openfunc;\n    modname = luaL_gsub(L, modname, to_luastring(\".\"), LUA_OFSEP);\n    let mark = luastring_indexOf(modname, LUA_IGMARK.charCodeAt(0));\n    if (mark >= 0) {\n        openfunc = lua_pushlstring(L, modname, mark);\n        openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, openfunc);\n        let stat = lookforfunc(L, filename, openfunc);\n        if (stat !== ERRFUNC) return stat;\n        modname = mark + 1;  /* else go ahead and try old-style name */\n    }\n    openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, modname);\n    return lookforfunc(L, filename, openfunc);\n};\n\nconst searcher_C = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, (loadfunc(L, filename, name) === 0), filename);\n};\n\nconst searcher_Croot = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let p = luastring_indexOf(name, '.'.charCodeAt(0));\n    let stat;\n    if (p < 0) return 0;  /* is root */\n    lua_pushlstring(L, name, p);\n    let filename = findfile(L, lua_tostring(L, -1), to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* root not found */\n    if ((stat = loadfunc(L, filename, name)) !== 0) {\n        if (stat != ERRFUNC)\n            return checkload(L, 0, filename);  /* real error */\n        else {  /* open function not found */\n            lua_pushstring(L, to_luastring(\"\\n\\tno module '%s' in file '%s'\"), name, filename);\n            return 1;\n        }\n    }\n    lua_pushstring(L, filename);  /* will be 2nd argument to module */\n    return 2;\n};\n\nconst searcher_preload = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    if (lua_getfield(L, -1, name) === LUA_TNIL)  /* not found? */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno field package.preload['%s']\"), name);\n    return 1;\n};\n\nconst findloader = function(L, name, ctx, k) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    /* push 'package.searchers' to index 3 in the stack */\n    if (lua_getfield(L, lua_upvalueindex(1), to_luastring(\"searchers\", true)) !== LUA_TTABLE)\n        luaL_error(L, to_luastring(\"'package.searchers' must be a table\"));\n    let ctx2 = {name: name, i: 1, msg: msg, ctx: ctx, k: k};\n    return findloader_cont(L, LUA_OK, ctx2);\n};\n\nconst findloader_cont = function(L, status, ctx) {\n    /*  iterate over available searchers to find a loader */\n    for (; ; ctx.i++) {\n        if (status === LUA_OK) {\n            if (lua_rawgeti(L, 3, ctx.i) === LUA_TNIL) {  /* no more searchers? */\n                lua_pop(L, 1);  /* remove nil */\n                luaL_pushresult(ctx.msg);  /* create error message */\n                luaL_error(L, to_luastring(\"module '%s' not found:%s\"), ctx.name, lua_tostring(L, -1));\n            }\n            lua_pushstring(L, ctx.name);\n            lua_callk(L, 1, 2, ctx, findloader_cont);  /* call it */\n        } else {\n            status = LUA_OK;\n        }\n        if (lua_isfunction(L, -2))  /* did it find a loader? */\n            break;  /* module loader found */\n        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */\n            lua_pop(L, 1);  /* remove extra return */\n            luaL_addvalue(ctx.msg);  /* concatenate error message */\n        }\n        else\n            lua_pop(L, 2);  /* remove both returns */\n    }\n    return ctx.k(L, LUA_OK, ctx.ctx);\n};\n\nconst ll_require = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_settop(L, 1);  /* LOADED table will be at index 2 */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, 2, name);  /* LOADED[name] */\n    if (lua_toboolean(L, -1))  /* is it there? */\n        return 1;  /* package is already loaded */\n    /* else must load package */\n    lua_pop(L, 1);  /* remove 'getfield' result */\n    let ctx = name;\n    return findloader(L, name, ctx, ll_require_cont);\n};\n\nconst ll_require_cont = function(L, status, ctx) {\n    let name = ctx;\n    lua_pushstring(L, name);  /* pass name as argument to module loader */\n    lua_insert(L, -2);  /* name is 1st argument (before search data) */\n    lua_callk(L, 2, 1, ctx, ll_require_cont2);\n    return ll_require_cont2(L, LUA_OK, ctx);  /* run loader to load module */\n};\n\nconst ll_require_cont2 = function(L, status, ctx) {\n    let name = ctx;\n    if (!lua_isnil(L, -1))  /* non-nil return? */\n        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */\n    if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */\n        lua_pushboolean(L, 1);  /* use true as result */\n        lua_pushvalue(L, -1);  /* extra copy to be returned */\n        lua_setfield(L, 2, name);  /* LOADED[name] = true */\n    }\n    return 1;\n};\n\nconst pk_funcs = {\n    \"loadlib\": ll_loadlib,\n    \"searchpath\": ll_searchpath\n};\n\nconst ll_funcs = {\n    \"require\": ll_require\n};\n\nconst createsearcherstable = function(L) {\n    let searchers = [searcher_preload, searcher_Lua, searcher_C, searcher_Croot, null];\n    /* create 'searchers' table */\n    lua_createtable(L);\n    /* fill it with predefined searchers */\n    for (let i = 0; searchers[i]; i++) {\n        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */\n        lua_pushcclosure(L, searchers[i], 1);\n        lua_rawseti(L, -2, i+1);\n    }\n    lua_setfield(L, -2, to_luastring(\"searchers\", true));  /* put it in field 'searchers' */\n};\n\n/*\n** create table JSLIBS to keep track of loaded JS libraries,\n** setting a finalizer to close all libraries when closing state.\n*/\nconst createjslibstable = function(L) {\n    lua_newtable(L);  /* create JSLIBS table */\n    lua_createtable(L, 0, 1);  /* create metatable for JSLIBS */\n    lua_setmetatable(L, -2);\n    lua_rawsetp(L, LUA_REGISTRYINDEX, JSLIBS);  /* set JSLIBS table in registry */\n};\n\nconst luaopen_package = function(L) {\n    createjslibstable(L);\n    luaL_newlib(L, pk_funcs);  /* create 'package' table */\n    createsearcherstable(L);\n    /* set paths */\n    setpath(L, to_luastring(\"path\", true), LUA_PATH_VAR, LUA_PATH_DEFAULT);\n    setpath(L, to_luastring(\"jspath\", true), LUA_JSPATH_VAR, LUA_JSPATH_DEFAULT);\n    /* store config information */\n    lua_pushliteral(L, LUA_DIRSEP + \"\\n\" + LUA_PATH_SEP + \"\\n\" + LUA_PATH_MARK + \"\\n\" +\n                        LUA_EXEC_DIR + \"\\n\" + LUA_IGMARK + \"\\n\");\n    lua_setfield(L, -2, to_luastring(\"config\", true));\n    /* set field 'loaded' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_setfield(L, -2, to_luastring(\"loaded\", true));\n    /* set field 'preload' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    lua_setfield(L, -2, to_luastring(\"preload\", true));\n    lua_pushglobaltable(L);\n    lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */\n    luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */\n    lua_pop(L, 1);  /* pop global table */\n    return 1;  /* return 'package' table */\n};\n\nmodule.exports.luaopen_package = luaopen_package;\n","const {\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_setfield\n} = require('./lua.js');\nconst {\n    luaL_newlib\n} = require('./lauxlib.js');\nconst {\n    FENGARI_AUTHORS,\n    FENGARI_COPYRIGHT,\n    FENGARI_RELEASE,\n    FENGARI_VERSION,\n    FENGARI_VERSION_MAJOR,\n    FENGARI_VERSION_MINOR,\n    FENGARI_VERSION_NUM,\n    FENGARI_VERSION_RELEASE,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst luaopen_fengari = function(L) {\n    luaL_newlib(L, {});\n    lua_pushliteral(L, FENGARI_AUTHORS);\n    lua_setfield(L, -2, to_luastring(\"AUTHORS\"));\n    lua_pushliteral(L, FENGARI_COPYRIGHT);\n    lua_setfield(L, -2, to_luastring(\"COPYRIGHT\"));\n    lua_pushliteral(L, FENGARI_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"RELEASE\"));\n    lua_pushliteral(L, FENGARI_VERSION);\n    lua_setfield(L, -2, to_luastring(\"VERSION\"));\n    lua_pushliteral(L, FENGARI_VERSION_MAJOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MAJOR\"));\n    lua_pushliteral(L, FENGARI_VERSION_MINOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MINOR\"));\n    lua_pushinteger(L, FENGARI_VERSION_NUM);\n    lua_setfield(L, -2, to_luastring(\"VERSION_NUM\"));\n    lua_pushliteral(L, FENGARI_VERSION_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"VERSION_RELEASE\"));\n    return 1;\n};\n\nmodule.exports.luaopen_fengari = luaopen_fengari;\n","\"use strict\";\r\n\r\nimport {\r\n\tFENGARI_AUTHORS,\r\n\tFENGARI_COPYRIGHT,\r\n\tFENGARI_RELEASE,\r\n\tFENGARI_VERSION,\r\n\tFENGARI_VERSION_MAJOR,\r\n\tFENGARI_VERSION_MINOR,\r\n\tFENGARI_VERSION_NUM,\r\n\tFENGARI_VERSION_RELEASE,\r\n\r\n\tluastring_eq,\r\n\tluastring_indexOf,\r\n\tluastring_of,\r\n\tto_jsstring,\r\n\tto_luastring,\r\n\tto_uristring,\r\n\r\n\tlua,\r\n\tlauxlib,\r\n\tlualib\r\n} from 'fengari';\r\nimport * as interop from 'fengari-interop';\r\n\r\nconst {\r\n\tLUA_ERRRUN,\r\n\tLUA_ERRSYNTAX,\r\n\tLUA_OK,\r\n\tLUA_VERSION_MAJOR,\r\n\tLUA_VERSION_MINOR,\r\n\tlua_Debug,\r\n\tlua_getinfo,\r\n\tlua_getstack,\r\n\tlua_gettop,\r\n\tlua_insert,\r\n\tlua_pcall,\r\n\tlua_pop,\r\n\tlua_pushcfunction,\r\n\tlua_pushstring,\r\n\tlua_remove,\r\n\tlua_setglobal,\r\n\tlua_tojsstring\r\n} = lua;\r\nconst {\r\n\tluaL_loadbuffer,\r\n\tluaL_newstate,\r\n\tluaL_requiref\r\n} = lauxlib;\r\nconst {\r\n\tcheckjs,\r\n\tluaopen_js,\r\n\tpush,\r\n\ttojs\r\n} = interop;\r\n\r\nexport {\r\n\tFENGARI_AUTHORS,\r\n\tFENGARI_COPYRIGHT,\r\n\tFENGARI_RELEASE,\r\n\tFENGARI_VERSION,\r\n\tFENGARI_VERSION_MAJOR,\r\n\tFENGARI_VERSION_MINOR,\r\n\tFENGARI_VERSION_NUM,\r\n\tFENGARI_VERSION_RELEASE,\r\n\r\n\tluastring_eq,\r\n\tluastring_indexOf,\r\n\tluastring_of,\r\n\tto_jsstring,\r\n\tto_luastring,\r\n\tto_uristring,\r\n\r\n\tlua,\r\n\tlauxlib,\r\n\tlualib,\r\n\tinterop\r\n};\r\n\r\nexport const L = luaL_newstate();\r\n\r\n/* open standard libraries */\r\nlualib.luaL_openlibs(L);\r\nluaL_requiref(L, to_luastring(\"js\"), luaopen_js, 1);\r\nlua_pop(L, 1); /* remove lib */\r\n\r\nlua_pushstring(L, to_luastring(FENGARI_COPYRIGHT));\r\nlua_setglobal(L, to_luastring(\"_COPYRIGHT\"));\r\n\r\n/* Helper function to load a JS string of Lua source */\r\nexport function load(source, chunkname) {\r\n\tif (typeof source == \"string\")\r\n\t\tsource = to_luastring(source);\r\n\telse if (!(source instanceof Uint8Array))\r\n\t\tthrow new TypeError(\"expects an array of bytes or javascript string\");\r\n\r\n\tchunkname = chunkname?to_luastring(chunkname):null;\r\n\tlet ok = luaL_loadbuffer(L, source, null, chunkname);\r\n\tlet res;\r\n\tif (ok === LUA_ERRSYNTAX) {\r\n\t\tres = new SyntaxError(lua_tojsstring(L, -1));\r\n\t} else {\r\n\t\tres = tojs(L, -1);\r\n\t}\r\n\tlua_pop(L, 1);\r\n\tif (ok !== LUA_OK) {\r\n\t\tthrow res;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nif (typeof document !== 'undefined' && document instanceof HTMLDocument) {\r\n\t/* Have a document, e.g. we are in main browser window */\r\n\r\n\tconst crossorigin_to_credentials = function(crossorigin) {\r\n\t\tswitch(crossorigin) {\r\n\t\t\tcase \"anonymous\": return \"omit\";\r\n\t\t\tcase \"use-credentials\": return \"include\";\r\n\t\t\tdefault: return \"same-origin\";\r\n\t\t}\r\n\t};\r\n\r\n\tconst msghandler = function(L) {\r\n\t\tlet ar = new lua_Debug();\r\n\t\tif (lua_getstack(L, 2, ar))\r\n\t\t\tlua_getinfo(L, to_luastring(\"Sl\"), ar);\r\n\t\tpush(L, new ErrorEvent(\"error\", {\r\n\t\t\tbubbles: true,\r\n\t\t\tcancelable: true,\r\n\t\t\tmessage: lua_tojsstring(L, 1),\r\n\t\t\terror: tojs(L, 1),\r\n\t\t\tfilename: ar.short_src ? to_jsstring(ar.short_src) : void 0,\r\n\t\t\tlineno: ar.currentline > 0 ? ar.currentline : void 0\r\n\t\t}));\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tconst run_lua_script = function(tag, code, chunkname) {\r\n\t\tlet ok = luaL_loadbuffer(L, code, null, chunkname);\r\n\t\tlet e;\r\n\t\tif (ok === LUA_ERRSYNTAX) {\r\n\t\t\tlet msg = lua_tojsstring(L, -1);\r\n\t\t\tlet filename = tag.src?tag.src:document.location;\r\n\t\t\tlet lineno = void 0; /* TODO: extract out of msg */\r\n\t\t\tlet syntaxerror = new SyntaxError(msg, filename, lineno);\r\n\t\t\te = new ErrorEvent(\"error\", {\r\n\t\t\t\tmessage: msg,\r\n\t\t\t\terror: syntaxerror,\r\n\t\t\t\tfilename: filename,\r\n\t\t\t\tlineno: lineno\r\n\t\t\t});\r\n\t\t} else if (ok === LUA_OK) {\r\n\t\t\t/* insert message handler below function */\r\n\t\t\tlet base = lua_gettop(L);\r\n\t\t\tlua_pushcfunction(L, msghandler);\r\n\t\t\tlua_insert(L, base);\r\n\t\t\t/* set document.currentScript.\r\n\t\t\t   We can't set it normally; but we can create a getter for it, then remove the getter */\r\n\t\t\tObject.defineProperty(document, 'currentScript', {\r\n\t\t\t\tvalue: tag,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t});\r\n\t\t\tok = lua_pcall(L, 0, 0, base);\r\n\t\t\t/* Remove the currentScript getter installed above; this restores normal behaviour */\r\n\t\t\tdelete document.currentScript;\r\n\t\t\t/* Remove message handler */\r\n\t\t\tlua_remove(L, base);\r\n\t\t\t/* Check if normal error that msghandler would have handled */\r\n\t\t\tif (ok === LUA_ERRRUN) {\r\n\t\t\t\te = checkjs(L, -1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ok !== LUA_OK) {\r\n\t\t\tif (e === void 0) {\r\n\t\t\t\te = new ErrorEvent(\"error\", {\r\n\t\t\t\t\tmessage: lua_tojsstring(L, -1),\r\n\t\t\t\t\terror: tojs(L, -1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tlua_pop(L, 1);\r\n\t\t\tif (window.dispatchEvent(e)) {\r\n\t\t\t\tconsole.error(\"uncaught exception\", e.error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst process_xhr_response = function(xhr, tag, chunkname) {\r\n\t\tif (xhr.status >= 200 && xhr.status < 300) {\r\n\t\t\tlet code = xhr.response;\r\n\t\t\tif (typeof code === \"string\") {\r\n\t\t\t\tcode = to_luastring(xhr.response);\r\n\t\t\t} else { /* is an array buffer */\r\n\t\t\t\tcode = new Uint8Array(code);\r\n\t\t\t}\r\n\t\t\t/* TODO: subresource integrity check? */\r\n\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t} else {\r\n\t\t\ttag.dispatchEvent(new Event(\"error\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst run_lua_script_tag = function(tag) {\r\n\t\tif (tag.src) {\r\n\t\t\tlet chunkname = to_luastring(\"@\"+tag.src);\r\n\t\t\t/* JS script tags are async after document has loaded */\r\n\t\t\tif (document.readyState === \"complete\" || tag.async) {\r\n\t\t\t\tif (typeof fetch === \"function\") {\r\n\t\t\t\t\tfetch(tag.src, {\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\tcredentials: crossorigin_to_credentials(tag.crossorigin),\r\n\t\t\t\t\t\tredirect: \"follow\",\r\n\t\t\t\t\t\tintegrity: tag.integrity\r\n\t\t\t\t\t}).then(function(resp) {\r\n\t\t\t\t\t\tif (resp.ok) {\r\n\t\t\t\t\t\t\treturn resp.arrayBuffer();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(\"unable to fetch\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).then(function(buffer) {\r\n\t\t\t\t\t\tlet code = new Uint8Array(buffer);\r\n\t\t\t\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t\t\t\t}).catch(function(reason) {\r\n\t\t\t\t\t\ttag.dispatchEvent(new Event(\"error\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\t\t\txhr.open(\"GET\", tag.src, true);\r\n\t\t\t\t\txhr.responseType = \"arraybuffer\";\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\t\t\t\t\t\tif (xhr.readyState === 4)\r\n\t\t\t\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\r\n\t\t\t\t\t};\r\n\t\t\t\t\txhr.send();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t/* Needs to be synchronous: use an XHR */\r\n\t\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\t\txhr.open(\"GET\", tag.src, false);\r\n\t\t\t\txhr.send();\r\n\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet code = to_luastring(tag.innerHTML);\r\n\t\t\tlet chunkname = tag.id ? to_luastring(\"=\"+tag.id) : code;\r\n\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t}\r\n\t};\r\n\r\n\tconst contentTypeRegexp = /^(.*?\\/.*?)([\\t ]*;.*)?$/;\r\n\tconst luaVersionRegex = /^(\\d+)\\.(\\d+)$/;\r\n\tconst try_tag = function(tag) {\r\n\t\tif (tag.tagName !== \"SCRIPT\")\r\n\t\t\treturn;\r\n\r\n\t\t/* strip off mime type parameters */\r\n\t\tlet contentTypeMatch = contentTypeRegexp.exec(tag.type);\r\n\t\tif (!contentTypeMatch)\r\n\t\t\treturn;\r\n\t\tlet mimetype = contentTypeMatch[1];\r\n\t\tif (mimetype !== \"application/lua\" && mimetype !== \"text/lua\")\r\n\t\t\treturn;\r\n\r\n\t\tif (tag.hasAttribute(\"lua-version\")) {\r\n\t\t\tlet lua_version = luaVersionRegex.exec(tag.getAttribute(\"lua-version\"));\r\n\t\t\tif (!lua_version || lua_version[1] !== LUA_VERSION_MAJOR || lua_version[2] !== LUA_VERSION_MINOR)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trun_lua_script_tag(tag);\r\n\t};\r\n\r\n\tif (typeof MutationObserver !== 'undefined') {\r\n\t\t/* watch for new script tags added to document */\r\n\t\t(new MutationObserver(function(records, observer) {\r\n\t\t\tfor (let i=0; i<records.length; i++) {\r\n\t\t\t\tlet record = records[i];\r\n\t\t\t\tfor (let j=0; j<record.addedNodes.length; j++) {\r\n\t\t\t\t\ttry_tag(record.addedNodes[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})).observe(document, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t});\r\n\t} else if (console.warn) {\r\n\t\tconsole.warn(\"fengari-web: MutationObserver not found; lua script tags will not be run when inserted\");\r\n\t}\r\n\r\n\t/* the query selector here is slightly liberal,\r\n\t   more checks occur in try_tag */\r\n\tconst selector = 'script[type^=\"application/lua\"], script[type^=\"text/lua\"]';\r\n\r\n\t/* try to run existing script tags */\r\n\tArray.prototype.forEach.call(document.querySelectorAll(selector), try_tag);\r\n}\r\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TTABLE\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst ltable   = require('./ltable.js');\nconst lvm      = require('./lvm.js');\n\nconst OpCodesI = lopcodes.OpCodesI;\nconst TValue   = lobject.TValue;\n\n/* Maximum number of registers in a Lua function (must fit in 8 bits) */\nconst MAXREGS = 255;\n\n/*\n** Marks the end of a patch list. It is an invalid value both as an absolute\n** address, and as a list link (would link an element to itself).\n*/\nconst NO_JUMP = -1;\n\nconst BinOpr = {\n    OPR_ADD:      0,\n    OPR_SUB:      1,\n    OPR_MUL:      2,\n    OPR_MOD:      3,\n    OPR_POW:      4,\n    OPR_DIV:      5,\n    OPR_IDIV:     6,\n    OPR_BAND:     7,\n    OPR_BOR:      8,\n    OPR_BXOR:     9,\n    OPR_SHL:      10,\n    OPR_SHR:      11,\n    OPR_CONCAT:   12,\n    OPR_EQ:       13,\n    OPR_LT:       14,\n    OPR_LE:       15,\n    OPR_NE:       16,\n    OPR_GT:       17,\n    OPR_GE:       18,\n    OPR_AND:      19,\n    OPR_OR:       20,\n    OPR_NOBINOPR: 21\n};\n\nconst UnOpr = {\n    OPR_MINUS:    0,\n    OPR_BNOT:     1,\n    OPR_NOT:      2,\n    OPR_LEN:      3,\n    OPR_NOUNOPR:  4\n};\n\nconst hasjumps = function(e) {\n    return e.t !== e.f;\n};\n\n/*\n** If expression is a numeric constant returns either true or a new TValue\n** (depending on 'make_tvalue'). Otherwise, returns false.\n*/\nconst tonumeral = function(e, make_tvalue) {\n    let ek = lparser.expkind;\n    if (hasjumps(e))\n        return false;  /* not a numeral */\n    switch (e.k) {\n        case ek.VKINT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMINT, e.u.ival);\n            }\n            return true;\n        case ek.VKFLT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMFLT, e.u.nval);\n            }\n            return true;\n        default: return false;\n    }\n};\n\n/*\n** Create a OP_LOADNIL instruction, but try to optimize: if the previous\n** instruction is also OP_LOADNIL and ranges are compatible, adjust\n** range of previous instruction instead of emitting a new one. (For\n** instance, 'local a; local b' will generate a single opcode.)\n*/\nconst luaK_nil = function(fs, from, n) {\n    let previous;\n    let l = from + n - 1;  /* last register to set nil */\n    if (fs.pc > fs.lasttarget) {  /* no jumps to current position? */\n        previous = fs.f.code[fs.pc-1];\n        if (previous.opcode === OpCodesI.OP_LOADNIL) {  /* previous is LOADNIL? */\n            let pfrom = previous.A;  /* get previous range */\n            let pl = pfrom + previous.B;\n            if ((pfrom <= from && from <= pl + 1) ||\n                    (from <= pfrom && pfrom <= l + 1)) {  /* can connect both? */\n                if (pfrom < from) from = pfrom;  /* from = min(from, pfrom) */\n                if (pl > l) l = pl;  /* l = max(l, pl) */\n                lopcodes.SETARG_A(previous, from);\n                lopcodes.SETARG_B(previous, l - from);\n                return;\n            }\n        }  /* else go through */\n    }\n    luaK_codeABC(fs, OpCodesI.OP_LOADNIL, from, n - 1, 0);  /* else no optimization */\n};\n\nconst getinstruction = function(fs, e) {\n    return fs.f.code[e.u.info];\n};\n\n/*\n** Gets the destination address of a jump instruction. Used to traverse\n** a list of jumps.\n*/\nconst getjump = function(fs, pc) {\n    let offset = fs.f.code[pc].sBx;\n    if (offset === NO_JUMP)  /* point to itself represents end of list */\n        return NO_JUMP;  /* end of list */\n    else\n        return pc + 1 + offset;  /* turn offset into absolute position */\n};\n\n/*\n** Fix jump instruction at position 'pc' to jump to 'dest'.\n** (Jump addresses are relative in Lua)\n*/\nconst fixjump = function(fs, pc, dest) {\n    let jmp = fs.f.code[pc];\n    let offset = dest - (pc + 1);\n    lua_assert(dest !== NO_JUMP);\n    if (Math.abs(offset) > lopcodes.MAXARG_sBx)\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"control structure too long\", true));\n    lopcodes.SETARG_sBx(jmp, offset);\n};\n\n/*\n** Concatenate jump-list 'l2' into jump-list 'l1'\n*/\nconst luaK_concat = function(fs, l1, l2) {\n    if (l2 === NO_JUMP) return l1;  /* nothing to concatenate? */\n    else if (l1 === NO_JUMP)  /* no original list? */\n        l1 = l2;\n    else {\n        let list = l1;\n        let next = getjump(fs, list);\n        while (next !== NO_JUMP) {  /* find last element */\n            list = next;\n            next = getjump(fs, list);\n        }\n        fixjump(fs, list, l2);\n    }\n\n    return l1;\n};\n\n/*\n** Create a jump instruction and return its position, so its destination\n** can be fixed later (with 'fixjump'). If there are jumps to\n** this position (kept in 'jpc'), link them all together so that\n** 'patchlistaux' will fix all them directly to the final destination.\n*/\nconst luaK_jump = function (fs) {\n    let jpc = fs.jpc;  /* save list of jumps to here */\n    fs.jpc = NO_JUMP;  /* no more jumps to here */\n    let j = luaK_codeAsBx(fs, OpCodesI.OP_JMP, 0, NO_JUMP);\n    j = luaK_concat(fs, j, jpc);  /* keep them on hold */\n    return j;\n};\n\nconst luaK_jumpto = function(fs, t) {\n    return luaK_patchlist(fs, luaK_jump(fs), t);\n};\n\n/*\n** Code a 'return' instruction\n*/\nconst luaK_ret = function(fs, first, nret) {\n    luaK_codeABC(fs, OpCodesI.OP_RETURN, first, nret + 1, 0);\n};\n\n/*\n** Code a \"conditional jump\", that is, a test or comparison opcode\n** followed by a jump. Return jump position.\n*/\nconst condjump = function(fs, op, A, B, C) {\n    luaK_codeABC(fs, op, A, B, C);\n    return luaK_jump(fs);\n};\n\n/*\n** returns current 'pc' and marks it as a jump target (to avoid wrong\n** optimizations with consecutive instructions not in the same basic block).\n*/\nconst luaK_getlabel = function(fs) {\n    fs.lasttarget = fs.pc;\n    return fs.pc;\n};\n\n/*\n** Returns the position of the instruction \"controlling\" a given\n** jump (that is, its condition), or the jump itself if it is\n** unconditional.\n*/\nconst getjumpcontroloffset = function(fs, pc) {\n    if (pc >= 1 && lopcodes.testTMode(fs.f.code[pc - 1].opcode))\n        return pc - 1;\n    else\n        return pc;\n};\nconst getjumpcontrol = function(fs, pc) {\n    return fs.f.code[getjumpcontroloffset(fs, pc)];\n};\n\n/*\n** Patch destination register for a TESTSET instruction.\n** If instruction in position 'node' is not a TESTSET, return 0 (\"fails\").\n** Otherwise, if 'reg' is not 'NO_REG', set it as the destination\n** register. Otherwise, change instruction to a simple 'TEST' (produces\n** no register value)\n*/\nconst patchtestreg = function(fs, node, reg) {\n    let pc = getjumpcontroloffset(fs, node);\n    let i = fs.f.code[pc];\n    if (i.opcode !== OpCodesI.OP_TESTSET)\n        return false;  /* cannot patch other instructions */\n    if (reg !== lopcodes.NO_REG && reg !== i.B)\n        lopcodes.SETARG_A(i, reg);\n    else {\n        /* no register to put value or register already has the value;\n           change instruction to simple test */\n        fs.f.code[pc] = lopcodes.CREATE_ABC(OpCodesI.OP_TEST, i.B, 0, i.C);\n    }\n    return true;\n};\n\n/*\n** Traverse a list of tests ensuring no one produces a value\n*/\nconst removevalues = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list))\n        patchtestreg(fs, list, lopcodes.NO_REG);\n};\n\n/*\n** Traverse a list of tests, patching their destination address and\n** registers: tests producing values jump to 'vtarget' (and put their\n** values in 'reg'), other tests jump to 'dtarget'.\n*/\nconst patchlistaux = function(fs, list, vtarget, reg, dtarget) {\n    while (list !== NO_JUMP) {\n        let next = getjump(fs, list);\n        if (patchtestreg(fs, list, reg))\n            fixjump(fs, list, vtarget);\n        else\n            fixjump(fs, list, dtarget);  /* jump to default target */\n        list = next;\n    }\n};\n\n/*\n** Ensure all pending jumps to current position are fixed (jumping\n** to current position with no values) and reset list of pending\n** jumps\n*/\nconst dischargejpc = function(fs) {\n    patchlistaux(fs, fs.jpc, fs.pc, lopcodes.NO_REG, fs.pc);\n    fs.jpc = NO_JUMP;\n};\n\n/*\n** Add elements in 'list' to list of pending jumps to \"here\"\n** (current position)\n*/\nconst luaK_patchtohere = function(fs, list) {\n    luaK_getlabel(fs);  /* mark \"here\" as a jump target */\n    fs.jpc = luaK_concat(fs, fs.jpc, list);\n};\n\n/*\n** Path all jumps in 'list' to jump to 'target'.\n** (The assert means that we cannot fix a jump to a forward address\n** because we only know addresses once code is generated.)\n*/\nconst luaK_patchlist = function(fs, list, target) {\n    if (target === fs.pc)  /* 'target' is current position? */\n        luaK_patchtohere(fs, list);  /* add list to pending jumps */\n    else {\n        lua_assert(target < fs.pc);\n        patchlistaux(fs, list, target, lopcodes.NO_REG, target);\n    }\n};\n\n/*\n** Path all jumps in 'list' to close upvalues up to given 'level'\n** (The assertion checks that jumps either were closing nothing\n** or were closing higher levels, from inner blocks.)\n*/\nconst luaK_patchclose = function(fs, list, level) {\n    level++;  /* argument is +1 to reserve 0 as non-op */\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let ins = fs.f.code[list];\n        lua_assert(ins.opcode === OpCodesI.OP_JMP && (ins.A === 0 || ins.A >= level));\n        lopcodes.SETARG_A(ins, level);\n    }\n};\n\n/*\n** Emit instruction 'i', checking for array sizes and saving also its\n** line information. Return 'i' position.\n*/\nconst luaK_code = function(fs, i) {\n    let f = fs.f;\n    dischargejpc(fs);  /* 'pc' will change */\n    /* put new instruction in code array */\n    f.code[fs.pc] = i;\n    f.lineinfo[fs.pc] = fs.ls.lastline;\n    return fs.pc++;\n};\n\n/*\n** Format and emit an 'iABC' instruction. (Assertions check consistency\n** of parameters versus opcode.)\n*/\nconst luaK_codeABC = function(fs, o, a, b, c) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABC);\n    lua_assert(lopcodes.getBMode(o) !== lopcodes.OpArgN || b === 0);\n    lua_assert(lopcodes.getCMode(o) !== lopcodes.OpArgN || c === 0);\n    lua_assert(a <= lopcodes.MAXARG_A && b <= lopcodes.MAXARG_B && c <= lopcodes.MAXARG_C);\n    return luaK_code(fs, lopcodes.CREATE_ABC(o, a, b, c));\n};\n\n/*\n** Format and emit an 'iABx' instruction.\n*/\nconst luaK_codeABx = function(fs, o, a, bc) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABx || lopcodes.getOpMode(o) === lopcodes.iAsBx);\n    lua_assert(lopcodes.getCMode(o) === lopcodes.OpArgN);\n    lua_assert(a <= lopcodes.MAXARG_A && bc <= lopcodes.MAXARG_Bx);\n    return luaK_code(fs, lopcodes.CREATE_ABx(o, a, bc));\n};\n\nconst luaK_codeAsBx = function(fs,o,A,sBx) {\n    return luaK_codeABx(fs, o, A, (sBx) + lopcodes.MAXARG_sBx);\n};\n\n/*\n** Emit an \"extra argument\" instruction (format 'iAx')\n*/\nconst codeextraarg = function(fs, a) {\n    lua_assert(a <= lopcodes.MAXARG_Ax);\n    return luaK_code(fs, lopcodes.CREATE_Ax(OpCodesI.OP_EXTRAARG, a));\n};\n\n/*\n** Emit a \"load constant\" instruction, using either 'OP_LOADK'\n** (if constant index 'k' fits in 18 bits) or an 'OP_LOADKX'\n** instruction with \"extra argument\".\n*/\nconst luaK_codek = function(fs, reg, k) {\n    if (k <= lopcodes.MAXARG_Bx)\n        return luaK_codeABx(fs, OpCodesI.OP_LOADK, reg, k);\n    else {\n        let p = luaK_codeABx(fs, OpCodesI.OP_LOADKX, reg, 0);\n        codeextraarg(fs, k);\n        return p;\n    }\n};\n\n/*\n** Check register-stack level, keeping track of its maximum size\n** in field 'maxstacksize'\n*/\nconst luaK_checkstack = function(fs, n) {\n    let newstack = fs.freereg + n;\n    if (newstack > fs.f.maxstacksize) {\n        if (newstack >= MAXREGS)\n            llex.luaX_syntaxerror(fs.ls, to_luastring(\"function or expression needs too many registers\", true));\n        fs.f.maxstacksize = newstack;\n    }\n};\n\n/*\n** Reserve 'n' registers in register stack\n*/\nconst luaK_reserveregs = function(fs, n) {\n    luaK_checkstack(fs, n);\n    fs.freereg += n;\n};\n\n/*\n** Free register 'reg', if it is neither a constant index nor\n** a local variable.\n*/\nconst freereg = function(fs, reg) {\n    if (!lopcodes.ISK(reg) && reg >= fs.nactvar) {\n        fs.freereg--;\n        lua_assert(reg === fs.freereg);\n    }\n};\n\n/*\n** Free register used by expression 'e' (if any)\n*/\nconst freeexp = function(fs, e) {\n    if (e.k === lparser.expkind.VNONRELOC)\n        freereg(fs, e.u.info);\n};\n\n/*\n** Free registers used by expressions 'e1' and 'e2' (if any) in proper\n** order.\n*/\nconst freeexps = function(fs, e1, e2) {\n    let r1 = (e1.k === lparser.expkind.VNONRELOC) ? e1.u.info : -1;\n    let r2 = (e2.k === lparser.expkind.VNONRELOC) ? e2.u.info : -1;\n    if (r1 > r2) {\n        freereg(fs, r1);\n        freereg(fs, r2);\n    }\n    else {\n        freereg(fs, r2);\n        freereg(fs, r1);\n    }\n};\n\n\n/*\n** Add constant 'v' to prototype's list of constants (field 'k').\n** Use scanner's table to cache position of constants in constant list\n** and try to reuse constants. Because some values should not be used\n** as keys (nil cannot be a key, integer keys can collapse with float\n** keys), the caller must provide a useful 'key' for indexing the cache.\n*/\nconst addk = function(fs, key, v) {\n    let f = fs.f;\n    let idx = ltable.luaH_get(fs.L, fs.ls.h, key);  /* index scanner table */\n    if (idx.ttisinteger()) {  /* is there an index there? */\n        let k = idx.value;\n        /* correct value? (warning: must distinguish floats from integers!) */\n        if (k < fs.nk && f.k[k].ttype() === v.ttype() && f.k[k].value === v.value)\n            return k;  /* reuse index */\n    }\n    /* constant not found; create a new entry */\n    let k = fs.nk;\n    ltable.luaH_setfrom(fs.L, fs.ls.h, key, new lobject.TValue(LUA_TNUMINT, k));\n    f.k[k] = v;\n    fs.nk++;\n    return k;\n};\n\n/*\n** Add a string to list of constants and return its index.\n*/\nconst luaK_stringK = function(fs, s) {\n    let o = new TValue(LUA_TLNGSTR, s);\n    return addk(fs, o, o);  /* use string itself as key */\n};\n\n\n/*\n** Add an integer to list of constants and return its index.\n** Integers use userdata as keys to avoid collision with floats with\n** same value.\n*/\nconst luaK_intK = function(fs, n) {\n    let k = new TValue(LUA_TLIGHTUSERDATA, n);\n    let o = new TValue(LUA_TNUMINT, n);\n    return addk(fs, k, o);\n};\n\n/*\n** Add a float to list of constants and return its index.\n*/\nconst luaK_numberK = function(fs, r) {\n    let o = new TValue(LUA_TNUMFLT, r);\n    return addk(fs, o, o);  /* use number itself as key */\n};\n\n\n/*\n** Add a boolean to list of constants and return its index.\n*/\nconst boolK = function(fs, b) {\n    let o = new TValue(LUA_TBOOLEAN, b);\n    return addk(fs, o, o);  /* use boolean itself as key */\n};\n\n\n/*\n** Add nil to list of constants and return its index.\n*/\nconst nilK = function(fs) {\n    let v = new TValue(LUA_TNIL, null);\n    let k = new TValue(LUA_TTABLE, fs.ls.h);\n    /* cannot use nil as key; instead use table itself to represent nil */\n    return addk(fs, k, v);\n};\n\n/*\n** Fix an expression to return the number of results 'nresults'.\n** Either 'e' is a multi-ret expression (function call or vararg)\n** or 'nresults' is LUA_MULTRET (as any expression can satisfy that).\n*/\nconst luaK_setreturns = function(fs, e, nresults) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        lopcodes.SETARG_C(getinstruction(fs, e), nresults + 1);\n    }\n    else if (e.k === ek.VVARARG) {\n        let pc = getinstruction(fs, e);\n        lopcodes.SETARG_B(pc, nresults + 1);\n        lopcodes.SETARG_A(pc, fs.freereg);\n        luaK_reserveregs(fs, 1);\n    }\n    else lua_assert(nresults === LUA_MULTRET);\n};\n\nconst luaK_setmultret = function(fs, e) {\n    luaK_setreturns(fs, e, LUA_MULTRET);\n};\n\n/*\n** Fix an expression to return one result.\n** If expression is not a multi-ret expression (function call or\n** vararg), it already returns one result, so nothing needs to be done.\n** Function calls become VNONRELOC expressions (as its result comes\n** fixed in the base register of the call), while vararg expressions\n** become VRELOCABLE (as OP_VARARG puts its results where it wants).\n** (Calls are created returning one result, so that does not need\n** to be fixed.)\n*/\nconst luaK_setoneret = function(fs, e) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        /* already returns 1 value */\n        lua_assert(getinstruction(fs, e).C === 2);\n        e.k = ek.VNONRELOC;  /* result has fixed position */\n        e.u.info = getinstruction(fs, e).A;\n    } else if (e.k === ek.VVARARG) {\n        lopcodes.SETARG_B(getinstruction(fs, e), 2);\n        e.k = ek.VRELOCABLE;  /* can relocate its simple result */\n    }\n};\n\n/*\n** Ensure that expression 'e' is not a variable.\n*/\nconst luaK_dischargevars = function(fs, e) {\n    let ek = lparser.expkind;\n\n    switch (e.k) {\n        case ek.VLOCAL: {  /* already in a register */\n            e.k =  ek.VNONRELOC;  /* becomes a non-relocatable value */\n            break;\n        }\n        case ek.VUPVAL: {  /* move value to some (pending) register */\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_GETUPVAL, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VINDEXED: {\n            let op;\n            freereg(fs, e.u.ind.idx);\n            if (e.u.ind.vt === ek.VLOCAL) {  /* is 't' in a register? */\n                freereg(fs, e.u.ind.t);\n                op = OpCodesI.OP_GETTABLE;\n            } else {\n                lua_assert(e.u.ind.vt === ek.VUPVAL);\n                op = OpCodesI.OP_GETTABUP;  /* 't' is in an upvalue */\n            }\n            e.u.info = luaK_codeABC(fs, op, 0, e.u.ind.t, e.u.ind.idx);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VVARARG: case ek.VCALL: {\n            luaK_setoneret(fs, e);\n            break;\n        }\n        default: break;  /* there is one value available (somewhere) */\n    }\n};\n\nconst code_loadbool = function(fs, A, b, jump) {\n    luaK_getlabel(fs);  /* those instructions may be jump targets */\n    return luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, A, b, jump);\n};\n\n/*\n** Ensures expression value is in register 'reg' (and therefore\n** 'e' will become a non-relocatable expression).\n*/\nconst discharge2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: {\n            luaK_nil(fs, reg, 1);\n            break;\n        }\n        case ek.VFALSE: case ek.VTRUE: {\n            luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, reg, e.k === ek.VTRUE, 0);\n            break;\n        }\n        case ek.VK: {\n            luaK_codek(fs, reg, e.u.info);\n            break;\n        }\n        case ek.VKFLT: {\n            luaK_codek(fs, reg, luaK_numberK(fs, e.u.nval));\n            break;\n        }\n        case ek.VKINT: {\n            luaK_codek(fs, reg, luaK_intK(fs, e.u.ival));\n            break;\n        }\n        case ek.VRELOCABLE: {\n            let pc = getinstruction(fs, e);\n            lopcodes.SETARG_A(pc, reg);  /* instruction will put result in 'reg' */\n            break;\n        }\n        case ek.VNONRELOC: {\n            if (reg !== e.u.info)\n                luaK_codeABC(fs, OpCodesI.OP_MOVE, reg, e.u.info, 0);\n            break;\n        }\n        default: {\n            lua_assert(e.k === ek.VJMP);\n            return;  /* nothing to do... */\n        }\n    }\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures expression value is in any register.\n*/\nconst discharge2anyreg = function(fs, e) {\n    if (e.k !== lparser.expkind.VNONRELOC) {  /* no fixed register yet? */\n        luaK_reserveregs(fs, 1);  /* get a register */\n        discharge2reg(fs, e, fs.freereg-1);  /* put value there */\n    }\n};\n\n/*\n** check whether list has any jump that do not produce a value\n** or produce an inverted value\n*/\nconst need_value = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let i = getjumpcontrol(fs, list);\n        if (i.opcode !== OpCodesI.OP_TESTSET) return true;\n    }\n    return false;  /* not found */\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in register 'reg'.\n** If expression has jumps, need to patch these jumps either to\n** its final position or to \"load\" instructions (for those tests\n** that do not produce values).\n*/\nconst exp2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    discharge2reg(fs, e, reg);\n    if (e.k === ek.VJMP)  /* expression itself is a test? */\n        e.t = luaK_concat(fs, e.t, e.u.info);  /* put this jump in 't' list */\n    if (hasjumps(e)) {\n        let final;  /* position after whole expression */\n        let p_f = NO_JUMP;  /* position of an eventual LOAD false */\n        let p_t = NO_JUMP;  /* position of an eventual LOAD true */\n        if (need_value(fs, e.t) || need_value(fs, e.f)) {\n            let fj = (e.k === ek.VJMP) ? NO_JUMP : luaK_jump(fs);\n            p_f = code_loadbool(fs, reg, 0, 1);\n            p_t = code_loadbool(fs, reg, 1, 0);\n            luaK_patchtohere(fs, fj);\n        }\n        final = luaK_getlabel(fs);\n        patchlistaux(fs, e.f, final, reg, p_f);\n        patchlistaux(fs, e.t, final, reg, p_t);\n    }\n    e.f = e.t = NO_JUMP;\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in next available register.\n*/\nconst luaK_exp2nextreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    freeexp(fs, e);\n    luaK_reserveregs(fs, 1);\n    exp2reg(fs, e, fs.freereg - 1);\n};\n\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in some (any) register and return that register.\n*/\nconst luaK_exp2anyreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    if (e.k === lparser.expkind.VNONRELOC) {  /* expression already has a register? */\n        if (!hasjumps(e))  /* no jumps? */\n            return e.u.info;  /* result is already in a register */\n        if (e.u.info >= fs.nactvar) {  /* reg. is not a local? */\n            exp2reg(fs, e, e.u.info);  /* put final result in it */\n            return e.u.info;\n        }\n    }\n    luaK_exp2nextreg(fs, e);  /* otherwise, use next available register */\n    return e.u.info;\n};\n\n/*\n** Ensures final expression result is either in a register or in an\n** upvalue.\n*/\nconst luaK_exp2anyregup = function(fs, e) {\n    if (e.k !== lparser.expkind.VUPVAL || hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Ensures final expression result is either in a register or it is\n** a constant.\n*/\nconst luaK_exp2val = function(fs, e) {\n    if (hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n    else\n        luaK_dischargevars(fs, e);\n};\n\n/*\n** Ensures final expression result is in a valid R/K index\n** (that is, it is either in a register or in 'k' with an index\n** in the range of R/K indices).\n** Returns R/K index.\n*/\nconst luaK_exp2RK = function(fs, e) {\n    let ek = lparser.expkind;\n    let vk = false;\n    luaK_exp2val(fs, e);\n    switch (e.k) {  /* move constants to 'k' */\n        case ek.VTRUE: e.u.info = boolK(fs, true); vk = true; break;\n        case ek.VFALSE: e.u.info = boolK(fs, false); vk = true; break;\n        case ek.VNIL: e.u.info = nilK(fs); vk = true; break;\n        case ek.VKINT: e.u.info = luaK_intK(fs, e.u.ival); vk = true; break;\n        case ek.VKFLT: e.u.info = luaK_numberK(fs, e.u.nval); vk = true; break;\n        case ek.VK: vk = true; break;\n        default: break;\n    }\n\n    if (vk) {\n        e.k = ek.VK;\n        if (e.u.info <= lopcodes.MAXINDEXRK)  /* constant fits in 'argC'? */\n            return lopcodes.RKASK(e.u.info);\n    }\n\n    /* not a constant in the right range: put it in a register */\n    return luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Generate code to store result of expression 'ex' into variable 'var'.\n*/\nconst luaK_storevar = function(fs, vr, ex) {\n    let ek = lparser.expkind;\n    switch (vr.k) {\n        case ek.VLOCAL: {\n            freeexp(fs, ex);\n            exp2reg(fs, ex, vr.u.info);  /* compute 'ex' into proper place */\n            return;\n        }\n        case ek.VUPVAL: {\n            let e = luaK_exp2anyreg(fs, ex);\n            luaK_codeABC(fs, OpCodesI.OP_SETUPVAL, e, vr.u.info, 0);\n            break;\n        }\n        case ek.VINDEXED: {\n            let op = (vr.u.ind.vt === ek.VLOCAL) ? OpCodesI.OP_SETTABLE : OpCodesI.OP_SETTABUP;\n            let e = luaK_exp2RK(fs, ex);\n            luaK_codeABC(fs, op, vr.u.ind.t, vr.u.ind.idx, e);\n            break;\n        }\n    }\n    freeexp(fs, ex);\n};\n\n\n/*\n** Emit SELF instruction (convert expression 'e' into 'e:key(e,').\n*/\nconst luaK_self = function(fs, e, key) {\n    luaK_exp2anyreg(fs, e);\n    let ereg = e.u.info;  /* register where 'e' was placed */\n    freeexp(fs, e);\n    e.u.info = fs.freereg;  /* base register for op_self */\n    e.k = lparser.expkind.VNONRELOC;  /* self expression has a fixed register */\n    luaK_reserveregs(fs, 2);  /* function and 'self' produced by op_self */\n    luaK_codeABC(fs, OpCodesI.OP_SELF, e.u.info, ereg, luaK_exp2RK(fs, key));\n    freeexp(fs, key);\n};\n\n/*\n** Negate condition 'e' (where 'e' is a comparison).\n*/\nconst negatecondition = function(fs, e) {\n    let pc = getjumpcontrol(fs, e.u.info);\n    lua_assert(lopcodes.testTMode(pc.opcode) && pc.opcode !== OpCodesI.OP_TESTSET && pc.opcode !== OpCodesI.OP_TEST);\n    lopcodes.SETARG_A(pc, !(pc.A));\n};\n\n/*\n** Emit instruction to jump if 'e' is 'cond' (that is, if 'cond'\n** is true, code will jump if 'e' is true.) Return jump position.\n** Optimize when 'e' is 'not' something, inverting the condition\n** and removing the 'not'.\n*/\nconst jumponcond = function(fs, e, cond) {\n    if (e.k === lparser.expkind.VRELOCABLE) {\n        let ie = getinstruction(fs, e);\n        if (ie.opcode === OpCodesI.OP_NOT) {\n            fs.pc--;  /* remove previous OP_NOT */\n            return condjump(fs, OpCodesI.OP_TEST, ie.B, 0, !cond);\n        }\n        /* else go through */\n    }\n    discharge2anyreg(fs, e);\n    freeexp(fs, e);\n    return condjump(fs, OpCodesI.OP_TESTSET, lopcodes.NO_REG, e.u.info, cond);\n};\n\n/*\n** Emit code to go through if 'e' is true, jump otherwise.\n*/\nconst luaK_goiftrue = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {  /* condition? */\n            negatecondition(fs, e);  /* jump when it is false */\n            pc = e.u.info;  /* save jump position */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            pc = NO_JUMP;  /* always true; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 0);  /* jump when false */\n            break;\n        }\n    }\n    e.f = luaK_concat(fs, e.f, pc);  /* insert new jump in false list */\n    luaK_patchtohere(fs, e.t);  /* true list jumps to here (to go through) */\n    e.t = NO_JUMP;\n};\n\n/*\n** Emit code to go through if 'e' is false, jump otherwise.\n*/\nconst luaK_goiffalse = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {\n            pc = e.u.info;  /* already jump if true */\n            break;\n        }\n        case ek.VNIL: case ek.VFALSE: {\n            pc = NO_JUMP;  /* always false; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 1);  /* jump if true */\n            break;\n        }\n    }\n    e.t = luaK_concat(fs, e.t, pc);  /* insert new jump in 't' list */\n    luaK_patchtohere(fs, e.f);  /* false list jumps to here (to go through) */\n    e.f = NO_JUMP;\n};\n\n/*\n** Code 'not e', doing constant folding.\n*/\nconst codenot = function(fs, e) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: case ek.VFALSE: {\n            e.k = ek.VTRUE;  /* true === not nil === not false */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            e.k = ek.VFALSE;  /* false === not \"x\" === not 0.5 === not 1 === not true */\n            break;\n        }\n        case ek.VJMP: {\n            negatecondition(fs, e);\n            break;\n        }\n        case ek.VRELOCABLE:\n        case ek.VNONRELOC: {\n            discharge2anyreg(fs, e);\n            freeexp(fs, e);\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_NOT, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n    }\n    /* interchange true and false lists */\n    { let temp = e.f; e.f = e.t; e.t = temp; }\n    removevalues(fs, e.f);  /* values are useless when negated */\n    removevalues(fs, e.t);\n};\n\n/*\n** Create expression 't[k]'. 't' must have its final result already in a\n** register or upvalue.\n*/\nconst luaK_indexed = function(fs, t, k) {\n    let ek = lparser.expkind;\n    lua_assert(!hasjumps(t) && (lparser.vkisinreg(t.k) || t.k === ek.VUPVAL));\n    t.u.ind.t = t.u.info;  /* register or upvalue index */\n    t.u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */\n    t.u.ind.vt = (t.k === ek.VUPVAL) ? ek.VUPVAL : ek.VLOCAL;\n    t.k = ek.VINDEXED;\n};\n\n/*\n** Return false if folding can raise an error.\n** Bitwise operations need operands convertible to integers; division\n** operations cannot have 0 as divisor.\n*/\nconst validop = function(op, v1, v2) {\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR: case LUA_OPBNOT: {  /* conversion errors */\n            return (lvm.tointeger(v1) !== false && lvm.tointeger(v2) !== false);\n        }\n        case LUA_OPDIV: case LUA_OPIDIV: case LUA_OPMOD:  /* division by 0 */\n            return (v2.value !== 0);\n        default: return 1;  /* everything else is valid */\n    }\n};\n\n/*\n** Try to \"constant-fold\" an operation; return 1 iff successful.\n** (In this case, 'e1' has the final result.)\n*/\nconst constfolding = function(op, e1, e2) {\n    let ek = lparser.expkind;\n    let v1, v2;\n    if (!(v1 = tonumeral(e1, true)) || !(v2 = tonumeral(e2, true)) || !validop(op, v1, v2))\n        return 0;  /* non-numeric operands or not safe to fold */\n    let res = new TValue(); /* FIXME */\n    lobject.luaO_arith(null, op, v1, v2, res);  /* does operation */\n    if (res.ttisinteger()) {\n        e1.k = ek.VKINT;\n        e1.u.ival = res.value;\n    }\n    else {  /* folds neither NaN nor 0.0 (to avoid problems with -0.0) */\n        let n = res.value;\n        if (isNaN(n) || n === 0)\n            return false;\n        e1.k = ek.VKFLT;\n        e1.u.nval = n;\n    }\n    return true;\n};\n\n/*\n** Emit code for unary expressions that \"produce values\"\n** (everything but 'not').\n** Expression to produce final result will be encoded in 'e'.\n*/\nconst codeunexpval = function(fs, op, e, line) {\n    let r = luaK_exp2anyreg(fs, e);  /* opcodes operate only on registers */\n    freeexp(fs, e);\n    e.u.info = luaK_codeABC(fs, op, 0, r, 0);  /* generate opcode */\n    e.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n/*\n** Emit code for binary expressions that \"produce values\"\n** (everything but logical operators 'and'/'or' and comparison\n** operators).\n** Expression to produce final result will be encoded in 'e1'.\n** Because 'luaK_exp2RK' can free registers, its calls must be\n** in \"stack order\" (that is, first on 'e2', which may have more\n** recent registers to be released).\n*/\nconst codebinexpval = function(fs, op, e1, e2, line) {\n    let rk2 = luaK_exp2RK(fs, e2);  /* both operands are \"RK\" */\n    let rk1 = luaK_exp2RK(fs, e1);\n    freeexps(fs, e1, e2);\n    e1.u.info = luaK_codeABC(fs, op, 0, rk1, rk2);  /* generate opcode */\n    e1.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n\n/*\n** Emit code for comparisons.\n** 'e1' was already put in R/K form by 'luaK_infix'.\n*/\nconst codecomp = function(fs, opr, e1, e2) {\n    let ek = lparser.expkind;\n\n    let rk1;\n    if (e1.k === ek.VK)\n        rk1 = lopcodes.RKASK(e1.u.info);\n    else {\n        lua_assert(e1.k === ek.VNONRELOC);\n        rk1 = e1.u.info;\n    }\n\n    let rk2 = luaK_exp2RK(fs, e2);\n    freeexps(fs, e1, e2);\n    switch (opr) {\n        case BinOpr.OPR_NE: {  /* '(a ~= b)' ==> 'not (a === b)' */\n            e1.u.info = condjump(fs, OpCodesI.OP_EQ, 0, rk1, rk2);\n            break;\n        }\n        case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            /* '(a > b)' ==> '(b < a)';  '(a >= b)' ==> '(b <= a)' */\n            let op = (opr - BinOpr.OPR_NE) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk2, rk1);  /* invert operands */\n            break;\n        }\n        default: {  /* '==', '<', '<=' use their own opcodes */\n            let op = (opr - BinOpr.OPR_EQ) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk1, rk2);\n            break;\n        }\n    }\n    e1.k = ek.VJMP;\n};\n\n/*\n** Apply prefix operation 'op' to expression 'e'.\n*/\nconst luaK_prefix = function(fs, op, e, line) {\n    let ef = new lparser.expdesc();\n    ef.k = lparser.expkind.VKINT;\n    ef.u.ival = ef.u.nval = ef.u.info = 0;\n    ef.t = NO_JUMP;\n    ef.f = NO_JUMP;\n    switch (op) {\n        case UnOpr.OPR_MINUS: case UnOpr.OPR_BNOT:  /* use 'ef' as fake 2nd operand */\n            if (constfolding(op + LUA_OPUNM, e, ef))\n                break;\n            /* FALLTHROUGH */\n        case UnOpr.OPR_LEN:\n            codeunexpval(fs, op + OpCodesI.OP_UNM, e, line);\n            break;\n        case UnOpr.OPR_NOT: codenot(fs, e); break;\n    }\n};\n\n/*\n** Process 1st operand 'v' of binary operation 'op' before reading\n** 2nd operand.\n*/\nconst luaK_infix = function(fs, op, v) {\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            luaK_goiftrue(fs, v);  /* go ahead only if 'v' is true */\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            luaK_goiffalse(fs, v);  /* go ahead only if 'v' is false */\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2nextreg(fs, v);  /* operand must be on the 'stack' */\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB:\n        case BinOpr.OPR_MUL: case BinOpr.OPR_DIV: case BinOpr.OPR_IDIV:\n        case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!tonumeral(v, false))\n                luaK_exp2RK(fs, v);\n            /* else keep numeral, which may be folded with 2nd operand */\n            break;\n        }\n        default: {\n            luaK_exp2RK(fs, v);\n            break;\n        }\n    }\n};\n\n/*\n** Finalize code for binary operation, after reading 2nd operand.\n** For '(a .. b .. c)' (which is '(a .. (b .. c))', because\n** concatenation is right associative), merge second CONCAT into first\n** one.\n*/\nconst luaK_posfix = function(fs, op, e1, e2, line) {\n    let ek = lparser.expkind;\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            lua_assert(e1.t === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.f = luaK_concat(fs, e2.f, e1.f);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            lua_assert(e1.f === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.t = luaK_concat(fs, e2.t, e1.t);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2val(fs, e2);\n            let ins = getinstruction(fs, e2);\n            if (e2.k === ek.VRELOCABLE && ins.opcode === OpCodesI.OP_CONCAT) {\n                lua_assert(e1.u.info === ins.B - 1);\n                freeexp(fs, e1);\n                lopcodes.SETARG_B(ins, e1.u.info);\n                e1.k = ek.VRELOCABLE; e1.u.info = e2.u.info;\n            }\n            else {\n                luaK_exp2nextreg(fs, e2);  /* operand must be on the 'stack' */\n                codebinexpval(fs, OpCodesI.OP_CONCAT, e1, e2, line);\n            }\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB: case BinOpr.OPR_MUL: case BinOpr.OPR_DIV:\n        case BinOpr.OPR_IDIV: case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!constfolding(op + LUA_OPADD, e1, e2))\n                codebinexpval(fs, op + OpCodesI.OP_ADD, e1, e2, line);\n            break;\n        }\n        case BinOpr.OPR_EQ: case BinOpr.OPR_LT: case BinOpr.OPR_LE:\n        case BinOpr.OPR_NE: case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            codecomp(fs, op, e1, e2);\n            break;\n        }\n    }\n\n    return e1;\n};\n\n/*\n** Change line information associated with current position.\n*/\nconst luaK_fixline = function(fs, line) {\n    fs.f.lineinfo[fs.pc - 1] = line;\n};\n\n/*\n** Emit a SETLIST instruction.\n** 'base' is register that keeps table;\n** 'nelems' is #table plus those to be stored now;\n** 'tostore' is number of values (in registers 'base + 1',...) to add to\n** table (or LUA_MULTRET to add up to stack top).\n*/\nconst luaK_setlist = function(fs, base, nelems, tostore) {\n    let c =  (nelems - 1)/lopcodes.LFIELDS_PER_FLUSH + 1;\n    let b = (tostore === LUA_MULTRET) ? 0 : tostore;\n    lua_assert(tostore !== 0 && tostore <= lopcodes.LFIELDS_PER_FLUSH);\n    if (c <= lopcodes.MAXARG_C)\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, c);\n    else if (c <= lopcodes.MAXARG_Ax) {\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, 0);\n        codeextraarg(fs, c);\n    }\n    else\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"constructor too long\", true));\n    fs.freereg = base + 1;  /* free registers with list values */\n};\n\n\nmodule.exports.BinOpr             = BinOpr;\nmodule.exports.NO_JUMP            = NO_JUMP;\nmodule.exports.UnOpr              = UnOpr;\nmodule.exports.getinstruction     = getinstruction;\nmodule.exports.luaK_checkstack    = luaK_checkstack;\nmodule.exports.luaK_code          = luaK_code;\nmodule.exports.luaK_codeABC       = luaK_codeABC;\nmodule.exports.luaK_codeABx       = luaK_codeABx;\nmodule.exports.luaK_codeAsBx      = luaK_codeAsBx;\nmodule.exports.luaK_codek         = luaK_codek;\nmodule.exports.luaK_concat        = luaK_concat;\nmodule.exports.luaK_dischargevars = luaK_dischargevars;\nmodule.exports.luaK_exp2RK        = luaK_exp2RK;\nmodule.exports.luaK_exp2anyreg    = luaK_exp2anyreg;\nmodule.exports.luaK_exp2anyregup  = luaK_exp2anyregup;\nmodule.exports.luaK_exp2nextreg   = luaK_exp2nextreg;\nmodule.exports.luaK_exp2val       = luaK_exp2val;\nmodule.exports.luaK_fixline       = luaK_fixline;\nmodule.exports.luaK_getlabel      = luaK_getlabel;\nmodule.exports.luaK_goiffalse     = luaK_goiffalse;\nmodule.exports.luaK_goiftrue      = luaK_goiftrue;\nmodule.exports.luaK_indexed       = luaK_indexed;\nmodule.exports.luaK_infix         = luaK_infix;\nmodule.exports.luaK_intK          = luaK_intK;\nmodule.exports.luaK_jump          = luaK_jump;\nmodule.exports.luaK_jumpto        = luaK_jumpto;\nmodule.exports.luaK_nil           = luaK_nil;\nmodule.exports.luaK_numberK       = luaK_numberK;\nmodule.exports.luaK_patchclose    = luaK_patchclose;\nmodule.exports.luaK_patchlist     = luaK_patchlist;\nmodule.exports.luaK_patchtohere   = luaK_patchtohere;\nmodule.exports.luaK_posfix        = luaK_posfix;\nmodule.exports.luaK_prefix        = luaK_prefix;\nmodule.exports.luaK_reserveregs   = luaK_reserveregs;\nmodule.exports.luaK_ret           = luaK_ret;\nmodule.exports.luaK_self          = luaK_self;\nmodule.exports.luaK_setlist       = luaK_setlist;\nmodule.exports.luaK_setmultret    = luaK_setmultret;\nmodule.exports.luaK_setoneret     = luaK_setoneret;\nmodule.exports.luaK_setreturns    = luaK_setreturns;\nmodule.exports.luaK_storevar      = luaK_storevar;\nmodule.exports.luaK_stringK       = luaK_stringK;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    thread_status: { LUA_ERRSYNTAX },\n    is_luastring,\n    luastring_eq,\n    to_luastring\n} = require('./defs.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst lobject  = require('./lobject.js');\nconst {\n    MAXARG_sBx,\n    POS_A,\n    POS_Ax,\n    POS_B,\n    POS_Bx,\n    POS_C,\n    POS_OP,\n    SIZE_A,\n    SIZE_Ax,\n    SIZE_B,\n    SIZE_Bx,\n    SIZE_C,\n    SIZE_OP\n} = require('./lopcodes.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst { luaS_bless } = require('./lstring.js');\nconst {\n    luaZ_read,\n    ZIO\n} = require('./lzio.js');\n\nlet LUAC_DATA = [0x19, 0x93, 13, 10, 0x1a, 10];\n\nclass BytecodeParser {\n\n    constructor(L, Z, name) {\n        this.intSize = 4;\n        this.size_tSize = 4;\n        this.instructionSize = 4;\n        this.integerSize = 4;\n        this.numberSize = 8;\n\n        lua_assert(Z instanceof ZIO, \"BytecodeParser only operates on a ZIO\");\n        lua_assert(is_luastring(name));\n\n        if (name[0] === 64 /* ('@').charCodeAt(0) */ || name[0] === 61 /* ('=').charCodeAt(0) */)\n            this.name = name.subarray(1);\n        else if (name[0] == LUA_SIGNATURE[0])\n            this.name = to_luastring(\"binary string\", true);\n        else\n            this.name = name;\n\n        this.L = L;\n        this.Z = Z;\n\n        // Used to do buffer to number conversions\n        this.arraybuffer = new ArrayBuffer(\n            Math.max(this.intSize, this.size_tSize, this.instructionSize, this.integerSize, this.numberSize)\n        );\n        this.dv = new DataView(this.arraybuffer);\n        this.u8 = new Uint8Array(this.arraybuffer);\n    }\n\n    read(size) {\n        let u8 = new Uint8Array(size);\n        if(luaZ_read(this.Z, u8, 0, size) !== 0)\n            this.error(\"truncated\");\n        return u8;\n    }\n\n    LoadByte() {\n        if (luaZ_read(this.Z, this.u8, 0, 1) !== 0)\n            this.error(\"truncated\");\n        return this.u8[0];\n    }\n\n    LoadInt() {\n        if (luaZ_read(this.Z, this.u8, 0, this.intSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadNumber() {\n        if (luaZ_read(this.Z, this.u8, 0, this.numberSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getFloat64(0, true);\n    }\n\n    LoadInteger() {\n        if (luaZ_read(this.Z, this.u8, 0, this.integerSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadSize_t() {\n        return this.LoadInteger();\n    }\n\n    LoadString() {\n        let size = this.LoadByte();\n        if (size === 0xFF)\n            size = this.LoadSize_t();\n        if (size === 0)\n            return null;\n        return luaS_bless(this.L, this.read(size-1));\n    }\n\n    /* creates a mask with 'n' 1 bits at position 'p' */\n    static MASK1(n, p) {\n        return ((~((~0)<<(n)))<<(p));\n    }\n\n    LoadCode(f) {\n        let n = this.LoadInt();\n        let p = BytecodeParser;\n\n        for (let i = 0; i < n; i++) {\n            if (luaZ_read(this.Z, this.u8, 0, this.instructionSize) !== 0)\n                this.error(\"truncated\");\n            let ins = this.dv.getUint32(0, true);\n            f.code[i] = {\n                code:   ins,\n                opcode: (ins >> POS_OP) & p.MASK1(SIZE_OP, 0),\n                A:      (ins >> POS_A)  & p.MASK1(SIZE_A,  0),\n                B:      (ins >> POS_B)  & p.MASK1(SIZE_B,  0),\n                C:      (ins >> POS_C)  & p.MASK1(SIZE_C,  0),\n                Bx:     (ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0),\n                Ax:     (ins >> POS_Ax) & p.MASK1(SIZE_Ax, 0),\n                sBx:    ((ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n            };\n        }\n    }\n\n    LoadConstants(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            let t = this.LoadByte();\n\n            switch (t) {\n                case LUA_TNIL:\n                    f.k.push(new lobject.TValue(LUA_TNIL, null));\n                    break;\n                case LUA_TBOOLEAN:\n                    f.k.push(new lobject.TValue(LUA_TBOOLEAN, this.LoadByte() !== 0));\n                    break;\n                case LUA_TNUMFLT:\n                    f.k.push(new lobject.TValue(LUA_TNUMFLT, this.LoadNumber()));\n                    break;\n                case LUA_TNUMINT:\n                    f.k.push(new lobject.TValue(LUA_TNUMINT, this.LoadInteger()));\n                    break;\n                case LUA_TSHRSTR:\n                case LUA_TLNGSTR:\n                    f.k.push(new lobject.TValue(LUA_TLNGSTR, this.LoadString()));\n                    break;\n                default:\n                    this.error(`unrecognized constant '${t}'`);\n            }\n        }\n    }\n\n    LoadProtos(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.p[i] = new lfunc.Proto(this.L);\n            this.LoadFunction(f.p[i], f.source);\n        }\n    }\n\n    LoadUpvalues(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i] = {\n                name:    null,\n                instack: this.LoadByte(),\n                idx:     this.LoadByte()\n            };\n        }\n    }\n\n    LoadDebug(f) {\n        let n = this.LoadInt();\n        for (let i = 0; i < n; i++)\n            f.lineinfo[i] = this.LoadInt();\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.locvars[i] = {\n                varname: this.LoadString(),\n                startpc: this.LoadInt(),\n                endpc:   this.LoadInt()\n            };\n        }\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i].name = this.LoadString();\n        }\n    }\n\n    LoadFunction(f, psource) {\n        f.source = this.LoadString();\n        if (f.source === null)  /* no source in dump? */\n            f.source = psource;  /* reuse parent's source */\n        f.linedefined = this.LoadInt();\n        f.lastlinedefined = this.LoadInt();\n        f.numparams = this.LoadByte();\n        f.is_vararg = this.LoadByte() !== 0;\n        f.maxstacksize = this.LoadByte();\n        this.LoadCode(f);\n        this.LoadConstants(f);\n        this.LoadUpvalues(f);\n        this.LoadProtos(f);\n        this.LoadDebug(f);\n    }\n\n    checkliteral(s, msg) {\n        let buff = this.read(s.length);\n        if (!luastring_eq(buff, s))\n            this.error(msg);\n    }\n\n    checkHeader() {\n        this.checkliteral(LUA_SIGNATURE.subarray(1), \"not a\"); /* 1st char already checked */\n\n        if (this.LoadByte() !== 0x53)\n            this.error(\"version mismatch in\");\n\n        if (this.LoadByte() !== 0)\n            this.error(\"format mismatch in\");\n\n        this.checkliteral(LUAC_DATA, \"corrupted\");\n\n        this.intSize         = this.LoadByte();\n        this.size_tSize      = this.LoadByte();\n        this.instructionSize = this.LoadByte();\n        this.integerSize     = this.LoadByte();\n        this.numberSize      = this.LoadByte();\n\n        this.checksize(this.intSize, 4, \"int\");\n        this.checksize(this.size_tSize, 4, \"size_t\");\n        this.checksize(this.instructionSize, 4, \"instruction\");\n        this.checksize(this.integerSize, 4, \"integer\");\n        this.checksize(this.numberSize, 8, \"number\");\n\n        if (this.LoadInteger() !== 0x5678)\n            this.error(\"endianness mismatch in\");\n\n        if (this.LoadNumber() !== 370.5)\n            this.error(\"float format mismatch in\");\n\n    }\n\n    error(why) {\n        lobject.luaO_pushfstring(this.L, to_luastring(\"%s: %s precompiled chunk\"), this.name, to_luastring(why));\n        ldo.luaD_throw(this.L, LUA_ERRSYNTAX);\n    }\n\n    checksize(byte, size, tname) {\n        if (byte !== size)\n            this.error(`${tname} size mismatch in`);\n    }\n}\n\nconst luaU_undump = function(L, Z, name) {\n    let S = new BytecodeParser(L, Z, name);\n    S.checkHeader();\n    let cl = lfunc.luaF_newLclosure(L, S.LoadByte());\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    cl.p = new lfunc.Proto(L);\n    S.LoadFunction(cl.p, null);\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    /* luai_verifycode */\n    return cl;\n};\n\nmodule.exports.luaU_undump = luaU_undump;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    luastring_of\n} = require('./defs.js');\n\nconst LUAC_DATA    = luastring_of(25, 147, 13, 10, 26, 10);\nconst LUAC_INT     = 0x5678;\nconst LUAC_NUM     = 370.5;\nconst LUAC_VERSION = Number(LUA_VERSION_MAJOR) * 16 + Number(LUA_VERSION_MINOR);\nconst LUAC_FORMAT  = 0;   /* this is the official format */\n\nclass DumpState {\n    constructor() {\n        this.L = null;\n        this.write = null;\n        this.data = null;\n        this.strip = NaN;\n        this.status = NaN;\n    }\n}\n\nconst DumpBlock = function(b, size, D) {\n    if (D.status === 0 && size > 0)\n        D.status = D.writer(D.L, b, size, D.data);\n};\n\nconst DumpByte = function(y, D) {\n    DumpBlock(luastring_of(y), 1, D);\n};\n\nconst DumpInt = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpInteger = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpNumber = function(x, D) {\n    let ab = new ArrayBuffer(8);\n    let dv = new DataView(ab);\n    dv.setFloat64(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 8, D);\n};\n\nconst DumpString = function(s, D) {\n    if (s === null)\n        DumpByte(0, D);\n    else {\n        let size = s.tsslen() + 1;\n        let str = s.getstr();\n        if (size < 0xFF)\n            DumpByte(size, D);\n        else {\n            DumpByte(0xFF, D);\n            DumpInteger(size, D);\n        }\n        DumpBlock(str, size - 1, D);  /* no need to save '\\0' */\n    }\n};\n\nconst DumpCode = function(f, D) {\n    let s = f.code.map(e => e.code);\n    DumpInt(s.length, D);\n\n    for (let i = 0; i < s.length; i++)\n        DumpInt(s[i], D);\n};\n\nconst DumpConstants = function(f, D) {\n    let n = f.k.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        let o = f.k[i];\n        DumpByte(o.ttype(), D);\n        switch (o.ttype()) {\n            case LUA_TNIL:\n                break;\n            case LUA_TBOOLEAN:\n                DumpByte(o.value ? 1 : 0, D);\n                break;\n            case LUA_TNUMFLT:\n                DumpNumber(o.value, D);\n                break;\n            case LUA_TNUMINT:\n                DumpInteger(o.value, D);\n                break;\n            case LUA_TSHRSTR:\n            case LUA_TLNGSTR:\n                DumpString(o.tsvalue(), D);\n                break;\n        }\n    }\n};\n\nconst DumpProtos = function(f, D) {\n    let n = f.p.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpFunction(f.p[i], f.source, D);\n};\n\nconst DumpUpvalues = function(f, D) {\n    let n = f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpByte(f.upvalues[i].instack ? 1 : 0, D);\n        DumpByte(f.upvalues[i].idx, D);\n    }\n};\n\nconst DumpDebug = function(f, D) {\n    let n = D.strip ? 0 : f.lineinfo.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpInt(f.lineinfo[i], D);\n    n = D.strip ? 0 : f.locvars.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpString(f.locvars[i].varname, D);\n        DumpInt(f.locvars[i].startpc, D);\n        DumpInt(f.locvars[i].endpc, D);\n    }\n    n = D.strip ? 0 : f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpString(f.upvalues[i].name, D);\n};\n\nconst DumpFunction = function(f, psource, D) {\n    if (D.strip || f.source === psource)\n        DumpString(null, D);  /* no debug info or same source as its parent */\n    else\n        DumpString(f.source, D);\n    DumpInt(f.linedefined, D);\n    DumpInt(f.lastlinedefined, D);\n    DumpByte(f.numparams, D);\n    DumpByte(f.is_vararg?1:0, D);\n    DumpByte(f.maxstacksize, D);\n    DumpCode(f, D);\n    DumpConstants(f, D);\n    DumpUpvalues(f, D);\n    DumpProtos(f, D);\n    DumpDebug(f, D);\n};\n\nconst DumpHeader = function(D) {\n    DumpBlock(LUA_SIGNATURE, LUA_SIGNATURE.length, D);\n    DumpByte(LUAC_VERSION, D);\n    DumpByte(LUAC_FORMAT, D);\n    DumpBlock(LUAC_DATA, LUAC_DATA.length, D);\n    DumpByte(4, D); // intSize\n    DumpByte(4, D); // size_tSize\n    DumpByte(4, D); // instructionSize\n    DumpByte(4, D); // integerSize\n    DumpByte(8, D); // numberSize\n    DumpInteger(LUAC_INT, D);\n    DumpNumber(LUAC_NUM, D);\n};\n\n/*\n** dump Lua function as precompiled chunk\n*/\nconst luaU_dump = function(L, f, w, data, strip) {\n    let D = new DumpState();\n    D.L = L;\n    D.writer = w;\n    D.data = data;\n    D.strip = strip;\n    D.status = 0;\n    DumpHeader(D);\n    DumpByte(f.upvalues.length, D);\n    DumpFunction(f, null, D);\n    return D.status;\n};\n\nmodule.exports.luaU_dump = luaU_dump;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","\"use strict\";\n\nconst { lua_pop } = require('./lua.js');\nconst { luaL_requiref } = require('./lauxlib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nconst loadedlibs = {};\n\n/* export before requiring lualib.js */\nconst luaL_openlibs = function(L) {\n    /* \"require\" functions from 'loadedlibs' and set results to global table */\n    for (let lib in loadedlibs) {\n        luaL_requiref(L, to_luastring(lib), loadedlibs[lib], 1);\n        lua_pop(L, 1); /* remove lib */\n    }\n};\nmodule.exports.luaL_openlibs = luaL_openlibs;\n\nconst lualib = require('./lualib.js');\nconst { luaopen_base }      = require('./lbaselib.js');\nconst { luaopen_coroutine } = require('./lcorolib.js');\nconst { luaopen_debug }     = require('./ldblib.js');\nconst { luaopen_math }      = require('./lmathlib.js');\nconst { luaopen_package }   = require('./loadlib.js');\nconst { luaopen_os }        = require('./loslib.js');\nconst { luaopen_string }    = require('./lstrlib.js');\nconst { luaopen_table }     = require('./ltablib.js');\nconst { luaopen_utf8 }      = require('./lutf8lib.js');\n\nloadedlibs[\"_G\"] = luaopen_base,\nloadedlibs[lualib.LUA_LOADLIBNAME] = luaopen_package;\nloadedlibs[lualib.LUA_COLIBNAME] = luaopen_coroutine;\nloadedlibs[lualib.LUA_TABLIBNAME] = luaopen_table;\nloadedlibs[lualib.LUA_OSLIBNAME] = luaopen_os;\nloadedlibs[lualib.LUA_STRLIBNAME] = luaopen_string;\nloadedlibs[lualib.LUA_MATHLIBNAME] = luaopen_math;\nloadedlibs[lualib.LUA_UTF8LIBNAME] = luaopen_utf8;\nloadedlibs[lualib.LUA_DBLIBNAME] = luaopen_debug;\nif (typeof process !== \"undefined\")\n    loadedlibs[lualib.LUA_IOLIBNAME] = require('./liolib.js').luaopen_io;\n\n/* Extension: fengari library */\nconst { luaopen_fengari } = require('./fengarilib.js');\nloadedlibs[lualib.LUA_FENGARILIBNAME] = luaopen_fengari;\n"],"sourceRoot":""}